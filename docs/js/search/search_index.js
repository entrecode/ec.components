var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.189,1,1.281]],["body/components/AceComponent.html",[0,0.302,1,1.856,2,0.156,3,0.161,4,0.638,5,1.409,6,0.799,7,0.771,8,1.076,9,0.102,10,2.978,11,0.346,12,2.6,13,5.953,14,4.406,15,2.184,16,1.566,17,4.327,18,4.616,19,1.773,20,1.966,21,2.425,22,2.675,23,0.661,24,1.867,25,0.007,26,3.183,27,2.6,28,3.183,29,2.6,30,0.833,31,2.132,32,1.85,33,3.023,34,5.652,35,1.116,36,4.616,37,0.312,38,0.536,39,2.434,40,1.69,41,3.999,42,4.593,43,1.41,44,1.547,45,3.093,46,1.856,47,2.797,48,2.137,49,0.674,50,4.155,51,3.013,52,2.865,53,3.023,54,3.999,55,4.616,56,4.616,57,2.789,58,6.601,59,8.821,60,0.933,61,2.61,62,6.367,63,2.126,64,5.21,65,0.296,66,3.178,67,3.27,68,6.367,69,0.768,70,1.706,71,1.105,72,2.978,73,2.978,74,2.978,75,1.541,76,0.863,77,2.21,78,3.164,79,1.824,80,1.097,81,1.096,82,1.867,83,2.978,84,2.899,85,2.978,86,2.899,87,2.978,88,3.164,89,1.593,90,3.33,91,0.946,92,0.918,93,0.626,94,2.899,95,2.978,96,4.616,97,2.978,98,3.999,99,3.777,100,4.616,101,4.616,102,2.978,103,4.616,104,2.899,105,2.978,106,3.164,107,2.37,108,1.773,109,2.865,110,1.144,111,3.528,112,2.978,113,1.566,114,2.978,115,1.724,116,2.978,117,2.047,118,0.8,119,2.6,120,2.978,121,2.763,122,2.978,123,2.822,124,2.69,125,2.978,126,1.512,127,2.69,128,3.27,129,2.276,130,2.276,131,1.221,132,2.789,133,2.276,134,2.276,135,1.799,136,1.34,137,0.262,138,1.194,139,0.94,140,2.651,141,2.978,142,2.978,143,2.651,144,1.87,145,2.437,146,1.12,147,0.596,148,0.097,149,0.107,150,4.616,151,4.616,152,2.978,153,2.978,154,5.21,155,2.978,156,3.528,157,2.651,158,5.033,159,2.978,160,5.652,161,2.978,162,3.023,163,2.978,164,1.354,165,4.11,166,2.978,167,1.575,168,2.978,169,2.978,170,2.978,171,3.777,172,2.978,173,1.87,174,2.978,175,2.276,176,2.978,177,0.547,178,1.217,179,0.94,180,1.249,181,1.679,182,0.799,183,0.799,184,0.732,185,1.516,186,0.745,187,0.771,188,0.684,189,0.758,190,0.758,191,2.04,192,0.758,193,1.276,194,1.708,195,0.771,196,1.293,197,2.108,198,0.771,199,0.771,200,0.799,201,0.758,202,1.238,203,0.771,204,0.799,205,0.758,206,0.799,207,0.745,208,0.745,209,1.446,210,1.516,211,0.745,212,0.758,213,0.758,214,0.732,215,0.799,216,0.771,217,1.849,218,0.771,219,0.758,220,0.771,221,0.771,222,0.771,223,0.758,224,0.799,225,0.758,226,0.771,227,0.799,228,0.758,229,0.799,230,0.758,231,0.745,232,0.878,233,0.799,234,0.758,235,0.799,236,0.745,237,0.758,238,0.799,239,0.758,240,0.799,241,0.695,242,0.799,243,0.758,244,1.32,245,0.799,246,0.745,247,0.799,248,0.758,249,0.799,250,0.732,251,0.799,252,0.758,253,0.732,254,0.758,255,0.708,256,0.799,257,0.758,258,0.799,259,0.799,260,0.758,261,0.799,262,0.758,263,0.799,264,0.732,265,0.799,266,0.745,267,0.758,268,0.799,269,0.758,270,0.771,271,0.799,272,0.745,273,0.758,274,1.714,275,0.758,276,0.771,277,0.672,278,0.771,279,0.771,280,0.758,281,0.771,282,0.771,283,0.771,284,0.799,285,0.745,286,0.758,287,0.799,288,0.758,289,0.771,290,0.758,291,0.799,292,0.758,293,0.799,294,0.771,295,0.72,296,0.758,297,0.799,298,0.758,299,0.799,300,0.758,301,0.799,302,0.758,303,0.72,304,0.732,305,0.799,306,0.745,307,0.799,308,0.745,309,0.799,310,0.745,311,0.799,312,0.745,313,0.799,314,0.745,315,0.785,316,0.799,317,0.745,318,0.785,319,0.799,320,0.003,321,0.003]],["title/modules/AceModule.html",[322,1.079,323,3.63]],["body/modules/AceModule.html",[1,2.546,2,0.348,3,0.36,9,0.228,24,2.712,25,0.007,26,4.889,27,4.889,28,4.889,29,5.209,30,1.67,63,2.216,65,0.311,137,0.584,146,3.266,147,1.329,148,0.303,149,0.238,177,1.219,320,0.005,321,0.005,322,1.728,323,6.866,324,2.721,325,5.909,326,5.909,327,5.909,328,5.909,329,3.379,330,2.397,331,2.216,332,6.636,333,4.539,334,2.304,335,6.636,336,6.636,337,6.636]],["title/interfaces/Action.html",[338,1.424,339,2.933]],["body/interfaces/Action.html",[0,0.27,2,0.292,3,0.301,9,0.191,16,1.368,19,2.771,21,3.094,25,0.007,30,1.004,31,1.192,32,1.039,35,1.344,37,0.583,38,0.838,40,1.549,44,1.42,46,1.416,48,2.347,52,2.502,65,0.287,69,0.805,70,1.894,76,1.039,81,1.106,93,0.913,109,3.602,137,0.489,147,1.113,148,0.277,149,0.2,184,1.774,196,0.987,232,1.611,285,1.805,320,0.005,321,0.005,330,2.009,338,2.265,339,5.513,340,4.55,341,3.721,342,4.369,343,4.619,344,3.771,345,6.475,346,1.776,347,3.933,348,4.952,349,3.814,350,1.602,351,5.902,352,5.902,353,4.952,354,1.661,355,2.386,356,3.24,357,4.952,358,1.113,359,3.933,360,4.55,361,4.952,362,4.952,363,1.573,364,4.952,365,4.952,366,4.952,367,4.952,368,4.952,369,4.55,370,4.952,371,4.952,372,4.952,373,4.952,374,6.422,375,7.128,376,4.952,377,4.952,378,4.952,379,4.358,380,4.952,381,3.24,382,4.952,383,4.952,384,4.952,385,4.952,386,4.952,387,4.952,388,6.422,389,4.251,390,4.952,391,3.36,392,4.952,393,3.642,394,4.952,395,4.952,396,4.55,397,4.952]],["title/interfaces/ActionbarConfig.html",[338,1.424,352,4.118]],["body/interfaces/ActionbarConfig.html",[0,0.28,2,0.308,3,0.318,9,0.202,16,1.446,19,3.157,21,3.207,25,0.007,30,1.061,31,1.26,32,1.099,35,1.421,40,1.59,44,1.471,46,1.497,48,2.41,52,2.645,65,0.295,69,0.517,70,1.732,76,1.099,81,1.129,109,3.698,137,0.517,147,1.177,148,0.283,149,0.211,184,1.838,196,1.043,232,1.118,285,1.87,320,0.005,321,0.005,330,2.123,338,2.325,339,5.318,340,4.81,341,2.582,342,3.992,343,3.206,344,3.446,345,5.713,346,1.304,347,4.076,348,5.234,349,4.346,350,1.693,351,6.116,352,6.725,353,5.234,354,1.755,355,2.522,356,3.425,357,5.234,358,1.177,359,4.076,360,4.81,361,5.234,362,5.234,363,1.663,364,5.234,365,5.234,366,5.234,367,5.234,368,5.234,369,4.81,370,5.234,371,5.234,372,5.234,373,5.234,374,6.655,375,7.318,376,5.234,377,5.234,378,5.234,379,4.516,380,5.234,381,3.425,382,5.234,383,5.234,384,5.234,385,5.234,386,5.234,387,5.234,388,6.655,389,4.493,390,5.234,391,3.552,392,5.234,393,3.849,394,5.234,395,5.234,396,4.81,397,5.234]],["title/components/AdminEntryInputComponent.html",[0,0.189,186,1.259]],["body/components/AdminEntryInputComponent.html",[0,0.317,1,1.049,2,0.216,3,0.223,4,1.47,6,1.106,7,1.068,9,0.141,11,0.479,19,2.259,20,2.164,23,0.914,25,0.007,31,2.157,32,1.874,35,1.421,37,0.432,38,0.683,40,1.637,44,1.757,45,3.632,46,2.273,47,3.284,48,2.41,60,0.753,65,0.268,69,0.774,71,1.022,91,0.612,92,0.945,93,0.405,113,1.446,115,1.031,117,1.89,118,0.739,126,1.927,127,3.426,128,3.839,129,3.15,130,3.15,131,1.689,132,3.553,133,3.15,134,3.15,135,2.49,137,0.362,139,1.3,148,0.135,149,0.148,177,0.757,178,1.55,179,1.198,181,1.971,182,1.106,183,1.106,184,1.013,185,1.839,186,1.871,187,1.068,188,1.942,189,1.049,190,1.049,191,2.27,192,1.049,193,1.547,194,2.006,195,1.068,196,1.459,197,2.321,198,1.068,199,1.068,200,1.106,201,1.049,202,1.578,203,1.068,204,1.106,205,1.049,206,1.106,207,1.031,208,1.031,209,1.75,210,1.839,211,1.031,212,1.049,213,1.049,214,1.013,215,1.106,216,1.068,217,2.121,218,1.068,219,1.049,220,1.068,221,1.068,222,1.068,223,1.049,224,1.106,225,1.049,226,1.068,227,1.106,228,1.049,229,1.106,230,1.049,231,1.031,232,1.118,233,1.106,234,1.049,235,1.106,236,1.031,237,1.049,238,1.106,239,1.049,240,1.106,241,0.962,242,1.106,243,1.049,244,1.601,245,1.106,246,1.031,247,1.106,248,1.049,249,1.106,250,1.013,251,1.106,252,1.049,253,1.013,254,1.049,255,0.979,256,1.106,257,1.049,258,1.106,259,1.106,260,1.049,261,1.106,262,1.049,263,1.106,264,1.013,265,1.106,266,1.031,267,1.049,268,1.106,269,1.049,270,1.068,271,1.106,272,1.031,273,1.049,274,1.886,275,1.049,276,1.068,277,0.93,278,1.068,279,1.068,280,1.049,281,1.068,282,1.068,283,1.068,284,1.106,285,1.031,286,1.049,287,1.106,288,1.049,289,1.068,290,1.049,291,1.106,292,1.049,293,1.106,294,1.068,295,0.996,296,1.049,297,1.106,298,1.049,299,1.106,300,1.049,301,1.106,302,1.049,303,0.996,304,1.013,305,1.106,306,1.031,307,1.106,308,1.031,309,1.106,310,1.031,311,1.106,312,1.031,313,1.106,314,1.031,315,1.086,316,1.106,317,1.031,318,1.086,319,1.106,320,0.004,321,0.004,358,0.825,381,2.401,398,5.714,399,6.117,400,3.15,401,3.11,402,3.426,403,5.236,404,6.726,405,3.693,406,4.242,407,5.236,408,4.695,409,5.88,410,4.242,411,4.495,412,3.314,413,2.247,414,3.37,415,5.236,416,4.121,417,1.854,418,3.372,419,1.901,420,2.973,421,4.121,422,2.973,423,3.372,424,4.812,425,3.553]],["title/directives/AssetDirective.html",[179,1.025,304,1.238]],["body/directives/AssetDirective.html",[2,0.255,3,0.263,4,1.799,8,1.753,9,0.226,11,0.564,16,1.621,22,3.541,23,1.077,25,0.007,30,1.19,31,1.413,37,0.509,38,0.766,40,1.742,44,1.742,49,0.962,51,3.798,60,1.134,65,0.288,69,0.826,70,1.772,71,1.135,75,1.621,76,1.232,79,1.649,81,1.13,82,1.153,91,0.98,92,0.72,93,0.648,108,2.532,118,1.008,121,3.47,126,2.159,137,0.427,147,0.972,148,0.159,149,0.174,179,1.635,180,2.035,188,2.068,193,2.217,295,1.173,304,1.621,320,0.004,321,0.004,342,4.526,344,2.035,346,1.462,358,0.972,363,1.373,412,3.711,413,2.647,414,3.548,417,2.184,419,2.239,422,3.502,425,4.849,426,1.719,427,4.854,428,3.946,429,6.59,430,6.59,431,8.852,432,6.135,433,5.398,434,5.27,435,2.441,436,6.59,437,1.707,438,5.393,439,4.9,440,4.854,441,4.854,442,4.754,443,4.854,444,4.854,445,2.532,446,4.854,447,3.594,448,1.476,449,2.63,450,4.854,451,5.869,452,4.854,453,2.586,454,5.869,455,2.083,456,4.854,457,4.316,458,4.854,459,4.854,460,4.323,461,3.179,462,4.854,463,4.854,464,4.854,465,4.854,466,4.854,467,4.854,468,3.502,469,3.502,470,3.179,471,3.711,472,6.59,473,7.146,474,3.711,475,2.829,476,4.854,477,3.328,478,3.049,479,4.323,480,5.393,481,4.854,482,3.972,483,4.854,484,4.854]],["title/components/AssetListComponent.html",[0,0.189,192,1.281]],["body/components/AssetListComponent.html",[0,0.285,1,0.952,2,0.196,3,0.203,4,0.802,6,1.003,7,0.969,9,0.128,16,1.348,19,2.106,20,0.936,21,2.784,23,0.83,25,0.007,30,0.99,31,2.151,32,1.868,35,1.325,37,0.392,38,0.884,40,1.382,43,1.074,44,1.565,48,1.097,49,1.043,51,2.593,52,3.215,60,0.702,65,0.197,69,0.796,70,1.299,71,1.124,75,1.249,77,1.298,79,1.371,80,1.542,81,1.038,82,1.807,89,1.371,91,0.964,92,0.968,93,0.748,108,1.437,110,1.437,113,1.348,115,0.936,118,0.689,121,2.198,128,4.751,137,0.329,148,0.122,149,0.134,177,0.687,178,1.445,179,1.116,181,1.884,182,1.003,183,1.003,184,0.92,185,1.741,186,0.936,187,0.969,188,1.64,189,0.952,190,0.952,191,2.204,192,1.819,193,1.854,194,1.917,195,0.969,196,1.66,197,2.26,198,0.969,199,0.969,200,1.003,201,0.952,202,1.47,203,0.969,204,1.003,205,0.952,206,1.003,207,0.936,208,0.936,209,1.562,210,1.741,211,0.936,212,0.952,213,0.952,214,0.92,215,1.003,216,0.969,217,2.041,218,0.969,219,0.952,220,0.969,221,0.969,222,0.969,223,0.952,224,1.003,225,0.952,226,0.969,227,1.003,228,0.952,229,1.003,230,0.952,231,0.936,232,1.234,233,1.003,234,0.952,235,1.003,236,0.936,237,0.952,238,1.003,239,0.952,240,1.003,241,1.28,242,1.003,243,0.952,244,1.515,245,1.003,246,0.936,247,1.003,248,0.952,249,1.003,250,0.92,251,1.003,252,0.952,253,0.92,254,0.952,255,0.888,256,1.003,257,0.952,258,1.003,259,1.003,260,0.952,261,1.003,262,0.952,263,1.003,264,0.92,265,1.003,266,0.936,267,0.952,268,1.003,269,0.952,270,0.969,271,1.003,272,0.936,273,0.952,274,1.931,275,0.952,276,0.969,277,0.844,278,0.969,279,2.445,280,0.952,281,0.969,282,0.969,283,0.969,284,1.003,285,0.936,286,0.952,287,1.003,288,0.952,289,0.969,290,0.952,291,1.003,292,0.952,293,1.003,294,0.969,295,0.904,296,0.952,297,1.003,298,0.952,299,1.003,300,0.952,301,1.003,302,0.952,303,0.904,304,0.92,305,1.003,306,0.936,307,1.003,308,0.936,309,1.003,310,0.936,311,1.003,312,0.936,313,1.003,314,0.936,315,0.986,316,1.003,317,0.936,318,0.986,319,1.003,320,0.004,321,0.004,346,1.216,347,2.989,349,3.431,354,1.117,359,3.538,363,1.058,428,2.865,455,1.604,461,2.449,485,5.481,486,4.88,487,3.739,488,4.88,489,4.433,490,3.538,491,3.589,492,6.488,493,3.431,494,5.481,495,3.065,496,6.505,497,2.85,498,5.481,499,2.198,500,4.19,501,4.88,502,3.329,503,1.351,504,3.329,505,1.769,506,3.739,507,3.739,508,3.739,509,1.977,510,3.739,511,3.06,512,1.92,513,2.858,514,1.816,515,3.739,516,1.977,517,3.329,518,3.739,519,1.725,520,1.725,521,3.739,522,3.739,523,3.739,524,4.68,525,3.329,526,3.739,527,2.449,528,3.739,529,3.739,530,3.739,531,3.739,532,1.725,533,3.06,534,3.739,535,3.739,536,3.739,537,2.179,538,2.106,539,3.739,540,3.739,541,2.858,542,3.589,543,3.739,544,3.739,545,4.19,546,3.739,547,2.449,548,2.179,549,5.481,550,3.954]],["title/components/AssetgroupSelectComponent.html",[0,0.189,189,1.281]],["body/components/AssetgroupSelectComponent.html",[0,0.298,1,1.062,2,0.219,3,0.226,4,0.894,6,1.119,7,1.081,9,0.143,16,1.459,20,1.044,21,2.961,23,0.926,25,0.007,31,2.159,32,1.876,35,1.434,37,0.438,38,0.689,40,1.708,43,0.69,44,1.359,49,0.866,52,3.383,65,0.213,69,0.747,70,1.505,71,1.067,76,0.78,81,0.545,82,0.991,91,0.62,92,0.949,93,0.41,113,1.459,115,1.044,118,0.867,137,0.367,148,0.136,149,0.15,177,0.766,178,1.564,179,1.208,181,1.982,182,1.119,183,1.119,184,1.026,185,1.852,186,1.044,187,1.081,188,0.958,189,1.914,190,2.349,191,2.278,192,1.062,193,1.792,194,2.017,195,1.081,196,1.465,197,2.328,198,1.081,199,1.081,200,1.119,201,1.062,202,1.591,203,1.081,204,1.119,205,1.062,206,1.119,207,1.044,208,1.044,209,1.615,210,1.852,211,1.044,212,1.062,213,1.062,214,1.026,215,1.119,216,1.081,217,2.131,218,1.081,219,1.062,220,1.081,221,1.081,222,1.081,223,1.062,224,1.119,225,1.062,226,1.081,227,1.119,228,1.062,229,1.119,230,1.062,231,1.044,232,1.569,233,1.119,234,1.062,235,1.119,236,1.044,237,1.062,238,1.119,239,1.062,240,1.119,241,0.974,242,1.119,243,1.062,244,1.612,245,1.119,246,1.044,247,1.119,248,1.062,249,1.119,250,1.026,251,1.119,252,1.062,253,1.026,254,1.062,255,0.991,256,1.119,257,1.062,258,1.119,259,1.119,260,1.062,261,1.119,262,1.062,263,1.119,264,1.026,265,1.119,266,1.044,267,1.062,268,1.119,269,1.062,270,1.081,271,1.119,272,1.044,273,1.062,274,1.892,275,1.062,276,1.081,277,0.942,278,1.081,279,1.081,280,1.062,281,1.081,282,1.081,283,1.081,284,1.119,285,1.044,286,1.062,287,1.119,288,1.062,289,1.081,290,1.062,291,1.119,292,1.062,293,1.119,294,1.081,295,1.009,296,1.062,297,1.119,298,1.062,299,1.119,300,1.062,301,1.119,302,1.062,303,1.009,304,1.026,305,1.119,306,1.044,307,1.119,308,1.044,309,1.119,310,1.044,311,1.119,312,1.044,313,1.119,314,1.044,315,1.1,316,1.119,317,1.044,318,1.1,319,1.119,320,0.004,321,0.004,346,1.668,358,1.188,435,2.286,448,1.269,449,2.463,551,8.953,552,7.972,553,3.715,554,5.282,555,5.689,556,4.732,557,6.902,558,3.965,559,4.52,560,5.648,561,4.172,562,5.282,563,4.172,564,4.172,565,4.172,566,4.172,567,3.715,568,3.715,569,3.715,570,3.01,571,1.974,572,1.42,573,2.521,574,2.732,575,4.172,576,4.172,577,4.854]],["title/guards/AuthGuard.html",[578,4.118,579,4.118]],["body/guards/AuthGuard.html",[2,0.321,3,0.332,9,0.21,11,0.711,16,1.505,25,0.007,30,1.105,37,0.642,38,0.711,39,2.56,49,1.119,60,1.072,61,2.509,65,0.324,69,0.674,71,0.927,76,1.144,78,5.256,81,1.093,91,0.91,92,0.669,93,0.602,131,2.509,137,0.538,139,1.931,148,0.2,149,0.22,253,1.505,320,0.005,321,0.005,344,2.566,358,1.225,412,3.68,413,3.338,414,3.78,417,2.754,435,2.332,437,1.986,490,4.181,509,4.641,520,2.823,578,6.851,579,6.274,580,8.372,581,6.121,582,3.628,583,6.195,584,4.468,585,3.264,586,5.266,587,4.815,588,3.628,589,6.519,590,9.22,591,3.862,592,4.263,593,6.121,594,6.121,595,4.566,596,3.567,597,4.786,598,3.143,599,5.45,600,4.196,601,1.43,602,2.211,603,2.455,604,6.121,605,5.009,606,6.121,607,6.121,608,6.121,609,7.667,610,6.121,611,6.121,612,5.45,613,6.121,614,6.121,615,6.121]],["title/modules/AuthModule.html",[322,1.079,616,3.63]],["body/modules/AuthModule.html",[0,0.282,2,0.311,3,0.321,9,0.203,11,0.688,24,2.419,25,0.007,63,1.979,65,0.347,81,0.774,137,0.521,138,2.377,139,1.87,146,3.104,148,0.293,149,0.213,177,1.089,250,2.378,269,2.462,270,1.535,286,2.462,320,0.005,321,0.005,322,1.86,324,2.43,329,3.15,330,2.141,331,1.979,334,2.608,428,2.377,499,3.013,532,2.734,579,6.148,616,7.127,617,5.277,618,5.277,619,5.277,620,5.277,621,5.277,622,5.329,623,7.484,624,5.525,625,5.277,626,5.181,627,3.466,628,3.555,629,2.667,630,5.743,631,5.951,632,5.151,633,6.69,634,4.53,635,5.277,636,5.926,637,4.53,638,5.277,639,5.277,640,5.926,641,5.926,642,5.926,643,5.926,644,5.926]],["title/injectables/AuthService.html",[437,1.304,624,3.041]],["body/injectables/AuthService.html",[2,0.317,3,0.18,9,0.114,11,0.385,24,2.441,25,0.007,30,1.091,32,0.937,37,0.348,42,3.616,43,1.114,44,1.6,49,1.314,50,2.651,60,0.974,65,0.242,69,0.669,70,1.911,71,1.068,75,1.107,77,1.74,79,1.685,80,1.932,81,1.287,84,3.148,91,1.281,92,0.942,93,0.899,108,1.274,118,0.992,121,2.701,126,1.642,137,0.292,147,1.21,148,0.109,149,0.119,188,2.226,253,1.779,270,2.107,274,1.318,277,1.131,289,1.873,320,0.005,321,0.003,330,1.811,354,2.011,358,0.664,406,5.217,410,5.487,412,2.534,414,3.118,417,1.492,437,1.565,439,3.282,453,1.967,455,3.489,477,5.414,489,4.432,499,3.167,503,2.433,505,3.187,516,4.3,532,1.53,583,3.282,595,2.733,602,1.198,603,1.33,624,3.028,626,2.083,645,3.316,646,3.832,647,3.282,648,5.909,649,4.102,650,3.795,651,4.945,652,5.381,653,4.102,654,5.814,655,4.102,656,3.616,657,5.511,658,2.921,659,4.463,660,4.463,661,4.463,662,5.012,663,4.463,664,5.012,665,5.012,666,4.463,667,6.735,668,6.735,669,5.012,670,5.012,671,2.953,672,3.316,673,4.463,674,5.012,675,3.316,676,6.463,677,5.989,678,4.463,679,3.316,680,5.012,681,3.316,682,1.926,683,5.997,684,5.012,685,7.412,686,2.922,687,3.316,688,5.012,689,3.316,690,4.41,691,2.714,692,3.316,693,6.772,694,5.012,695,3.316,696,3.316,697,5.012,698,3.316,699,5.012,700,3.316,701,2.823,702,2.953,703,3.316,704,2.172,705,2.274,706,1.656,707,2.172,708,6.735,709,6.735,710,5.012,711,5.012,712,5.012,713,5.997,714,5.012,715,3.316,716,5.012,717,3.316,718,6.042,719,5.511,720,3.316,721,3.316,722,4.463,723,3.316,724,2.714,725,2.953,726,3.316,727,2.083,728,3.316,729,3.316,730,3.316,731,3.316,732,3.316,733,3.316,734,3.316,735,5.012,736,2.953,737,5.012,738,3.316,739,3.028,740,3.316,741,3.148,742,3.436,743,3.316,744,5.012,745,5.012,746,3.316,747,3.316,748,3.316,749,4.102,750,5.012,751,3.316,752,5.012,753,3.616,754,5.012,755,5.012,756,3.436,757,5.012,758,5.012,759,5.012,760,5.012,761,3.316,762,5.012,763,3.316,764,3.316,765,3.316,766,3.316,767,3.316,768,3.316,769,3.316,770,3.316,771,3.316,772,2.535,773,2.953,774,2.083,775,3.316]],["title/modules/CalendarModule.html",[322,1.079,776,3.296]],["body/modules/CalendarModule.html",[0,0.272,2,0.295,3,0.305,9,0.193,11,0.654,24,2.757,25,0.007,39,2.428,49,0.822,63,1.88,65,0.334,69,0.708,71,0.68,81,0.949,91,0.837,92,0.615,93,0.554,137,0.495,146,3.03,147,1.127,148,0.288,149,0.202,177,1.034,199,2.487,203,2.487,226,2.487,262,2.445,320,0.005,321,0.005,322,1.824,324,2.308,329,3.048,330,2.033,331,1.88,334,2.524,499,2.915,628,3.44,629,2.533,630,6.155,650,5.667,776,6.453,777,5.012,778,5.012,779,5.012,780,7.339,781,5.629,782,4.392,783,5.244,784,5.012,785,7.269,786,4.392,787,5.629,788,4.606,789,5.629,790,5.629,791,5.629,792,5.629,793,5.629,794,5.629,795,5.949,796,5.629,797,5.949,798,5.629,799,5.949,800,5.012,801,5.012,802,5.629,803,3.401,804,2.891,805,5.012,806,5.629,807,5.629,808,5.629]],["title/classes/Collection.html",[149,0.181,809,3.161]],["body/classes/Collection.html",[2,0.173,3,0.179,8,3.222,9,0.113,11,0.384,25,0.007,30,1.697,37,0.903,38,0.581,39,2.713,43,1.402,44,1.495,48,2.887,49,0.73,65,0.119,69,0.798,71,1.087,76,1.35,79,1.682,80,2.195,81,1.231,82,1.716,89,1.251,91,1.28,92,0.941,93,0.869,118,1.065,126,1.083,147,1.446,148,0.108,149,0.259,164,1.466,196,1.07,232,0.629,320,0.003,321,0.003,331,1.104,346,2.14,358,0.662,363,2.437,426,1.17,445,3.031,448,2.878,455,2.145,491,3.949,495,3.637,512,3.453,520,3.101,538,3.787,572,2.586,595,3.667,597,4.622,598,1.697,599,2.943,658,3.514,682,3.624,701,1.862,809,5.924,810,3.305,811,6.03,812,5,813,5,814,5,815,6.723,816,5.987,817,3.792,818,5,819,5,820,3.514,821,5,822,5,823,4.091,824,6.03,825,3.514,826,3.097,827,3.305,828,3.274,829,8.225,830,3.305,831,5,832,5,833,5.984,834,3.305,835,3.667,836,5,837,5,838,3.305,839,5,840,3.822,841,3.14,842,5,843,3.305,844,5,845,5,846,3.305,847,5,848,5,849,3.305,850,3.305,851,2.568,852,5,853,3.305,854,5,855,3.305,856,5,857,5,858,3.305,859,5,860,3.305,861,3.305,862,3.305,863,3.305,864,3.305,865,3.305,866,3.305,867,3.305,868,3.305,869,3.356,870,3.305,871,3.305,872,3.305,873,2.076,874,5.166,875,3.428,876,6.03,877,5,878,5,879,3.305,880,1.803,881,3.305,882,3.305,883,6.723,884,7.221,885,6.03,886,7.889,887,3.305,888,3.305,889,3.305,890,3.305,891,2.943,892,3.305,893,3.305,894,3.305,895,3.305]],["title/classes/Config.html",[149,0.181,354,1.503]],["body/classes/Config.html",[2,0.319,3,0.33,9,0.209,11,0.707,25,0.007,37,0.638,38,1.132,43,1.007,44,1.643,46,1.945,49,1.344,60,0.779,61,3.59,69,0.77,70,1.871,71,0.923,80,2.188,81,1.178,91,0.904,92,0.665,93,0.821,108,2.935,118,0.764,148,0.199,149,0.3,320,0.005,321,0.005,354,2.975,381,3.545,455,2.61,571,2.879,588,3.614,603,3.348,686,3.537,786,4.615,896,6.084,897,5.095,898,6.084,899,6.084,900,6.084,901,6.801,902,7.638,903,4.372,904,7.638,905,6.801,906,7.638,907,6.25,908,4.302,909,3.984,910,3.217,911,6.084,912,6.084,913,6.084,914,7.638,915,8.349,916,6.084]],["title/components/CrudComponent.html",[0,0.189,201,1.281]],["body/components/CrudComponent.html",[0,0.254,1,0.734,2,0.151,3,0.156,4,1.455,6,0.774,7,0.747,8,1.042,9,0.099,11,0.335,16,1.107,20,0.722,21,2.376,23,0.64,25,0.007,30,1.299,31,2.129,32,1.846,35,1.088,37,0.302,38,0.643,40,1.454,43,0.745,44,1.725,46,1.832,48,2.28,49,1.192,52,2.816,60,0.577,63,1.504,65,0.308,69,0.754,70,1.359,71,1.078,76,0.842,80,1.07,81,1.164,82,1.07,89,1.127,91,1.009,92,0.948,93,0.804,108,3.198,110,2.608,113,1.539,115,0.722,117,2.012,118,0.786,136,1.298,137,0.254,139,1.975,147,0.577,148,0.094,149,0.103,164,1.624,177,0.53,178,1.46,179,0.917,180,1.209,181,1.65,182,0.774,183,0.774,184,0.709,185,1.486,186,0.722,187,0.747,188,0.662,189,0.734,190,0.734,191,2.016,192,0.734,193,1.25,194,1.679,195,0.747,196,1.631,197,2.086,198,0.747,199,0.747,200,0.774,201,1.832,202,1.208,203,0.747,204,0.774,205,0.734,206,0.774,207,0.722,208,0.722,209,1.682,210,1.486,211,0.722,212,0.734,213,0.734,214,0.709,215,0.774,216,0.747,217,1.821,218,1.759,219,0.734,220,0.747,221,1.759,222,0.747,223,0.734,224,0.774,225,0.734,226,0.747,227,0.774,228,0.734,229,0.774,230,0.734,231,0.722,232,1.667,233,0.774,234,0.734,235,0.774,236,0.722,237,0.734,238,0.774,239,0.734,240,0.774,241,1.585,242,0.774,243,0.734,244,1.294,245,0.774,246,0.722,247,0.774,248,0.734,249,0.774,250,0.709,251,0.774,252,0.734,253,0.709,254,0.734,255,0.685,256,0.774,257,0.734,258,0.774,259,0.774,260,0.734,261,0.774,262,0.734,263,0.774,264,0.709,265,0.774,266,0.722,267,0.734,268,0.774,269,0.734,270,0.747,271,0.774,272,0.722,273,0.734,274,1.696,275,0.734,276,0.747,277,0.651,278,0.747,279,0.747,280,0.734,281,0.747,282,0.747,283,0.747,284,0.774,285,0.722,286,0.734,287,0.774,288,0.734,289,0.747,290,0.734,291,0.774,292,0.734,293,0.774,294,0.747,295,0.697,296,0.734,297,0.774,298,0.734,299,0.774,300,0.734,301,0.774,302,0.734,303,0.697,304,0.709,305,0.774,306,0.722,307,0.774,308,0.722,309,0.774,310,0.722,311,0.774,312,0.722,313,0.774,314,0.722,315,0.76,316,0.774,317,0.722,318,0.76,319,0.774,320,0.003,321,0.003,331,1.504,344,1.209,346,0.999,347,3.413,350,0.831,354,1.654,358,0.577,359,3.02,363,1.274,412,1.888,413,1.573,414,2.566,417,1.298,428,2.221,434,4.263,435,2.064,448,1.369,449,2.462,453,1.767,475,1.681,490,4.098,497,3.16,532,2.077,537,1.681,541,3.442,545,5.499,548,1.681,550,2.08,585,1.042,591,3.769,592,3.04,596,1.681,602,1.042,603,3.204,624,3.781,626,3.478,682,2.405,701,1.624,706,1.44,727,1.811,897,2.455,917,2.884,918,3.442,919,2.381,920,3.684,921,3.442,922,4.502,923,3.02,924,3.478,925,3.02,926,4.009,927,6.258,928,5.538,929,4.009,930,4.502,931,4.502,932,4.502,933,3.478,934,4.54,935,3.627,936,3.647,937,3.119,938,2.041,939,2.456,940,4.502,941,4.101,942,1.563,943,5.573,944,2.624,945,2.884,946,2.884,947,2.884,948,2.652,949,3.923,950,2.884,951,2.884,952,4.009,953,2.884,954,2.624,955,4.502,956,2.884,957,2.949,958,4.502,959,2.884,960,3.124,961,2.624,962,2.884,963,4.502,964,2.884,965,4.502,966,2.884,967,2.077,968,2.961,969,4.502,970,2.884,971,3.248,972,2.884,973,2.884,974,2.884,975,1.573,976,2.568,977,2.568,978,2.36,979,1.889,980,1.977,981,2.884,982,2.884,983,2.884,984,2.08,985,2.884,986,4.932,987,2.568,988,2.205,989,2.568,990,2.884,991,2.568,992,2.884,993,2.884,994,2.884,995,2.884,996,2.884,997,2.884,998,2.884,999,2.884,1000,2.884,1001,2.568,1002,2.568,1003,2.884,1004,2.884,1005,2.72,1006,2.13,1007,3.995,1008,2.884,1009,1.742,1010,3.087,1011,2.884,1012,1.811,1013,1.977,1014,1.977,1015,2.884,1016,4.009]],["title/interfaces/CrudConfig.html",[338,1.424,941,3.041]],["body/interfaces/CrudConfig.html",[0,0.301,2,0.201,3,0.208,9,0.226,11,0.446,19,2.147,25,0.007,30,1.732,32,1.044,37,0.403,38,0.649,43,0.924,49,1.238,58,4.271,60,1.087,61,2.29,65,0.236,69,0.848,70,1.86,71,0.675,75,2.834,79,1.81,93,0.978,118,1.008,139,1.211,148,0.126,164,1.638,190,1.422,193,1.633,196,1.506,209,1.766,232,1.743,241,1.69,264,1.779,277,1.953,303,1.939,320,0.004,321,0.004,338,1.581,346,2.191,349,3.483,350,1.106,355,3.442,428,3.217,434,5.039,442,4.03,445,3.082,461,3.659,495,2.397,497,3.524,509,3.826,514,2.714,519,2.577,527,3.659,558,4.005,582,2.644,588,2.644,591,3.701,676,6.565,682,2.954,683,4.975,739,4.371,741,4.137,742,4.516,786,3.376,817,2.789,851,2.869,910,2.955,918,4.271,925,3.047,941,4.371,942,2.511,967,4.227,1006,2.644,1017,3.839,1018,2.514,1019,5.587,1020,7.234,1021,7.234,1022,7.234,1023,7.234,1024,5.788,1025,7.234,1026,7.234,1027,6.442,1028,7.234,1029,7.234,1030,5.817,1031,7.234,1032,7.234,1033,7.234,1034,7.234,1035,6.442,1036,7.234,1037,7.234,1038,4.271,1039,4.847,1040,4.572,1041,5.587,1042,4.96,1043,2.644,1044,5.587,1045,3.83,1046,3.376,1047,4.271,1048,3.147,1049,5.587,1050,4.271,1051,3.376,1052,4.572,1053,2.869,1054,6.442,1055,4.96,1056,4.738,1057,7.234,1058,3.83,1059,3.256,1060,4.975,1061,3.047,1062,3.376,1063,6.442,1064,3.256,1065,4.572,1066,5.587,1067,3.256,1068,5.587,1069,3.839]],["title/injectables/CrudService.html",[437,1.304,1070,3.041]],["body/injectables/CrudService.html",[0,0.213,2,0.207,3,0.213,9,0.135,11,0.457,25,0.007,30,1.322,37,0.413,38,0.94,43,1.599,44,1.315,46,1.449,49,0.975,60,0.995,65,0.279,66,2.841,67,2.922,69,0.796,70,1.828,71,1.052,75,2.99,76,1.513,80,2.238,81,1.258,84,2.473,89,2.303,91,1.27,92,0.934,93,0.841,108,3.283,117,1.266,118,0.495,119,2.218,121,2.936,131,2.333,137,0.346,147,1.139,148,0.129,149,0.141,164,1.155,209,1.849,274,1.597,277,1.965,320,0.004,321,0.005,339,3.316,342,1.913,346,0.874,358,0.788,405,3.574,412,3.07,413,2.147,414,3.001,417,1.772,434,3.574,437,2.012,447,4.414,455,1.689,493,3.872,495,3.882,499,2.936,537,3.316,538,4.374,571,1.863,587,3.574,598,2.022,602,1.422,627,2.625,686,3.582,727,4.197,741,2.473,742,2.699,817,3.336,851,2.022,880,3.644,903,3.655,925,3.103,948,2.699,1043,2.693,1051,4.692,1055,2.699,1056,2.579,1070,3.438,1071,3.937,1072,3.727,1073,4.105,1074,3.574,1075,2.765,1076,3.901,1077,5.467,1078,5.067,1079,5.067,1080,5.067,1081,3.937,1082,4.657,1083,3.937,1084,3.205,1085,4.657,1086,3.937,1087,3.574,1088,5.691,1089,3.937,1090,5.691,1091,5.863,1092,3.937,1093,4.657,1094,3.937,1095,4.35,1096,4.376,1097,5.691,1098,3.937,1099,3.438,1100,5.067,1101,5.691,1102,6.683,1103,3.937,1104,3.937,1105,2.579,1106,2.84,1107,5.691,1108,3.937,1109,3.937,1110,3.937,1111,3.222,1112,3.937,1113,2.84,1114,3.222,1115,3.937,1116,4.038,1117,3.937,1118,3.937,1119,3.937,1120,3.222,1121,3.937,1122,3.506,1123,3.937,1124,3.937,1125,3.937,1126,6.683,1127,5.469,1128,3.222,1129,3.222,1130,3.222,1131,3.937,1132,5.691,1133,4.657,1134,2.379,1135,3.937,1136,5.108,1137,6.683,1138,3.222,1139,3.222,1140,3.222,1141,3.222,1142,5.469,1143,2.294,1144,3.222,1145,3.937,1146,3.506,1147,3.937]],["title/modules/DataModule.html",[322,1.079,1148,3.45]],["body/modules/DataModule.html",[2,0.219,3,0.226,9,0.143,24,2.419,25,0.007,49,0.608,63,1.392,65,0.35,71,0.504,81,0.774,91,0.62,92,0.456,93,0.41,108,2.278,137,0.367,138,1.672,139,1.315,146,2.596,147,0.835,148,0.26,149,0.15,177,0.766,186,2.171,196,1.334,201,2.329,207,2.171,208,2.171,209,1.739,216,2.369,218,2.369,219,2.365,220,2.407,221,2.369,222,2.407,308,2.289,310,2.289,320,0.004,321,0.004,322,1.271,324,1.709,329,2.486,330,1.506,331,1.392,333,3.339,334,2.058,358,0.835,399,3.411,548,2.429,596,2.429,616,6.598,622,5.33,628,2.805,629,1.876,630,5.274,632,4.064,634,3.186,648,5.656,650,3.723,656,4.277,706,2.959,783,4.277,908,2.348,936,4.808,976,3.712,978,4.851,979,3.882,980,2.858,1070,4.985,1148,6.869,1149,3.712,1150,3.712,1151,3.712,1152,3.712,1153,3.712,1154,6.598,1155,6.27,1156,5.989,1157,6.307,1158,5.182,1159,4.168,1160,3.712,1161,5.928,1162,4.168,1163,5.279,1164,5.279,1165,3.007,1166,3.007,1167,4.168,1168,4.168,1169,3.712,1170,4.168,1171,3.723,1172,3.882,1173,3.186,1174,3.712,1175,3.007,1176,5.928,1177,4.532,1178,4.168,1179,4.168,1180,3.186,1181,3.712,1182,4.168,1183,3.411,1184,4.168,1185,4.168]],["title/components/DatetimeComponent.html",[0,0.189,205,1.281]],["body/components/DatetimeComponent.html",[0,0.309,1,0.961,2,0.198,3,0.204,4,0.809,6,1.012,7,0.977,8,1.363,9,0.129,11,0.438,16,1.961,17,5.41,20,0.944,23,0.837,24,2.104,25,0.007,26,3.673,27,3.107,28,3.673,29,3.107,30,1.296,31,2.152,32,1.869,35,1.334,37,0.396,38,0.641,40,1.694,41,4.506,43,1.187,44,1.284,45,2.68,49,0.805,53,4.699,54,5.008,57,3.333,60,0.707,65,0.257,69,0.701,70,1.306,71,1.058,76,1.031,80,1.311,81,0.851,82,1.55,86,3.465,89,1.795,91,0.82,92,0.942,93,0.543,94,3.465,104,3.465,108,2.12,110,1.449,113,1.357,115,0.944,117,1.774,118,0.959,119,3.107,127,4.921,136,1.698,137,0.332,138,1.513,148,0.123,149,0.135,173,2.369,177,0.693,178,1.454,179,1.124,180,1.582,181,1.892,182,1.012,183,1.012,184,0.928,185,1.75,186,0.944,187,0.977,188,0.866,189,0.961,190,0.961,191,2.21,192,0.961,193,1.472,194,1.925,195,0.977,196,1.415,197,2.266,198,0.977,199,1.978,200,1.012,201,0.961,202,1.48,203,0.977,204,1.012,205,2.03,206,1.012,207,0.944,208,0.944,209,1.566,210,1.75,211,0.944,212,0.961,213,0.961,214,0.928,215,1.012,216,0.977,217,2.048,218,0.977,219,0.961,220,0.977,221,0.977,222,0.977,223,0.961,224,1.012,225,0.961,226,0.977,227,1.012,228,0.961,229,1.012,230,0.961,231,0.944,232,1.365,233,1.012,234,0.961,235,1.012,236,0.944,237,0.961,238,1.012,239,0.961,240,1.012,241,0.881,242,1.012,243,0.961,244,1.523,245,1.012,246,0.944,247,1.012,248,0.961,249,1.012,250,0.928,251,1.012,252,0.961,253,0.928,254,0.961,255,0.896,256,1.012,257,0.961,258,1.012,259,1.012,260,0.961,261,1.012,262,0.961,263,1.012,264,0.928,265,1.012,266,0.944,267,0.961,268,1.012,269,0.961,270,0.977,271,1.012,272,0.944,273,0.961,274,1.842,275,0.961,276,0.977,277,0.851,278,0.977,279,0.977,280,0.961,281,0.977,282,0.977,283,0.977,284,1.012,285,0.944,286,0.961,287,1.012,288,0.961,289,0.977,290,0.961,291,1.012,292,0.961,293,1.012,294,0.977,295,0.912,296,0.961,297,1.012,298,0.961,299,1.012,300,0.961,301,1.012,302,0.961,303,0.912,304,0.928,305,1.012,306,0.944,307,1.012,308,0.944,309,1.012,310,0.944,311,1.012,312,0.944,313,1.012,314,0.944,315,0.995,316,1.012,317,0.944,318,0.995,319,1.012,320,0.004,321,0.004,346,1.224,401,2.917,558,3.811,682,2.12,782,4.818,803,5.422,804,2.833,1009,3.333,1186,3.773,1187,5.176,1188,4.912,1189,5.517,1190,7.175,1191,6.522,1192,2.878,1193,3.333,1194,4.912,1195,3.773,1196,3.773,1197,3.773,1198,5.517,1199,3.773,1200,3.773,1201,3.773,1202,3.773,1203,5.517,1204,3.773,1205,3.773,1206,3.98,1207,3.773,1208,4.514,1209,5.517,1210,3.465,1211,2.721,1212,2.125,1213,3.773]],["title/pipes/DatetimePipe.html",[780,3.847,1214,2.584]],["body/pipes/DatetimePipe.html",[2,0.327,3,0.338,9,0.214,11,0.725,16,1.535,23,1.385,25,0.007,30,1.127,38,0.902,43,1.571,48,2.592,49,0.911,60,0.994,65,0.303,69,0.683,70,1.964,71,0.754,77,2.694,80,1.844,81,1.154,91,0.928,92,0.923,93,0.614,118,0.784,131,3.182,137,0.549,147,1.25,148,0.204,149,0.224,320,0.005,321,0.005,437,1.617,455,2.678,493,4.105,603,3.113,682,2.982,780,5.933,803,5.104,828,5.083,938,2.301,939,3.046,1187,5.599,1210,4.875,1211,4.503,1214,4.338,1215,6.242,1216,5.599,1217,5.599,1218,4.523,1219,6.242,1220,6.948,1221,8.094,1222,6.242,1223,7.762,1224,5.599,1225,3.92,1226,6.242,1227,6.242,1228,5.558,1229,6.242,1230,6.242,1231,6.242,1232,6.242,1233,6.242,1234,6.242]],["title/interfaces/Day.html",[338,1.424,1208,4.118]],["body/interfaces/Day.html",[0,0.192,2,0.179,3,0.185,9,0.117,11,0.397,16,0.84,21,2.199,22,2.425,25,0.007,30,1.389,31,0.732,32,0.638,35,0.826,37,0.896,38,0.595,39,1.711,40,1.654,44,1.345,52,1.537,61,2.101,65,0.263,69,0.807,70,1.797,76,1.369,79,1.71,80,1.827,81,1.19,82,1.624,89,1.996,93,0.672,124,1.99,126,2.8,137,0.3,147,1.466,148,0.168,149,0.286,164,1.503,167,3.253,232,1.56,262,0.869,277,1.157,320,0.003,321,0.003,338,1.934,346,1.972,358,0.684,363,1.45,379,4.13,435,1.87,437,0.885,445,2.814,449,2.4,491,4.028,495,2.199,512,2.631,533,2.795,582,1.616,597,3.994,598,1.754,682,1.969,686,1.969,782,3.716,788,6.866,800,3.041,801,5.477,803,5.371,805,7.915,841,2.145,869,3.07,910,2.71,919,1.806,938,1.259,939,2.011,942,1.779,948,1.259,961,1.99,968,3.234,1038,2.611,1143,1.99,1165,5.754,1188,4.563,1192,2.055,1193,2.063,1194,7.728,1208,7.964,1210,5.153,1211,2.464,1225,2.145,1235,3.415,1236,7.324,1237,3.875,1238,7.324,1239,5.754,1240,8.391,1241,3.917,1242,3.697,1243,8.791,1244,6.097,1245,2.795,1246,2.341,1247,3.415,1248,3.041,1249,3.415,1250,6.086,1251,3.994,1252,5.124,1253,2.464,1254,3.415,1255,5.124,1256,3.415,1257,7.691,1258,1.37,1259,3.415,1260,3.415,1261,3.415,1262,2.795,1263,3.415,1264,1.99,1265,3.415,1266,3.415,1267,3.415,1268,3.415,1269,3.415,1270,3.415,1271,6.835,1272,3.415,1273,3.415,1274,3.415,1275,3.415,1276,3.415,1277,3.415,1278,3.415,1279,3.415,1280,3.415,1281,3.415,1282,7.691,1283,5.124,1284,6.151,1285,5.124,1286,6.151,1287,5.124,1288,3.415,1289,3.415,1290,3.415,1291,3.415,1292,3.415,1293,7.324,1294,3.415,1295,3.415,1296,3.415,1297,3.415,1298,3.415,1299,6.835,1300,3.415,1301,5.124,1302,5.124,1303,5.033,1304,3.415,1305,3.415,1306,3.415,1307,3.415,1308,3.415,1309,5.124,1310,3.415,1311,3.415,1312,5.124,1313,3.415,1314,3.415,1315,3.415,1316,3.415,1317,3.415,1318,3.415,1319,3.415,1320,5.124,1321,3.415,1322,3.415,1323,3.415,1324,3.415,1325,3.415,1326,3.415,1327,3.415,1328,3.415,1329,3.415,1330,3.415,1331,6.151,1332,3.415,1333,6.151,1334,3.415,1335,3.415,1336,3.415,1337,3.415,1338,5.124,1339,3.415,1340,3.415,1341,3.415,1342,3.415,1343,3.415,1344,3.415,1345,2.236,1346,3.415,1347,3.415,1348,3.415,1349,5.124,1350,3.415,1351,3.415,1352,3.415,1353,3.415,1354,3.415,1355,3.415,1356,3.415,1357,3.415,1358,3.415,1359,3.415,1360,3.415,1361,3.415,1362,3.415,1363,3.415,1364,3.415,1365,3.415,1366,2.611,1367,3.415,1368,3.415,1369,3.415,1370,3.415]],["title/components/DefaultEntryInputComponent.html",[0,0.189,207,1.259]],["body/components/DefaultEntryInputComponent.html",[0,0.32,1,1.084,2,0.223,3,0.231,4,1.716,6,1.142,7,1.103,9,0.146,11,0.494,19,2.312,20,2.182,23,0.944,25,0.007,31,2.159,32,1.876,35,1.454,37,0.446,38,0.699,40,1.716,44,1.77,45,3.685,46,2.221,47,3.332,48,2.436,60,0.771,65,0.25,69,0.767,71,1.004,91,0.633,92,0.953,93,0.419,113,1.48,115,1.065,117,1.934,118,1.044,127,3.506,128,3.895,129,3.254,130,3.254,131,1.745,132,3.635,133,3.254,134,3.254,135,2.572,137,0.374,139,1.343,148,0.139,149,0.153,177,0.782,178,1.586,179,1.225,181,2,182,1.142,183,1.142,184,1.047,185,1.872,186,1.065,187,1.103,188,0.977,189,1.084,190,1.084,191,2.291,192,1.084,193,1.575,194,2.035,195,1.103,196,1.474,197,2.34,198,1.103,199,1.103,200,1.142,201,1.084,202,1.614,203,1.103,204,1.142,205,1.084,206,1.142,207,1.898,208,1.065,209,1.746,210,1.872,211,1.065,212,1.084,213,1.084,214,1.047,215,1.142,216,1.103,217,2.147,218,1.103,219,1.084,220,1.103,221,1.103,222,1.103,223,1.084,224,1.142,225,1.084,226,1.103,227,1.142,228,1.084,229,1.142,230,1.084,231,1.065,232,1.144,233,1.142,234,1.084,235,1.142,236,1.065,237,1.084,238,1.142,239,1.084,240,1.142,241,0.994,242,1.142,243,1.084,244,1.63,245,1.142,246,1.065,247,1.142,248,1.084,249,1.142,250,1.047,251,1.142,252,1.084,253,1.047,254,1.084,255,1.011,256,1.142,257,1.084,258,1.142,259,1.142,260,1.084,261,1.142,262,1.084,263,1.142,264,1.047,265,1.142,266,1.065,267,1.084,268,1.142,269,1.084,270,1.103,271,1.142,272,1.065,273,1.084,274,1.902,275,1.084,276,1.103,277,0.961,278,1.103,279,1.103,280,1.084,281,1.103,282,1.103,283,1.103,284,1.142,285,1.065,286,1.084,287,1.142,288,1.084,289,1.103,290,1.084,291,1.142,292,1.084,293,1.142,294,1.103,295,1.029,296,1.084,297,1.142,298,1.084,299,1.142,300,1.084,301,1.142,302,1.084,303,1.029,304,1.047,305,1.142,306,1.065,307,1.142,308,1.065,309,1.142,310,1.065,311,1.142,312,1.065,313,1.142,314,1.065,315,1.122,316,1.142,317,1.065,318,1.122,319,1.142,320,0.004,321,0.004,358,0.852,398,5.335,400,3.254,401,3.182,408,3.779,411,4.599,412,3.355,413,2.321,414,3.406,417,1.915,419,1.963,420,3.071,423,3.483,424,4.923,425,3.635,1172,4.57,1241,4.599,1371,4.256,1372,4.256]],["title/components/DefaultEntryOutputComponent.html",[0,0.189,208,1.259]],["body/components/DefaultEntryOutputComponent.html",[0,0.336,1,1.134,2,0.234,3,0.241,4,1.534,6,1.195,7,1.154,9,0.153,11,0.518,20,1.115,23,0.989,25,0.007,31,2.163,32,1.881,35,1.502,37,0.467,38,0.722,40,0.862,46,2.311,48,2.662,65,0.223,69,0.681,71,0.751,92,0.946,113,1.528,115,1.115,118,1.108,137,0.392,148,0.146,149,0.16,177,0.819,178,1.638,179,1.265,181,2.04,182,1.195,183,1.195,184,1.096,185,1.919,186,1.115,187,1.154,188,1.023,189,1.134,190,1.134,191,2.321,192,1.134,193,1.615,194,2.076,195,1.154,196,1.496,197,2.367,198,1.154,199,1.154,200,1.195,201,1.134,202,1.667,203,1.154,204,1.195,205,1.134,206,1.195,207,1.115,208,1.937,209,1.785,210,1.919,211,1.115,212,1.134,213,1.134,214,1.096,215,1.195,216,1.154,217,2.184,218,1.154,219,1.134,220,1.154,221,1.154,222,1.154,223,1.134,224,1.195,225,1.134,226,1.154,227,1.195,228,1.134,229,1.195,230,1.134,231,1.115,232,1.182,233,1.195,234,1.134,235,1.195,236,1.115,237,1.134,238,1.195,239,1.134,240,1.195,241,1.041,242,1.195,243,1.134,244,1.671,245,1.195,246,1.115,247,1.195,248,1.134,249,1.195,250,1.096,251,1.195,252,1.134,253,1.096,254,1.134,255,1.059,256,1.195,257,1.134,258,1.195,259,1.195,260,1.134,261,1.195,262,1.134,263,1.195,264,1.096,265,1.195,266,1.115,267,1.134,268,1.195,269,1.134,270,1.154,271,1.195,272,1.115,273,1.134,274,1.924,275,1.134,276,1.154,277,1.006,278,1.154,279,1.154,280,1.134,281,1.154,282,1.154,283,1.154,284,1.195,285,1.115,286,1.134,287,1.195,288,1.134,289,1.154,290,1.134,291,1.195,292,1.134,293,1.195,294,1.154,295,1.077,296,1.134,297,1.195,298,1.134,299,1.195,300,1.134,301,1.195,302,1.134,303,1.077,304,1.096,305,1.195,306,1.115,307,1.195,308,1.115,309,1.195,310,1.115,311,1.195,312,1.115,313,1.195,314,1.115,315,1.175,316,1.195,317,1.115,318,1.175,319,1.195,320,0.004,321,0.004,350,1.283,398,5.468,401,3.286,408,3.902,423,3.646,424,5.084,425,3.754,435,2.761,707,4.069,1172,4.685,1192,2.492,1241,4.749,1373,3.968,1374,5.532,1375,3.968,1376,3.968,1377,5.532]],["title/components/DefaultInputComponent.html",[0,0.189,20,1.259]],["body/components/DefaultInputComponent.html",[0,0.322,1,1.104,2,0.227,3,0.235,4,1.512,6,1.164,7,1.124,9,0.149,11,0.504,20,1.914,23,0.962,25,0.007,31,2.16,32,1.878,35,1.474,37,0.455,38,0.708,40,1.559,44,1.813,45,4.06,46,2.345,47,3.671,48,2.647,60,0.98,65,0.253,69,0.735,71,0.924,92,0.938,113,1.499,115,1.085,117,2.459,118,0.961,127,4.457,131,2.499,132,4.621,135,3.684,137,0.381,138,1.739,148,0.142,149,0.156,177,0.797,178,1.607,179,1.242,181,2.016,182,1.164,183,1.164,184,1.067,185,1.892,186,1.085,187,1.124,188,0.996,189,1.104,190,1.104,191,2.303,192,1.104,193,1.591,194,2.052,195,1.124,196,1.483,197,2.351,198,1.124,199,1.124,200,1.164,201,1.104,202,1.636,203,1.124,204,1.164,205,1.104,206,1.164,207,1.085,208,1.085,209,1.633,210,1.892,211,1.085,212,1.104,213,1.104,214,1.067,215,1.164,216,1.124,217,2.162,218,1.124,219,1.104,220,1.124,221,1.124,222,1.124,223,1.104,224,1.164,225,1.104,226,1.124,227,1.164,228,1.104,229,1.164,230,1.104,231,1.085,232,1.159,233,1.164,234,1.104,235,1.164,236,1.085,237,1.104,238,1.164,239,1.104,240,1.164,241,1.013,242,1.164,243,1.104,244,1.647,245,1.164,246,1.085,247,1.164,248,1.104,249,1.164,250,1.067,251,1.164,252,1.104,253,1.067,254,1.104,255,1.03,256,1.164,257,1.104,258,1.164,259,1.164,260,1.104,261,1.164,262,1.104,263,1.164,264,1.067,265,1.164,266,1.085,267,1.104,268,1.164,269,1.104,270,1.124,271,1.164,272,1.085,273,1.104,274,1.911,275,1.104,276,1.124,277,0.979,278,1.124,279,1.124,280,1.104,281,1.124,282,1.124,283,1.124,284,1.164,285,1.085,286,1.104,287,1.164,288,1.104,289,1.124,290,1.104,291,1.164,292,1.104,293,1.164,294,1.124,295,1.048,296,1.104,297,1.164,298,1.104,299,1.164,300,1.104,301,1.164,302,1.104,303,1.048,304,1.067,305,1.164,306,1.085,307,1.164,308,1.085,309,1.164,310,1.085,311,1.164,312,1.085,313,1.164,314,1.085,315,1.143,316,1.164,317,1.085,318,1.143,319,1.164,320,0.004,321,0.004,350,1.249,400,3.315,401,3.224,411,4.66,415,3.862,1378,7.176,1379,6.594,1380,5.429,1381,4.337,1382,4.337,1383,4.337,1384,6.097,1385,6.097]],["title/components/DefaultOutputComponent.html",[0,0.189,211,1.259]],["body/components/DefaultOutputComponent.html",[0,0.304,1,1.125,2,0.232,3,0.239,4,1.527,6,1.186,7,1.145,9,0.152,11,0.513,20,1.106,23,0.981,25,0.007,31,2.163,32,1.88,35,1.494,37,0.464,38,0.718,40,1.378,43,1.022,46,2.353,48,2.71,65,0.222,69,0.543,71,0.747,92,0.943,113,1.52,115,1.106,118,1.056,135,3.733,137,0.389,148,0.145,149,0.159,177,0.812,178,1.629,179,1.259,181,2.033,182,1.186,183,1.186,184,1.087,185,1.911,186,1.106,187,1.145,188,1.015,189,1.125,190,1.125,191,2.316,192,1.125,193,1.608,194,2.069,195,1.145,196,1.492,197,2.363,198,1.145,199,1.145,200,1.186,201,1.125,202,1.658,203,1.145,204,1.186,205,1.125,206,1.186,207,1.106,208,1.106,209,1.641,210,1.911,211,1.93,212,1.125,213,1.125,214,1.087,215,1.186,216,1.145,217,2.177,218,1.145,219,1.125,220,1.145,221,1.145,222,1.145,223,1.125,224,1.186,225,1.125,226,1.145,227,1.186,228,1.125,229,1.186,230,1.125,231,1.106,232,1.175,233,1.186,234,1.125,235,1.186,236,1.106,237,1.125,238,1.186,239,1.125,240,1.186,241,1.032,242,1.186,243,1.125,244,1.664,245,1.186,246,1.106,247,1.186,248,1.125,249,1.186,250,1.087,251,1.186,252,1.125,253,1.087,254,1.125,255,1.05,256,1.186,257,1.125,258,1.186,259,1.186,260,1.125,261,1.186,262,1.125,263,1.186,264,1.087,265,1.186,266,1.106,267,1.125,268,1.186,269,1.125,270,1.145,271,1.186,272,1.106,273,1.125,274,1.921,275,1.125,276,1.145,277,0.998,278,1.145,279,1.145,280,1.125,281,1.145,282,1.145,283,1.145,284,1.186,285,1.106,286,1.125,287,1.186,288,1.125,289,1.145,290,1.125,291,1.186,292,1.125,293,1.186,294,1.145,295,1.069,296,1.125,297,1.186,298,1.125,299,1.186,300,1.125,301,1.186,302,1.125,303,1.069,304,1.087,305,1.186,306,1.106,307,1.186,308,1.106,309,1.186,310,1.106,311,1.186,312,1.106,313,1.186,314,1.106,315,1.165,316,1.186,317,1.106,318,1.165,319,1.186,320,0.004,321,0.004,350,1.273,355,2.651,401,3.268,435,2.346,707,4.046,1192,2.478,1373,3.936,1374,5.502,1375,3.936,1376,3.936,1377,8.511,1378,6.343,1386,5.829,1387,6.179,1388,4.42,1389,4.42,1390,7.713,1391,4.236]],["title/directives/DropzoneDirective.html",[179,1.025,306,1.259]],["body/directives/DropzoneDirective.html",[2,0.291,3,0.301,9,0.314,11,0.645,23,1.232,25,0.007,30,1.584,31,1.545,37,0.582,40,1.638,43,0.919,44,1.093,65,0.199,69,0.704,71,1.106,76,1.038,81,1.105,91,0.826,92,0.607,93,0.546,109,3.81,113,2.082,118,0.698,137,0.489,148,0.182,149,0.287,179,1.787,306,1.803,320,0.005,321,0.005,346,1.775,358,1.112,363,2.625,435,2.575,448,2.783,449,2.774,513,5.509,571,3.41,573,4.354,582,4.595,602,2.006,948,3.121,1166,6.823,1303,6.547,1392,5.555,1393,7.207,1394,8.773,1395,6.547,1396,5.772,1397,8.001,1398,5.485,1399,8.467,1400,8.99,1401,4.545,1402,5.555,1403,5.898,1404,5.509,1405,7.207,1406,5.555,1407,5.555,1408,5.555,1409,7.207,1410,3.701,1411,5.239,1412,5.555,1413,5.555,1414,5.239,1415,5.555,1416,5.555,1417,5.555,1418,5.555,1419,4.946,1420,5.555,1421,5.555,1422,8.001,1423,6.547,1424,7.812,1425,5.555,1426,5.555,1427,5.555,1428,5.555,1429,5.555,1430,5.555,1431,5.555]],["title/components/DynamicRackComponent.html",[0,0.189,212,1.281]],["body/components/DynamicRackComponent.html",[0,0.307,1,1.154,2,0.238,3,0.246,4,0.972,6,1.216,7,1.174,9,0.155,11,0.526,20,1.134,23,1.005,24,1.844,25,0.007,31,2.164,32,1.883,35,1.52,40,0.877,46,1.601,60,1.085,65,0.226,69,0.399,71,0.548,75,2.099,77,2.182,91,0.674,92,0.968,93,0.446,113,1.546,115,1.134,117,2.021,118,0.79,137,0.399,148,0.148,149,0.163,177,0.833,178,1.657,179,1.588,181,2.055,182,1.216,183,1.216,184,1.115,185,1.937,186,1.134,187,1.174,188,1.04,189,1.154,190,1.154,191,2.332,192,1.154,193,1.629,194,2.092,195,1.174,196,1.572,197,2.377,198,1.174,199,1.174,200,1.216,201,1.154,202,1.687,203,1.174,204,1.216,205,1.154,206,1.216,207,1.134,208,1.134,209,1.653,210,1.937,211,1.134,212,1.985,213,1.154,214,1.917,215,1.216,216,1.174,217,2.197,218,1.174,219,1.154,220,1.174,221,1.174,222,1.174,223,1.154,224,1.216,225,1.154,226,1.174,227,1.216,228,1.154,229,1.216,230,1.154,231,1.134,232,1.196,233,1.216,234,1.154,235,1.216,236,1.134,237,1.154,238,1.216,239,1.154,240,1.216,241,1.058,242,1.216,243,1.154,244,1.686,245,1.216,246,1.134,247,1.216,248,1.154,249,1.216,250,1.115,251,1.216,252,1.154,253,1.115,254,1.154,255,1.077,256,1.216,257,1.154,258,1.216,259,1.216,260,1.154,261,1.216,262,1.154,263,1.216,264,1.115,265,1.216,266,1.134,267,1.154,268,1.216,269,1.154,270,1.174,271,1.216,272,1.134,273,1.154,274,1.932,275,1.154,276,1.174,277,1.023,278,1.174,279,1.174,280,1.154,281,1.174,282,1.174,283,1.174,284,1.216,285,1.134,286,1.154,287,1.216,288,1.154,289,1.174,290,1.154,291,1.216,292,1.154,293,1.216,294,1.174,295,1.095,296,1.154,297,1.216,298,1.154,299,1.216,300,1.154,301,1.216,302,1.154,303,1.095,304,1.115,305,1.216,306,1.134,307,1.216,308,1.134,309,1.216,310,1.134,311,1.216,312,1.134,313,1.216,314,1.134,315,1.195,316,1.216,317,1.134,318,1.195,319,1.216,320,0.004,321,0.004,358,1.445,602,1.637,942,1.573,968,2.975,1192,2.521,1251,3.428,1432,5.598,1433,5.598,1434,4.532,1435,5.144,1436,6.287,1437,4.035,1438,6.478,1439,4.532,1440,5.144,1441,5.144,1442,5.598,1443,4.532,1444,4.532,1445,4.532]],["title/components/DynamicSlotComponent.html",[0,0.189,213,1.281]],["body/components/DynamicSlotComponent.html",[0,0.334,1,1.04,2,0.214,3,0.221,4,0.876,6,1.096,7,1.058,9,0.14,11,0.474,20,1.022,23,0.906,24,1.713,25,0.007,31,2.157,32,1.877,35,1.412,37,0.428,38,0.679,40,0.79,43,0.676,44,1.15,46,2.086,48,1.713,49,0.853,60,1.105,65,0.21,69,0.759,71,0.9,75,1.951,77,2.028,79,1.462,80,1.388,81,0.763,91,0.868,92,0.96,93,0.575,110,1.569,113,1.437,115,1.022,117,1.878,118,0.99,126,1.914,136,1.838,137,0.359,147,1.366,148,0.134,149,0.147,177,0.75,178,1.54,179,1.516,181,1.963,182,1.096,183,1.096,184,1.004,185,1.83,186,1.022,187,1.058,188,0.938,189,1.04,190,1.04,191,2.264,192,1.04,193,1.54,194,1.998,195,1.058,196,1.531,197,2.315,198,1.058,199,1.058,200,1.096,201,1.04,202,1.568,203,1.058,204,1.096,205,1.04,206,1.096,207,1.022,208,1.022,209,1.604,210,1.83,211,1.022,212,1.04,213,1.896,214,1.937,215,1.096,216,1.058,217,2.113,218,1.058,219,1.04,220,1.058,221,1.058,222,1.058,223,1.04,224,1.096,225,1.04,226,1.058,227,1.096,228,1.04,229,1.096,230,1.04,231,1.022,232,1.111,233,1.096,234,1.04,235,1.096,236,1.022,237,1.04,238,1.096,239,1.04,240,1.096,241,0.954,242,1.096,243,1.04,244,1.593,245,1.096,246,1.022,247,1.096,248,1.04,249,1.096,250,1.004,251,1.096,252,1.04,253,1.004,254,1.04,255,0.97,256,1.096,257,1.04,258,1.096,259,1.096,260,1.04,261,1.096,262,1.04,263,1.096,264,1.004,265,1.096,266,1.022,267,1.04,268,1.096,269,1.04,270,1.058,271,1.096,272,1.022,273,1.04,274,1.882,275,1.04,276,1.058,277,0.922,278,1.058,279,1.058,280,1.04,281,1.058,282,1.058,283,1.058,284,1.096,285,1.022,286,1.04,287,1.096,288,1.04,289,1.058,290,1.04,291,1.096,292,1.04,293,1.096,294,1.058,295,0.987,296,1.04,297,1.096,298,1.04,299,1.096,300,1.04,301,1.096,302,1.04,303,0.987,304,1.004,305,1.096,306,1.022,307,1.096,308,1.022,309,1.096,310,1.022,311,1.096,312,1.022,313,1.096,314,1.022,315,1.077,316,1.096,317,1.971,318,1.077,319,1.096,320,0.004,321,0.004,358,1.366,419,1.884,428,2.343,686,2.621,942,2.028,968,3.523,1061,3.186,1192,2.343,1251,3.186,1432,7.014,1435,4.781,1437,3.637,1438,6.895,1440,5.582,1441,4.781,1442,5.202,1446,6.022,1447,4.084,1448,5.214,1449,4.781,1450,6.706,1451,4.781,1452,5.842,1453,4.781,1454,6.092,1455,4.084,1456,6.446,1457,4.084,1458,4.781,1459,4.781,1460,3.637,1461,4.084,1462,4.084,1463,4.084,1464,4.084,1465,4.084,1466,4.084]],["title/directives/EntriesDirective.html",[179,1.025,308,1.259]],["body/directives/EntriesDirective.html",[0,0.157,2,0.219,3,0.227,4,0.897,8,1.511,9,0.143,11,0.486,16,1.461,22,3.271,23,0.928,25,0.007,30,1.435,31,1.274,32,0.782,37,0.439,38,0.69,40,1.68,43,1.144,44,1.739,48,2.59,49,0.867,50,2.212,51,3.561,60,0.885,65,0.312,66,2.966,69,0.788,70,1.19,71,1.152,80,1.788,81,1.234,82,1.788,91,0.883,92,0.65,93,0.782,108,3.394,118,0.999,121,3.312,126,2.466,137,0.368,139,1.875,147,0.837,148,0.137,149,0.15,164,1.226,179,1.408,180,1.754,196,1.227,209,1.704,241,1.614,308,1.487,320,0.004,321,0.004,344,1.754,346,1.67,354,1.774,358,1.19,363,1.955,412,3.156,413,2.281,414,3.085,417,1.882,426,1.481,428,3.822,433,4.986,437,1.539,442,4.287,453,2.954,457,3.891,471,3.197,474,3.197,475,4.385,480,6.158,497,3.492,520,4.005,541,7.311,571,1.979,585,1.511,592,4.012,601,1.388,603,3.407,875,4.738,923,3.769,937,4.652,938,3.044,939,3.241,984,3.017,1002,3.724,1005,2.527,1091,4.928,1105,2.739,1467,4.182,1468,5.291,1469,6.158,1470,6.701,1471,6.701,1472,6.701,1473,5.942,1474,6.155,1475,5.942,1476,4.182,1477,4.074,1478,5.942,1479,4.182,1480,4.182,1481,4.182,1482,7.526,1483,4.182,1484,4.182,1485,4.863,1486,4.182,1487,4.182,1488,4.182,1489,4.182,1490,4.182,1491,4.182,1492,5.942,1493,4.182,1494,4.182,1495,4.182,1496,4.182,1497,4.182,1498,3.724,1499,4.182,1500,3.724,1501,4.182,1502,6.912,1503,5.942,1504,3.422,1505,4.182,1506,4.182,1507,4.182,1508,3.422,1509,3.724,1510,6.912,1511,3.017,1512,4.182,1513,6.155,1514,7.526,1515,6.912,1516,4.182,1517,4.182,1518,4.182,1519,4.182,1520,4.182,1521,4.182,1522,4.182,1523,4.182]],["title/directives/EntryDirective.html",[179,1.025,310,1.259]],["body/directives/EntryDirective.html",[2,0.258,3,0.266,4,1.807,8,1.776,9,0.169,11,0.571,16,1.635,22,3.564,23,1.091,25,0.007,30,1.2,31,1.425,32,0.919,37,0.516,38,0.772,40,1.747,44,1.71,49,0.97,51,3.817,60,1.137,65,0.302,69,0.821,70,1.615,71,1.144,76,0.919,81,1.134,82,1.168,91,0.731,92,0.537,93,0.484,108,3.412,118,0.835,121,3.483,126,2.178,137,0.432,139,2.097,148,0.161,149,0.176,179,1.643,180,2.061,209,1.859,241,1.759,310,1.663,320,0.004,321,0.004,342,4.22,344,2.061,346,1.475,358,0.984,363,1.391,412,3.383,413,2.681,414,3.307,417,2.212,425,4.874,426,1.741,428,3.949,433,5.433,434,5.293,435,2.453,437,1.722,442,4.795,445,2.554,447,3.625,448,1.495,449,2.643,453,2.609,454,5.919,457,4.353,460,4.377,461,3.219,471,3.758,474,3.758,475,3.873,480,5.439,497,3.702,585,1.776,592,4.22,602,1.776,923,4.107,937,4.892,938,3.202,939,3.409,984,3.546,1001,4.377,1005,2.97,1091,3.219,1105,3.219,1146,4.377,1468,5.919,1469,6.163,1511,3.546,1513,4.377,1524,4.916,1525,6.163,1526,6.647,1527,4.916,1528,4.916,1529,4.916,1530,4.916,1531,4.916,1532,4.916,1533,4.916,1534,4.916,1535,4.916,1536,4.916,1537,4.916,1538,4.916,1539,6.647,1540,4.916,1541,4.916,1542,4.916,1543,4.916]],["title/components/EntryListPopComponent.html",[0,0.189,219,1.281]],["body/components/EntryListPopComponent.html",[0,0.26,1,0.771,2,0.159,3,0.164,4,0.649,6,1.254,7,0.784,9,0.104,11,0.352,16,1.15,19,1.796,20,0.758,22,2.703,23,0.672,25,0.007,30,1.381,31,2.134,32,1.853,35,1.13,37,0.318,38,0.543,39,1.907,40,1.48,43,0.945,44,1.804,48,1.371,49,0.682,51,3.04,60,0.732,65,0.263,66,2.334,67,2.401,69,0.806,70,1.286,71,1.139,76,0.566,79,1.836,80,0.719,81,1.031,82,1.65,91,1.091,92,0.947,93,0.722,107,2.401,108,2.668,109,4.076,110,1.163,113,1.805,115,0.758,118,0.872,128,4.394,136,1.362,137,0.266,139,0.955,147,0.606,148,0.099,149,0.274,167,2.473,177,0.556,178,1.233,179,0.952,181,1.694,182,0.812,183,0.812,184,0.745,185,1.532,186,0.758,187,0.784,188,0.695,189,0.771,190,0.771,191,2.052,192,0.771,193,1.289,194,1.723,195,0.784,196,1.727,197,2.12,198,0.784,199,0.784,200,0.812,201,0.771,202,1.254,203,0.784,204,0.812,205,0.771,206,0.812,207,0.758,208,0.758,209,1.648,210,1.532,211,0.758,212,0.771,213,0.771,214,0.745,215,0.812,216,0.784,217,1.863,218,0.784,219,1.636,220,0.784,221,0.784,222,0.784,223,0.771,224,0.812,225,0.771,226,0.784,227,0.812,228,0.771,229,0.812,230,0.771,231,0.758,232,1.627,233,0.812,234,0.771,235,0.812,236,0.758,237,0.771,238,0.812,239,0.771,240,0.812,241,0.707,242,0.812,243,0.771,244,1.334,245,0.812,246,0.758,247,0.812,248,0.771,249,0.812,250,0.745,251,0.812,252,0.771,253,0.745,254,0.771,255,0.719,256,0.812,257,0.771,258,0.812,259,0.812,260,0.771,261,0.812,262,0.771,263,0.812,264,0.745,265,0.812,266,0.758,267,0.771,268,0.812,269,0.771,270,0.784,271,0.812,272,2.234,273,0.771,274,1.723,275,0.771,276,0.784,277,0.683,278,0.784,279,0.784,280,0.771,281,0.784,282,0.784,283,1.799,284,0.812,285,0.758,286,0.771,287,0.812,288,0.771,289,0.784,290,0.771,291,0.812,292,0.771,293,0.812,294,0.784,295,0.732,296,0.771,297,0.812,298,0.771,299,0.812,300,0.771,301,0.812,302,0.771,303,0.732,304,0.745,305,0.812,306,0.758,307,0.812,308,0.758,309,0.812,310,0.758,311,0.812,312,0.758,313,0.812,314,0.758,315,0.798,316,0.812,317,0.758,318,0.798,319,0.812,320,0.003,321,0.003,346,1.037,347,4.002,350,0.872,354,1.706,355,2.006,358,0.936,359,4.172,363,1.616,379,1.829,391,2.825,398,6.824,435,1.954,448,2.111,449,2.275,455,2.006,538,2.633,541,2.314,571,2.212,572,1.945,573,2.825,582,3.919,706,1.511,817,1.511,820,4.276,908,1.705,933,4.36,935,4.547,936,4.276,941,3.451,948,1.723,949,1.651,954,1.764,967,3.998,975,1.651,978,7.305,980,2.076,984,2.184,1006,3.62,1013,2.076,1014,2.076,1084,1.705,1091,1.983,1105,1.983,1237,1.471,1258,2.784,1396,4.12,1398,3.205,1410,2.933,1411,1.983,1414,1.764,1544,2.478,1545,3.574,1546,5.72,1547,5.17,1548,4.207,1549,4.12,1550,4.676,1551,3.373,1552,3.373,1553,4.12,1554,3.028,1555,4.163,1556,2.478,1557,2.696,1558,2.696,1559,2.076,1560,2.314,1561,1.829,1562,2.314,1563,2.314,1564,2.478,1565,2.314,1566,3.826,1567,3.916,1568,2.696,1569,2.184,1570,2.314,1571,1.983,1572,6.424,1573,3.028,1574,2.696,1575,3.574,1576,3.028,1577,2.314,1578,3.373,1579,2.184,1580,2.314,1581,1.902,1582,2.184,1583,2.184,1584,2.314,1585,2.184,1586,2.314,1587,2.478,1588,2.696,1589,3.028,1590,2.696,1591,4.163,1592,2.696,1593,2.314,1594,1.983,1595,2.314,1596,2.314,1597,2.184,1598,2.478,1599,2.314,1600,3.028,1601,3.028,1602,2.478,1603,2.478,1604,2.314,1605,2.696,1606,3.028,1607,3.028]],["title/components/ErrorComponent.html",[0,0.189,223,1.281]],["body/components/ErrorComponent.html",[0,0.299,1,1.076,2,0.222,3,0.229,4,0.906,6,1.134,7,1.095,9,0.145,11,0.491,16,1.473,20,1.058,21,2.983,22,3.29,23,0.938,25,0.007,31,2.16,32,1.877,35,1.448,37,0.443,40,1.544,49,0.874,51,3.578,52,3.403,65,0.215,69,0.527,71,0.965,81,0.987,82,1.652,89,1.498,91,0.628,92,0.981,93,0.416,108,2.301,113,1.473,115,1.058,118,0.752,124,3.489,137,0.372,147,0.847,148,0.138,149,0.152,177,0.777,178,1.579,179,1.22,181,1.994,182,1.134,183,1.134,184,1.04,185,1.865,186,1.058,187,1.095,188,0.971,189,1.076,190,1.076,191,2.287,192,1.076,193,1.569,194,2.029,195,1.095,196,1.545,197,2.336,198,1.095,199,1.095,200,1.134,201,1.77,202,1.607,203,1.095,204,1.134,205,1.076,206,1.134,207,1.058,208,1.058,209,1.684,210,1.865,211,1.058,212,1.076,213,1.076,214,1.04,215,1.134,216,1.095,217,2.142,218,1.095,219,1.076,220,1.095,221,1.095,222,1.095,223,1.925,224,1.134,225,1.076,226,1.095,227,1.134,228,1.076,229,1.134,230,1.076,231,1.058,232,1.139,233,1.134,234,1.076,235,1.134,236,1.058,237,1.076,238,1.134,239,1.076,240,1.134,241,0.987,242,1.134,243,1.076,244,1.624,245,1.134,246,1.058,247,1.134,248,1.076,249,1.134,250,1.04,251,1.134,252,1.076,253,1.04,254,1.076,255,1.005,256,1.134,257,1.076,258,1.134,259,1.134,260,1.076,261,1.134,262,1.076,263,1.134,264,1.04,265,1.134,266,1.058,267,1.076,268,1.134,269,1.076,270,1.095,271,1.134,272,1.058,273,1.076,274,1.899,275,1.076,276,1.095,277,0.954,278,1.095,279,1.095,280,1.076,281,1.095,282,1.095,283,1.095,284,1.134,285,1.058,286,1.076,287,1.134,288,1.076,289,1.095,290,1.076,291,1.134,292,1.076,293,1.134,294,1.095,295,1.022,296,1.076,297,1.134,298,1.076,299,1.134,300,1.076,301,1.134,302,1.076,303,1.022,304,1.04,305,1.134,306,1.058,307,1.134,308,1.058,309,1.134,310,1.058,311,1.134,312,1.058,313,1.134,314,1.058,315,1.115,316,1.134,317,1.058,318,1.115,319,1.134,320,0.004,321,0.004,331,2,358,0.847,412,1.773,495,3.852,532,2.762,585,3.243,586,4.651,602,1.527,918,4.577,919,3.167,920,4.9,921,4.577,938,2.207,939,2.968,1192,2.788,1225,2.655,1608,4.228,1609,5.988,1610,3.05,1611,5.988,1612,4.228,1613,4.228,1614,4.228,1615,4.228,1616,5.332,1617,4.228,1618,4.228,1619,4.228,1620,4.228,1621,4.228,1622,4.228,1623,4.228,1624,4.228,1625,5.988,1626,4.228]],["title/classes/Field.html",[46,1.281,149,0.181]],["body/classes/Field.html",[0,0.28,2,0.188,3,0.195,8,1.921,9,0.123,16,1.308,25,0.007,30,1.144,37,0.558,38,1.068,39,1.199,40,1.674,43,1.56,46,2.417,47,2.783,48,1.858,49,1.143,60,1.003,61,3.067,65,0.129,69,0.844,70,1.958,71,1.163,76,0.671,80,1.264,81,1.11,91,0.534,92,0.91,93,0.958,117,2.886,118,1.046,123,3.497,147,1.065,148,0.117,149,0.319,196,1.509,232,1.011,295,1.286,320,0.004,321,0.004,341,2.336,342,3.806,346,2.063,354,2.621,355,3.712,358,0.719,363,2.216,402,4.565,426,1.271,435,2.275,445,2.434,453,1.409,493,4.576,503,2.289,514,1.744,519,1.656,527,3.483,532,3.232,558,4.156,574,3.483,647,3.483,686,2.434,823,4.352,851,2.731,897,2.901,903,2.655,942,2.89,960,3.497,961,3.099,967,2.453,991,3.197,1053,1.844,1059,3.099,1062,3.214,1064,4.359,1134,3.214,1192,3.142,1217,3.837,1218,3.692,1241,2.744,1244,2.744,1251,4.541,1258,1.44,1264,3.099,1581,3.34,1627,3.59,1628,5.558,1629,5.054,1630,5.355,1631,4.233,1632,5.988,1633,6.238,1634,6.411,1635,4.272,1636,7.006,1637,7.006,1638,5.319,1639,3.59,1640,3.59,1641,3.59,1642,3.59,1643,3.837,1644,3.837,1645,3.59,1646,3.59,1647,4.352,1648,4.352,1649,3.59,1650,4.736,1651,5.319,1652,4.066,1653,3.59,1654,3.59,1655,3.59,1656,3.59,1657,5.319,1658,4.066,1659,3.483,1660,3.59,1661,3.59,1662,3.59,1663,7.834,1664,3.59,1665,3.483,1666,3.59,1667,3.59,1668,3.59,1669,3.59,1670,3.59,1671,3.59,1672,4.736,1673,3.646,1674,3.59,1675,5.319,1676,2.255,1677,3.197,1678,3.197,1679,3.59,1680,3.483,1681,2.092,1682,3.197,1683,3.59,1684,3.197,1685,3.59,1686,2.351,1687,3.59,1688,3.59,1689,3.59,1690,5.319,1691,5.319,1692,2.255,1693,3.59,1694,5.319,1695,3.59,1696,3.59,1697,2.461,1698,3.59,1699,3.59,1700,2.744,1701,3.197,1702,3.59,1703,3.59,1704,2.938,1705,3.197,1706,2.351,1707,3.197,1708,3.197,1709,4.352,1710,3.59,1711,3.59,1712,3.197,1713,3.59,1714,3.197,1715,3.59,1716,2.938,1717,3.59]],["title/interfaces/FieldConfig.html",[338,1.424,1718,3.296]],["body/interfaces/FieldConfig.html",[2,0.38,3,0.393,9,0.248,11,0.842,25,0.007,37,0.76,46,2.412,65,0.26,70,1.701,71,0.876,117,2.731,148,0.237,196,1.507,320,0.006,321,0.006,338,2.403,354,2.164,897,5.068,903,4.24,1018,4.745,1075,4.126,1628,6.493,1708,6.452,1718,5.562,1719,8.493,1720,7.246]],["title/interfaces/FileOptions.html",[338,1.424,1030,3.45]],["body/interfaces/FileOptions.html",[0,0.123,2,0.172,3,0.178,9,0.27,11,0.381,25,0.007,30,1.42,37,0.344,38,0.577,44,1.753,46,0.834,48,2.48,49,0.478,60,0.921,65,0.308,69,0.766,70,1.721,71,0.396,75,1.659,76,1.664,77,1.138,80,1.426,81,1.256,84,2.058,89,1.675,92,0.543,93,0.924,108,1.259,117,1.929,118,0.412,121,3.154,123,3.342,131,1.344,137,0.288,147,1.622,148,0.196,149,0.118,164,1.759,188,0.752,193,2.183,196,1.188,209,1.141,231,0.82,232,1.273,274,1.308,277,0.74,303,2.204,320,0.003,321,0.005,338,2.035,339,1.91,341,2.941,342,2.413,343,2.709,346,1.933,350,0.944,354,1.999,363,2.035,405,3.768,408,2.058,412,2.516,414,2.037,417,1.475,432,5.499,437,1.554,447,1.787,448,0.997,449,2.193,453,1.286,468,5.19,469,2.364,477,2.247,482,2.682,489,3.496,495,2.574,499,2.406,503,1.184,519,2.767,524,3.584,537,1.91,547,2.146,555,2.058,556,5.892,577,2.682,587,2.058,595,1.787,601,0.766,602,1.184,603,2.406,627,1.512,682,2.305,705,2.247,706,2.48,741,3.768,749,2.682,756,2.247,851,1.683,869,2.48,903,1.636,908,4.052,910,2.627,925,1.787,942,2.324,948,1.831,1030,4.932,1040,2.682,1043,1.551,1053,1.683,1059,1.91,1062,1.98,1070,1.98,1072,2.146,1073,2.364,1074,2.058,1075,1.592,1076,2.247,1077,3.625,1084,2.798,1106,2.364,1111,2.682,1116,4.575,1136,4.586,1158,3.12,1180,2.505,1477,2.247,1561,1.98,1635,2.709,1721,2.918,1722,7.004,1723,6.742,1724,7.004,1725,6.406,1726,6.406,1727,6.406,1728,4.065,1729,3.253,1730,4.065,1731,3.002,1732,4.424,1733,4.424,1734,2.918,1735,4.586,1736,2.505,1737,2.918,1738,2.918,1739,2.918,1740,2.918,1741,2.505,1742,2.918,1743,2.918,1744,5.342,1745,2.918,1746,5.342,1747,2.918,1748,2.918,1749,2.918,1750,2.918,1751,2.918,1752,2.918,1753,1.733,1754,2.918,1755,5.117,1756,2.364,1757,2.918,1758,4.424,1759,2.918,1760,4.424,1761,4.424,1762,2.918,1763,2.918,1764,2.918,1765,2.918,1766,4.424,1767,3.768,1768,2.918,1769,2.682,1770,2.918,1771,2.505,1772,2.918,1773,6.742,1774,2.918,1775,2.918,1776,2.918,1777,2.918,1778,2.918,1779,5.342,1780,2.682,1781,2.918,1782,2.918,1783,4.424,1784,2.918,1785,4.424,1786,4.424,1787,4.424,1788,4.424,1789,4.424,1790,4.424,1791,4.424,1792,4.424,1793,2.505,1794,2.682,1795,3.798,1796,2.918,1797,2.918,1798,2.918,1799,4.424,1800,2.918,1801,2.918,1802,2.918,1803,2.918,1804,2.918,1805,2.364,1806,2.918,1807,5.342,1808,2.918,1809,2.918,1810,4.424,1811,2.918,1812,2.918,1813,2.918,1814,2.505,1815,2.918,1816,1.91,1817,2.505,1818,2.918,1819,2.918,1820,2.918,1821,2.918,1822,2.918,1823,2.918,1824,2.918,1825,2.918,1826,2.918,1827,2.918,1828,2.918,1829,2.918,1830,2.247,1831,2.918,1832,2.918,1833,2.918,1834,2.682,1835,2.918,1836,2.918,1837,2.918]],["title/modules/FilesModule.html",[322,1.079,1154,3.63]],["body/modules/FilesModule.html",[2,0.255,3,0.264,9,0.167,24,2.196,25,0.007,63,1.624,65,0.35,137,0.428,138,1.951,139,1.535,146,2.818,148,0.263,149,0.175,177,0.894,189,2.42,190,1.238,192,2.391,193,1.69,195,2.433,196,1.171,198,2.463,230,2.391,231,1.217,232,1.255,294,2.463,295,1.176,300,2.42,302,2.391,303,1.176,304,2.31,306,2.35,314,2.35,320,0.004,321,0.004,322,1.415,324,1.994,329,2.767,330,1.757,331,1.624,333,3.717,334,2.291,486,4.331,548,2.834,552,4.331,555,5.438,570,3.509,622,5.046,628,3.123,629,2.189,632,4.524,979,4.322,1154,7.227,1155,5.936,1156,6.15,1177,6.14,1181,4.331,1183,3.98,1838,4.331,1839,4.331,1840,4.864,1841,4.331,1842,4.331,1843,4.864,1844,3.718,1845,3.509,1846,3.185,1847,4.864,1848,4.864,1849,4.331,1850,4.864,1851,4.864,1852,4.331,1853,4.331,1854,4.331,1855,4.864]],["title/interfaces/Focus.html",[338,1.424,1856,3.63]],["body/interfaces/Focus.html",[2,0.387,3,0.4,9,0.253,25,0.007,37,0.774,38,0.997,49,1.253,65,0.265,69,0.649,71,0.892,81,0.964,137,0.649,148,0.242,320,0.006,321,0.006,338,2.43,449,3.063,1856,6.195,1857,7.384,1858,8.325,1859,7.651,1860,7.384]],["title/directives/FocusDirective.html",[179,1.025,312,1.259]],["body/directives/FocusDirective.html",[2,0.359,3,0.371,9,0.235,16,2.019,21,3.774,23,1.518,25,0.007,31,1.886,37,0.718,40,1.765,49,1.198,52,4.104,65,0.246,69,0.722,71,1.063,81,0.893,82,1.626,91,1.017,92,0.748,93,0.673,109,4.104,113,2.019,137,0.602,148,0.224,149,0.246,179,1.792,312,2.054,320,0.006,321,0.006,346,1.518,358,1.37,448,2.081,449,2.882,520,3.156,602,2.472,1401,5.6,1861,6.843,1862,7.633,1863,8.21,1864,6.843,1865,5.6,1866,6.843,1867,6.843,1868,6.843,1869,6.843,1870,6.843]],["title/interfaces/FormConfig.html",[338,1.424,1871,4.118]],["body/interfaces/FormConfig.html",[2,0.368,3,0.38,9,0.241,11,0.815,19,3.201,25,0.007,30,1.504,37,0.736,38,0.968,65,0.252,69,0.733,70,1.78,93,0.905,148,0.229,320,0.006,321,0.006,338,2.357,346,1.972,355,3.575,919,4.406,975,3.825,1018,4.593,1042,6.304,1871,7.525,1872,7.014,1873,6.818,1874,5.898,1875,9.196,1876,8.189,1877,7.029,1878,5.74]],["title/modules/FormModule.html",[322,1.079,1879,3.45]],["body/modules/FormModule.html",[2,0.268,3,0.277,9,0.175,20,2.28,24,2.576,25,0.007,63,1.707,65,0.35,118,0.857,137,0.449,138,2.049,146,2.89,147,1.023,148,0.279,149,0.183,177,0.939,205,2.41,211,2.28,225,2.41,298,2.41,320,0.005,321,0.005,322,1.463,324,2.095,329,2.861,330,1.846,331,1.707,333,3.842,334,1.774,628,3.228,629,2.299,631,5.54,650,4.823,776,5.753,795,4.182,797,4.182,799,4.182,960,2.551,1171,3.209,1173,3.906,1175,3.686,1212,2.878,1379,4.182,1386,4.182,1879,6.856,1880,4.55,1881,4.55,1882,4.55,1883,4.55,1884,4.55,1885,7.235,1886,7.235,1887,6.489,1888,6.198,1889,5.307,1890,5.753,1891,5.753,1892,6.337,1893,5.11,1894,4.182,1895,4.55,1896,5.11,1897,4.55,1898,5.11,1899,5.11,1900,4.182,1901,3.686,1902,5.11,1903,5.11,1904,4.182,1905,5.11,1906,5.11,1907,5.11,1908,5.11,1909,5.11]],["title/injectables/FormService.html",[437,1.304,1892,3.63]],["body/injectables/FormService.html",[2,0.235,3,0.242,9,0.153,11,0.519,15,3.391,25,0.007,30,1.125,37,0.469,38,0.723,43,1.186,44,1.823,45,4.1,46,2.493,47,3.803,49,0.909,60,0.918,61,2.553,65,0.292,69,0.762,70,0.895,71,1.067,75,2.393,76,1.523,77,2.162,80,2.005,81,1.265,82,1.062,91,1.287,92,0.946,93,0.852,117,3.174,118,0.562,124,3.629,127,2.606,132,4.683,137,0.393,138,1.793,147,1.69,148,0.146,149,0.257,225,1.973,320,0.004,321,0.004,338,1.762,346,0.992,350,1.288,354,1.86,355,3.789,358,1.247,363,2.306,437,1.857,495,1.918,503,1.615,505,2.947,532,2.873,571,2.116,572,2.12,585,2.589,627,2.873,880,3.397,938,3.004,939,3.312,942,1.552,1009,4.924,1225,2.808,1610,3.226,1635,5.006,1673,4.27,1731,3.763,1892,4.493,1910,4.471,1911,6.228,1912,3.294,1913,6.228,1914,6.228,1915,6.228,1916,6.228,1917,6.228,1918,6.228,1919,4.471,1920,6.228,1921,4.471,1922,3.629,1923,6.228,1924,4.471,1925,6.228,1926,6.228,1927,4.471,1928,6.228,1929,4.471,1930,6.228,1931,7.167,1932,6.228,1933,4.471,1934,5.097,1935,6.228,1936,4.471,1937,7.751,1938,7.167,1939,4.471,1940,5.546,1941,3.982,1942,4.471,1943,6.228,1944,4.471,1945,4.471,1946,4.471,1947,4.471,1948,4.471,1949,6.228,1950,4.471,1951,6.228,1952,4.471,1953,4.471,1954,4.471,1955,4.471,1956,4.471,1957,4.471,1958,3.982,1959,4.471,1960,4.471,1961,4.471,1962,4.471,1963,4.471,1964,4.471,1965,4.471,1966,4.471,1967,6.228]],["title/injectables/GeocodeService.html",[437,1.304,1968,3.45]],["body/injectables/GeocodeService.html",[2,0.271,3,0.28,9,0.177,11,0.6,12,3.869,25,0.007,37,0.541,40,1.592,44,1.82,49,1.002,65,0.307,69,0.754,71,1.035,76,1.538,80,2.093,81,1.237,91,1.273,92,0.937,93,0.843,113,2.024,121,3.3,137,0.454,146,2.584,147,1.546,148,0.169,149,0.185,181,1.361,188,1.577,244,2.159,320,0.006,321,0.005,358,1.034,437,2,445,2.639,513,5.25,527,4.498,538,4.825,598,3.527,602,1.865,603,2.07,786,4.15,880,2.815,910,4.352,1087,3.242,1218,4.003,1246,3.539,1403,5.621,1548,4.498,1922,4.003,1968,4.709,1969,5.162,1970,5.641,1971,7.719,1972,6.869,1973,6.869,1974,6.869,1975,6.869,1976,5.162,1977,8.228,1978,8.006,1979,5.162,1980,6.869,1981,6.869,1982,5.162,1983,7.011,1984,6.869,1985,5.162,1986,5.621,1987,7.629,1988,5.621,1989,6.869,1990,5.162,1991,6.869,1992,6.869,1993,5.162,1994,4.224,1995,5.162,1996,5.162,1997,5.162,1998,5.162,1999,5.162,2000,5.162,2001,4.709,2002,5.162,2003,5.162,2004,6.869,2005,4.224,2006,6.116,2007,5.162,2008,6.116,2009,5.162,2010,5.162,2011,5.162,2012,5.162,2013,5.162,2014,5.162,2015,4.224,2016,4.597,2017,5.162,2018,6.116,2019,5.162,2020,5.162,2021,5.162,2022,5.162,2023,5.162,2024,5.162,2025,5.162,2026,5.162,2027,5.162,2028,5.162]],["title/pipes/GroupPipe.html",[1214,2.584,1216,3.63]],["body/pipes/GroupPipe.html",[2,0.353,3,0.364,9,0.231,11,0.781,16,1.654,23,1.492,25,0.007,38,1.096,43,1.593,47,3.569,48,2.799,49,0.981,60,1.04,65,0.292,69,0.591,70,1.748,71,0.813,77,2.82,80,1.93,81,1.184,91,0.999,92,0.954,93,0.661,131,3.331,137,0.591,148,0.22,149,0.241,320,0.005,321,0.005,350,1.937,493,4.296,682,3.567,828,5.32,1214,4.483,1216,6.541,1217,5.861,1218,3.918,1224,5.861,2029,6.724,2030,8.124,2031,6.724,2032,6.724,2033,6.724]],["title/injectables/HistoryService.html",[437,1.304,1157,3.847]],["body/injectables/HistoryService.html",[2,0.228,3,0.382,9,0.149,11,0.505,25,0.007,37,0.456,38,0.709,43,1.334,44,1.814,49,1.03,65,0.32,69,0.827,70,1.755,71,1.091,76,0.812,77,2.657,80,2.041,81,1.144,82,1.032,89,1.915,91,1.138,92,0.837,93,0.753,108,2.345,118,1.013,121,3.234,126,2,137,0.382,139,1.371,147,1.413,148,0.142,149,0.156,167,3.228,209,1.161,274,1.944,277,1.593,320,0.004,321,0.004,341,3.362,344,1.822,356,3.557,358,1.222,363,1.727,404,7.028,418,3.555,428,3.07,437,1.828,448,1.856,478,2.728,479,3.868,495,3.874,499,3.772,582,2.888,584,2.532,585,2.205,592,4.062,596,2.532,656,5.522,741,2.728,742,2.978,772,4.666,774,4.432,786,4.625,820,4.46,903,4.6,928,6.034,934,5.567,937,4.542,1005,2.625,1077,5.567,1091,5.625,1105,2.845,1106,3.134,1136,4.666,1157,5.851,1345,3.997,1511,4.403,2034,4.344,2035,4.995,2036,8.767,2037,6.104,2038,6.104,2039,3.868,2040,6.104,2041,6.104,2042,4.344,2043,4.666,2044,6.104,2045,8.362,2046,6.104,2047,8.589,2048,4.344,2049,3.622,2050,6.263,2051,6.104,2052,4.344,2053,4.185,2054,4.995,2055,4.344,2056,4.344,2057,4.344,2058,6.816,2059,4.344,2060,4.344,2061,4.344,2062,3.868,2063,4.344,2064,4.344,2065,8.589,2066,4.344,2067,4.344,2068,4.344,2069,6.104,2070,7.057,2071,4.344,2072,4.344,2073,6.104,2074,4.344,2075,4.344,2076,4.344,2077,6.104,2078,6.104,2079,4.344,2080,4.344]],["title/components/IconComponent.html",[0,0.189,228,1.281]],["body/components/IconComponent.html",[0,0.311,1,0.985,2,0.203,3,0.21,4,0.829,6,1.038,7,1.002,8,1.397,9,0.133,11,0.449,16,1.382,20,0.968,21,2.838,22,3.13,23,0.858,25,0.007,31,2.154,32,1.873,35,1.358,37,0.406,38,0.653,39,1.876,40,1.492,49,0.82,51,3.436,52,3.267,60,0.93,65,0.277,69,0.582,70,1.125,71,0.972,78,3.852,79,1.406,80,0.919,81,0.864,82,1.572,91,0.575,92,1.032,93,0.381,113,1.382,115,0.968,118,0.831,123,4.245,126,2.527,137,0.34,144,4.56,148,0.216,149,0.237,177,0.711,178,1.481,179,1.144,180,1.622,181,1.914,182,1.038,183,1.038,184,0.951,185,1.775,186,0.968,187,1.002,188,0.888,189,0.985,190,0.985,191,2.227,192,0.985,193,1.493,194,1.948,195,1.002,196,1.428,197,2.281,198,1.002,199,1.002,200,1.038,201,0.985,202,1.507,203,1.002,204,1.038,205,0.985,206,1.038,207,0.968,208,0.968,209,1.578,210,1.775,211,0.968,212,0.985,213,0.985,214,0.951,215,1.038,216,1.002,217,2.069,218,1.002,219,0.985,220,1.002,221,1.002,222,1.002,223,0.985,224,1.038,225,0.985,226,1.002,227,1.038,228,1.849,229,1.038,230,0.985,231,0.968,232,1.068,233,1.038,234,0.985,235,1.038,236,0.968,237,0.985,238,1.038,239,0.985,240,1.038,241,0.903,242,1.038,243,0.985,244,1.545,245,1.038,246,0.968,247,1.038,248,0.985,249,1.038,250,0.951,251,1.038,252,0.985,253,0.951,254,0.985,255,0.919,256,1.038,257,0.985,258,1.038,259,1.038,260,0.985,261,1.038,262,0.985,263,1.038,264,0.951,265,1.038,266,0.968,267,0.985,268,1.038,269,0.985,270,1.002,271,1.038,272,0.968,273,0.985,274,1.855,275,0.985,276,1.002,277,0.873,278,1.002,279,1.002,280,0.985,281,1.002,282,1.002,283,1.002,284,1.038,285,0.968,286,0.985,287,1.038,288,0.985,289,1.002,290,0.985,291,1.038,292,0.985,293,1.038,294,1.002,295,0.935,296,0.985,297,1.038,298,0.985,299,1.038,300,0.985,301,1.038,302,0.985,303,0.935,304,0.951,305,1.038,306,0.968,307,1.038,308,0.968,309,1.038,310,0.968,311,1.038,312,0.968,313,1.038,314,0.968,315,1.02,316,1.038,317,0.968,318,1.02,319,1.038,320,0.004,321,0.005,358,0.774,419,2.591,426,1.37,509,2.971,573,2.337,584,3.855,600,2.652,602,1.397,655,3.165,938,2.676,1039,2.337,1192,2.653,1345,2.533,1632,7.489,1658,2.957,2081,3.868,2082,7.093,2083,4.387,2084,5.003,2085,3.528,2086,3.528,2087,5.618,2088,3.868,2089,6.62,2090,5.618,2091,3.868,2092,3.868,2093,3.868,2094,3.868,2095,5.003,2096,2.971,2097,3.868,2098,2.957,2099,5.618,2100,5.618,2101,5.618,2102,3.868,2103,5.891,2104,3.868,2105,2.429,2106,3.444,2107,3.444,2108,5.618,2109,3.868,2110,3.868,2111,3.868,2112,2.254,2113,3.868,2114,5.618,2115,5.618]],["title/modules/IconModule.html",[322,1.079,1889,3.041]],["body/modules/IconModule.html",[2,0.364,3,0.376,9,0.238,24,2.594,25,0.007,63,2.317,65,0.336,137,0.61,146,3.329,148,0.3,149,0.249,177,1.274,228,2.512,320,0.006,321,0.006,322,1.775,324,2.844,329,3.471,330,2.506,331,2.317,334,2.873,628,3.917,629,3.122,1889,5.886,2089,6.854,2106,6.177,2116,6.177,2117,6.177,2118,6.177,2119,6.177,2120,6.937,2121,6.937]],["title/injectables/IconService.html",[437,1.304,2089,3.63]],["body/injectables/IconService.html",[2,0.35,3,0.362,8,2.413,9,0.229,11,0.776,19,2.566,25,0.007,32,1.732,37,0.701,38,0.94,43,1.105,44,1.713,60,1.036,65,0.325,69,0.588,71,0.807,79,2.357,88,6.203,118,1.094,123,4.039,126,2.651,137,0.588,148,0.219,149,0.24,180,2.801,320,0.005,321,0.005,402,4.715,437,2.255,627,4.173,938,3.335,939,3.176,1225,4.195,1632,7.532,1731,4.889,2082,7.404,2084,7.205,2089,5.837,2107,5.948,2122,6.68,2123,8.705,2124,6.68]],["title/directives/ImageDirective.html",[179,1.025,314,1.259]],["body/directives/ImageDirective.html",[2,0.252,3,0.261,4,1.405,9,0.165,11,0.559,16,1.611,19,1.849,22,3.525,23,1.068,25,0.007,30,1.183,31,1.405,37,0.505,38,0.761,40,1.739,43,0.796,44,1.574,49,0.956,51,3.784,60,1.071,65,0.3,69,0.811,70,1.877,71,1.114,76,0.9,81,1.203,82,1.557,91,1.189,92,0.874,93,0.787,109,3.974,113,1.611,118,0.605,123,3.992,137,0.423,148,0.157,149,0.173,179,1.629,193,2.08,231,2.28,304,1.611,314,1.639,315,2.108,320,0.004,321,0.004,342,4.064,346,1.454,358,0.964,363,2.108,412,3.508,413,2.625,414,3.539,417,2.166,419,2.22,426,1.704,428,3.76,432,6.113,433,4.726,451,5.834,453,2.571,455,2.065,468,6.035,469,3.472,471,3.679,473,5.834,474,3.679,475,2.804,603,1.93,677,3.299,1048,5.28,1060,5.834,1116,2.908,1134,3.959,1735,6.751,1736,3.679,1767,3.023,1795,3.679,1816,4.875,1849,4.286,2125,4.813,2126,6.552,2127,5.834,2128,6.113,2129,9.114,2130,6.552,2131,8.366,2132,6.552,2133,4.813,2134,6.544,2135,5.834,2136,4.813,2137,6.552,2138,4.813,2139,4.813,2140,6.552,2141,6.552,2142,4.813,2143,6.552,2144,4.813,2145,6.552,2146,4.813,2147,4.813,2148,4.813,2149,4.813,2150,7.449,2151,4.813,2152,4.813,2153,4.813,2154,6.552,2155,4.813,2156,4.813,2157,5.361,2158,4.813,2159,6.552,2160,4.813,2161,4.813,2162,4.813,2163,6.552,2164,4.813]],["title/components/ImageSelectPopComponent.html",[0,0.189,230,1.281]],["body/components/ImageSelectPopComponent.html",[0,0.27,1,0.659,2,0.136,3,0.14,4,0.555,6,1.109,7,0.671,9,0.089,11,0.301,16,1.017,19,1.589,20,0.648,21,2.215,23,0.575,25,0.007,30,1.394,31,2.118,32,1.838,35,1,37,0.272,38,0.48,39,0.865,40,1.493,43,1.31,44,1.805,46,0.659,49,0.604,50,2.187,52,2.652,60,0.825,65,0.246,66,2.064,67,2.123,69,0.781,70,0.828,71,1.113,76,0.484,77,1.436,79,1.874,80,0.615,81,1.008,82,1.401,89,1.932,91,0.876,92,0.884,93,0.58,107,2.123,109,3.964,110,0.995,113,1.689,115,0.648,117,2.407,118,0.994,128,4.225,136,1.165,137,0.228,139,0.817,147,1.618,148,0.085,149,0.259,167,2.187,175,3.161,177,0.476,178,1.09,179,0.842,181,1.554,182,0.695,183,0.695,184,0.637,185,1.385,186,0.648,187,0.671,188,0.595,189,0.659,190,0.659,191,1.934,192,0.659,193,1.33,194,1.581,195,0.671,196,1.219,197,2.009,198,0.671,199,0.671,200,0.695,201,0.659,202,1.109,203,0.671,204,0.695,205,0.659,206,0.695,207,1.292,208,0.648,209,1.468,210,1.385,211,0.648,212,0.659,213,0.659,214,0.637,215,0.695,216,0.671,217,1.729,218,0.671,219,0.659,220,0.671,221,0.671,222,0.671,223,0.659,224,0.695,225,1.314,226,0.671,227,0.695,228,0.659,229,0.695,230,1.501,231,2.144,232,1.835,233,0.695,234,0.659,235,0.695,236,0.648,237,0.659,238,0.695,239,0.659,240,0.695,241,1.505,242,0.695,243,0.659,244,1.206,245,0.695,246,0.648,247,0.695,248,0.659,249,0.695,250,0.637,251,0.695,252,0.659,253,0.637,254,0.659,255,0.615,256,0.695,257,0.659,258,0.695,259,0.695,260,0.659,261,0.695,262,0.659,263,0.695,264,0.637,265,0.695,266,0.648,267,0.659,268,0.695,269,0.659,270,0.671,271,0.695,272,2.166,273,0.659,274,1.633,275,0.659,276,0.671,277,0.584,278,0.671,279,0.671,280,0.659,281,0.671,282,0.671,283,0.671,284,0.695,285,0.648,286,0.659,287,0.695,288,0.659,289,0.671,290,0.659,291,0.695,292,0.659,293,0.695,294,0.671,295,0.626,296,0.659,297,0.695,298,0.659,299,0.695,300,0.659,301,0.695,302,0.659,303,0.626,304,0.637,305,0.695,306,0.648,307,0.695,308,0.648,309,0.695,310,0.648,311,0.695,312,0.648,313,0.695,314,0.648,315,1.361,316,0.695,317,0.648,318,0.683,319,0.695,320,0.003,321,0.003,344,2.165,346,1.145,347,3.746,350,0.746,355,2.764,358,0.518,359,3.931,363,1.461,402,1.509,412,2.88,414,2.816,417,1.165,419,1.194,435,1.793,445,1.983,448,1.57,449,2.111,455,1.774,497,1.816,499,1.038,509,2.187,555,5.168,556,4.417,570,1.868,572,1.758,582,3.745,817,1.293,820,3.435,840,3.161,938,2.76,939,2.696,948,1.524,949,1.412,954,1.509,967,3.854,1006,3.411,1048,2.329,1064,2.41,1065,4.224,1084,1.458,1171,1.626,1172,1.696,1237,1.258,1251,3.514,1258,2.584,1345,2.708,1391,2.835,1396,3.724,1398,2.835,1410,2.651,1411,1.696,1414,1.509,1544,2.119,1545,3.161,1547,4.884,1549,3.724,1551,2.983,1552,2.983,1553,3.724,1555,2.306,1556,2.119,1559,1.775,1560,1.979,1561,1.565,1562,1.979,1563,1.979,1564,2.119,1565,1.979,1567,3.539,1569,1.868,1570,1.979,1571,1.696,1574,2.306,1577,1.979,1578,2.983,1579,1.868,1580,1.979,1581,1.626,1582,1.868,1583,1.868,1584,1.979,1585,1.868,1586,1.979,1587,2.119,1590,3.682,1593,1.979,1594,1.696,1595,1.979,1596,1.979,1598,2.119,1599,1.979,1755,1.979,1793,1.979,1795,1.979,1816,4.498,1854,7.629,1871,4.824,1876,2.306,2165,8.568,2166,3.161,2167,8.083,2168,6.869,2169,5.895,2170,5.162,2171,2.119,2172,3.682,2173,4.135,2174,3.682,2175,2.306,2176,3.384,2177,2.589,2178,2.589,2179,2.589,2180,4.135,2181,2.306,2182,2.306,2183,2.306,2184,6.443,2185,2.306,2186,2.589,2187,6.443,2188,2.589,2189,2.119,2190,5.895,2191,2.589,2192,2.589,2193,2.589,2194,4.135,2195,4.135,2196,4.135,2197,3.384,2198,4.135,2199,4.135,2200,2.589,2201,4.135,2202,2.589,2203,2.589,2204,2.119,2205,2.119,2206,2.589,2207,2.589,2208,2.306,2209,2.589,2210,6.443,2211,2.589,2212,4.135,2213,2.589,2214,2.589,2215,4.135,2216,2.589,2217,2.589,2218,2.589,2219,2.589,2220,2.589,2221,2.589,2222,2.589,2223,2.306,2224,2.589,2225,2.589,2226,1.979,2227,2.589,2228,1.565,2229,1.565,2230,2.589,2231,4.135,2232,4.135,2233,2.589,2234,2.589,2235,2.589,2236,4.135]],["title/components/InputComponent.html",[0,0.189,115,1.259]],["body/components/InputComponent.html",[0,0.339,1,0.733,2,0.151,3,0.156,4,1.186,6,0.772,7,0.745,9,0.099,11,0.334,14,2.127,16,1.105,17,3.473,19,1.727,20,1.384,22,2.617,23,0.638,24,1.833,25,0.007,26,3.115,27,2.531,28,3.115,29,2.531,30,0.812,31,2.129,32,1.85,35,1.086,37,0.302,38,0.927,40,1.8,41,3.926,43,1.418,44,0.885,45,3.879,46,2.27,47,3.412,48,2.479,49,0.656,51,2.958,53,2.943,54,3.926,57,2.715,60,1.065,65,0.258,69,0.795,70,0.9,71,1.099,76,1.168,77,2.354,79,0.72,80,0.684,81,1.014,82,1.611,86,2.823,88,3.081,89,2.144,90,3.242,91,0.822,92,0.948,93,0.544,94,2.823,104,2.823,106,3.081,107,2.308,108,1.727,110,1.106,113,1.105,115,2.082,117,2.788,118,0.976,119,2.531,126,1.812,127,2.619,128,2.84,132,3.777,137,0.253,138,1.154,144,2.823,147,0.9,148,0.094,149,0.103,162,2.943,173,2.823,177,0.529,178,1.185,179,1.273,181,1.648,182,0.772,183,0.772,184,0.708,185,1.484,186,0.72,187,0.745,188,0.661,189,0.733,190,0.733,191,2.014,192,0.733,193,1.248,194,1.677,195,0.745,196,1.379,197,2.084,198,0.745,199,0.745,200,0.772,201,0.733,202,1.206,203,0.745,204,0.772,205,0.733,206,0.772,207,0.72,208,0.72,209,1.428,210,1.484,211,0.72,212,0.733,213,1.912,214,1.537,215,0.772,216,0.745,217,1.819,218,0.745,219,0.733,220,0.745,221,0.745,222,0.745,223,0.733,224,0.772,225,0.733,226,0.745,227,0.772,228,0.733,229,0.772,230,0.733,231,0.72,232,0.855,233,0.772,234,0.733,235,0.772,236,0.72,237,0.733,238,0.772,239,0.733,240,0.772,241,0.672,242,0.772,243,0.733,244,1.292,245,0.772,246,0.72,247,0.772,248,0.733,249,0.772,250,0.708,251,0.772,252,0.733,253,0.708,254,0.733,255,0.684,256,0.772,257,0.733,258,0.772,259,0.772,260,0.733,261,0.772,262,0.733,263,0.772,264,0.708,265,0.772,266,0.72,267,0.733,268,0.772,269,0.733,270,0.745,271,0.772,272,0.72,273,0.733,274,1.694,275,0.733,276,0.745,277,0.649,278,0.745,279,0.745,280,0.733,281,0.745,282,0.745,283,0.745,284,0.772,285,0.72,286,0.733,287,0.772,288,0.733,289,0.745,290,0.733,291,0.772,292,0.733,293,0.772,294,0.745,295,0.696,296,0.733,297,0.772,298,0.733,299,0.772,300,0.733,301,0.772,302,0.733,303,0.696,304,0.708,305,0.772,306,0.72,307,0.772,308,0.72,309,0.772,310,0.72,311,0.772,312,0.72,313,0.772,314,0.72,315,0.759,316,0.772,317,1.384,318,0.759,319,0.772,320,0.003,321,0.003,341,1.974,350,0.829,354,2.146,391,3.341,401,2.377,402,2.619,428,2.507,435,1.901,448,1.682,449,1.812,514,2.183,532,1.327,588,2.127,686,1.727,804,2.308,869,2.244,875,3.081,880,1.569,942,0.999,948,2.304,968,2.617,1009,2.715,1046,2.715,1051,2.715,1061,1.569,1067,3.642,1072,2.943,1087,1.807,1171,1.807,1172,1.884,1192,1.802,1214,1.478,1245,2.355,1246,1.973,1379,2.355,1435,3.678,1438,5.183,1446,4.227,1449,3.678,1450,5.115,1451,3.678,1453,2.355,1454,3.678,1456,3.678,1458,2.355,1459,2.355,1628,3.791,1714,4.002,1767,1.807,1940,4.924,2049,2.127,2085,2.823,2086,2.823,2103,4.002,2105,1.807,2157,2.355,2174,4.002,2237,2.877,2238,6.251,2239,6.251,2240,6.038,2241,2.877,2242,2.877,2243,6.399,2244,2.877,2245,4.002,2246,2.877,2247,2.877,2248,2.877,2249,2.877,2250,2.877,2251,4.494,2252,2.877,2253,2.877,2254,2.877,2255,2.877,2256,2.877,2257,2.877,2258,2.562,2259,2.877,2260,2.619,2261,3.678,2262,3.242,2263,4.494,2264,4.494,2265,4.494,2266,2.877,2267,2.877,2268,3.678,2269,2.562,2270,2.562,2271,2.355,2272,6.399,2273,2.877,2274,2.877,2275,6.251,2276,6.78,2277,4.494,2278,2.877,2279,2.877,2280,2.877,2281,2.877,2282,5.53,2283,2.877,2284,4.494,2285,2.877,2286,2.877,2287,2.877,2288,2.877,2289,2.877,2290,2.877,2291,2.877,2292,2.877,2293,2.877,2294,2.877,2295,2.877,2296,2.877,2297,2.877,2298,2.877,2299,2.877]],["title/components/InputErrorsComponent.html",[0,0.189,234,1.281]],["body/components/InputErrorsComponent.html",[0,0.318,1,1.058,2,0.218,3,0.225,4,1.477,6,1.115,7,1.076,9,0.142,11,0.483,20,1.04,23,0.922,25,0.007,31,2.159,32,1.876,35,1.43,37,0.436,38,0.687,40,1.706,44,1.561,45,4.285,49,1.095,60,0.757,65,0.285,69,0.606,71,0.907,81,0.899,91,0.618,92,0.947,93,0.409,113,1.455,115,1.04,117,2.65,118,0.743,127,4.013,131,2.425,137,0.365,138,1.666,148,0.136,149,0.149,177,0.763,178,1.559,179,1.205,181,1.978,182,1.115,183,1.115,184,1.022,185,1.848,186,1.04,187,1.076,188,0.954,189,1.058,190,1.058,191,2.275,192,1.058,193,1.554,194,2.013,195,1.076,196,1.463,197,2.325,198,1.076,199,1.076,200,1.115,201,1.058,202,1.587,203,1.076,204,1.115,205,1.058,206,1.115,207,1.04,208,1.04,209,1.613,210,1.848,211,1.04,212,1.058,213,1.058,214,1.022,215,1.115,216,1.076,217,2.127,218,1.076,219,1.058,220,1.076,221,1.076,222,1.076,223,1.058,224,1.115,225,1.058,226,1.076,227,1.115,228,1.058,229,1.115,230,1.058,231,1.04,232,1.125,233,1.115,234,1.91,235,1.115,236,1.04,237,1.058,238,1.115,239,1.058,240,1.115,241,0.97,242,1.115,243,1.058,244,1.608,245,1.115,246,1.04,247,1.115,248,1.058,249,1.115,250,1.022,251,1.115,252,1.058,253,1.022,254,1.058,255,0.987,256,1.115,257,1.058,258,1.115,259,1.115,260,1.058,261,1.115,262,1.058,263,1.115,264,1.022,265,1.115,266,1.04,267,1.058,268,1.115,269,1.058,270,1.076,271,1.115,272,1.04,273,1.058,274,1.89,275,1.058,276,1.076,277,0.938,278,1.076,279,1.076,280,1.058,281,1.076,282,1.076,283,1.076,284,1.115,285,1.04,286,1.058,287,1.115,288,1.058,289,1.076,290,1.058,291,1.115,292,1.058,293,1.115,294,1.076,295,1.004,296,1.058,297,1.115,298,1.058,299,1.115,300,1.058,301,1.115,302,1.058,303,1.004,304,1.022,305,1.115,306,1.04,307,1.115,308,1.04,309,1.115,310,1.04,311,1.115,312,1.04,313,1.115,314,1.04,315,1.095,316,1.115,317,1.04,318,1.095,319,1.115,320,0.004,321,0.004,358,0.832,419,1.916,516,3.128,585,3.186,586,4.802,686,2.272,903,3.958,938,2.923,939,3.234,942,1.442,1010,2.848,1192,2.372,1225,2.609,1345,3.873,1610,2.997,2035,6.14,2300,7.929,2301,7.061,2302,4.155,2303,5.267,2304,5.914,2305,5.914,2306,7.503,2307,5.914,2308,4.155,2309,5.267,2310,4.267,2311,4.155,2312,4.155,2313,5.914,2314,4.155,2315,4.155,2316,4.155,2317,5.914]],["title/modules/IoModule.html",[322,1.079,1887,3.45]],["body/modules/IoModule.html",[2,0.312,3,0.322,9,0.204,24,2.208,25,0.007,40,1.151,63,1.986,65,0.343,115,2.441,137,0.523,138,2.385,146,3.109,148,0.284,149,0.213,177,1.093,212,2.463,213,2.463,214,1.852,234,2.484,266,2.441,317,2.421,320,0.005,321,0.005,322,1.614,324,2.438,329,3.157,330,2.148,331,1.986,333,4.241,334,2.614,628,3.563,629,2.676,631,5.961,1433,5.296,1446,4.546,1448,4.546,1460,5.296,1887,6.809,2271,4.867,2301,5.296,2318,5.296,2319,5.296,2320,5.296,2321,5.947,2322,5.947,2323,5.947,2324,5.947,2325,5.947]],["title/interfaces/ItemConfig.html",[338,1.424,1874,3.161]],["body/interfaces/ItemConfig.html",[2,0.265,3,0.274,9,0.173,11,0.588,25,0.007,37,0.531,38,1.081,39,2.263,43,1.35,46,2.315,48,2.894,49,0.989,60,1.21,61,3.727,65,0.243,69,0.851,70,1.904,77,2.352,79,2.042,90,5.888,93,0.964,121,2.718,123,4.373,131,2.778,148,0.166,149,0.326,196,1.203,232,1.289,320,0.005,321,0.005,338,1.917,343,3.695,344,3.673,354,2.024,355,3.502,356,5.298,514,3.292,532,4.291,559,4.438,571,3.207,600,4.646,686,2.936,829,7.268,873,5.501,909,4.438,942,2.833,961,3.949,975,2.759,1009,4.094,1018,3.313,1046,4.094,1051,4.931,1063,6.034,1192,3.273,1220,5.18,1242,4.888,1548,4.438,1673,4.646,1677,6.034,1680,3.313,1682,6.034,1707,4.505,1718,5.345,1874,5.126,2083,4.094,2189,6.679,2326,5.059,2327,6.034,2328,7.268,2329,8.162,2330,6.776,2331,7.641,2332,7.268,2333,6.776,2334,6.776,2335,6.034,2336,6.776,2337,5.18,2338,6.034,2339,4.888]],["title/components/ListComponent.html",[0,0.189,236,1.259]],["body/components/ListComponent.html",[0,0.258,1,0.663,2,0.137,3,0.141,4,1.111,6,0.699,7,0.675,8,0.941,9,0.089,11,0.303,16,1.022,20,0.652,22,2.453,23,0.578,25,0.007,30,1.305,31,2.119,32,1.836,35,0.63,37,0.787,38,0.602,39,1.388,40,1.66,43,1.28,44,1.356,46,0.663,47,1.144,48,2.723,49,0.607,50,2.741,51,1.966,60,0.882,64,2.132,65,0.247,69,0.776,71,1.118,75,0.87,76,1.403,77,1.799,80,1.406,81,1.12,82,1.717,89,2.122,91,1.024,92,0.964,93,0.711,113,1.022,115,0.652,118,0.812,126,1.938,137,0.229,148,0.085,149,0.093,164,1.52,175,4.94,177,0.479,178,1.096,179,0.846,180,1.742,181,1.559,182,0.699,183,0.699,184,0.641,185,1.391,186,0.652,187,0.675,188,0.598,189,0.663,190,0.663,191,1.939,192,0.663,193,1.17,194,1.587,195,0.675,196,1.704,197,2.013,198,0.675,199,0.675,200,0.699,201,0.663,202,1.115,203,0.675,204,0.699,205,0.663,206,0.699,207,0.652,208,0.652,209,1.374,210,1.391,211,0.652,212,0.663,213,0.663,214,0.641,215,0.699,216,0.675,217,1.734,218,0.675,219,0.663,220,0.675,221,0.675,222,0.675,223,0.663,224,0.699,225,0.663,226,0.675,227,0.699,228,0.663,229,0.699,230,0.663,231,0.652,232,1.782,233,0.699,234,0.663,235,0.699,236,1.723,237,0.663,238,0.699,239,0.663,240,0.699,241,0.609,242,0.699,243,0.663,244,1.211,245,0.699,246,0.652,247,0.699,248,0.663,249,0.699,250,0.641,251,0.699,252,0.663,253,0.641,254,0.663,255,0.619,256,0.699,257,0.663,258,0.699,259,0.699,260,0.663,261,0.699,262,0.663,263,0.699,264,0.641,265,0.699,266,0.652,267,0.663,268,0.699,269,0.663,270,0.675,271,0.699,272,0.652,273,0.663,274,1.637,275,0.663,276,0.675,277,1.17,278,0.675,279,0.675,280,0.663,281,0.675,282,0.675,283,0.675,284,0.699,285,0.652,286,0.663,287,0.699,288,0.663,289,0.675,290,0.663,291,0.699,292,0.663,293,0.699,294,0.675,295,0.63,296,0.663,297,0.699,298,0.663,299,0.699,300,0.663,301,0.699,302,0.663,303,0.63,304,0.641,305,0.699,306,0.652,307,0.699,308,0.652,309,0.699,310,0.652,311,0.699,312,0.652,313,0.699,314,0.652,315,0.687,316,0.699,317,0.652,318,0.687,319,0.699,320,0.003,321,0.003,341,1.144,346,0.922,347,3.756,349,4.359,350,1.197,354,2.368,355,2.224,358,0.832,359,3.756,363,1.828,379,3.905,389,4.522,391,3.132,426,0.923,428,1.045,435,2.095,445,1.992,448,2.198,449,2.598,455,1.783,488,3.7,493,3.128,500,3.962,512,1.338,519,2.391,520,2.981,525,3.7,533,3.401,542,4.51,548,1.518,677,1.786,682,1.992,686,1.001,706,1.301,809,5.256,869,1.301,875,1.786,919,2.198,933,4.059,942,1.443,948,1.532,949,2.266,960,2.953,975,1.421,988,3.962,1013,1.786,1014,1.786,1038,3.177,1064,2.422,1087,1.636,1192,2.079,1237,2.518,1264,2.422,1380,2.32,1411,2.721,1414,1.518,1604,1.992,1659,2.721,1678,2.32,1856,2.998,1865,2.132,1934,3.401,2085,2.61,2086,2.61,2105,1.636,2339,1.88,2340,2.605,2341,4.156,2342,4.156,2343,3.401,2344,3.401,2345,5.915,2346,5.267,2347,5.915,2348,5.915,2349,5.915,2350,5.915,2351,4.156,2352,5.915,2353,5.184,2354,4.713,2355,5.736,2356,2.32,2357,4.156,2358,3.401,2359,2.605,2360,2.605,2361,2.605,2362,2.605,2363,2.605,2364,2.605,2365,2.605,2366,2.605,2367,2.605,2368,4.522,2369,2.605,2370,2.605,2371,3.7,2372,2.605,2373,4.156,2374,4.522,2375,4.156,2376,3.7,2377,3.7,2378,2.605,2379,2.605,2380,2.605,2381,2.605,2382,3.401,2383,4.156,2384,2.605,2385,2.605,2386,5.915,2387,4.156,2388,2.605,2389,2.605,2390,2.605,2391,2.605,2392,2.605,2393,2.605,2394,2.605,2395,1.88,2396,2.605,2397,2.605,2398,2.605,2399,2.605,2400,5.755,2401,2.605,2402,2.132,2403,2.605,2404,2.32,2405,2.605,2406,4.156,2407,2.605,2408,4.156,2409,2.605,2410,2.132,2411,2.605,2412,2.32,2413,2.605,2414,2.605,2415,2.32,2416,2.605,2417,4.156,2418,2.605,2419,3.7,2420,2.605,2421,2.605,2422,2.32,2423,2.605,2424,2.605,2425,2.605,2426,2.605,2427,2.605,2428,6.133,2429,2.605,2430,4.156,2431,2.605,2432,2.605,2433,2.32,2434,2.32,2435,2.605,2436,2.605,2437,2.605,2438,2.605,2439,4.156,2440,2.605,2441,2.605,2442,2.605,2443,4.156,2444,4.156,2445,5.915,2446,2.32]],["title/interfaces/ListConfig.html",[338,1.424,349,2.661]],["body/interfaces/ListConfig.html",[2,0.211,3,0.218,9,0.138,11,0.468,19,2.224,25,0.007,30,1.72,32,1.082,37,0.423,38,0.948,43,0.958,48,2.666,61,2.373,65,0.243,69,0.854,70,1.862,79,2.042,89,2.042,92,0.633,93,0.976,118,1.025,126,1.897,148,0.132,149,0.208,196,1.706,232,1.729,320,0.004,321,0.005,338,1.638,344,3.421,346,2.174,349,3.061,354,2.21,363,1.638,428,2.322,433,5.339,435,1.76,445,3.614,493,4.807,500,6.237,509,4.548,513,4.425,514,2.812,532,2.67,582,3.502,601,2.008,682,2.224,739,3.498,786,4.472,851,2.973,897,3.157,903,4.073,933,3.636,949,3.157,960,3.695,967,2.67,975,2.199,1018,2.64,1027,6.591,1035,6.591,1045,5.074,1052,4.737,1064,5.011,1165,4.176,1192,3.272,1218,3.373,1251,3.157,1253,4.176,1258,2.968,1264,5.011,1602,6.057,1603,6.057,1665,3.791,1692,5.581,1706,3.791,1729,3.791,1816,5.011,1874,4.253,1878,4.737,1958,5.155,2053,3.969,2337,4.425,2354,3.636,2402,4.737,2447,4.032,2448,7.401,2449,6.591,2450,6.591,2451,7.401,2452,7.401,2453,5.658,2454,7.401,2455,6.237,2456,6.677,2457,7.401,2458,7.401,2459,5.155,2460,5.155,2461,4.425,2462,5.155,2463,5.789,2464,3.636,2465,5.155,2466,5.789,2467,3.59]],["title/injectables/ListConfigService.html",[437,1.304,542,3.296]],["body/injectables/ListConfigService.html",[2,0.284,3,0.294,9,0.186,25,0.007,30,0.978,37,0.568,38,0.974,43,1.308,44,1.556,46,1.805,49,1.035,65,0.254,69,0.738,70,1.085,71,1.099,79,1.978,81,1.253,82,1.993,91,1.327,92,0.976,93,0.878,137,0.477,147,1.848,148,0.177,149,0.194,196,1.73,320,0.005,321,0.005,350,1.56,354,2.787,363,1.533,437,2.048,532,3.646,542,4.644,584,3.157,880,2.954,903,4.607,1006,2.563,1099,4.776,1253,3.908,1767,3.402,2053,4.861,2465,4.824,2468,7.552,2469,4.433,2470,8.386,2471,7.091,2472,7.091,2473,5.802,2474,7.091,2475,7.091,2476,5.417,2477,7.091,2478,4.433,2479,7.091,2480,5.417,2481,7.091,2482,5.417,2483,7.091,2484,5.417,2485,7.091,2486,5.417,2487,5.417,2488,5.417,2489,5.417,2490,7.091,2491,4.824,2492,7.091,2493,5.417,2494,5.417,2495,5.417,2496,7.904,2497,5.417,2498,7.091,2499,5.417,2500,5.417,2501,7.091,2502,5.417,2503,5.417,2504,7.091,2505,5.417,2506,5.417,2507,5.417,2508,7.091,2509,5.417,2510,5.417,2511,5.417]],["title/components/ListHeaderComponent.html",[0,0.189,237,1.281]],["body/components/ListHeaderComponent.html",[0,0.302,1,0.901,2,0.186,3,0.192,4,0.758,6,0.949,7,0.916,9,0.121,11,0.411,20,0.885,23,0.785,24,1.543,25,0.007,31,2.147,32,1.864,35,1.272,37,0.371,38,0.808,39,1.757,40,1.507,43,1.151,44,1.816,45,3.051,46,2.318,49,0.768,65,0.29,69,0.729,71,1.057,77,2.414,80,1.653,81,1.106,82,1.653,91,1.158,92,0.995,93,0.816,110,2.021,113,1.294,115,0.885,117,1.691,118,0.661,126,1.724,136,1.592,137,0.311,148,0.116,149,0.127,177,0.65,178,1.387,179,1.072,181,1.834,182,0.949,183,0.949,184,0.87,185,1.685,186,0.885,187,0.916,188,0.812,189,0.901,190,0.901,191,2.165,192,0.901,193,1.418,194,1.866,195,0.916,196,1.692,197,2.224,198,0.916,199,0.916,200,0.949,201,0.901,202,1.411,203,0.916,204,0.949,205,0.901,206,0.949,207,0.885,208,0.885,209,1.534,210,1.685,211,0.885,212,0.901,213,0.901,214,0.87,215,0.949,216,0.916,217,1.995,218,0.916,219,0.901,220,0.916,221,0.916,222,0.916,223,0.901,224,0.949,225,1.893,226,0.916,227,0.949,228,0.901,229,0.949,230,0.901,231,0.885,232,1.639,233,0.949,234,0.901,235,0.949,236,0.885,237,1.771,238,0.949,239,0.901,240,0.949,241,0.826,242,0.949,243,0.901,244,1.467,245,0.949,246,0.885,247,0.949,248,0.901,249,0.949,250,0.87,251,0.949,252,0.901,253,0.87,254,0.901,255,0.84,256,0.949,257,0.901,258,0.949,259,0.949,260,0.901,261,0.949,262,0.901,263,0.949,264,0.87,265,0.949,266,0.885,267,0.901,268,0.949,269,0.901,270,0.916,271,0.949,272,1.316,273,0.901,274,1.808,275,0.901,276,0.916,277,0.798,278,0.916,279,0.916,280,0.901,281,0.916,282,0.916,283,0.916,284,0.949,285,0.885,286,0.901,287,0.949,288,0.901,289,0.916,290,0.901,291,0.949,292,0.901,293,0.949,294,0.916,295,0.855,296,0.901,297,0.949,298,0.901,299,0.949,300,0.901,301,0.949,302,0.901,303,0.855,304,0.87,305,0.949,306,0.885,307,0.949,308,0.885,309,0.949,310,0.885,311,0.949,312,0.885,313,0.949,314,0.885,315,0.933,316,0.949,317,0.885,318,0.933,319,0.949,320,0.004,321,0.004,330,1.9,349,3.931,350,1.809,355,2.257,358,0.708,363,1.001,401,2.782,419,1.632,493,4.777,542,5.103,706,1.766,804,1.816,820,3.066,919,2.782,960,3.472,967,3.907,1039,3.178,1045,3.607,1074,3.304,1253,3.795,1264,4.053,1941,3.15,2043,4.021,2085,3.304,2086,3.304,2105,2.221,2356,3.15,2446,3.15,2461,4.021,2468,7.248,2512,7.887,2513,3.537,2514,5.261,2515,5.261,2516,5.261,2517,5.261,2518,5.261,2519,5.261,2520,5.261,2521,3.537,2522,3.537,2523,5.261,2524,3.537,2525,5.261,2526,3.537,2527,4.305,2528,7.792,2529,3.537,2530,5.261,2531,3.537,2532,5.261,2533,3.537,2534,5.261,2535,3.795,2536,3.537,2537,5.691,2538,5.261,2539,3.537,2540,3.15,2541,3.15,2542,3.537,2543,3.537,2544,5.261,2545,3.537,2546,3.537,2547,3.537,2548,3.537]],["title/components/ListItemsComponent.html",[0,0.189,239,1.281]],["body/components/ListItemsComponent.html",[0,0.277,1,0.889,2,0.183,3,0.189,4,0.749,6,0.937,7,0.905,9,0.12,11,0.406,16,1.282,20,0.874,22,2.95,23,0.775,24,1.528,25,0.007,30,1.248,31,2.146,32,1.863,35,1.26,37,0.366,38,0.605,40,1.633,44,1.026,45,2.532,48,2.837,49,0.761,51,3.271,60,0.885,65,0.224,69,0.743,71,1.067,76,0.653,77,2.4,80,1.238,81,1.012,82,1.238,91,0.927,92,0.94,93,0.79,113,1.282,115,0.874,118,0.655,126,1.708,137,0.307,148,0.114,149,0.125,167,3.297,177,0.642,178,1.374,179,1.062,181,1.822,182,0.937,183,0.937,184,0.859,185,1.673,186,0.874,187,0.905,188,0.802,189,0.889,190,0.889,191,2.156,192,0.889,193,1.407,194,1.855,195,0.905,196,1.694,197,2.216,198,0.905,199,0.905,200,0.937,201,0.889,202,1.398,203,0.905,204,0.937,205,0.889,206,0.937,207,0.874,208,0.874,209,1.528,210,1.673,211,0.874,212,0.889,213,0.889,214,0.859,215,0.937,216,0.905,217,1.984,218,0.905,219,0.889,220,0.905,221,0.905,222,0.905,223,0.889,224,0.937,225,0.889,226,0.905,227,0.937,228,0.889,229,0.937,230,0.889,231,0.874,232,1.714,233,0.937,234,0.889,235,0.937,236,0.874,237,0.889,238,0.937,239,1.975,240,0.937,241,0.816,242,0.937,243,0.889,244,1.456,245,0.937,246,0.874,247,0.937,248,0.889,249,0.937,250,0.859,251,0.937,252,0.889,253,0.859,254,0.889,255,0.83,256,0.937,257,0.889,258,0.937,259,0.937,260,0.889,261,0.937,262,0.889,263,0.937,264,0.859,265,0.937,266,0.874,267,0.889,268,0.937,269,0.889,270,0.905,271,0.937,272,0.874,273,0.889,274,1.801,275,0.889,276,0.905,277,0.788,278,0.905,279,0.905,280,0.889,281,0.905,282,0.905,283,0.905,284,0.937,285,0.874,286,0.889,287,0.937,288,0.889,289,0.905,290,0.889,291,0.937,292,0.889,293,0.937,294,0.905,295,0.844,296,0.889,297,0.937,298,0.889,299,0.937,300,0.889,301,0.937,302,0.889,303,0.844,304,0.859,305,0.937,306,0.874,307,0.937,308,0.874,309,0.937,310,0.874,311,0.937,312,0.874,313,0.937,314,0.874,315,0.921,316,0.937,317,0.874,318,0.921,319,0.937,320,0.004,321,0.004,346,1.383,347,4.229,350,1.006,358,0.699,359,4.033,379,3.767,389,5.284,419,1.611,435,2.102,448,2.359,449,2.265,500,4.765,509,2.756,519,2.404,520,2.404,595,2.842,682,2.656,820,3.037,873,3.273,875,3.573,933,4.644,949,3.769,960,2.602,988,3.984,1013,3.573,1014,2.395,1053,2.676,1084,2.935,1192,2.772,1206,3.76,1264,3.037,1410,3.55,1423,2.858,1604,2.67,1644,3.76,2085,3.273,2086,3.273,2105,2.194,2346,5.551,2354,3.273,2358,4.265,2368,3.984,2371,4.641,2428,3.11,2433,4.641,2434,3.11,2461,3.984,2468,7.307,2549,7.951,2550,3.493,2551,5.212,2552,5.212,2553,5.212,2554,5.212,2555,6.912,2556,3.493,2557,5.212,2558,3.493,2559,5.212,2560,4.641,2561,5.212,2562,3.493,2563,3.493,2564,3.493,2565,3.493,2566,3.493,2567,5.212,2568,3.493,2569,5.212,2570,3.493,2571,3.493,2572,3.493,2573,3.11,2574,3.493,2575,3.493,2576,3.493,2577,3.493]],["title/modules/ListModule.html",[322,1.079,2578,3.45]],["body/modules/ListModule.html",[2,0.288,3,0.298,9,0.188,24,2.334,25,0.007,63,1.835,65,0.349,137,0.483,138,2.203,146,2.995,147,1.1,148,0.286,149,0.197,177,1.009,196,1.412,236,2.394,237,2.436,239,2.436,267,2.436,283,2.479,320,0.005,321,0.005,322,1.534,324,2.252,329,3.001,330,1.985,331,1.835,334,1.907,542,5.87,548,3.202,628,3.386,629,2.472,632,4.906,706,2.743,1216,6.902,1879,6.559,1889,5.416,1891,5.87,1901,3.963,1904,4.496,2512,4.892,2549,4.892,2578,6.853,2579,4.892,2580,4.892,2581,4.892,2582,4.892,2583,4.892,2584,6.145,2585,5.494,2586,4.892,2587,4.892,2588,5.494,2589,5.494,2590,5.494,2591,5.494,2592,5.494,2593,5.494,2594,5.494]],["title/components/LoaderComponent.html",[0,0.189,241,1.175]],["body/components/LoaderComponent.html",[0,0.298,1,0.864,2,0.178,3,0.184,4,1.313,6,0.91,7,0.879,8,1.225,9,0.116,11,0.394,20,0.849,23,0.753,25,0.007,30,0.613,31,2.143,32,1.862,35,1.232,37,0.356,38,0.592,40,0.656,43,0.844,49,1.12,60,1.073,64,4.172,65,0.22,66,2.545,67,2.618,69,0.539,71,0.962,76,0.953,79,1.705,80,1.735,81,0.889,82,1.211,91,0.758,92,0.916,93,0.502,107,3.498,109,3.065,113,1.675,115,0.849,118,0.917,121,3.699,123,3.058,126,1.67,131,2.793,135,2.049,137,0.298,139,1.07,147,0.679,148,0.167,149,0.22,177,0.623,178,1.344,179,1.248,180,1.422,181,1.796,182,0.91,183,0.91,184,0.834,185,1.643,186,0.849,187,0.879,188,0.779,189,0.864,190,0.864,191,2.135,192,0.864,193,1.383,194,1.828,195,0.879,196,1.361,197,2.197,198,0.879,199,0.879,200,0.91,201,0.864,202,1.368,203,0.879,204,0.91,205,0.864,206,0.91,207,0.849,208,0.849,209,1.513,210,1.643,211,0.849,212,0.864,213,0.864,214,0.834,215,0.91,216,0.879,217,1.959,218,0.879,219,0.864,220,0.879,221,0.879,222,0.879,223,0.864,224,0.91,225,0.864,226,0.879,227,0.91,228,0.864,229,0.91,230,0.864,231,0.849,232,0.97,233,0.91,234,0.864,235,0.91,236,0.849,237,0.864,238,0.91,239,0.864,240,0.91,241,1.859,242,0.91,243,0.864,244,1.431,245,0.91,246,0.849,247,0.91,248,0.864,249,0.91,250,0.834,251,0.91,252,0.864,253,0.834,254,0.864,255,0.806,256,0.91,257,0.864,258,0.91,259,0.91,260,0.864,261,0.91,262,0.864,263,0.91,264,0.834,265,0.91,266,0.849,267,0.864,268,0.91,269,0.864,270,0.879,271,0.91,272,0.849,273,0.864,274,1.786,275,0.864,276,0.879,277,0.766,278,0.879,279,0.879,280,0.864,281,0.879,282,0.879,283,0.879,284,0.91,285,0.849,286,0.864,287,0.91,288,0.864,289,0.879,290,0.864,291,0.91,292,0.864,293,0.91,294,0.879,295,0.82,296,0.864,297,0.91,298,0.864,299,0.91,300,0.864,301,0.91,302,0.864,303,0.82,304,0.834,305,0.91,306,0.849,307,0.91,308,0.849,309,0.91,310,0.849,311,0.91,312,0.849,313,0.91,314,0.849,315,0.894,316,0.91,317,0.849,318,0.894,319,0.91,320,0.003,321,0.003,331,1.133,339,1.977,346,0.753,350,0.977,358,0.679,363,1.733,426,1.201,428,3.359,437,1.321,453,1.331,478,2.13,497,4.181,503,1.225,511,6.277,572,1.155,582,2.899,584,1.977,585,1.842,601,0.792,602,1.842,603,3.625,627,1.565,677,2.325,722,4.54,804,3.146,809,4.818,817,2.545,835,2.78,934,4.116,954,1.977,960,4.259,1006,3.63,1047,2.593,1053,1.742,1062,3.08,1075,2.477,1076,3.495,1239,3.678,1258,3.422,1395,2.776,1410,4.204,1631,2.049,1665,3.339,1676,2.13,1686,2.221,1704,2.776,1728,2.776,1731,3.08,1805,3.678,1922,1.977,2001,3.495,2015,5.013,2018,4.54,2049,1.605,2085,3.202,2086,3.202,2105,2.13,2166,2.593,2197,2.776,2374,4.683,2464,3.847,2595,3.392,2596,5.098,2597,5.098,2598,3.897,2599,5.098,2600,5.098,2601,5.94,2602,8.532,2603,3.392,2604,5.098,2605,3.392,2606,3.392,2607,4.54,2608,3.392,2609,5.098,2610,3.392,2611,3.392,2612,5.098,2613,2.593,2614,5.207,2615,3.392,2616,2.13,2617,3.392,2618,3.392,2619,5.098,2620,3.392,2621,6.126,2622,3.392,2623,5.098,2624,6.126,2625,6.126,2626,3.392,2627,3.392,2628,3.392,2629,3.392,2630,3.392,2631,2.776,2632,3.392,2633,3.392,2634,3.392,2635,5.098,2636,3.392,2637,3.392,2638,3.392,2639,3.392,2640,3.021,2641,5.098,2642,3.392,2643,3.392]],["title/modules/LoaderModule.html",[322,1.079,1890,3.296]],["body/modules/LoaderModule.html",[2,0.361,3,0.373,9,0.236,24,2.585,25,0.007,63,2.298,65,0.335,137,0.605,146,3.317,148,0.299,149,0.247,177,1.264,241,2.302,320,0.006,321,0.006,322,1.766,324,2.821,329,3.454,330,2.485,331,2.298,334,2.859,628,3.898,629,3.096,934,5.73,1890,6.371,2644,6.127,2645,6.127,2646,6.127,2647,6.127,2648,6.88,2649,5.63,2650,6.88]],["title/injectables/LoaderService.html",[437,1.304,934,3.041]],["body/injectables/LoaderService.html",[2,0.324,3,0.335,9,0.212,11,0.718,25,0.007,37,0.648,38,0.896,43,1.023,49,1.126,60,1.184,65,0.277,69,0.74,71,1.016,79,2.204,80,2.228,81,1.15,82,1.469,88,5.289,91,1.147,92,0.843,93,0.759,118,0.777,121,3.86,137,0.544,148,0.202,149,0.222,241,2.248,320,0.005,321,0.005,403,6.869,437,2.179,475,4.901,497,4.395,511,7.564,627,3.558,934,4.661,1053,3.961,1504,5.058,1665,5.052,2049,3.65,2260,4.495,2374,6.428,2607,6.869,2614,7.065,2649,5.058,2651,6.181,2652,7.714,2653,6.181,2654,6.181,2655,6.181,2656,6.181]],["title/components/LocationMapComponent.html",[0,0.189,243,1.281]],["body/components/LocationMapComponent.html",[0,0.314,1,1.011,2,0.208,3,0.215,4,0.852,5,1.879,6,1.066,7,1.029,9,0.136,11,0.461,20,0.994,23,0.881,25,0.007,30,1.034,31,2.155,32,1.873,33,3.75,35,1.384,37,0.416,40,1.688,43,1.5,49,0.836,65,0.143,69,0.714,71,0.981,76,0.742,79,1.839,81,0.877,82,1.361,89,2.244,91,0.851,92,0.954,93,0.563,113,1.408,115,0.994,117,1.841,118,0.844,137,0.349,147,0.795,148,0.13,149,0.143,162,2.601,175,4.377,177,0.73,178,1.51,179,1.166,181,1.938,182,1.066,183,1.066,184,0.977,185,1.802,186,0.994,187,1.029,188,0.912,189,1.011,190,1.011,191,2.245,192,1.011,193,1.516,194,1.972,195,1.029,196,1.441,197,2.298,198,1.029,199,1.029,200,1.066,201,1.011,202,1.536,203,1.029,204,1.066,205,1.011,206,1.066,207,0.994,208,0.994,209,1.591,210,1.802,211,0.994,212,1.011,213,1.011,214,0.977,215,1.066,216,1.029,217,2.091,218,1.029,219,1.011,220,1.029,221,1.029,222,1.029,223,1.011,224,1.066,225,1.011,226,1.029,227,1.066,228,1.011,229,1.066,230,1.011,231,0.994,232,1.089,233,1.066,234,1.011,235,1.066,236,0.994,237,1.011,238,1.066,239,1.011,240,1.066,241,0.928,242,1.066,243,1.871,244,2.069,245,1.066,246,0.994,247,1.066,248,1.011,249,1.066,250,0.977,251,1.066,252,1.011,253,0.977,254,1.011,255,0.944,256,1.066,257,1.011,258,1.066,259,1.066,260,1.011,261,1.066,262,1.011,263,1.066,264,0.977,265,1.066,266,0.994,267,1.011,268,1.066,269,1.011,270,1.029,271,1.066,272,0.994,273,1.011,274,1.868,275,1.011,276,1.029,277,0.896,278,1.029,279,1.029,280,1.011,281,1.029,282,1.029,283,1.029,284,1.066,285,0.994,286,1.011,287,1.066,288,1.011,289,1.029,290,1.011,291,1.066,292,1.011,293,1.066,294,1.029,295,0.96,296,1.011,297,1.066,298,1.011,299,1.066,300,1.011,301,1.066,302,1.011,303,0.96,304,0.977,305,1.066,306,0.994,307,1.066,308,0.994,309,1.066,310,0.994,311,1.066,312,0.994,313,1.066,314,0.994,315,1.047,316,1.066,317,0.994,318,1.047,319,1.066,320,0.004,321,0.004,346,1.27,435,2.235,445,2.2,448,1.208,449,2.408,559,4.398,786,3.46,910,4.614,948,2.111,1258,2.297,1410,2.039,1834,3.25,1970,3.926,2005,5.495,2006,6.939,2008,6.939,2657,6.847,2658,3.972,2659,6.715,2660,5.726,2661,5.726,2662,5.099,2663,8.367,2664,5.099,2665,5.726,2666,5.726,2667,3.972,2668,8.118,2669,3.972,2670,3.972,2671,3.972,2672,5.726,2673,3.972,2674,5.726,2675,5.099,2676,3.972,2677,5.726,2678,3.972,2679,3.972,2680,3.972,2681,3.972,2682,3.972,2683,3.972,2684,5.726,2685,3.972]],["title/modules/LocationModule.html",[322,1.079,2686,3.63]],["body/modules/LocationModule.html",[0,0.306,2,0.303,3,0.313,9,0.198,11,0.671,24,2.605,25,0.007,49,0.843,63,1.929,65,0.344,71,0.698,81,0.965,91,0.859,92,0.632,93,0.568,137,0.508,138,2.317,139,1.823,146,3.067,147,1.48,148,0.291,149,0.207,177,1.061,243,2.44,244,1.904,246,2.398,248,2.44,320,0.005,321,0.005,322,1.904,324,2.369,329,3.099,330,2.087,331,1.929,333,4.163,334,2.566,401,3.909,499,2.964,622,5.294,627,3.41,628,3.498,629,2.6,630,6.231,631,5.332,650,3.628,783,5.332,784,6.582,1968,6.228,1994,4.728,2001,3.961,2686,7.095,2687,5.144,2688,5.144,2689,5.777,2690,5.144,2691,5.144,2692,5.777,2693,7.392,2694,8.881,2695,5.777,2696,5.777,2697,5.777,2698,4.728,2699,5.144,2700,5.777,2701,5.144,2702,5.777,2703,5.777,2704,8.151,2705,5.777,2706,5.777,2707,5.144,2708,5.777,2709,5.777]],["title/components/LocationPickerComponent.html",[0,0.189,246,1.259]],["body/components/LocationPickerComponent.html",[0,0.31,1,0.828,2,0.171,3,0.176,4,0.697,5,1.539,6,0.873,7,0.843,9,0.112,11,0.378,14,2.337,16,1.64,17,4.503,19,1.898,20,2.023,23,0.722,24,1.955,25,0.007,26,3.363,27,2.782,28,3.363,29,2.782,30,1.363,31,2.14,32,1.857,33,3.234,35,1.194,37,0.341,38,0.574,40,1.783,41,4.188,43,1.456,44,1.689,45,3.667,46,1.922,47,2.929,48,2.214,49,0.721,53,3.234,54,4.188,57,2.984,60,0.633,65,0.271,69,0.765,70,0.989,71,1.107,79,1.236,81,0.985,82,1.704,86,3.102,89,1.668,91,0.991,92,0.938,93,0.656,94,3.102,104,3.102,106,3.386,107,2.536,108,1.898,110,1.898,113,1.215,115,1.794,117,2.427,118,0.838,119,2.782,127,4.71,128,3.424,129,2.486,130,2.486,131,1.333,132,2.984,133,2.486,134,2.486,135,1.965,136,1.463,137,0.286,138,1.304,139,1.026,147,0.651,148,0.106,149,0.117,173,2.042,177,0.597,178,1.302,179,1.006,181,1.758,182,0.873,183,0.873,184,0.8,185,1.602,186,0.814,187,0.843,188,0.747,189,0.828,190,0.828,191,2.105,192,0.828,193,1.348,194,1.789,195,0.843,196,1.34,197,2.169,198,0.843,199,0.843,200,0.873,201,0.828,202,1.325,203,0.843,204,0.873,205,0.828,206,0.873,207,0.814,208,0.814,209,1.492,210,1.602,211,0.814,212,0.828,213,0.828,214,0.8,215,0.873,216,0.843,217,1.924,218,0.843,219,0.828,220,0.843,221,0.843,222,0.843,223,0.828,224,0.873,225,0.828,226,0.843,227,0.873,228,0.828,229,0.873,230,0.828,231,0.814,232,0.939,233,0.873,234,0.828,235,0.873,236,0.814,237,0.828,238,0.873,239,0.828,240,0.873,241,0.76,242,0.873,243,1.997,244,2.14,245,0.873,246,1.889,247,0.873,248,1.997,249,0.873,250,0.8,251,0.873,252,0.828,253,0.8,254,0.828,255,0.773,256,0.873,257,0.828,258,0.873,259,0.873,260,0.828,261,0.873,262,0.828,263,0.873,264,0.8,265,0.873,266,0.814,267,0.828,268,0.873,269,0.828,270,0.843,271,0.873,272,0.814,273,0.828,274,1.763,275,0.828,276,0.843,277,0.734,278,0.843,279,0.843,280,0.828,281,0.843,282,0.843,283,0.843,284,0.873,285,0.814,286,0.828,287,0.873,288,0.828,289,0.843,290,0.828,291,0.873,292,0.828,293,0.873,294,0.843,295,0.786,296,0.828,297,0.873,298,0.828,299,0.873,300,0.828,301,0.873,302,0.828,303,0.786,304,0.8,305,0.873,306,0.814,307,0.873,308,0.814,309,0.873,310,0.814,311,0.873,312,0.814,313,0.873,314,0.814,315,0.857,316,0.873,317,0.814,318,0.857,319,0.873,320,0.003,321,0.003,346,1.325,358,0.989,401,2.612,420,2.346,455,1.395,495,2.119,558,3.579,707,3.234,910,4.274,960,2.465,1061,3.636,1206,3.563,1221,4.398,1643,5.446,1968,5.882,1983,4.041,1986,4.041,1987,4.398,1988,4.041,2172,4.398,2657,7.341,2662,4.398,2675,4.398,2698,2.661,2699,2.896,2701,2.896,2710,3.252,2711,4.398,2712,5.971,2713,4.939,2714,6.668,2715,5.971,2716,2.896,2717,4.939,2718,3.252,2719,3.252,2720,3.252,2721,3.252,2722,3.252,2723,6.668,2724,3.252,2725,3.252,2726,4.939,2727,3.252,2728,3.252,2729,4.939,2730,3.252,2731,3.252,2732,4.939,2733,3.252,2734,3.252,2735,4.939,2736,4.939,2737,3.252,2738,3.252,2739,5.971,2740,3.252,2741,3.252,2742,3.252,2743,3.252,2744,4.939]],["title/components/LocationSearchComponent.html",[0,0.189,248,1.281]],["body/components/LocationSearchComponent.html",[0,0.295,1,1.036,2,0.214,3,0.221,4,0.873,6,1.092,7,1.055,9,0.14,11,0.473,16,1.434,20,1.019,23,0.903,25,0.007,31,2.157,32,1.875,35,1.409,37,0.427,38,0.677,40,1.777,43,1.127,49,0.851,60,0.747,65,0.244,69,0.599,71,0.989,76,0.761,81,0.761,82,1.385,89,2.109,91,0.605,92,0.942,93,0.4,109,3.345,110,1.564,113,1.828,115,1.019,118,0.855,136,1.832,137,0.358,148,0.133,149,0.146,177,0.748,178,1.537,179,1.187,181,1.96,182,1.092,183,1.092,184,1.001,185,1.827,186,1.019,187,1.055,188,0.935,189,1.036,190,1.036,191,2.261,192,1.036,193,1.537,194,1.995,195,1.055,196,1.453,197,2.313,198,1.055,199,1.055,200,1.092,201,1.036,202,1.564,203,1.055,204,1.092,205,1.036,206,1.092,207,1.019,208,1.019,209,1.603,210,1.827,211,1.019,212,1.036,213,1.036,214,1.001,215,1.092,216,1.055,217,2.111,218,1.055,219,1.036,220,1.055,221,1.055,222,1.055,223,1.036,224,1.092,225,1.036,226,1.055,227,1.092,228,1.036,229,1.092,230,1.036,231,1.019,232,1.414,233,1.092,234,1.036,235,1.092,236,1.019,237,1.036,238,1.092,239,1.036,240,1.092,241,0.951,242,1.092,243,1.036,244,2.105,245,1.092,246,1.019,247,1.092,248,1.893,249,1.092,250,1.001,251,1.092,252,1.036,253,1.001,254,1.036,255,0.967,256,1.092,257,1.036,258,1.092,259,1.092,260,1.036,261,1.092,262,1.036,263,1.092,264,1.001,265,1.092,266,1.019,267,1.036,268,1.092,269,1.036,270,1.055,271,1.092,272,1.019,273,1.036,274,1.88,275,1.036,276,1.055,277,0.919,278,1.055,279,1.055,280,1.036,281,1.055,282,1.055,283,1.055,284,1.092,285,1.019,286,1.036,287,1.092,288,1.036,289,1.055,290,1.036,291,1.092,292,1.036,293,1.092,294,1.055,295,0.984,296,1.036,297,1.092,298,1.036,299,1.092,300,1.036,301,1.092,302,1.036,303,0.984,304,1.001,305,1.092,306,1.019,307,1.092,308,1.019,309,1.092,310,1.019,311,1.092,312,1.019,313,1.092,314,1.019,315,1.073,316,1.092,317,1.019,318,1.073,319,1.092,320,0.004,321,0.005,358,1.167,435,2.261,448,1.238,449,2.436,537,3.968,558,3.928,603,2.338,910,3.083,948,2.149,1143,4.77,1548,4.869,1643,5.905,1859,6.083,1968,5.91,1970,3.996,1978,7.506,1983,4.77,2005,5.572,2657,6.898,2698,3.331,2716,3.625,2745,4.071,2746,6.063,2747,5.829,2748,7.434,2749,5.829,2750,4.071,2751,4.071,2752,4.071,2753,5.829,2754,4.071,2755,3.625,2756,4.071,2757,4.071,2758,4.071,2759,4.071]],["title/components/LoginComponent.html",[0,0.189,250,1.238]],["body/components/LoginComponent.html",[0,0.283,1,0.935,2,0.193,3,0.199,4,0.787,6,0.985,7,0.951,8,1.326,9,0.126,11,0.426,16,1.33,20,0.919,23,0.814,25,0.007,30,0.663,31,2.15,32,1.867,35,1.307,37,0.385,38,0.628,40,1.461,43,0.607,44,1.649,49,0.789,60,0.907,65,0.271,69,0.752,71,1.051,76,1.011,77,1.877,81,0.479,82,0.872,91,0.804,92,0.935,93,0.697,98,3.396,110,1.41,113,1.33,115,0.919,118,0.949,131,2.217,136,1.652,137,0.323,139,1.158,147,0.735,148,0.12,149,0.132,177,0.674,178,1.426,179,1.101,180,1.539,181,1.867,182,0.985,183,0.985,184,0.903,185,1.722,186,0.919,187,0.951,188,1.626,189,0.935,190,0.935,191,2.191,192,0.935,193,1.449,194,1.9,195,0.951,196,1.401,197,2.248,198,0.951,199,0.951,200,0.985,201,0.935,202,1.451,203,0.951,204,0.985,205,0.935,206,0.985,207,0.919,208,0.919,209,1.553,210,1.722,211,0.919,212,0.935,213,0.935,214,0.903,215,0.985,216,0.951,217,2.026,218,0.951,219,0.935,220,0.951,221,0.951,222,0.951,223,0.935,224,0.985,225,0.935,226,0.951,227,0.985,228,0.935,229,0.985,230,0.935,231,0.919,232,1.028,233,0.985,234,0.935,235,0.985,236,0.919,237,0.935,238,0.985,239,0.935,240,0.985,241,1.263,242,0.985,243,0.935,244,1.499,245,0.985,246,0.919,247,0.985,248,0.935,249,0.985,250,1.742,251,0.985,252,1.634,253,2.237,254,0.935,255,0.872,256,0.985,257,0.935,258,0.985,259,0.985,260,0.935,261,0.985,262,0.935,263,0.985,264,0.903,265,0.985,266,0.919,267,0.935,268,0.985,269,0.935,270,1.663,271,0.985,272,0.919,273,0.935,274,1.828,275,0.935,276,0.951,277,0.829,278,0.951,279,0.951,280,0.935,281,0.951,282,0.951,283,0.951,284,0.985,285,0.919,286,0.935,287,0.985,288,0.935,289,0.951,290,0.935,291,0.985,292,0.935,293,0.985,294,0.951,295,0.887,296,0.935,297,0.985,298,0.935,299,0.985,300,0.935,301,0.985,302,0.935,303,0.887,304,0.903,305,0.985,306,0.919,307,0.985,308,0.919,309,0.985,310,0.919,311,0.985,312,0.919,313,0.985,314,0.919,315,0.968,316,0.985,317,0.919,318,0.968,319,0.985,320,0.004,321,0.004,344,2.267,358,0.735,419,1.693,422,2.648,435,2.296,439,4.944,448,1.644,449,2.675,470,2.404,497,3.681,520,3.643,585,3.186,588,2.559,589,3.901,591,4.195,592,3.837,597,4.57,600,3.707,601,1.263,624,5.256,626,4.741,637,2.806,690,3.541,691,3.004,701,2.068,923,3.501,924,4.032,937,4.448,938,2.911,939,3.099,942,1.877,971,3.901,1005,3.267,1006,2.559,1007,4.631,1012,2.306,1258,2.169,1658,4.133,1731,3.267,1922,3.151,2760,3.671,2761,4.815,2762,5.605,2763,5.407,2764,4.425,2765,3.269,2766,5.407,2767,4.815,2768,3.671,2769,4.425,2770,4.815,2771,3.671,2772,3.671,2773,3.671,2774,4.133,2775,3.671,2776,3.671,2777,3.671,2778,3.671,2779,3.004,2780,3.004,2781,3.671,2782,3.004,2783,3.671,2784,3.269,2785,3.004,2786,3.671,2787,3.269,2788,3.004,2789,3.004]],["title/components/LoginFormComponent.html",[0,0.189,252,1.281]],["body/components/LoginFormComponent.html",[0,0.303,1,0.761,2,0.157,3,0.162,4,0.641,6,0.802,7,0.775,8,1.08,9,0.103,11,0.347,16,1.139,19,1.149,20,0.748,21,2.431,23,0.663,25,0.007,30,1.375,31,2.132,32,1.85,35,1.119,37,0.314,38,0.538,39,1.546,40,1.651,43,1.302,44,1.59,46,2.101,47,2.034,49,0.931,52,2.871,65,0.273,69,0.71,70,1.135,71,1.105,76,0.866,80,1.1,81,0.953,82,1.1,91,0.842,92,0.902,93,0.557,113,1.139,115,0.748,117,2.97,118,1.056,124,2.698,131,2.616,132,3.855,137,0.263,138,1.199,147,0.599,148,0.098,149,0.203,177,0.549,178,1.221,179,0.943,180,1.254,181,1.682,182,0.802,183,0.802,184,0.735,185,1.52,186,0.748,187,0.775,188,1.465,189,0.761,190,0.761,191,2.043,192,0.761,193,1.279,194,1.712,195,0.775,196,1.296,197,2.111,198,0.775,199,0.775,200,0.802,201,0.761,202,1.242,203,0.775,204,0.802,205,0.761,206,0.802,207,0.748,208,0.748,209,1.448,210,1.52,211,0.748,212,0.761,213,0.761,214,0.735,215,0.802,216,0.775,217,1.852,218,0.775,219,0.761,220,0.775,221,0.775,222,0.775,223,0.761,224,0.802,225,0.761,226,0.775,227,0.802,228,0.761,229,0.802,230,0.761,231,0.748,232,0.881,233,0.802,234,0.761,235,0.802,236,0.748,237,0.761,238,0.802,239,0.761,240,0.802,241,1.49,242,0.802,243,0.761,244,1.324,245,0.802,246,0.748,247,0.802,248,0.761,249,0.802,250,0.735,251,0.802,252,1.625,253,2.25,254,0.761,255,0.71,256,0.802,257,0.761,258,0.802,259,0.802,260,0.761,261,0.802,262,0.761,263,0.802,264,0.735,265,0.802,266,0.748,267,0.761,268,0.802,269,0.761,270,2.138,271,0.802,272,0.748,273,0.761,274,1.716,275,0.761,276,0.775,277,1.045,278,0.775,279,0.775,280,0.761,281,0.775,282,0.775,283,0.775,284,0.802,285,0.748,286,0.761,287,0.802,288,0.761,289,0.775,290,0.761,291,0.802,292,0.761,293,0.802,294,0.775,295,0.723,296,0.761,297,0.802,298,0.761,299,0.802,300,0.761,301,0.802,302,0.761,303,0.723,304,0.735,305,0.802,306,0.748,307,0.802,308,0.748,309,0.802,310,0.748,311,0.802,312,0.748,313,0.802,314,0.748,315,0.788,316,0.802,317,0.748,318,0.788,319,0.802,320,0.003,321,0.003,330,1.673,346,1.257,355,3.376,358,0.599,426,1.059,435,2.099,437,1.2,447,2.525,448,2.51,449,2.495,453,2.865,475,1.742,491,3.711,497,3.032,509,2.449,538,1.684,558,3.186,585,3.035,586,2.698,591,3.726,598,1.535,690,3.711,724,2.447,923,3.09,938,2.691,939,2.865,944,1.742,948,2.691,1010,2.05,1042,4.375,1050,3.54,1059,2.698,1143,2.698,1225,1.878,1258,1.857,1414,2.698,1635,3.48,1877,6.682,2049,2.191,2762,4.335,2774,4.332,2789,2.447,2790,9.195,2791,7.524,2792,2.662,2793,5.682,2794,4.123,2795,4.123,2796,6.501,2797,5.682,2798,5.682,2799,5.046,2800,6.147,2801,6.147,2802,5.046,2803,5.046,2804,5.046,2805,5.046,2806,2.99,2807,7.301,2808,4.63,2809,4.63,2810,1.517,2811,2.99,2812,4.123,2813,2.99,2814,5.222,2815,4.123,2816,2.99,2817,4.123,2818,2.99,2819,4.123,2820,2.662,2821,4.123,2822,2.99,2823,4.123,2824,2.99,2825,3.34,2826,2.99,2827,2.99,2828,4.123,2829,2.99,2830,4.123,2831,2.99,2832,3.54,2833,4.123,2834,2.99,2835,2.99,2836,4.123,2837,2.99,2838,2.99,2839,2.99,2840,4.123,2841,3.54,2842,2.99,2843,2.99,2844,2.99,2845,2.662,2846,2.662,2847,2.662,2848,2.99,2849,2.662,2850,2.662,2851,2.662,2852,4.123,2853,2.662,2854,2.662,2855,4.123,2856,2.99,2857,2.99,2858,2.99,2859,2.99,2860,2.662,2861,2.662,2862,2.662,2863,2.662,2864,2.99,2865,2.662,2866,2.662,2867,3.789]],["title/pipes/MaxItemsPipe.html",[1214,2.584,1885,3.847]],["body/pipes/MaxItemsPipe.html",[2,0.363,3,0.375,9,0.238,11,0.805,16,1.704,23,1.537,25,0.007,43,1.146,48,2.425,49,1.011,65,0.249,69,0.609,71,0.837,81,1.08,91,1.03,92,0.967,93,0.681,118,0.87,137,0.609,148,0.227,149,0.249,320,0.006,321,0.006,445,3.649,682,3.649,869,4.129,1193,5.342,1214,4.806,1218,4.037,1224,5.966,1633,8.458,1885,6.322,2868,8.271,2869,6.927,2870,7.365,2871,8.271,2872,8.271,2873,6.927,2874,6.927]],["title/components/MediumEditorComponent.html",[0,0.189,254,1.281]],["body/components/MediumEditorComponent.html",[0,0.3,1,0.877,2,0.181,3,0.187,4,0.738,5,1.629,6,0.924,7,0.892,8,1.244,9,0.118,11,0.4,12,2.904,14,4.348,16,1.268,17,3.882,20,0.862,21,2.652,23,0.764,24,2.013,25,0.007,26,3.481,27,2.904,28,3.481,29,2.904,30,0.931,31,2.145,32,1.862,33,3.376,35,1.246,37,0.361,38,0.599,39,2.576,40,1.547,41,4.31,42,5.565,43,1.457,44,1.216,49,0.753,50,2.727,52,3.088,53,3.376,54,4.31,57,3.115,65,0.246,69,0.74,70,1.032,71,1.086,76,0.964,77,1.79,81,0.959,82,1.833,86,3.238,89,1.717,91,0.766,92,0.919,93,0.787,94,3.238,104,3.238,106,3.535,107,2.648,108,3.073,109,3.088,110,1.323,111,3.941,113,1.688,115,0.862,117,1.658,118,0.862,119,2.904,121,2.947,126,1.689,136,1.549,137,0.303,138,1.381,148,0.113,149,0.124,154,2.817,156,2.632,157,3.066,162,3.376,165,3.066,173,2.162,177,0.633,178,1.359,179,1.05,180,1.444,181,1.809,182,0.924,183,0.924,184,0.847,185,1.658,186,0.862,187,0.892,188,0.79,189,0.877,190,0.877,191,2.146,192,0.877,193,1.395,194,1.841,195,0.892,196,1.369,197,2.207,198,0.892,199,0.892,200,0.924,201,0.877,202,1.383,203,0.892,204,0.924,205,0.877,206,0.924,207,0.862,208,0.862,209,1.521,210,1.658,211,0.862,212,0.877,213,0.877,214,0.847,215,0.924,216,0.892,217,1.972,218,0.892,219,0.877,220,0.892,221,0.892,222,0.892,223,0.877,224,0.924,225,0.877,226,0.892,227,0.924,228,0.877,229,0.924,230,0.877,231,0.862,232,0.98,233,0.924,234,0.877,235,0.924,236,0.862,237,0.877,238,0.924,239,0.877,240,0.924,241,0.804,242,0.924,243,0.877,244,1.444,245,0.924,246,0.862,247,0.924,248,0.877,249,0.924,250,0.847,251,0.924,252,0.877,253,0.847,254,1.964,255,2.093,256,0.924,257,0.877,258,0.924,259,0.924,260,0.877,261,0.924,262,0.877,263,0.924,264,0.847,265,0.924,266,0.862,267,0.877,268,0.924,269,0.877,270,0.892,271,0.924,272,0.862,273,0.877,274,1.794,275,0.877,276,0.892,277,0.777,278,0.892,279,0.892,280,0.877,281,0.892,282,0.892,283,0.892,284,0.924,285,0.862,286,0.877,287,0.924,288,0.877,289,0.892,290,0.877,291,0.924,292,0.877,293,0.924,294,0.892,295,0.832,296,0.877,297,0.924,298,0.877,299,0.924,300,0.877,301,0.924,302,0.877,303,0.832,304,0.847,305,0.924,306,0.862,307,0.924,308,0.862,309,0.924,310,0.862,311,0.924,312,0.862,313,0.924,314,0.862,315,0.908,316,0.924,317,0.862,318,0.908,319,0.924,320,0.003,321,0.003,341,2.265,435,2.087,448,1.047,449,2.249,558,3.669,603,2.479,851,2.648,984,2.484,1508,2.817,1712,3.066,2343,4.219,2344,4.219,2368,3.941,2410,2.817,2875,8.071,2876,8.071,2877,3.443,2878,5.156,2879,5.156,2880,5.156,2881,5.504,2882,6.181,2883,5.156,2884,6.111,2885,6.181,2886,3.443,2887,7.714,2888,3.443,2889,3.443,2890,3.443,2891,3.443,2892,4.591,2893,3.443,2894,3.443,2895,3.443,2896,3.443,2897,3.443,2898,3.443,2899,3.443,2900,3.443,2901,3.443,2902,3.443,2903,3.443,2904,3.443,2905,3.443,2906,3.443,2907,3.443,2908,3.443,2909,3.443,2910,2.817,2911,3.443,2912,3.443,2913,3.443,2914,3.443]],["title/modules/MediumEditorModule.html",[322,1.079,2915,3.63]],["body/modules/MediumEditorModule.html",[2,0.346,3,0.358,9,0.226,24,2.709,25,0.007,26,4.877,27,4.877,28,4.877,29,5.202,30,1.668,63,2.204,65,0.323,137,0.581,146,3.258,147,1.322,148,0.302,149,0.237,177,1.213,254,2.538,255,1.569,320,0.005,321,0.005,322,1.722,324,2.706,329,3.368,330,2.384,331,2.204,334,2.292,628,3.801,629,2.97,2875,5.878,2876,5.878,2915,6.858,2916,5.878,2917,5.878,2918,5.878,2919,5.878,2920,6.601,2921,6.601,2922,6.601,2923,6.601]],["title/components/MenuComponent.html",[0,0.189,257,1.281]],["body/components/MenuComponent.html",[0,0.256,1,0.742,2,0.153,3,0.158,4,0.625,5,1.38,6,0.782,7,0.755,9,0.1,11,0.339,15,2.979,16,1.117,20,0.73,22,2.639,23,0.647,25,0.007,30,1.137,31,2.13,32,1.847,33,2.974,35,1.098,37,0.306,38,0.527,40,1.615,43,1.248,44,1.098,48,2.62,49,0.663,51,2.979,60,0.925,65,0.2,69,0.664,70,1.511,71,1.107,80,1.496,81,1.239,82,1.496,89,1.136,91,1.191,92,0.969,93,0.789,110,1.12,113,1.117,115,0.73,118,1.007,124,1.699,126,2.557,137,0.256,147,0.584,148,0.095,149,0.105,164,0.855,177,0.536,178,1.197,179,0.925,181,1.66,182,0.782,183,0.782,184,0.717,185,1.496,186,0.73,187,0.755,188,0.669,189,0.742,190,0.742,191,2.024,192,0.742,193,1.259,194,1.689,195,0.755,196,1.282,197,2.093,198,0.755,199,0.755,200,0.782,201,0.742,202,1.218,203,0.755,204,0.782,205,0.742,206,0.782,207,0.73,208,0.73,209,1.435,210,1.496,211,0.73,212,0.742,213,0.742,214,0.717,215,0.782,216,0.755,217,1.831,218,0.755,219,0.742,220,0.755,221,0.755,222,0.755,223,0.742,224,0.782,225,0.742,226,0.755,227,0.782,228,0.742,229,0.782,230,0.742,231,0.73,232,1.197,233,0.782,234,0.742,235,0.782,236,0.73,237,0.742,238,0.782,239,0.742,240,0.782,241,0.681,242,0.782,243,0.742,244,1.303,245,0.782,246,0.73,247,0.782,248,0.742,249,0.782,250,0.717,251,0.782,252,0.742,253,0.717,254,0.742,255,0.693,256,0.782,257,1.84,258,1.496,259,0.782,260,0.742,261,0.782,262,0.742,263,0.782,264,0.717,265,0.782,266,0.73,267,0.742,268,0.782,269,0.742,270,0.755,271,0.782,272,0.73,273,0.742,274,1.702,275,0.742,276,0.755,277,1.025,278,0.755,279,0.755,280,0.742,281,0.755,282,0.755,283,0.755,284,0.782,285,0.73,286,0.742,287,0.782,288,0.742,289,0.755,290,0.742,291,0.782,292,0.742,293,0.782,294,0.755,295,0.705,296,0.742,297,0.782,298,0.742,299,0.782,300,0.742,301,0.782,302,0.742,303,0.705,304,0.717,305,0.782,306,0.73,307,0.782,308,0.73,309,0.782,310,0.73,311,0.782,312,0.73,313,0.782,314,0.73,315,0.769,316,0.782,317,0.73,318,0.769,319,0.782,320,0.003,321,0.003,331,1.516,343,4.791,344,2.861,346,1.237,358,0.584,393,2.974,396,3.716,434,4.738,437,1.176,445,2.419,490,5.118,495,1.948,509,2.401,514,3.058,571,1.38,582,2.979,596,1.699,602,1.053,603,2.237,682,1.745,828,2.974,869,3.607,873,4.901,910,2.401,919,2.401,928,5.367,1061,3.941,1250,7.138,1391,1.999,1631,2.744,1922,2.646,2616,2.852,2924,2.916,2925,8.695,2926,5.577,2927,4.541,2928,8.195,2929,8.195,2930,6.295,2931,4.541,2932,4.541,2933,4.541,2934,4.541,2935,4.541,2936,6.295,2937,4.043,2938,4.541,2939,6.823,2940,6.823,2941,2.596,2942,4.541,2943,4.541,2944,6.295,2945,4.541,2946,4.541,2947,4.541,2948,2.916,2949,7.226,2950,4.541,2951,3.716,2952,2.916,2953,2.916,2954,2.916,2955,2.916,2956,2.916,2957,4.541,2958,4.541,2959,2.916,2960,2.916,2961,4.541,2962,4.541,2963,2.916,2964,4.541,2965,2.916,2966,4.541,2967,2.916,2968,4.541,2969,4.541,2970,2.916,2971,4.541,2972,4.541,2973,2.916,2974,4.043,2975,4.541,2976,2.916,2977,2.916,2978,4.541,2979,2.916,2980,4.541,2981,2.916,2982,2.916,2983,2.916,2984,4.966,2985,2.916,2986,4.541,2987,2.916,2988,2.916,2989,2.916,2990,2.916,2991,2.916,2992,5.577,2993,2.916,2994,5.577,2995,2.916,2996,4.541,2997,2.916,2998,2.916,2999,2.916,3000,2.916,3001,2.916,3002,6.295,3003,5.577,3004,2.916,3005,2.916,3006,2.916,3007,5.577,3008,2.916,3009,4.541,3010,4.541,3011,4.541,3012,2.916,3013,2.916,3014,2.916]],["title/components/ModalComponent.html",[0,0.189,260,1.281]],["body/components/ModalComponent.html",[0,0.252,1,0.722,2,0.149,3,0.154,4,1.831,5,2.102,6,1.192,7,0.735,8,1.024,9,0.097,11,0.329,16,1.093,19,1.707,20,0.709,21,2.35,22,2.592,23,0.629,25,0.007,30,1.348,31,2.127,32,1.847,35,1.074,37,0.297,38,0.72,39,1.829,40,1.652,43,1.235,44,1.786,49,0.648,50,2.35,51,2.934,52,2.79,58,6.438,60,0.569,65,0.197,69,0.828,70,1.548,71,1.137,79,2.107,80,1.302,81,0.975,82,1.697,89,1.112,91,0.922,92,0.906,93,0.8,98,2.79,107,3.184,109,4.03,110,1.089,113,1.757,115,0.709,118,0.938,128,4.325,137,0.249,144,2.79,147,0.568,148,0.093,149,0.268,158,3.956,164,1.303,167,2.35,177,0.521,178,1.171,179,0.905,180,1.189,181,1.635,182,0.761,183,0.761,184,0.697,185,1.47,186,0.709,187,0.735,188,0.651,189,0.722,190,0.722,191,2.003,192,0.722,193,1.236,194,1.664,195,0.735,196,1.268,197,2.074,198,0.735,199,0.735,200,0.761,201,0.722,202,1.192,203,0.735,204,0.761,205,0.722,206,0.761,207,0.709,208,0.709,209,1.42,210,1.47,211,0.709,212,0.722,213,0.722,214,0.697,215,0.761,216,0.735,217,1.807,218,0.735,219,0.722,220,0.735,221,0.735,222,0.735,223,0.722,224,0.761,225,0.722,226,0.735,227,0.761,228,0.722,229,0.761,230,0.722,231,0.709,232,0.845,233,0.761,234,0.722,235,0.761,236,0.709,237,0.722,238,0.761,239,0.722,240,0.761,241,0.662,242,0.761,243,0.722,244,1.28,245,0.761,246,0.709,247,0.761,248,0.722,249,0.761,250,0.697,251,0.761,252,0.722,253,0.697,254,0.722,255,0.674,256,0.761,257,0.722,258,0.761,259,0.761,260,1.579,261,0.761,262,0.722,263,0.761,264,0.697,265,0.761,266,0.709,267,0.722,268,0.761,269,0.722,270,0.735,271,0.761,272,2.206,273,0.722,274,1.686,275,0.722,276,0.735,277,0.64,278,0.735,279,0.735,280,0.722,281,0.735,282,0.735,283,0.735,284,0.761,285,0.709,286,0.722,287,0.761,288,0.722,289,0.735,290,0.722,291,0.761,292,0.722,293,0.761,294,0.735,295,0.685,296,0.722,297,0.761,298,0.722,299,0.761,300,0.722,301,0.761,302,0.722,303,0.685,304,0.697,305,0.761,306,0.709,307,0.761,308,0.709,309,0.761,310,0.709,311,0.761,312,0.709,313,0.761,314,0.709,315,0.748,316,0.761,317,0.709,318,0.748,319,0.761,320,0.003,321,0.003,341,2.724,346,0.986,347,3.895,358,0.89,359,4.072,363,1.905,435,1.351,437,1.151,445,1.707,448,1.351,449,0.929,453,2.803,455,1.906,478,2.79,519,1.308,572,1.865,574,2.91,582,3.847,627,2.049,817,1.415,820,3.613,823,3.636,869,1.415,949,2.987,954,1.652,961,2.589,967,3.939,1006,3.533,1039,2.684,1055,1.944,1056,1.857,1058,3.756,1059,2.589,1064,3.192,1065,3.636,1084,1.597,1237,2.661,1253,3.205,1258,2.7,1264,4.351,1395,3.636,1398,3.046,1410,1.456,1411,1.857,1414,1.652,1547,5.007,1549,3.952,1551,3.205,1552,3.205,1553,3.952,1559,1.944,1560,2.167,1561,1.713,1562,2.167,1563,2.167,1565,2.167,1566,3.636,1567,3.756,1569,2.045,1570,2.167,1571,1.857,1577,2.167,1578,3.205,1579,2.045,1580,2.167,1581,1.781,1582,5.153,1583,2.045,1584,2.167,1585,2.045,1586,2.167,1593,2.167,1594,1.857,1595,2.167,1596,2.167,1599,2.167,1631,2.684,1672,3.956,1680,4.89,1716,3.636,1873,3.636,2083,2.684,2095,3.956,2171,2.32,2176,5.074,2228,2.684,2376,4.878,2541,2.525,2810,1.456,3015,2.835,3016,6.335,3017,3.396,3018,3.396,3019,4.443,3020,4.443,3021,4.443,3022,4.443,3023,7.73,3024,6.733,3025,6.649,3026,4.443,3027,4.443,3028,2.91,3029,2.835,3030,4.443,3031,2.835,3032,8.131,3033,2.835,3034,2.835,3035,2.835,3036,2.835,3037,3.636,3038,4.443,3039,4.443,3040,4.443,3041,2.835,3042,2.835,3043,3.636,3044,2.835,3045,2.835,3046,2.835,3047,2.835,3048,2.835,3049,4.443,3050,2.835,3051,4.443,3052,4.443,3053,4.443,3054,2.835,3055,2.525,3056,2.835,3057,4.878,3058,4.443,3059,2.835,3060,2.835,3061,2.835,3062,2.835,3063,2.835,3064,2.835,3065,2.835,3066,2.835,3067,2.835,3068,2.835,3069,4.443]],["title/interfaces/ModelConfig.html",[338,1.424,935,3.296]],["body/interfaces/ModelConfig.html",[2,0.376,3,0.389,9,0.246,11,0.833,25,0.007,37,0.752,38,0.981,46,2.437,65,0.257,69,0.631,79,2.113,93,0.831,148,0.235,320,0.006,321,0.006,338,2.621,350,2.066,682,3.244,686,3.244,897,4.605,935,5.53,980,4.918,1018,4.698,1043,3.995,1075,4.102,1628,5.789,1718,6.066,3070,5.175,3071,6.909,3072,5.102]],["title/injectables/ModelConfigService.html",[437,1.304,936,2.933]],["body/injectables/ModelConfigService.html",[0,0.179,2,0.163,3,0.169,8,2.354,9,0.107,11,0.675,19,1.196,25,0.007,30,1.533,37,0.326,38,0.949,43,1.228,46,2.301,47,2.098,48,1.704,49,0.951,65,0.293,69,0.775,70,1.822,71,0.988,75,1.94,79,1.995,80,1.942,81,1.234,91,1.148,92,0.893,93,0.76,108,3.517,117,2.26,118,1.095,121,2.614,131,1.958,135,2.885,137,0.274,139,0.982,147,1.699,148,0.102,149,0.252,164,1.911,209,1.105,320,0.003,321,0.004,342,3.415,344,2.948,346,1.289,350,0.896,354,2.864,355,3.641,356,1.813,358,0.623,363,1.989,402,3.798,406,2.245,412,2.436,414,3.042,417,1.4,420,2.245,434,2.999,437,1.821,455,2.049,470,2.038,499,1.248,516,3.446,519,2.203,550,2.245,558,3.253,559,3.127,588,3.084,602,1.124,603,2.819,682,2.701,706,1.553,772,3.65,833,3.274,869,1.553,874,3.127,897,4.347,903,1.553,907,6.523,908,2.689,925,2.604,935,3.127,936,2.783,938,2.142,939,2.558,941,5.041,942,2.262,975,1.697,980,5.72,1009,1.88,1024,3.445,1064,2.783,1070,4.483,1072,3.127,1091,2.038,1095,5.671,1096,3.127,1105,2.038,1134,1.88,1158,4.093,1169,2.771,1187,2.245,1192,2.614,1220,2.379,1237,1.512,1251,3.834,1597,2.245,1634,3.908,1635,3.169,1676,2.999,1716,2.546,1718,5.464,1756,5.071,1769,2.546,2127,4.252,2189,2.546,2204,6.071,2223,4.252,2328,2.771,2395,3.445,2469,2.546,2473,3.908,2478,2.546,2535,3.445,2614,5.374,3043,4.755,3070,6.019,3071,3.908,3072,3.938,3073,3.908,3074,3.65,3075,4.252,3076,6.517,3077,4.775,3078,6.517,3079,4.775,3080,4.775,3081,6.517,3082,3.112,3083,4.775,3084,8.487,3085,3.112,3086,4.775,3087,4.252,3088,4.775,3089,4.252,3090,4.775,3091,4.775,3092,4.775,3093,3.112,3094,3.112,3095,3.805,3096,4.775,3097,3.112,3098,4.252,3099,4.252,3100,4.775,3101,4.775,3102,3.908,3103,4.775,3104,3.112,3105,4.775,3106,4.775,3107,3.112,3108,3.112,3109,7.725,3110,3.112,3111,4.775,3112,3.112,3113,3.112,3114,3.112,3115,3.112,3116,4.775,3117,3.112,3118,3.65,3119,3.112,3120,4.775,3121,3.112,3122,2.771,3123,3.112,3124,2.771,3125,4.775,3126,4.775,3127,4.775,3128,4.775,3129,3.112,3130,3.112,3131,3.112,3132,3.112,3133,3.112,3134,3.112,3135,6.517,3136,3.112,3137,3.112,3138,3.112,3139,3.112,3140,3.112,3141,3.112,3142,3.112,3143,3.112,3144,3.112,3145,3.112,3146,4.775,3147,3.112,3148,3.112,3149,3.112,3150,3.112,3151,3.112,3152,3.112,3153,3.112,3154,4.252,3155,4.252,3156,3.112,3157,3.112,3158,3.112,3159,4.775,3160,4.775,3161,3.112,3162,3.112,3163,3.112,3164,3.112,3165,3.112,3166,2.771,3167,3.112,3168,3.112,3169,3.112,3170,3.112,3171,2.546,3172,3.112,3173,3.112,3174,3.112,3175,3.112,3176,4.775,3177,3.112,3178,3.112,3179,4.775,3180,3.112,3181,3.112,3182,3.112,3183,3.112,3184,3.112,3185,2.771,3186,3.112,3187,3.112]],["title/interfaces/ModelConfiguration.html",[338,1.424,3188,4.481]],["body/interfaces/ModelConfiguration.html",[2,0.376,3,0.389,9,0.246,11,0.833,25,0.007,37,0.752,38,0.981,46,2.437,65,0.257,69,0.631,79,2.113,93,0.831,148,0.235,320,0.006,321,0.006,338,2.621,350,2.066,682,3.244,686,3.244,897,4.605,980,4.918,1043,3.995,1075,4.102,1628,5.789,1718,6.066,3070,5.175,3071,6.909,3072,5.102,3188,7.519,3189,7.174]],["title/classes/Notification.html",[149,0.181,591,2.321]],["body/classes/Notification.html",[2,0.402,3,0.275,9,0.174,11,0.889,25,0.007,30,1.227,32,1.27,37,0.533,38,0.789,43,1.124,60,0.87,65,0.182,69,0.856,70,1.845,71,1.15,79,2.33,80,2.084,91,0.755,92,0.555,93,0.962,126,2.226,131,2.786,148,0.166,149,0.244,264,2.157,320,0.005,321,0.005,344,3.815,346,1.699,358,1.533,402,3.959,445,2.942,455,2.915,509,3.593,519,3.134,582,4.149,583,4.45,585,3.517,586,5.11,588,3.215,591,4.56,682,3.141,701,4.939,804,4.198,937,3.827,960,3.392,968,3.868,1006,3.868,1012,5.134,1192,3.517,1242,4.902,1410,4.503,1477,6.012,1594,4.45,1631,4.105,1706,4.45,1709,4.156,2245,6.05,2527,5.56,2535,4.902,2762,4.267,3057,4.523,3190,5.079,3191,6.795,3192,6.795,3193,6.795,3194,5.354,3195,5.079,3196,5.079,3197,5.079,3198,4.658,3199,5.079,3200,5.079,3201,6.05,3202,4.658,3203,5.079,3204,6.795,3205,5.079,3206,6.795,3207,5.079,3208,6.795,3209,5.079,3210,4.523,3211,4.523]],["title/components/NotificationsComponent.html",[0,0.189,264,1.238]],["body/components/NotificationsComponent.html",[0,0.315,1,0.875,2,0.18,3,0.186,4,1.104,6,1.657,7,0.891,8,1.86,9,0.118,11,0.399,16,1.267,20,0.86,23,0.763,25,0.007,30,0.621,31,2.144,32,1.863,35,1.245,37,0.361,38,0.717,40,1.421,43,0.569,44,1.014,60,0.878,61,1.41,65,0.246,69,0.678,71,0.746,76,1.154,77,1.194,79,1.838,80,1.224,81,0.806,91,0.511,92,0.899,93,0.507,113,1.267,115,0.86,118,0.969,126,1.688,137,0.302,145,2.814,148,0.224,149,0.277,177,0.632,178,1.358,179,1.049,180,1.442,181,1.808,182,0.922,183,0.922,184,0.846,185,1.657,186,0.86,187,0.891,188,0.789,189,0.875,190,0.875,191,2.145,192,0.875,193,1.394,194,1.84,195,0.891,196,1.368,197,2.206,198,0.891,199,0.891,200,0.922,201,0.875,202,1.382,203,0.891,204,0.922,205,0.875,206,0.922,207,0.86,208,0.86,209,1.52,210,1.657,211,0.86,212,0.875,213,0.875,214,0.846,215,0.922,216,0.891,217,1.971,218,0.891,219,0.875,220,0.891,221,0.891,222,0.891,223,0.875,224,0.922,225,0.875,226,0.891,227,0.922,228,0.875,229,0.922,230,0.875,231,0.86,232,0.979,233,0.922,234,0.875,235,0.922,236,0.86,237,0.875,238,0.922,239,0.875,240,0.922,241,0.803,242,0.922,243,0.875,244,1.442,245,0.922,246,0.86,247,0.922,248,0.875,249,0.922,250,0.846,251,0.922,252,0.875,253,0.846,254,0.875,255,0.817,256,0.922,257,0.875,258,0.922,259,0.922,260,0.875,261,0.922,262,0.875,263,0.922,264,1.806,265,0.922,266,0.86,267,0.875,268,0.922,269,0.875,270,0.891,271,0.922,272,0.86,273,0.875,274,1.793,275,0.875,276,0.891,277,0.776,278,0.891,279,0.891,280,0.875,281,0.891,282,0.891,283,0.891,284,0.922,285,0.86,286,0.875,287,0.922,288,0.875,289,0.891,290,0.875,291,0.922,292,0.875,293,0.922,294,0.891,295,0.831,296,0.875,297,0.922,298,0.875,299,0.922,300,0.875,301,0.922,302,0.875,303,0.831,304,0.846,305,0.922,306,0.86,307,0.922,308,0.86,309,0.922,310,0.86,311,0.922,312,0.86,313,0.922,314,0.86,315,0.906,316,0.922,317,0.86,318,0.906,319,0.922,320,0.003,321,0.003,322,0.737,338,0.973,344,3.233,350,0.99,358,1.031,393,2.252,426,1.217,445,1.979,503,1.242,519,1.586,585,2.97,586,3.599,588,2.437,591,4.509,592,3.994,602,2.231,605,5.054,627,1.586,682,1.321,686,1.321,701,3.478,727,2.159,739,2.077,772,2.628,804,4.105,809,4.842,835,1.875,869,1.716,924,3.235,937,4.137,948,1.899,960,3.424,961,2.004,968,2.437,1005,3.112,1006,3.89,1007,4.455,1010,2.357,1012,3.879,1043,1.627,1050,2.628,1053,1.766,1062,2.077,1067,2.004,1075,2.502,1113,2.48,1192,2.477,1237,1.67,1258,2.066,1345,2.252,1410,3.772,1477,2.357,1511,2.48,1571,4.491,1581,3.235,1631,2.077,1686,4.044,1729,4.044,1922,2.004,2001,3.531,2039,3.062,2049,2.437,2096,1.818,2268,2.814,2382,4.215,2422,3.062,2462,3.062,2560,4.586,2601,3.531,2613,3.937,2616,3.235,2762,3.235,2841,2.628,3095,2.252,3122,4.586,3194,2.252,3212,3.438,3213,5.151,3214,5.151,3215,5.151,3216,5.151,3217,3.438,3218,2.628,3219,3.438,3220,2.357,3221,5.151,3222,3.438,3223,6.176,3224,6.176,3225,5.151,3226,3.438,3227,3.438,3228,3.438,3229,3.438,3230,3.062,3231,3.438,3232,3.438,3233,3.438,3234,3.438,3235,3.438,3236,2.357,3237,2.628,3238,3.438,3239,3.438,3240,5.151,3241,3.438,3242,3.438,3243,5.151,3244,3.438,3245,3.438,3246,3.438,3247,3.438,3248,3.062,3249,6.176,3250,3.438,3251,3.438,3252,3.438,3253,3.438,3254,6.176,3255,5.499,3256,3.438,3257,3.438,3258,3.438,3259,3.438,3260,3.438,3261,5.151,3262,3.438,3263,3.062,3264,4.586,3265,3.062,3266,3.438]],["title/modules/NotificationsModule.html",[322,1.079,3267,3.63]],["body/modules/NotificationsModule.html",[2,0.335,3,0.346,9,0.219,24,2.613,25,0.007,63,2.135,65,0.345,137,0.562,146,3.212,148,0.292,149,0.229,177,1.174,223,2.487,264,2.402,320,0.005,321,0.005,322,1.689,324,2.621,329,3.303,330,2.309,331,2.135,334,2.734,363,1.808,592,4.528,628,3.727,629,2.876,650,4.014,1888,6.103,1889,5.631,1894,5.231,1901,4.611,3210,5.692,3248,5.692,3267,7.131,3268,5.692,3269,5.692,3270,6.392,3271,5.692,3272,5.692,3273,6.392,3274,6.392,3275,5.692]],["title/injectables/NotificationsService.html",[437,1.304,592,2.445]],["body/injectables/NotificationsService.html",[0,0.242,2,0.247,3,0.255,9,0.161,11,0.546,24,2.513,25,0.007,30,1.43,32,1.205,37,0.493,38,0.749,43,1.218,44,1.687,49,0.941,60,0.826,65,0.284,69,0.73,71,1.061,75,1.57,76,1.602,77,2.238,79,1.841,81,1.167,82,1.117,91,1.094,92,0.804,93,0.724,98,4.049,118,1.103,121,2.586,137,0.413,143,4.186,146,1.769,147,1.473,148,0.154,149,0.169,320,0.004,321,0.004,322,1.382,346,1.633,358,1.473,393,3.078,408,4.049,437,2.22,445,2.477,447,3.516,455,2.017,509,3.41,512,3.311,520,2.974,538,4.827,583,3.078,586,2.739,591,4.586,592,3.132,597,4.874,598,3.311,603,3.176,627,2.974,649,5.276,650,4.049,676,7.013,707,3.078,756,3.223,804,3.311,874,3.078,948,3.159,1012,2.952,1024,4.651,1053,2.414,1058,3.223,1113,4.651,1251,3.516,1258,3.176,1410,4.066,1680,3.078,1729,3.078,1846,3.078,2368,7.013,2395,4.651,3211,4.186,3255,4.186,3263,4.186,3264,5.741,3265,4.186,3275,7.632,3276,4.701,3277,6.447,3278,4.928,3279,9.404,3280,7.918,3281,6.447,3282,7.918,3283,4.701,3284,6.447,3285,6.447,3286,4.701,3287,7.918,3288,7.051,3289,8.57,3290,6.447,3291,4.701,3292,6.447,3293,4.701,3294,6.447,3295,4.701,3296,6.447,3297,4.701,3298,6.553,3299,4.701,3300,4.701,3301,4.701,3302,4.701,3303,4.701,3304,4.701,3305,4.701,3306,4.701,3307,4.701,3308,4.701,3309,4.701,3310,4.701,3311,4.701,3312,4.701,3313,4.701,3314,4.701,3315,4.701,3316,4.701]],["title/components/OutputComponent.html",[0,0.189,266,1.259]],["body/components/OutputComponent.html",[0,0.341,1,1.023,2,0.211,3,0.218,4,1.449,6,1.078,7,1.041,9,0.138,11,0.467,16,1.42,19,2.219,20,1.006,22,3.199,23,0.892,25,0.007,31,2.156,32,1.874,35,1.396,37,0.421,38,0.858,40,1.577,43,0.665,44,1.137,46,2.394,48,2.708,49,0.843,51,3.497,60,0.866,65,0.265,69,0.739,71,0.985,77,2.005,79,1.692,80,1.86,81,0.754,82,0.955,91,0.597,92,0.939,93,0.395,110,1.544,113,1.42,115,1.006,118,0.929,126,1.317,128,3.472,137,0.354,148,0.131,149,0.144,177,0.738,178,1.523,179,1.176,181,1.948,182,1.078,183,1.078,184,0.988,185,1.814,186,1.006,187,1.041,188,0.923,189,1.023,190,1.023,191,2.253,192,1.023,193,1.526,194,1.983,195,1.041,196,1.446,197,2.305,198,1.041,199,1.041,200,1.078,201,1.023,202,1.55,203,1.041,204,1.078,205,1.023,206,1.078,207,1.006,208,1.006,209,1.597,210,1.814,211,1.959,212,1.023,213,2.138,214,2.004,215,1.078,216,1.041,217,2.1,218,1.041,219,1.023,220,1.041,221,1.041,222,1.041,223,1.023,224,1.078,225,1.023,226,1.041,227,1.078,228,1.023,229,1.078,230,1.023,231,1.006,232,1.098,233,1.078,234,1.023,235,1.078,236,1.006,237,1.023,238,1.078,239,1.023,240,1.078,241,0.939,242,1.078,243,1.023,244,1.579,245,1.078,246,1.006,247,1.078,248,1.023,249,1.078,250,0.988,251,1.078,252,1.023,253,0.988,254,1.023,255,0.955,256,1.078,257,1.023,258,1.078,259,1.078,260,1.023,261,1.078,262,1.023,263,1.078,264,0.988,265,1.078,266,1.849,267,1.023,268,1.078,269,1.023,270,1.041,271,1.078,272,1.006,273,1.023,274,1.874,275,1.023,276,1.041,277,0.907,278,1.041,279,1.041,280,1.023,281,1.041,282,1.041,283,1.041,284,1.078,285,1.006,286,1.023,287,1.078,288,1.023,289,1.041,290,1.023,291,1.078,292,1.023,293,1.078,294,1.041,295,0.972,296,1.023,297,1.078,298,1.023,299,1.078,300,1.023,301,1.078,302,1.023,303,0.972,304,0.988,305,1.078,306,1.006,307,1.078,308,1.006,309,1.078,310,1.006,311,1.078,312,1.006,313,1.078,314,1.006,315,1.06,316,1.078,317,1.692,318,1.06,319,1.078,320,0.004,321,0.004,350,1.158,425,3.49,428,2.711,435,2.479,457,3.782,686,2.219,875,3.96,919,3.908,942,1.395,968,1.902,1061,2.192,1172,2.632,1173,3.072,1386,3.289,1438,5.984,1446,5.168,1449,4.726,1450,6.048,1451,4.726,1453,3.289,1454,4.726,1456,3.289,1458,3.289,1459,3.289,2085,3.627,2086,3.627,2105,2.524,2243,5.143,2258,3.579,2269,3.579,2270,3.579,2271,3.289,2272,5.143,3317,4.019,3318,4.019,3319,4.019,3320,4.019,3321,4.019]],["title/classes/Pagination.html",[149,0.181,2354,3.161]],["body/classes/Pagination.html",[2,0.314,3,0.177,8,1.179,9,0.112,11,0.379,24,1.453,25,0.007,30,1.418,37,0.342,38,0.575,43,0.99,44,1.488,45,2.406,48,2.373,49,0.723,50,2.619,60,0.767,65,0.178,69,0.755,71,1.125,76,1.342,77,1.72,79,1.239,80,1.796,81,1.262,82,2.093,89,2.264,91,1.168,92,0.859,93,0.815,118,0.902,126,2.852,147,0.654,148,0.107,149,0.24,164,2.583,232,1.271,320,0.003,321,0.003,341,2.176,346,1.677,349,4.468,354,2.721,358,0.654,363,1.401,391,1.973,405,3.111,426,1.156,428,3.568,445,3.731,447,2.701,453,1.281,455,2.568,475,4.578,478,4.511,491,5.427,495,2.125,514,1.586,519,3.082,520,3.897,538,4.258,582,2.344,585,2.413,588,2.344,597,3.917,598,1.677,601,2.306,603,2.4,682,3.345,686,1.903,753,3.573,869,1.63,907,4.053,975,1.78,1053,1.677,1054,4.411,1074,4.196,1075,2.406,1237,4.172,1239,6.28,1345,2.138,1470,5.949,1471,5.949,1472,5.949,1659,3.244,1665,2.138,1686,2.138,1814,2.496,1816,5.004,1817,2.496,2035,4.898,2309,4.411,2310,4.318,2354,5.82,2382,4.053,2415,5.33,2449,5.33,2467,2.907,2473,5.467,2870,5.949,2937,4.411,2951,4.053,3072,2.993,3288,6.732,3322,3.265,3323,9.111,3324,8.092,3325,5.467,3326,6.681,3327,4.411,3328,4.411,3329,4.953,3330,3.893,3331,3.265,3332,4.953,3333,3.265,3334,3.265,3335,3.265,3336,3.573,3337,3.265,3338,3.265,3339,3.265,3340,4.953,3341,3.265,3342,3.265,3343,3.265,3344,3.265,3345,4.953,3346,3.265,3347,3.265,3348,3.265,3349,3.265,3350,4.953,3351,5.949,3352,3.265,3353,4.953,3354,3.265,3355,4.953,3356,5.985,3357,4.953,3358,3.265,3359,4.953,3360,4.953,3361,3.265,3362,2.907,3363,3.265,3364,3.265,3365,3.265,3366,3.265,3367,3.265,3368,3.265,3369,3.265,3370,7.855,3371,3.265,3372,3.265,3373,8.705,3374,6.681,3375,7.182,3376,3.265,3377,3.265,3378,6.681,3379,4.953,3380,3.265,3381,3.265,3382,3.265,3383,3.265,3384,5.985,3385,3.265,3386,3.265]],["title/components/PaginationComponent.html",[0,0.189,267,1.281]],["body/components/PaginationComponent.html",[0,0.306,1,0.933,2,0.192,3,0.199,4,0.786,6,0.983,7,0.95,9,0.126,11,0.426,16,1.328,20,0.917,21,2.752,22,3.035,23,0.813,25,0.007,31,2.15,32,1.867,35,1.306,37,0.384,38,0.627,39,2.904,40,1.527,43,0.607,49,0.788,50,2.856,51,3.349,52,3.185,60,0.906,65,0.254,69,0.694,70,1.082,71,1.033,76,1.01,77,2.457,80,1.283,81,1.03,82,1.524,89,1.771,91,0.803,92,0.935,93,0.531,109,3.673,110,2.464,111,4.129,113,1.741,115,0.917,118,0.679,126,1.201,136,1.65,137,0.322,147,0.734,148,0.12,149,0.23,164,2.075,177,0.673,178,1.424,179,1.1,181,1.866,182,0.983,183,0.983,184,0.902,185,1.721,186,0.917,187,0.95,188,0.842,189,0.933,190,0.933,191,2.19,192,0.933,193,1.448,194,1.899,195,0.95,196,1.401,197,2.247,198,0.95,199,0.95,200,0.983,201,0.933,202,1.449,203,0.95,204,0.983,205,0.933,206,0.983,207,0.917,208,0.917,209,1.552,210,1.721,211,0.917,212,0.933,213,0.933,214,0.902,215,0.983,216,0.95,217,2.024,218,0.95,219,0.933,220,0.95,221,0.95,222,0.95,223,0.933,224,0.983,225,0.933,226,0.95,227,0.983,228,0.933,229,0.983,230,0.933,231,0.917,232,1.027,233,0.983,234,0.933,235,0.983,236,0.917,237,0.933,238,0.983,239,0.933,240,0.983,241,0.856,242,0.983,243,0.933,244,1.498,245,0.983,246,0.917,247,0.983,248,0.933,249,0.983,250,0.902,251,0.983,252,0.933,253,0.902,254,0.933,255,0.871,256,0.983,257,0.933,258,0.983,259,0.983,260,0.933,261,0.983,262,0.933,263,0.983,264,0.902,265,0.983,266,0.917,267,1.802,268,0.983,269,0.933,270,0.95,271,0.983,272,0.917,273,0.933,274,1.827,275,0.933,276,0.95,277,0.827,278,0.95,279,0.95,280,0.933,281,0.95,282,0.95,283,0.95,284,0.983,285,0.917,286,0.933,287,0.983,288,0.933,289,0.95,290,0.933,291,0.983,292,0.933,293,0.983,294,0.95,295,0.886,296,0.933,297,0.983,298,0.933,299,0.983,300,0.933,301,0.983,302,0.933,303,0.886,304,0.902,305,0.983,306,0.917,307,0.983,308,0.917,309,0.983,310,0.917,311,0.983,312,0.917,313,0.983,314,0.917,315,0.966,316,0.983,317,0.917,318,0.966,319,0.983,320,0.004,321,0.004,346,0.813,350,1.056,354,2.437,391,3.264,425,3.264,426,1.298,448,1.643,457,3.537,519,2.492,537,3.148,571,1.735,601,2.123,603,3.429,919,2.856,938,3.289,960,2.696,975,1.999,1237,2.624,1242,5.105,1816,3.148,2354,5.858,2355,4.903,2419,3.264,2537,5.791,2540,3.264,2573,3.264,3327,4.81,3387,3.666,3388,5.401,3389,7.077,3390,5.401,3391,3.666,3392,3.666,3393,5.401,3394,3.666,3395,3.666,3396,5.41,3397,3.666,3398,3.666,3399,3.666,3400,3.666,3401,5.401,3402,5.401,3403,3.666,3404,5.401,3405,5.401,3406,3.666,3407,5.401,3408,4.81,3409,5.401,3410,3.666,3411,3.666,3412,5.401,3413,5.401,3414,5.401,3415,5.401,3416,5.401,3417,5.401,3418,5.401,3419,5.401,3420,5.401,3421,5.401,3422,5.401,3423,5.401,3424,5.401,3425,5.401]],["title/classes/PaginationConfig.html",[149,0.181,2355,3.847]],["body/classes/PaginationConfig.html",[0,0.291,2,0.328,3,0.339,9,0.215,11,0.727,25,0.007,37,0.656,38,0.903,43,1.035,45,3.776,65,0.225,69,0.778,71,1.069,91,0.93,92,0.684,93,0.616,118,1.062,126,2.547,148,0.205,149,0.279,164,2.28,320,0.005,321,0.005,346,2.057,354,2.641,358,1.693,445,3.398,514,3.776,601,2.252,825,5.154,826,3.992,897,4.239,939,2.456,944,4.53,960,3.881,1006,4.185,1018,4.098,1134,4.697,1192,3.117,1225,3.93,1237,3.776,1239,5.608,1709,5.12,2354,4.882,2355,6.953,3328,6.922,3426,9.096,3427,8.845,3428,8.845,3429,9.5,3430,7.773,3431,6.257,3432,5.942,3433,6.257,3434,4.239,3435,7.773,3436,7.773,3437,7.773]],["title/components/PasswordResetComponent.html",[0,0.189,269,1.281]],["body/components/PasswordResetComponent.html",[0,0.283,1,0.933,2,0.192,3,0.198,4,0.785,6,0.983,7,0.949,8,1.323,9,0.126,11,0.425,16,1.328,20,0.917,23,0.813,25,0.007,30,1.158,31,2.149,32,1.867,35,1.305,37,0.384,38,0.627,40,1.527,43,0.606,44,1.485,46,1.375,49,0.788,60,0.906,65,0.254,69,0.737,70,1.284,71,1.051,76,0.685,77,1.874,81,0.478,82,0.87,91,0.544,92,0.915,93,0.631,110,1.407,113,1.328,115,0.917,117,2.275,118,0.805,136,1.648,137,0.322,139,1.156,147,0.733,148,0.12,149,0.131,167,2.855,177,0.673,178,1.423,179,1.1,180,1.536,181,1.865,182,0.983,183,0.983,184,0.901,185,1.72,186,0.917,187,0.949,188,1.812,189,0.933,190,0.933,191,2.189,192,0.933,193,1.447,194,1.898,195,0.949,196,1.4,197,2.247,198,0.949,199,0.949,200,0.983,201,0.933,202,1.448,203,0.949,204,0.983,205,0.933,206,0.983,207,0.917,208,0.917,209,1.552,210,1.72,211,0.917,212,0.933,213,0.933,214,0.901,215,0.983,216,0.949,217,2.024,218,0.949,219,0.933,220,0.949,221,0.949,222,0.949,223,0.933,224,0.983,225,0.933,226,0.949,227,0.983,228,0.933,229,0.983,230,0.933,231,0.917,232,1.027,233,0.983,234,0.933,235,0.983,236,0.917,237,0.933,238,0.983,239,0.933,240,0.983,241,1.261,242,0.983,243,0.933,244,1.497,245,0.983,246,0.917,247,0.983,248,0.933,249,0.983,250,0.901,251,0.983,252,0.933,253,0.901,254,0.933,255,0.87,256,0.983,257,0.933,258,0.983,259,0.983,260,0.933,261,0.983,262,0.933,263,0.983,264,0.901,265,0.983,266,0.917,267,0.933,268,0.983,269,1.801,270,2.17,271,0.983,272,0.917,273,0.933,274,1.827,275,0.933,276,0.949,277,0.827,278,0.949,279,0.949,280,0.933,281,0.949,282,0.949,283,0.949,284,0.983,285,0.917,286,0.933,287,0.983,288,0.933,289,0.949,290,0.933,291,0.983,292,0.933,293,0.983,294,0.949,295,0.885,296,0.933,297,0.983,298,0.933,299,0.983,300,0.933,301,0.983,302,0.933,303,0.885,304,0.901,305,0.983,306,0.917,307,0.983,308,0.917,309,0.983,310,0.917,311,0.983,312,0.917,313,0.983,314,0.917,315,0.966,316,0.983,317,0.917,318,0.966,319,0.983,320,0.004,321,0.004,330,3.14,344,2.264,346,1.422,358,0.733,419,1.69,422,2.642,435,2.151,438,4.418,439,4.198,448,1.95,449,2.318,470,2.399,497,3.679,519,2.49,558,3.766,583,4.633,585,1.95,586,2.135,591,3.863,592,3.834,605,4.418,612,3.262,624,5.06,626,4.737,637,2.8,639,7.851,690,5.484,923,3.496,938,1.99,942,1.874,971,3.894,1012,3.391,1258,2.165,2050,4.418,2134,7.114,2762,4.956,2765,3.262,2785,2.997,2788,2.997,2814,5.789,2867,2.997,3230,3.262,3438,8.816,3439,3.663,3440,7.891,3441,5.399,3442,5.399,3443,5.399,3444,7.075,3445,5.399,3446,3.663,3447,5.399,3448,3.663,3449,3.663,3450,3.663,3451,5.399,3452,3.663,3453,3.663,3454,4.807,3455,5.399,3456,4.807,3457,3.663,3458,3.663,3459,3.663,3460,3.663,3461,3.663,3462,3.663,3463,3.663,3464,3.663,3465,3.663,3466,3.663,3467,3.663,3468,3.663,3469,3.663,3470,3.663,3471,5.399]],["title/components/PopComponent.html",[0,0.189,272,1.259]],["body/components/PopComponent.html",[0,0.269,1,0.833,2,0.172,3,0.177,4,0.701,5,1.548,6,1.608,7,0.847,8,1.182,9,0.112,11,0.38,20,0.819,21,1.403,23,0.726,25,0.007,30,1.573,31,2.14,32,1.862,35,1.199,37,0.343,38,0.576,39,1.657,40,1.521,43,0.821,44,1.714,49,0.875,60,0.921,61,2.034,65,0.178,69,0.744,70,0.993,71,1.065,76,0.611,79,2.026,80,1.179,81,0.938,82,1.424,91,0.994,92,0.939,93,0.658,107,3.434,109,3.919,113,2.079,115,0.819,118,0.903,137,0.288,148,0.107,149,0.178,167,3.537,177,0.601,178,1.308,179,1.01,180,1.372,181,1.763,182,0.878,183,0.878,184,0.804,185,1.608,186,0.819,187,0.847,188,0.751,189,0.833,190,0.833,191,2.109,192,0.833,193,1.352,194,1.794,195,0.847,196,1.343,197,2.172,198,0.847,199,0.847,200,0.878,201,0.833,202,1.331,203,0.847,204,0.878,205,0.833,206,0.878,207,0.819,208,0.819,209,1.495,210,1.608,211,0.819,212,0.833,213,0.833,214,0.804,215,0.878,216,0.847,217,1.929,218,0.847,219,0.833,220,0.847,221,0.847,222,0.847,223,0.833,224,0.878,225,0.833,226,0.847,227,0.878,228,0.833,229,0.878,230,0.833,231,0.819,232,0.943,233,0.878,234,0.833,235,0.878,236,0.819,237,0.833,238,0.878,239,0.833,240,0.878,241,0.764,242,0.878,243,0.833,244,1.4,245,0.878,246,0.819,247,0.878,248,0.833,249,0.878,250,0.804,251,0.878,252,0.833,253,0.804,254,0.833,255,0.777,256,0.878,257,0.833,258,0.878,259,0.878,260,0.833,261,0.878,262,0.833,263,0.878,264,0.804,265,0.878,266,0.819,267,0.833,268,0.878,269,0.833,270,0.847,271,0.878,272,1.673,273,0.833,274,1.766,275,0.833,276,0.847,277,0.738,278,0.847,279,0.847,280,0.833,281,0.847,282,0.847,283,0.847,284,0.878,285,0.819,286,0.833,287,0.878,288,0.833,289,0.847,290,0.833,291,0.878,292,0.833,293,0.878,294,0.847,295,0.791,296,0.833,297,0.878,298,0.833,299,0.878,300,0.833,301,0.878,302,0.833,303,0.791,304,0.804,305,0.878,306,0.819,307,0.878,308,0.819,309,0.878,310,0.819,311,0.878,312,0.819,313,0.878,314,0.819,315,0.862,316,0.878,317,0.819,318,0.862,319,0.878,320,0.003,321,0.003,346,1.595,347,3.647,358,0.655,359,3.268,363,2.291,426,1.158,435,2.034,442,2.36,448,2.301,449,2.191,455,2.128,491,2.142,520,1.509,572,1.689,582,4.364,601,0.764,817,2.476,820,4.409,948,1.206,949,3.268,954,2.891,960,2.476,967,4.385,988,3.792,1006,4.17,1043,1.548,1067,1.906,1084,2.794,1237,2.41,1258,3.445,1396,2.36,1398,4.108,1410,2.547,1411,2.142,1414,2.891,1419,2.913,1424,6.401,1545,3.792,1547,4.571,1549,4.824,1551,3.579,1552,4.824,1553,4.824,1559,3.401,1561,2.997,1567,3.401,1569,2.36,1571,3.249,1578,4.824,1579,3.579,1581,3.115,1582,3.579,1583,3.579,1585,3.579,1594,3.249,1648,2.677,1650,2.913,1680,2.142,1686,2.142,1865,2.677,2043,2.5,2049,1.548,2083,3.62,2085,3.115,2086,3.115,2105,2.054,2171,2.677,2176,5.473,2197,4.059,2339,2.36,2412,2.913,2616,2.054,2825,2.36,2849,2.913,3016,2.5,3018,2.5,3025,2.913,3194,2.142,3454,2.913,3472,3.271,3473,4.961,3474,4.961,3475,4.961,3476,4.961,3477,3.271,3478,3.271,3479,3.271,3480,3.271,3481,3.271,3482,3.271,3483,3.271,3484,3.271,3485,3.271,3486,3.271,3487,3.271,3488,3.271,3489,3.271,3490,3.271,3491,3.271,3492,2.913,3493,3.271,3494,3.271,3495,3.271,3496,3.271,3497,4.961,3498,5.992,3499,3.271,3500,3.271,3501,3.271,3502,3.271,3503,3.271,3504,3.271,3505,3.271,3506,3.271,3507,3.271,3508,3.271]],["title/modules/PopModule.html",[322,1.079,1888,3.296]],["body/modules/PopModule.html",[2,0.342,3,0.353,9,0.223,24,2.525,25,0.007,63,2.176,65,0.343,137,0.573,146,3.24,147,1.305,148,0.301,149,0.234,177,1.197,260,2.493,272,2.45,320,0.005,321,0.005,322,1.709,324,2.671,329,3.342,330,2.354,331,2.176,334,2.262,628,3.771,629,2.932,979,4.267,1547,5.657,1888,6.454,1889,5.657,1901,4.7,3492,5.802,3509,5.802,3510,5.802,3511,6.516,3512,5.802,3513,5.802,3514,6.516,3515,6.516,3516,6.516,3517,6.516]],["title/injectables/PopService.html",[437,1.304,1547,3.041]],["body/injectables/PopService.html",[2,0.327,3,0.338,9,0.214,11,0.724,25,0.007,37,0.654,38,0.901,43,1.462,65,0.303,69,0.682,71,1.02,76,1.45,118,1.11,126,2.541,137,0.548,147,1.248,148,0.204,149,0.224,164,1.828,272,1.56,320,0.005,321,0.005,350,1.796,358,1.69,401,4.101,437,2.187,445,2.98,448,2.568,809,5.817,817,3.872,903,3.872,967,4.491,979,4.083,1006,3.67,1039,5.596,1064,4.519,1547,4.686,1571,5.785,1771,5.929,2043,5.929,2601,6.607,3518,6.234,3519,9.086,3520,7.756,3521,7.866,3522,8.834,3523,7.756,3524,6.234,3525,6.234,3526,6.234,3527,6.234,3528,6.234,3529,6.234,3530,6.234,3531,6.234,3532,6.234,3533,6.234]],["title/interfaces/ResourceActionbarState.html",[338,1.424,3534,4.481]],["body/interfaces/ResourceActionbarState.html",[0,0.229,2,0.228,3,0.235,4,0.931,9,0.149,16,1.068,19,1.669,21,2.619,25,0.007,30,0.784,31,0.931,32,0.812,37,0.74,38,0.709,40,1.181,44,1.587,48,2.245,52,1.955,65,0.315,69,0.709,70,1.72,75,1.451,76,1.319,81,1.121,93,0.906,98,2.728,109,3.175,121,1.742,137,0.382,139,1.926,147,1.808,148,0.2,149,0.156,184,2.057,188,2.096,232,1.342,236,1.527,273,1.106,274,1.669,295,1.05,320,0.004,321,0.004,338,1.727,339,5.692,341,2.681,342,3.917,343,4.56,344,3.786,345,6.392,346,0.964,347,3.329,350,1.251,351,7.389,355,3.028,356,3.557,358,0.87,359,3.329,360,3.555,363,1.997,369,3.555,391,2.625,412,1.822,414,2.503,417,1.955,428,3.07,435,2.146,449,2.642,477,2.978,489,4.112,496,4.995,499,3.792,505,3.816,520,2.816,572,2.402,585,2.205,592,2.965,601,1.648,686,2.711,704,2.845,705,2.978,706,2.169,736,3.868,869,2.169,880,2.369,937,2.447,957,2.845,1005,2.625,1074,5.064,1217,3.134,1500,3.868,1509,3.868,1511,3.134,2455,6.164,2601,4.185,2640,3.868,3185,3.868,3534,6.816,3535,3.134,3536,3.868,3537,4.344,3538,6.104,3539,7.654,3540,4.344,3541,4.344,3542,4.344,3543,4.344,3544,4.344,3545,6.104,3546,4.344,3547,4.344,3548,4.344,3549,4.344,3550,4.344,3551,3.868,3552,4.344,3553,4.344,3554,4.344,3555,4.344,3556,4.344,3557,4.344,3558,4.344,3559,8.064,3560,4.344,3561,4.344,3562,4.344,3563,6.104,3564,4.344,3565,4.344,3566,4.344,3567,4.344,3568,4.344,3569,4.344,3570,4.344,3571,4.344,3572,4.344,3573,4.344,3574,4.344,3575,4.344,3576,4.344,3577,4.344,3578,4.344,3579,4.344,3580,4.344,3581,4.344,3582,4.344,3583,4.344,3584,4.344,3585,4.344,3586,4.344,3587,4.344,3588,4.344]],["title/components/ResourceCrudComponent.html",[0,0.189,275,1.281]],["body/components/ResourceCrudComponent.html",[0,0.259,1,0.762,2,0.157,3,0.162,4,1.481,6,0.803,7,0.776,9,0.103,11,0.348,16,1.14,20,0.749,21,2.433,23,0.664,25,0.007,30,0.837,31,2.133,32,1.85,35,1.12,37,0.314,38,0.538,40,1.523,43,0.495,44,1.59,48,1.359,49,1.245,52,2.873,60,0.818,65,0.31,69,0.769,70,1.383,71,1.092,75,2.629,76,1.06,80,1.517,81,1.097,82,1.517,89,1.16,91,0.843,92,0.956,93,0.774,110,2.654,113,1.57,115,0.749,118,0.868,136,1.347,137,0.263,139,2.015,148,0.098,149,0.107,164,0.878,177,0.55,178,1.495,179,0.944,181,1.683,182,0.803,183,0.803,184,0.736,185,1.522,186,0.749,187,0.776,188,1.855,189,0.762,190,0.762,191,2.044,192,0.762,193,1.28,194,1.713,195,0.776,196,1.624,197,2.112,198,0.776,199,0.776,200,0.803,201,0.762,202,1.243,203,0.776,204,0.803,205,0.762,206,0.803,207,0.749,208,0.749,209,1.449,210,1.522,211,0.749,212,0.762,213,0.762,214,0.736,215,0.803,216,0.776,217,1.853,218,0.776,219,0.762,220,0.776,221,0.776,222,0.776,223,0.762,224,0.803,225,0.762,226,0.776,227,0.803,228,0.762,229,0.803,230,0.762,231,0.749,232,1.707,233,0.803,234,0.762,235,0.803,236,0.749,237,0.762,238,0.803,239,0.762,240,0.803,241,1.613,242,0.803,243,0.762,244,1.325,245,0.803,246,0.749,247,0.803,248,0.762,249,0.803,250,0.736,251,0.803,252,0.762,253,0.736,254,0.762,255,0.711,256,0.803,257,0.762,258,0.803,259,0.803,260,0.762,261,0.803,262,0.762,263,0.803,264,0.736,265,0.803,266,0.749,267,0.762,268,0.803,269,0.762,270,0.776,271,0.803,272,0.749,273,0.762,274,2.015,275,1.86,276,0.776,277,0.676,278,0.776,279,1.974,280,0.762,281,1.789,282,0.776,283,0.776,284,0.803,285,0.749,286,0.762,287,0.803,288,0.762,289,0.776,290,0.762,291,0.803,292,0.762,293,0.803,294,0.776,295,0.724,296,0.762,297,0.803,298,0.762,299,0.803,300,0.762,301,0.803,302,0.762,303,0.724,304,0.736,305,0.803,306,0.749,307,0.803,308,0.749,309,0.803,310,0.749,311,0.803,312,0.749,313,0.803,314,0.749,315,0.789,316,0.803,317,0.749,318,0.789,319,0.803,320,0.003,321,0.003,331,1.548,346,0.664,350,0.862,354,1.694,358,0.599,412,2.378,413,1.633,414,2.618,417,1.347,428,1.859,435,2.394,448,1.725,449,2.705,453,1.819,490,3.983,496,3.793,497,3.209,499,2.77,501,6.15,502,4.127,503,1.674,504,4.127,505,2.684,516,2.451,517,4.127,520,2.138,532,2.138,545,5.584,547,1.96,548,1.744,571,1.417,592,3.102,595,1.633,596,1.744,602,1.081,603,2.274,624,3.858,626,3.562,682,2.453,704,1.96,918,3.543,919,2.451,920,3.793,921,3.543,923,3.093,925,2.528,926,4.127,928,5.588,929,4.127,933,4.338,934,4.603,937,3.194,941,4.173,942,1.609,943,4.127,944,2.701,948,2.354,949,2.528,952,4.127,954,2.701,967,3.631,968,3.021,971,3.343,975,1.633,977,2.666,979,1.96,986,5.05,987,2.666,989,2.666,1013,2.052,1014,2.052,1016,4.127,1039,2.8,1042,4.377,1575,3.543,1597,2.16,2332,4.127,3072,2.8,3202,2.052,3535,6.563,3589,8.101,3590,2.994,3591,6.385,3592,5.671,3593,4.635,3594,2.994,3595,2.994,3596,2.994,3597,2.994,3598,2.994,3599,6.385,3600,2.994,3601,2.994,3602,2.994,3603,2.994,3604,2.994,3605,2.994,3606,4.635,3607,2.994,3608,2.994,3609,4.635,3610,2.994,3611,2.994,3612,2.994,3613,2.45,3614,2.994,3615,2.666,3616,2.994,3617,2.994,3618,2.994,3619,2.994,3620,2.994,3621,2.994,3622,2.994,3623,2.994]],["title/components/ResourceListPopComponent.html",[0,0.189,280,1.281]],["body/components/ResourceListPopComponent.html",[0,0.261,1,0.778,2,0.16,3,0.166,4,0.655,6,1.264,7,0.792,9,0.105,16,1.158,19,1.81,20,0.765,22,2.719,23,0.678,25,0.007,30,1.386,31,2.134,32,1.854,35,1.139,37,0.321,38,0.547,39,1.021,40,1.533,43,0.951,44,1.806,48,1.381,49,0.688,51,3.055,60,0.736,65,0.264,66,2.352,67,2.419,69,0.815,70,1.151,71,1.144,76,0.88,79,1.843,80,0.726,81,0.962,82,1.657,91,1.037,92,0.937,93,0.686,107,2.419,109,4.082,110,1.175,113,1.812,115,0.765,118,0.876,128,4.404,136,1.376,137,0.269,139,0.965,148,0.1,149,0.275,167,2.491,177,0.562,178,1.242,179,0.959,181,1.702,182,0.82,183,0.82,184,0.752,185,1.542,186,0.765,187,0.792,188,1.482,189,0.778,190,0.778,191,2.059,192,0.778,193,1.297,194,1.732,195,0.792,196,1.728,197,2.126,198,0.792,199,0.792,200,0.82,201,0.778,202,1.264,203,0.792,204,0.82,205,0.778,206,0.82,207,0.765,208,0.765,209,1.46,210,1.542,211,0.765,212,0.778,213,0.778,214,0.752,215,0.82,216,0.792,217,1.871,218,0.792,219,0.778,220,0.792,221,0.792,222,0.792,223,0.778,224,0.82,225,0.778,226,0.792,227,0.82,228,0.778,229,0.82,230,0.778,231,0.765,232,1.631,233,0.82,234,0.778,235,0.82,236,0.765,237,0.778,238,0.82,239,0.778,240,0.82,241,0.714,242,0.82,243,0.778,244,1.342,245,0.82,246,0.765,247,0.82,248,0.778,249,0.82,250,0.752,251,0.82,252,0.778,253,0.752,254,0.778,255,0.726,256,0.82,257,0.778,258,0.82,259,0.82,260,0.778,261,0.82,262,0.778,263,0.82,264,0.752,265,0.82,266,0.765,267,0.778,268,0.82,269,0.778,270,0.792,271,0.82,272,2.238,273,0.778,274,1.915,275,0.778,276,0.792,277,0.69,278,0.792,279,0.792,280,1.644,281,0.792,282,0.792,283,1.807,284,0.82,285,0.765,286,0.778,287,0.82,288,0.778,289,0.792,290,0.778,291,0.82,292,0.778,293,0.82,294,0.792,295,0.739,296,0.778,297,0.82,298,0.778,299,0.82,300,0.778,301,0.82,302,0.778,303,0.739,304,0.752,305,0.82,306,0.765,307,0.82,308,0.765,309,0.82,310,0.765,311,0.82,312,0.765,313,0.82,314,0.765,315,0.806,316,0.82,317,0.765,318,0.806,319,0.82,320,0.003,321,0.003,346,1.045,347,4.017,349,3.039,350,0.881,354,1.716,358,0.943,359,4.186,363,1.626,379,1.847,391,4.213,435,2.121,448,2.24,449,2.597,455,2.021,489,4.924,499,2.305,505,2.719,538,2.653,572,1.041,582,3.929,671,2.722,704,2.002,705,2.096,706,1.526,817,1.526,820,4.293,908,2.653,933,4.38,948,1.736,949,1.667,954,1.781,967,3.898,1006,3.632,1013,2.096,1014,2.096,1084,1.722,1237,1.485,1258,2.797,1396,4.145,1398,3.229,1410,2.951,1411,2.002,1414,1.781,1544,2.502,1545,3.601,1546,5.749,1547,5.181,1548,4.228,1549,4.145,1551,3.398,1552,3.398,1553,4.145,1556,2.502,1557,2.722,1558,2.722,1559,2.096,1560,2.337,1561,1.847,1562,2.337,1563,2.337,1564,2.502,1565,2.337,1566,3.855,1567,3.94,1568,2.722,1569,2.205,1570,2.337,1571,2.002,1575,3.601,1577,2.337,1578,3.398,1579,2.205,1580,2.337,1581,1.92,1582,2.205,1583,2.205,1584,2.337,1585,2.205,1586,2.337,1587,2.502,1588,2.722,1591,4.194,1592,2.722,1593,2.337,1594,2.002,1595,2.337,1596,2.337,1598,2.502,1599,2.337,1602,2.502,1603,2.502,1604,2.337,1605,2.722,2175,2.722,2181,4.194,2182,2.722,2183,2.722,3535,6.5,3613,7.374,3615,2.722,3624,5.747,3625,3.057,3626,3.057,3627,3.057,3628,2.502,3629,3.057]],["title/modules/ResourceModule.html",[322,1.079,1155,3.45]],["body/modules/ResourceModule.html",[2,0.263,3,0.272,9,0.172,24,2.233,25,0.007,63,1.678,65,0.349,137,0.442,138,2.015,139,1.585,146,2.865,148,0.266,149,0.18,177,0.923,187,2.446,196,1.197,273,2.403,274,2.044,275,2.403,276,2.446,277,1.522,278,2.446,279,2.474,280,2.403,281,2.446,282,2.446,320,0.005,321,0.005,322,1.446,324,2.06,329,2.828,330,1.815,331,1.678,333,3.799,334,2.341,489,5.094,547,3.29,548,2.927,622,5.501,628,3.191,629,2.261,632,4.624,705,3.444,706,2.508,979,4.986,1077,5.281,1106,3.624,1155,6.859,1156,6.182,1175,3.624,1177,3.84,1183,4.111,1844,3.84,1845,3.624,1846,3.29,3536,4.473,3589,4.473,3613,6.231,3630,4.473,3631,4.473,3632,5.024,3633,4.473,3634,4.473,3635,5.024,3636,5.024,3637,5.024,3638,5.024,3639,6.745,3640,5.024]],["title/injectables/ResourceService.html",[437,1.304,1077,3.041]],["body/injectables/ResourceService.html",[0,0.19,2,0.176,3,0.182,9,0.115,11,0.39,25,0.007,30,1.561,37,0.352,38,0.921,43,1.589,44,1.504,46,1.288,48,2.132,49,0.739,60,0.931,61,1.377,65,0.3,69,0.8,70,1.82,71,1.045,75,2.887,76,1.483,77,1.166,80,2.211,81,1.248,84,2.109,89,2.348,91,1.241,92,0.913,93,0.822,117,1.08,118,0.636,119,1.891,121,3.065,131,2.075,137,0.295,147,1.219,148,0.166,149,0.121,164,0.985,188,1.821,196,1.08,209,1.289,274,2.123,277,1.921,320,0.003,321,0.005,338,0.95,339,2.949,342,1.631,346,1.504,350,0.967,354,2.282,356,2.949,358,0.672,363,1.918,405,3.824,412,2.842,413,1.831,414,2.779,417,1.511,437,1.884,447,4.168,448,1.539,449,1.1,455,1.441,489,4.453,493,4.685,495,4.12,499,3.588,505,3.753,524,3.65,537,3.548,538,4.095,547,2.199,550,2.423,587,3.178,597,4.168,598,1.724,602,1.213,627,2.334,648,2.302,686,3.493,704,2.199,706,1.676,727,3.824,741,3.178,742,3.469,817,2.526,851,1.724,880,3.696,903,3.63,925,2.759,948,2.924,957,2.199,1043,2.394,1051,4.393,1055,2.302,1056,2.199,1070,2.029,1072,3.314,1073,3.65,1074,3.178,1075,2.458,1076,3.469,1077,3.057,1078,4.506,1079,4.506,1080,4.506,1082,4.141,1084,2.85,1085,4.141,1087,3.178,1093,4.141,1095,3.868,1096,3.987,1099,3.057,1116,3.057,1127,4.982,1128,2.748,1129,2.748,1130,2.748,1133,4.141,1134,2.029,1138,2.748,1139,2.748,1140,2.748,1141,2.748,1142,5.95,1143,1.957,1144,2.748,1246,2.302,1525,2.748,1561,2.029,1652,2.567,1729,2.199,1741,3.868,3073,2.748,3535,6.319,3628,2.748,3641,2.99,3642,5.06,3643,3.358,3644,6.035,3645,6.035,3646,3.358,3647,4.506,3648,3.358,3649,4.506,3650,3.358,3651,3.358,3652,4.506,3653,3.358,3654,3.868,3655,4.506,3656,4.506,3657,3.358,3658,4.506,3659,4.506,3660,3.358,3661,3.358,3662,2.99,3663,2.99,3664,2.99,3665,2.99,3666,4.141,3667,2.99,3668,6.035,3669,2.99,3670,2.99,3671,2.99,3672,2.99,3673,2.99,3674,2.99,3675,2.99,3676,2.99,3677,2.99,3678,2.99,3679,2.99,3680,2.99,3681,2.99,3682,2.99,3683,2.99,3684,2.99,3685,5.422,3686,2.99,3687,4.506,3688,2.99,3689,2.99,3690,2.99,3691,2.99]],["title/interfaces/SdkField.html",[338,1.424,3692,4.481]],["body/interfaces/SdkField.html",[2,0.447,3,0.306,9,0.194,11,1.067,16,1.792,25,0.007,30,1.631,37,0.592,38,0.846,43,1.54,46,2.523,60,0.933,63,2.433,69,0.867,70,1.948,75,2.845,81,0.951,89,1.823,93,0.717,118,1.135,148,0.185,209,1.62,320,0.005,321,0.005,338,2.061,341,2.481,344,3.787,346,2.159,354,2.744,402,5.262,503,2.04,558,3.637,559,5.58,658,3.291,686,3.099,833,6.382,1064,4.245,1075,3.539,1096,5.58,1116,4.402,1635,4.925,1644,5.255,1665,4.771,3070,4.074,3087,5.029,3099,5.029,3154,7.587,3155,7.587,3202,4.994,3692,6.487,3693,5.648,3694,5.648,3695,5.648,3696,7.285,3697,7.285]],["title/modules/SdkModule.html",[322,1.079,1156,3.296]],["body/modules/SdkModule.html",[2,0.373,3,0.385,9,0.244,24,2.621,25,0.007,63,2.372,65,0.331,137,0.625,146,3.159,148,0.292,149,0.255,177,1.305,320,0.006,321,0.006,322,1.8,324,2.912,329,3.52,330,2.566,331,2.372,333,4.001,334,2.914,414,3.916,1156,6.255,1844,5.43,1845,5.124,1846,4.652,3698,6.325,3699,6.325,3700,7.103,3701,7.103]],["title/injectables/SdkService.html",[414,2.063,437,1.304]],["body/injectables/SdkService.html",[2,0.31,3,0.173,9,0.11,11,0.371,24,2.198,25,0.007,30,1.408,37,0.335,38,0.566,39,1.627,42,5.408,43,1.33,44,1.885,49,0.964,50,4.767,60,1.109,65,0.296,69,0.779,70,1.424,71,1.116,75,1.627,76,1.502,77,3.129,78,3.34,79,2.102,80,1.57,81,1.222,82,1.158,89,1.219,91,1.159,92,0.852,93,0.88,108,2.733,110,1.227,118,1.056,121,3.426,123,2.432,124,1.862,126,2.903,137,0.281,148,0.105,149,0.115,156,3.724,171,2.614,188,2.203,193,1.1,320,0.003,321,0.003,342,2.869,346,1.31,358,0.64,363,2.121,381,4.799,404,2.614,406,6.325,412,2.043,414,2.709,418,2.614,425,2.944,437,1.712,439,5.393,453,3.06,457,3.191,470,2.092,478,4.149,499,2.65,503,2.386,505,3.126,514,3.21,583,5.393,585,1.76,597,4.088,598,1.64,603,2.368,626,3.06,646,3.724,647,3.191,648,6.535,649,3.987,650,3.06,651,5.821,652,4.338,653,3.987,654,5.05,655,3.987,656,3.515,657,5.406,658,2.839,659,4.338,660,4.338,661,4.338,663,4.338,666,2.845,673,4.338,677,3.34,678,4.338,686,1.872,704,2.092,707,2.092,713,5.883,725,2.845,727,2.006,756,2.19,774,5.564,786,2.944,809,3.06,880,1.742,901,4.338,948,1.796,961,2.839,1242,3.515,1414,2.839,1706,4.327,2062,2.845,2134,4.833,2229,2.944,2598,3.724,2779,5.406,2780,2.614,2782,2.614,3074,5.05,3118,3.724,3171,3.987,3702,3.194,3703,4.872,3704,4.872,3705,4.872,3706,4.872,3707,6.607,3708,5.883,3709,6.607,3710,8.401,3711,4.872,3712,4.872,3713,5.906,3714,4.872,3715,3.194,3716,4.872,3717,3.194,3718,5.906,3719,4.872,3720,3.194,3721,4.872,3722,8.038,3723,4.872,3724,3.194,3725,7.496,3726,4.872,3727,3.194,3728,4.872,3729,3.194,3730,4.338,3731,3.194,3732,3.194,3733,3.194,3734,3.194,3735,5.259,3736,3.194,3737,3.194,3738,3.194,3739,4.872,3740,3.194,3741,3.194,3742,4.872,3743,3.194,3744,3.194,3745,3.194,3746,3.194,3747,3.194,3748,3.194,3749,3.194,3750,3.194,3751,3.194,3752,3.194,3753,5.906,3754,3.194,3755,3.194,3756,4.872,3757,3.194,3758,3.194,3759,3.194,3760,5.906,3761,3.194,3762,3.194,3763,3.194,3764,3.194,3765,3.194,3766,3.194,3767,4.872,3768,3.194,3769,3.194,3770,3.194,3771,3.194,3772,3.194,3773,4.872,3774,3.194,3775,3.194,3776,3.194,3777,3.194,3778,3.194,3779,3.194,3780,6.607,3781,3.194,3782,4.872,3783,3.194,3784,3.194,3785,3.194,3786,3.194,3787,3.194]],["title/modules/SelectModule.html",[322,1.079,3788,3.63]],["body/modules/SelectModule.html",[2,0.335,3,0.346,9,0.219,24,2.308,25,0.007,63,2.132,65,0.345,137,0.562,146,3.211,147,1.278,148,0.299,149,0.229,177,1.173,184,2.402,285,2.444,320,0.005,321,0.005,322,1.687,324,2.617,329,3.3,330,2.306,331,2.132,334,2.216,628,3.724,629,2.873,634,4.88,1164,7.598,1165,4.605,1166,4.605,1177,4.88,1890,6.101,1900,5.224,2578,6.695,3788,7.113,3789,5.685,3790,5.685,3791,6.384,3792,5.685,3793,6.384,3794,5.685,3795,6.384,3796,6.384,3797,6.384]],["title/components/SignupComponent.html",[0,0.189,286,1.281]],["body/components/SignupComponent.html",[0,0.276,1,0.883,2,0.182,3,0.188,4,0.744,6,0.931,7,0.899,8,1.253,9,0.119,11,0.403,16,1.275,19,1.992,20,0.868,23,0.77,25,0.007,30,0.626,31,2.145,32,1.863,35,1.253,37,0.364,38,0.602,40,1.497,43,1.027,44,1.523,46,1.32,49,0.757,60,1.027,65,0.265,69,0.766,71,1.097,76,0.648,77,2.155,79,1.297,81,0.677,82,1.232,91,0.771,92,0.921,93,0.725,98,3.899,110,1.992,113,1.275,115,0.868,117,1.667,118,1.036,128,4.327,131,2.545,136,1.561,137,0.305,139,1.095,147,0.695,148,0.114,149,0.124,177,0.637,178,1.367,179,1.056,180,1.455,181,1.816,182,0.931,183,0.931,184,0.853,185,1.666,186,0.868,187,0.899,188,1.776,189,0.883,190,0.883,191,2.151,192,0.883,193,1.401,194,1.848,195,0.899,196,1.373,197,2.212,198,0.899,199,0.899,200,0.931,201,0.883,202,1.391,203,0.899,204,0.931,205,0.883,206,0.931,207,0.868,208,0.868,209,1.525,210,1.666,211,0.868,212,0.883,213,0.883,214,0.853,215,0.931,216,0.899,217,1.978,218,0.899,219,0.883,220,0.899,221,0.899,222,0.899,223,0.883,224,0.931,225,0.883,226,0.899,227,0.931,228,0.883,229,0.931,230,0.883,231,0.868,232,0.986,233,0.931,234,0.883,235,0.931,236,0.868,237,0.883,238,0.931,239,0.883,240,0.931,241,1.211,242,0.931,243,0.883,244,1.45,245,0.931,246,0.868,247,0.931,248,0.883,249,0.931,250,2.193,251,0.931,252,1.581,253,2.11,254,0.883,255,0.824,256,0.931,257,0.883,258,0.931,259,0.931,260,0.883,261,0.931,262,0.883,263,0.931,264,0.853,265,0.931,266,0.868,267,0.883,268,0.931,269,0.883,270,1.608,271,0.931,272,0.868,273,0.883,274,1.798,275,0.883,276,0.899,277,0.783,278,0.899,279,0.899,280,0.883,281,0.899,282,0.899,283,0.899,284,0.931,285,0.868,286,1.754,287,0.931,288,0.883,289,2.077,290,0.883,291,0.931,292,0.883,293,0.931,294,0.899,295,0.839,296,0.883,297,0.931,298,0.883,299,0.931,300,0.883,301,0.931,302,0.883,303,0.839,304,0.853,305,0.931,306,0.868,307,0.931,308,0.868,309,0.931,310,0.868,311,0.931,312,0.868,313,0.931,314,0.868,315,0.915,316,0.931,317,0.868,318,0.915,319,0.931,320,0.004,321,0.004,344,2.174,422,2.503,435,2.095,439,5.251,448,1.888,449,2.535,470,2.272,497,3.917,520,3.568,585,3.044,588,2.453,589,4.479,591,4.329,592,2.519,597,4.595,600,4.256,601,1.45,624,4.844,626,3.899,638,3.089,690,3.396,691,2.839,701,1.954,702,3.089,719,6.896,923,3.386,924,3.899,937,3.497,938,2.289,939,2.035,942,1.204,971,4.479,1005,3.133,1006,2.453,1007,4.479,1012,2.179,1258,2.079,1631,3.133,1658,4.746,1731,3.751,1922,3.618,2761,4.617,2762,5.741,2767,5.528,2769,2.839,2770,3.089,2774,4.746,2779,2.839,2780,2.839,2782,2.839,2784,3.089,2785,2.839,2787,3.089,2788,2.839,3798,3.469,3799,5.185,3800,5.185,3801,3.469,3802,3.74,3803,3.469,3804,3.469,3805,3.469,3806,3.469,3807,3.469,3808,3.469,3809,3.469,3810,3.469,3811,3.469,3812,3.469,3813,3.469,3814,3.469,3815,3.469,3816,3.469,3817,3.469,3818,3.469,3819,3.469,3820,3.469,3821,3.469]],["title/components/SignupFormComponent.html",[0,0.189,288,1.281]],["body/components/SignupFormComponent.html",[0,0.29,1,0.794,2,0.164,3,0.169,4,0.668,6,0.836,7,0.808,8,1.126,9,0.107,11,0.362,16,1.176,19,1.837,20,0.78,21,2.496,23,0.692,25,0.007,30,1.178,31,2.136,32,1.853,35,1.156,37,0.327,38,0.555,39,1.041,40,1.495,43,1.425,44,1.461,46,2.082,47,1.369,49,1.027,52,3.478,60,0.612,65,0.252,69,0.702,70,0.957,71,1.136,79,1.197,80,1.382,81,1.068,82,1.55,91,0.865,92,0.912,93,0.572,113,1.176,115,0.78,117,2.944,118,1.118,124,3.39,128,4.702,131,2.674,132,2.889,137,0.274,138,1.25,147,0.624,148,0.102,149,0.172,177,0.573,178,1.261,179,0.974,180,1.307,181,1.72,182,0.836,183,0.836,184,0.767,185,1.561,186,0.78,187,0.808,188,1.498,189,0.794,190,0.794,191,2.074,192,0.794,193,1.313,194,1.75,195,0.808,196,1.318,197,2.14,198,0.808,199,0.808,200,0.836,201,0.794,202,1.283,203,0.808,204,0.836,205,0.794,206,0.836,207,0.78,208,0.78,209,1.47,210,1.561,211,0.78,212,0.794,213,0.794,214,0.767,215,0.836,216,0.808,217,1.888,218,0.808,219,0.794,220,0.808,221,0.808,222,0.808,223,0.794,224,0.836,225,0.794,226,0.808,227,0.836,228,0.794,229,0.836,230,0.794,231,0.78,232,0.909,233,0.836,234,0.794,235,0.836,236,0.78,237,0.794,238,0.836,239,0.794,240,0.836,241,1.117,242,0.836,243,0.794,244,1.359,245,0.836,246,0.78,247,0.836,248,0.794,249,0.836,250,0.767,251,0.836,252,2.376,253,2.189,254,0.794,255,0.741,256,0.836,257,0.794,258,0.836,259,0.836,260,0.794,261,0.836,262,0.794,263,0.836,264,0.767,265,0.836,266,0.78,267,0.794,268,0.836,269,0.794,270,1.924,271,0.836,272,0.78,273,0.794,274,1.74,275,0.794,276,0.808,277,1.079,278,0.808,279,0.808,280,0.794,281,0.808,282,0.808,283,0.808,284,0.836,285,0.78,286,0.794,287,0.836,288,1.661,289,2.119,290,0.794,291,0.836,292,0.794,293,0.836,294,0.808,295,0.754,296,0.794,297,0.836,298,0.794,299,0.836,300,0.794,301,0.836,302,0.794,303,0.754,304,0.767,305,0.836,306,0.78,307,0.836,308,0.78,309,0.836,310,0.78,311,0.836,312,0.78,313,0.836,314,0.78,315,0.822,316,0.836,317,0.78,318,0.822,319,0.836,320,0.003,321,0.003,330,2.101,346,1.061,355,3.186,435,1.454,447,2.608,448,2.351,449,1.567,453,3.034,475,1.817,491,3.132,497,2.555,509,1.649,558,3.257,585,2.682,586,1.817,591,3.425,690,3.132,719,6.526,724,2.551,923,3.172,938,2.144,939,1.877,948,2.144,1010,2.137,1042,4.472,1050,4.447,1059,1.817,1143,1.817,1175,2.249,1258,1.25,1414,1.817,1631,2.889,1635,3.557,1877,6.668,2049,1.475,2762,4.097,2774,4.447,2789,2.551,2791,2.551,2792,2.776,2793,5.18,2794,4.258,2795,4.258,2796,6.265,2797,6.883,2798,5.18,2799,4.258,2800,6.883,2801,5.809,2802,4.258,2803,4.258,2804,4.258,2805,4.258,2810,1.021,2812,2.776,2814,5.338,2815,2.776,2817,2.776,2819,2.776,2820,2.776,2821,2.776,2823,2.776,2825,2.249,2828,2.776,2830,2.776,2832,4.447,2833,5.18,2836,2.776,2840,2.776,2841,2.383,2845,2.776,2846,2.776,2847,2.776,2850,2.776,2851,2.776,2852,5.18,2853,2.776,2854,2.776,2855,2.776,2860,2.776,2861,2.776,2862,2.776,2863,2.776,2865,2.776,2866,2.776,2867,3.913,3802,3.45,3822,7.73,3823,6.883,3824,5.817,3825,4.782,3826,3.117,3827,3.117,3828,4.782,3829,3.117,3830,3.117,3831,3.117,3832,3.117,3833,3.117,3834,3.117,3835,3.117,3836,3.117,3837,3.117,3838,3.117,3839,3.117,3840,3.117,3841,4.782,3842,3.117,3843,3.117,3844,3.117,3845,3.117,3846,3.117,3847,3.117,3848,3.117,3849,3.117,3850,3.117,3851,3.117,3852,3.117,3853,3.117,3854,3.117,3855,3.117]],["title/directives/SlotHostDirective.html",[179,1.025,317,1.259]],["body/directives/SlotHostDirective.html",[0,0.354,2,0.354,3,0.366,9,0.232,11,0.784,23,1.498,25,0.007,31,1.746,37,0.708,38,0.946,39,2.72,44,1.603,46,2.073,60,1.043,65,0.242,69,0.716,71,0.984,91,1.003,92,0.738,93,0.664,107,4.182,137,0.594,148,0.221,149,0.242,179,1.781,317,2.038,318,2.147,320,0.006,321,0.006,358,1.751,419,3.114,428,3.641,497,3.577,503,2.942,646,6.225,968,3.854,1251,4.441,1410,4.182,1440,8.017,1485,6.664,3856,8.745,3857,6.751,3858,8.144,3859,6.751,3860,6.751,3861,8.144,3862,6.751]],["title/classes/Sorter.html",[149,0.181,3863,4.481]],["body/classes/Sorter.html",[2,0.252,3,0.26,8,1.733,9,0.165,11,0.76,25,0.007,30,1.181,37,0.78,38,1.128,39,2.667,43,1.231,48,2.797,49,1.166,60,0.615,65,0.172,69,0.81,70,1.844,71,0.899,76,0.897,80,2.097,81,1.245,91,0.972,92,0.715,93,0.868,118,0.603,123,3.264,147,1.489,148,0.261,149,0.267,164,2.181,320,0.005,321,0.004,346,1.913,405,3.014,426,1.699,445,3.211,455,3.191,503,1.733,512,3.358,527,4.282,532,3.684,584,2.796,603,2.983,646,3.668,682,3.646,686,3.211,753,6.366,783,6.645,891,4.273,909,3.143,954,2.796,961,4.335,1062,2.899,1087,3.014,1404,3.668,1485,3.927,1504,6.087,1673,3.29,1686,3.143,1692,6.127,1767,3.014,1878,3.927,1922,3.811,1986,5.351,2083,3.951,2337,3.668,2450,7.442,2459,5.823,2613,4.999,3325,6.536,3362,5.823,3863,7.679,3864,4.273,3865,6.539,3866,7.987,3867,6.539,3868,5.823,3869,5.823,3870,5.823,3871,4.799,3872,6.539,3873,4.799,3874,8.358,3875,6.539,3876,4.799,3877,3.927,3878,5.823,3879,4.799,3880,4.799,3881,4.799,3882,4.799,3883,4.273,3884,4.799,3885,4.273,3886,4.273,3887,4.799,3888,6.539,3889,4.799,3890,4.799,3891,4.799,3892,4.799,3893,4.799,3894,6.539,3895,4.799,3896,4.799,3897,4.799,3898,4.799,3899,4.799,3900,4.799,3901,4.799,3902,4.799]],["title/interfaces/Symbol.html",[338,1.424,938,1.855]],["body/interfaces/Symbol.html",[2,0.367,3,0.379,9,0.24,11,0.812,25,0.007,37,0.734,38,0.966,61,3.41,69,0.732,70,1.926,79,2.081,92,1.066,93,0.873,98,4.393,144,5.224,148,0.229,320,0.006,321,0.006,338,2.353,833,4.795,938,3.545,1046,5.026,1391,5.703,1635,4.536,2054,6.807,2083,5.811,3102,6.807,3903,6.995,3904,8.318,3905,8.318]],["title/modules/SymbolModule.html",[322,1.079,1891,3.296]],["body/modules/SymbolModule.html",[0,0.331,2,0.326,3,0.42,4,1.66,9,0.213,11,0.722,24,2.473,25,0.007,35,1.503,60,0.992,63,2.077,65,0.332,92,0.68,118,0.781,137,0.547,144,3.906,146,3.173,148,0.297,149,0.278,177,1.143,320,0.005,321,0.005,322,1.66,324,2.55,329,3.247,330,2.246,331,2.077,334,2.688,356,3.624,381,3.624,426,2.202,461,4.073,499,3.106,588,2.943,602,2.246,627,3.572,628,3.664,629,2.798,682,2.389,803,3.757,809,4.863,833,4.263,938,3.498,939,3.724,1043,2.943,1214,3.193,1404,4.754,1731,3.757,1830,4.263,1891,6.266,1912,3.289,2049,2.943,2112,3.624,2464,5.702,2616,3.906,2631,5.089,3194,4.073,3396,4.754,3906,5.538,3907,5.538,3908,5.538,3909,5.538,3910,7.44,3911,6.219,3912,3.624,3913,6.446,3914,5.089,3915,5.089,3916,5.538,3917,5.538,3918,5.538,3919,5.538,3920,5.538,3921,5.538,3922,6.895,3923,6.337,3924,4.754,3925,5.538,3926,6.219]],["title/injectables/SymbolPipe.html",[437,1.304,3910,3.847]],["body/injectables/SymbolPipe.html",[2,0.451,3,0.351,9,0.222,11,0.753,16,1.594,25,0.007,37,0.68,49,1.16,63,2.165,65,0.308,69,0.57,70,1.84,71,0.783,80,1.888,81,1.121,91,0.964,92,1.045,93,0.638,137,0.57,148,0.212,149,0.233,178,1.709,320,0.005,321,0.005,358,1.298,437,2.226,453,3.118,503,2.87,602,2.342,658,4.63,686,2.491,938,3.592,939,3.606,1122,7.075,1214,4.599,1218,4.63,1224,5.731,2083,4.8,3396,6.073,3910,6.073,3925,5.772,3927,6.482,3928,7.945,3929,6.482,3930,7.945,3931,5.772,3932,6.482]],["title/injectables/SymbolService.html",[437,1.304,939,1.975]],["body/injectables/SymbolService.html",[2,0.215,3,0.222,8,1.478,9,0.14,11,0.475,25,0.007,37,0.716,38,0.679,43,1.397,44,1.699,49,0.854,60,1.167,65,0.267,69,0.825,70,1.928,71,1.111,76,0.765,79,2.421,80,2.051,81,1.2,82,1.77,88,5.108,91,1.283,92,1.039,93,0.849,98,4.679,118,1.104,123,4.309,126,2.686,137,0.36,147,1.367,148,0.134,149,0.147,164,1.2,180,1.715,320,0.004,321,0.004,358,1.367,437,1.769,478,2.569,627,3.437,701,3.294,783,6.725,786,4.502,880,2.231,903,4.214,938,3.675,939,2.296,1099,2.472,1594,4.879,1730,6.097,2082,8.018,2083,3.534,2464,3.674,3037,6.097,3075,6.635,3913,6.267,3924,6.599,3931,3.643,3933,4.091,3934,5.849,3935,5.849,3936,4.091,3937,7.451,3938,4.091,3939,5.695,3940,8.199,3941,4.091,3942,7.451,3943,4.091,3944,4.091,3945,7.451,3946,4.091,3947,7.451,3948,4.091,3949,5.849,3950,4.091,3951,5.849,3952,4.091,3953,5.849,3954,5.849,3955,4.091,3956,4.091,3957,4.091,3958,4.091,3959,4.091,3960,4.091,3961,4.091,3962,4.091,3963,4.091,3964,5.849,3965,4.091,3966,4.091,3967,4.091,3968,4.091,3969,4.091,3970,7.882,3971,4.091,3972,4.091,3973,4.091,3974,4.091,3975,4.091,3976,4.091,3977,4.091]],["title/components/TabComponent.html",[0,0.189,290,1.281]],["body/components/TabComponent.html",[0,0.291,1,0.999,2,0.206,3,0.213,4,0.842,6,1.053,7,1.017,9,0.135,11,0.456,20,0.982,23,0.871,25,0.007,30,1.205,31,2.155,32,1.872,35,1.373,37,0.412,38,0.66,40,1.613,44,1.118,49,0.829,65,0.204,69,0.751,70,1.464,71,1.068,76,1.061,79,1.829,80,1.349,81,0.741,82,1.349,91,0.583,92,0.933,93,0.386,109,3.638,113,1.396,115,0.982,118,0.713,131,2.328,137,0.345,148,0.128,149,0.141,177,0.721,178,1.497,179,1.157,181,1.927,182,1.053,183,1.053,184,0.965,185,1.79,186,0.982,187,1.017,188,0.901,189,0.999,190,0.999,191,2.237,192,0.999,193,1.506,194,1.961,195,1.017,196,1.435,197,2.291,198,1.017,199,1.017,200,1.053,201,0.999,202,1.523,203,1.017,204,1.053,205,0.999,206,1.053,207,0.982,208,0.982,209,1.586,210,1.79,211,0.982,212,0.999,213,0.999,214,0.965,215,1.053,216,1.017,217,2.081,218,1.017,219,0.999,220,1.017,221,1.017,222,1.017,223,0.999,224,1.053,225,0.999,226,1.017,227,1.053,228,0.999,229,1.053,230,0.999,231,0.982,232,1.701,233,1.053,234,0.999,235,1.053,236,0.982,237,0.999,238,1.053,239,0.999,240,1.053,241,0.917,242,1.053,243,0.999,244,1.558,245,1.053,246,0.982,247,1.053,248,0.999,249,1.053,250,0.965,251,1.053,252,0.999,253,0.965,254,0.999,255,0.933,256,1.053,257,0.999,258,1.053,259,1.053,260,0.999,261,1.053,262,0.999,263,1.053,264,0.965,265,1.053,266,0.982,267,0.999,268,1.053,269,0.999,270,1.017,271,1.053,272,0.982,273,0.999,274,1.862,275,0.999,276,1.017,277,0.886,278,1.017,279,1.017,280,0.999,281,1.017,282,1.017,283,1.017,284,1.053,285,0.982,286,0.999,287,1.053,288,0.999,289,1.017,290,1.861,291,1.053,292,2.278,293,1.053,294,1.017,295,0.949,296,0.999,297,1.053,298,0.999,299,1.053,300,0.999,301,1.053,302,0.999,303,0.949,304,0.965,305,1.053,306,0.982,307,1.053,308,0.982,309,1.053,310,0.982,311,1.053,312,0.982,313,1.053,314,0.982,315,1.035,316,1.053,317,0.982,318,1.035,319,1.053,320,0.004,321,0.004,346,1.26,355,3.328,358,1.336,363,1.111,379,3.431,419,1.811,435,2.646,448,1.727,449,2.732,490,4.23,520,3.372,572,1.933,582,4.383,873,5.362,948,2.695,968,2.687,1193,3.431,1366,4.34,1401,3.212,1403,6.347,1581,3.566,2001,3.893,3978,3.925,3979,7.197,3980,5.678,3981,8.7,3982,5.678,3983,5.678,3984,3.925,3985,3.925,3986,3.925,3987,3.925,3988,3.925,3989,3.925,3990,3.925,3991,5.678,3992,3.925,3993,3.495,3994,3.925,3995,3.925]],["title/components/TabsComponent.html",[0,0.189,292,1.281]],["body/components/TabsComponent.html",[0,0.309,1,0.965,2,0.199,3,0.205,4,1.187,6,1.017,7,0.982,8,1.369,9,0.13,11,0.44,16,1.361,20,0.948,23,0.841,25,0.007,30,0.684,31,2.152,32,1.869,35,1.338,37,0.397,38,0.643,40,1.48,43,0.627,49,0.808,60,0.485,61,2.269,65,0.235,69,0.673,70,1.309,71,0.997,77,1.921,78,3.794,79,1.385,80,1.709,81,0.998,82,1.709,91,0.972,92,0.958,93,0.643,110,1.456,113,1.361,115,0.948,118,0.821,124,3.225,137,0.333,147,1.108,148,0.124,149,0.136,164,1.111,177,0.696,178,1.459,179,1.127,180,1.589,181,1.896,182,1.017,183,1.017,184,0.932,185,1.754,186,0.948,187,0.982,188,0.87,189,0.965,190,0.965,191,2.213,192,0.965,193,1.476,194,1.929,195,0.982,196,1.417,197,2.268,198,0.982,199,0.982,200,1.017,201,0.965,202,1.485,203,0.982,204,1.017,205,0.965,206,1.017,207,0.948,208,0.948,209,1.569,210,1.754,211,0.948,212,0.965,213,0.965,214,0.932,215,1.017,216,0.982,217,2.052,218,0.982,219,0.965,220,0.982,221,0.982,222,0.982,223,0.965,224,1.017,225,0.965,226,0.982,227,1.017,228,0.965,229,1.017,230,0.965,231,0.948,232,1.725,233,1.017,234,0.965,235,1.017,236,0.948,237,0.965,238,1.017,239,0.965,240,1.017,241,0.885,242,1.017,243,0.965,244,1.527,245,1.017,246,0.948,247,1.017,248,0.965,249,1.017,250,0.932,251,1.017,252,0.965,253,0.932,254,0.965,255,0.9,256,1.017,257,0.965,258,1.017,259,1.017,260,0.965,261,1.017,262,0.965,263,1.017,264,0.932,265,1.017,266,0.948,267,0.965,268,1.017,269,0.965,270,0.982,271,1.017,272,0.948,273,0.965,274,1.844,275,0.965,276,0.982,277,0.855,278,0.982,279,0.982,280,0.965,281,0.982,282,0.982,283,0.982,284,1.017,285,0.948,286,0.965,287,1.017,288,0.965,289,0.982,290,2.261,291,1.017,292,2.034,293,1.017,294,0.982,295,0.916,296,0.965,297,1.017,298,0.965,299,1.017,300,0.965,301,1.017,302,0.965,303,0.916,304,0.932,305,1.017,306,0.948,307,1.017,308,0.948,309,1.017,310,0.948,311,1.017,312,0.948,313,1.017,314,0.948,315,0.999,316,1.017,317,0.948,318,0.999,319,1.017,320,0.004,321,0.005,343,2.067,358,0.759,363,1.566,379,3.344,401,2.927,426,1.342,448,1.152,490,4.171,545,5.497,571,1.793,588,2.619,596,2.208,602,1.369,603,1.52,685,4.928,880,2.067,928,5.23,1048,4.05,1061,3.018,1264,2.208,1448,2.897,1559,2.598,1652,4.231,2049,2.619,2157,3.101,2537,5.884,2941,3.374,2984,3.374,3055,3.374,3979,7.196,3996,3.79,3997,4.231,3998,5.535,3999,6.538,4000,5.535,4001,7.19,4002,7.19,4003,5.535,4004,5.535,4005,3.79,4006,3.79,4007,5.535,4008,7.19,4009,3.79,4010,5.535,4011,3.79,4012,5.535,4013,3.79,4014,5.535,4015,3.374,4016,3.79,4017,3.79,4018,3.79,4019,3.79,4020,3.79,4021,3.79,4022,3.79,4023,3.79,4024,3.79,4025,3.79,4026,3.79,4027,3.79,4028,3.79,4029,3.79,4030,3.79,4031,3.79,4032,5.535,4033,3.79,4034,3.79,4035,5.535]],["title/components/TinymceComponent.html",[0,0.189,296,1.281]],["body/components/TinymceComponent.html",[0,0.253,1,0.725,2,0.149,3,0.154,4,0.61,5,1.347,6,0.764,7,0.737,8,1.028,9,0.098,11,0.331,12,2.51,14,4.397,16,1.096,17,3.449,20,0.712,23,0.632,24,1.822,25,0.007,26,3.093,27,2.51,28,3.093,29,2.51,30,1.122,31,2.128,32,1.845,33,2.919,35,1.077,37,0.299,38,0.518,39,2.389,40,1.539,41,3.903,42,4.483,43,1.51,44,1.408,45,3.019,49,0.65,50,4.093,53,2.919,54,3.903,57,2.693,60,0.916,65,0.326,69,0.73,70,1.497,71,1.097,76,1.261,77,2.157,79,1.991,81,1.063,82,1.839,84,1.788,86,2.799,89,2.139,91,0.924,92,0.907,93,0.611,94,2.799,104,2.799,106,3.055,107,2.289,108,1.712,109,2.796,110,1.094,111,3.407,113,1.096,115,0.712,118,1.074,119,2.51,121,2.705,123,2.225,124,3.621,126,2.036,135,1.72,136,1.281,137,0.25,138,1.142,147,0.57,148,0.093,149,0.102,154,5.854,156,2.176,162,2.919,167,1.505,171,2.329,173,1.788,177,0.523,178,1.175,179,0.908,180,1.194,181,1.638,182,0.764,183,0.764,184,0.7,185,1.474,186,0.712,187,0.737,188,0.654,189,0.725,190,0.725,191,2.006,192,0.725,193,1.24,194,1.667,195,0.737,196,1.27,197,2.077,198,0.737,199,0.737,200,0.764,201,0.725,202,1.196,203,0.737,204,0.764,205,0.725,206,0.764,207,0.712,208,0.712,209,1.422,210,1.474,211,0.712,212,0.725,213,0.725,214,0.7,215,0.764,216,0.737,217,1.81,218,0.737,219,0.725,220,0.737,221,0.737,222,0.737,223,0.725,224,0.764,225,0.725,226,0.737,227,0.764,228,0.725,229,0.764,230,0.725,231,1.374,232,0.848,233,0.764,234,0.725,235,0.764,236,0.712,237,0.725,238,0.764,239,0.725,240,0.764,241,0.665,242,0.764,243,0.725,244,1.283,245,0.764,246,0.712,247,0.764,248,0.725,249,0.764,250,0.7,251,0.764,252,0.725,253,0.7,254,0.725,255,0.676,256,0.764,257,0.725,258,0.764,259,0.764,260,0.725,261,0.764,262,0.725,263,0.764,264,0.7,265,0.764,266,0.712,267,0.725,268,0.764,269,0.725,270,0.737,271,0.764,272,0.712,273,0.725,274,1.688,275,0.725,276,0.737,277,1.006,278,0.737,279,0.737,280,0.725,281,0.737,282,0.737,283,0.737,284,0.764,285,0.712,286,0.725,287,0.764,288,0.725,289,0.737,290,0.725,291,0.764,292,0.725,293,0.764,294,0.737,295,0.688,296,1.822,297,0.764,298,0.725,299,0.764,300,0.725,301,0.764,302,0.725,303,0.688,304,0.7,305,0.764,306,0.712,307,0.764,308,0.712,309,0.764,310,0.712,311,0.764,312,0.712,313,0.764,314,0.712,315,1.175,316,0.764,317,0.712,318,0.75,319,0.764,320,0.003,321,0.003,358,0.57,363,1.554,393,1.864,435,2.42,445,1.712,448,1.355,449,2.45,453,2.808,495,2.666,520,2.056,537,2.597,572,1.517,583,2.919,597,4.221,598,1.462,602,1.028,804,2.289,908,3.093,919,2.357,942,1.547,948,2.291,967,2.056,968,2.109,1048,3.093,1206,3.215,1245,2.329,1246,1.952,1616,2.535,1816,3.2,1859,5.085,2015,2.329,2016,2.535,2049,2.109,2135,5.533,2240,6.007,2343,3.647,2344,3.647,2410,2.329,2746,4.891,2825,3.215,2881,6.007,2884,5.533,2892,6.892,2910,2.329,3220,3.055,3336,3.215,3912,4.169,3979,3.407,4036,2.847,4037,5.112,4038,4.457,4039,5.492,4040,4.457,4041,4.457,4042,5.492,4043,2.847,4044,6.214,4045,4.457,4046,3.407,4047,4.457,4048,3.407,4049,4.457,4050,2.847,4051,4.457,4052,3.968,4053,2.847,4054,2.847,4055,2.847,4056,4.457,4057,4.457,4058,2.847,4059,4.457,4060,5.492,4061,2.847,4062,2.847,4063,2.847,4064,2.847,4065,2.847,4066,2.847,4067,2.847,4068,2.847,4069,2.847,4070,2.847,4071,2.847,4072,2.847,4073,2.847,4074,2.847,4075,2.847,4076,2.847,4077,2.847,4078,2.847,4079,2.847,4080,2.847,4081,2.847,4082,2.847,4083,2.847,4084,2.847,4085,2.847,4086,2.847,4087,2.847,4088,2.847,4089,4.457,4090,2.847,4091,2.847,4092,2.847,4093,2.847,4094,2.847,4095,2.847,4096,2.847,4097,2.847,4098,2.847,4099,4.457,4100,2.847,4101,2.847,4102,2.847,4103,2.847,4104,2.847,4105,2.847,4106,2.847,4107,2.847,4108,4.457,4109,2.847,4110,2.847,4111,2.847,4112,2.847,4113,2.847,4114,2.847,4115,2.847,4116,2.847]],["title/modules/TinymceModule.html",[322,1.079,4117,3.63]],["body/modules/TinymceModule.html",[2,0.371,3,0.383,9,0.243,24,2.074,25,0.007,63,2.362,65,0.3,137,0.622,146,3.356,147,1.416,148,0.308,149,0.254,177,1.299,296,2.531,320,0.006,321,0.006,322,1.795,324,2.9,329,3.511,330,2.555,331,2.362,333,4.716,334,2.455,4117,6.954,4118,6.298,4119,6.298,4120,6.298,4121,7.073,4122,7.073,4123,7.073,4124,7.073]],["title/components/ToggleComponent.html",[0,0.189,298,1.281]],["body/components/ToggleComponent.html",[0,0.314,1,1.017,2,0.209,3,0.216,4,1.444,5,2.72,6,1.071,7,1.035,9,0.137,11,0.464,16,1.414,17,4.231,20,0.999,23,0.886,24,2.161,25,0.007,26,3.794,27,3.238,28,3.794,29,3.238,30,1.038,31,2.156,32,1.873,35,1.39,37,0.419,38,0.668,40,1.621,41,4.628,43,1.515,49,0.839,53,3.765,54,4.628,57,3.474,60,0.944,65,0.206,69,0.593,70,1.151,71,1.013,81,0.962,82,1.751,86,3.611,88,5.052,89,1.686,90,4.147,91,0.855,92,0.955,93,0.566,94,3.611,104,3.611,106,3.941,113,1.414,115,0.999,118,1.053,119,3.238,126,2.414,137,0.351,138,1.602,148,0.131,149,0.143,162,4.412,173,2.508,177,0.734,178,1.516,179,1.171,181,1.943,182,1.071,183,1.071,184,0.982,185,1.807,186,0.999,187,1.035,188,0.917,189,1.017,190,1.017,191,2.249,192,1.017,193,1.52,194,1.977,195,1.035,196,1.443,197,2.301,198,1.035,199,1.035,200,1.071,201,1.017,202,1.543,203,1.035,204,1.071,205,1.017,206,1.071,207,0.999,208,0.999,209,1.594,210,1.807,211,0.999,212,1.017,213,1.017,214,0.982,215,1.071,216,1.035,217,2.095,218,1.035,219,1.017,220,1.035,221,1.035,222,1.035,223,1.017,224,1.071,225,1.017,226,1.035,227,1.071,228,1.017,229,1.071,230,1.017,231,0.999,232,1.093,233,1.071,234,1.017,235,1.071,236,0.999,237,1.017,238,1.071,239,1.017,240,1.071,241,0.933,242,1.071,243,1.017,244,1.573,245,1.071,246,0.999,247,1.071,248,1.017,249,1.071,250,0.982,251,1.071,252,1.017,253,0.982,254,1.017,255,0.949,256,1.071,257,1.017,258,1.071,259,1.071,260,1.017,261,1.071,262,1.017,263,1.071,264,0.982,265,1.071,266,0.999,267,1.017,268,1.071,269,1.017,270,1.035,271,1.071,272,0.999,273,1.017,274,1.871,275,1.017,276,1.035,277,0.901,278,1.035,279,1.035,280,1.017,281,1.035,282,1.035,283,1.035,284,1.071,285,0.999,286,1.017,287,1.071,288,1.017,289,1.035,290,1.017,291,1.071,292,1.017,293,1.071,294,1.035,295,0.965,296,1.017,297,1.071,298,2.071,299,1.071,300,1.017,301,1.071,302,1.017,303,0.965,304,0.982,305,1.071,306,0.999,307,1.071,308,0.999,309,1.071,310,0.999,311,1.071,312,0.999,313,1.071,314,0.999,315,1.053,316,1.071,317,0.999,318,1.053,319,1.071,320,0.004,321,0.004,346,1.903,558,3.898,820,5.376,1206,2.881,1251,3.135,2166,4.395,2461,4.395,2910,3.268,4125,3.994,4126,5.749,4127,5.749,4128,3.994,4129,3.994,4130,3.994,4131,5.749,4132,3.994,4133,3.994,4134,5.749,4135,3.994,4136,3.994]],["title/injectables/TypeConfigService.html",[437,1.304,1158,3.161]],["body/injectables/TypeConfigService.html",[2,0.144,3,0.148,4,0.927,9,0.094,11,0.318,20,1.082,25,0.007,30,1.714,32,1.561,37,0.287,38,1.017,40,1.755,43,1.609,46,1.101,47,1.9,49,0.888,60,0.554,61,1.773,65,0.282,69,0.813,70,1.612,71,0.973,76,0.808,79,1.082,80,1.446,81,1.196,82,0.651,89,1.082,91,0.904,92,0.835,93,0.599,118,0.926,137,0.241,139,0.865,147,0.866,148,0.09,149,0.098,186,1.657,193,1.885,196,1.08,207,2.21,208,1.967,209,1.805,211,1.762,232,1.693,244,1.01,295,1.471,320,0.003,321,0.003,342,2.101,346,0.96,350,0.789,354,2.493,355,1.856,358,0.549,363,1.224,399,2.242,401,2.287,406,4.389,407,3.851,434,2.716,435,2.576,437,1.388,445,2.338,493,4.771,532,3.247,558,2.159,571,1.297,595,1.494,602,0.99,603,2.823,690,2.832,707,3.985,788,2.242,795,3.539,797,3.539,799,3.539,803,4.253,804,3.615,825,2.52,897,2.922,925,2.359,938,2.595,939,2.388,941,3.676,975,1.494,1048,2.436,1061,2.359,1067,1.597,1075,2.956,1091,1.794,1099,1.655,1105,1.794,1134,2.613,1158,2.716,1171,2.716,1172,2.832,1173,2.094,1180,6.01,1187,3.12,1192,3.747,1210,2.716,1211,1.977,1217,5.807,1228,4.771,1251,5.188,1391,2.965,1597,1.977,1610,1.977,1628,4.826,1629,6.317,1630,6.936,1634,6.588,1635,2.359,1673,4.171,1676,2.716,1697,2.965,1718,4.61,1756,3.12,1793,6.383,1816,2.52,1817,5.839,2049,2.046,2204,7.019,2226,6.154,2327,3.851,2469,2.242,2478,2.242,2491,3.851,3037,2.242,3070,5.672,3072,2.613,4137,4.325,4138,4.325,4139,7.639,4140,6.085,4141,4.325,4142,6.085,4143,2.74,4144,2.74,4145,4.325,4146,2.74,4147,4.325,4148,4.325,4149,2.74,4150,2.74,4151,4.325,4152,2.74,4153,2.74,4154,4.325,4155,4.325,4156,4.325,4157,7.639,4158,7.639,4159,7.04,4160,7.04,4161,4.325,4162,4.325,4163,4.325,4164,4.325,4165,4.325,4166,4.325,4167,8.35,4168,4.325,4169,4.325,4170,4.325,4171,6.624,4172,6.085,4173,4.325,4174,4.325,4175,4.325,4176,4.325,4177,2.242,4178,4.325,4179,2.74,4180,2.74,4181,2.74,4182,2.74,4183,2.74,4184,2.44,4185,2.74,4186,2.74,4187,2.74,4188,2.74,4189,2.74]],["title/modules/UiModule.html",[322,1.079,622,2.933]],["body/modules/UiModule.html",[2,0.3,3,0.31,9,0.196,24,1.679,25,0.007,63,1.912,65,0.345,137,0.504,146,2.154,147,1.146,148,0.29,149,0.205,177,1.052,320,0.005,321,0.005,322,1.576,324,2.347,329,3.081,330,2.068,331,1.912,334,1.987,622,5.83,1879,6.598,1888,6.303,1889,5.815,1890,6.303,1891,6.303,1894,4.685,1900,4.685,1901,4.13,1904,4.685,2578,6.598,2584,6.598,2586,5.098,2587,5.098,3267,6.943,3788,6.943,3794,5.098,4190,5.098,4191,5.725,4192,5.098,4193,5.725,4194,5.725,4195,5.725,4196,5.725,4197,5.725]],["title/interfaces/Update.html",[338,1.424,495,2.159]],["body/interfaces/Update.html",[0,0.148,2,0.207,3,0.214,9,0.135,11,0.459,25,0.007,30,1.544,37,0.414,38,0.903,43,1.543,44,1.123,46,1.006,48,1.673,60,0.939,61,2.338,65,0.313,69,0.816,70,1.844,75,2.597,76,1.37,77,1.98,80,2.102,81,1.235,84,2.481,89,2.214,93,0.87,117,1.27,119,2.225,121,2.685,131,1.619,137,0.347,147,1.34,148,0.187,149,0.142,164,1.158,188,1.537,196,1.482,209,1.085,274,2.125,277,1.966,320,0.004,321,0.005,338,1.614,339,2.302,342,1.919,346,1.627,350,1.138,354,1.179,356,4.721,363,2.074,405,4.205,412,2.392,414,2.338,417,1.777,437,1.734,447,3.651,448,1.201,449,1.869,489,3.324,493,4.608,495,4.104,499,3.631,505,3.168,524,5.289,537,3.901,538,3.771,547,2.587,550,2.849,587,2.481,597,3.651,598,2.028,602,1.427,627,1.822,648,2.708,686,3.113,704,2.587,706,1.972,727,4.205,741,4.605,742,5.026,817,1.972,851,2.028,880,3.651,903,3.342,925,2.154,948,2.866,957,3.735,1043,1.869,1051,3.446,1055,2.708,1056,2.587,1070,3.446,1072,2.587,1073,2.849,1074,2.481,1075,1.919,1076,2.708,1077,2.386,1082,3.232,1084,2.225,1085,3.232,1087,2.481,1093,3.232,1095,3.019,1096,3.735,1099,2.386,1116,3.446,1127,5.478,1128,3.232,1129,3.232,1130,3.232,1133,4.667,1134,2.386,1138,3.232,1139,3.232,1140,3.232,1141,3.232,1142,6.363,1143,2.302,1144,3.232,1246,2.708,1525,4.667,1561,3.446,1652,4.36,1729,3.735,1741,3.019,3073,4.667,3535,2.849,3628,3.232,3641,3.517,3644,5.079,3645,5.079,3647,3.517,3649,3.517,3652,3.517,3654,3.019,3655,3.517,3656,3.517,3658,3.517,3659,3.517,3662,3.517,3663,5.079,3664,5.079,3665,5.079,3666,6.363,3667,3.517,3668,6.528,3669,3.517,3670,3.517,3671,3.517,3672,3.517,3673,3.517,3674,3.517,3675,3.517,3676,3.517,3677,3.517,3678,3.517,3679,3.517,3680,3.517,3681,3.517,3682,3.517,3683,3.517,3684,3.517,3685,5.961,3686,3.517,3687,5.079,3688,3.517,3689,3.517,3690,3.517,3691,3.517]],["title/interfaces/Upload.html",[303,1.217,338,1.424]],["body/interfaces/Upload.html",[0,0.124,2,0.174,3,0.179,9,0.248,11,0.384,25,0.007,30,1.425,37,0.347,38,0.581,44,1.756,46,0.843,48,2.723,49,0.483,60,0.862,65,0.309,69,0.758,70,1.58,71,0.4,75,1.671,76,1.651,77,1.737,80,1.434,81,1.257,84,2.079,89,1.808,92,0.362,93,0.909,108,1.272,117,1.609,118,0.416,121,3.165,123,3.359,131,1.357,137,0.291,147,1.627,148,0.197,149,0.119,164,1.77,188,0.76,193,2.205,196,1.442,209,1.148,231,0.828,232,1.279,274,1.316,277,0.747,303,2.244,320,0.003,321,0.005,338,1.903,339,1.929,341,2.955,342,2.431,343,1.805,346,1.493,350,0.953,354,2.009,363,2.044,405,4.538,408,2.079,412,2.531,414,2.052,417,1.489,432,5.143,437,1.564,447,1.805,448,1.007,449,2.367,453,1.299,468,6.001,469,2.388,477,2.269,482,2.708,489,3.517,495,2.887,499,2.42,503,1.196,519,2.784,524,4.853,537,1.929,547,2.167,555,2.079,556,5.906,577,2.708,587,2.079,595,1.805,601,0.773,602,1.196,603,2.42,627,1.527,682,2.776,705,2.269,706,2.499,741,3.79,749,2.708,756,2.269,851,1.7,869,2.499,903,1.652,908,4.069,910,1.75,925,1.805,942,1.737,948,2.225,1030,4.612,1040,2.708,1043,1.566,1053,1.7,1059,1.929,1062,3.024,1070,3.024,1072,2.167,1073,2.388,1074,2.079,1075,1.608,1076,2.269,1077,3.646,1084,2.819,1106,2.388,1111,2.708,1116,4.592,1136,4.613,1158,3.143,1180,2.53,1477,2.269,1561,3.024,1635,2.729,1721,2.947,1722,5.374,1723,4.457,1724,5.374,1725,4.457,1726,4.457,1727,4.457,1728,2.708,1729,2.167,1730,2.708,1731,2,1732,2.947,1733,4.457,1734,2.947,1735,4.613,1736,2.53,1737,2.947,1738,2.947,1739,2.947,1740,2.947,1741,2.53,1742,2.947,1743,2.947,1744,5.374,1745,2.947,1746,5.374,1747,2.947,1748,2.947,1749,2.947,1750,2.947,1751,2.947,1752,2.947,1753,1.75,1754,2.947,1755,5.143,1756,2.388,1757,2.947,1758,4.457,1759,2.947,1760,4.457,1761,4.457,1762,2.947,1763,2.947,1764,2.947,1765,2.947,1766,4.457,1767,3.79,1768,2.947,1769,2.708,1770,2.947,1771,2.53,1772,2.947,1773,6.767,1774,2.947,1775,2.947,1776,2.947,1777,2.947,1778,2.947,1779,5.374,1780,2.708,1781,2.947,1782,2.947,1783,4.457,1784,2.947,1785,4.457,1786,4.457,1787,4.457,1788,4.457,1789,4.457,1790,4.457,1791,4.457,1792,4.457,1793,2.53,1794,2.708,1795,3.826,1796,2.947,1797,2.947,1798,2.947,1799,4.457,1800,2.947,1801,2.947,1802,2.947,1803,2.947,1804,2.947,1805,2.388,1806,2.947,1807,5.374,1808,2.947,1809,2.947,1810,4.457,1811,2.947,1812,2.947,1813,2.947,1814,2.53,1815,2.947,1816,1.929,1817,2.53,1818,2.947,1819,2.947,1820,2.947,1821,2.947,1822,2.947,1823,2.947,1824,2.947,1825,2.947,1826,2.947,1827,2.947,1828,2.947,1829,2.947,1830,2.269,1831,2.947,1832,2.947,1833,2.947,1834,2.708,1835,2.947,1836,2.947,1837,2.947]],["title/components/UploadComponent.html",[0,0.189,300,1.281]],["body/components/UploadComponent.html",[0,0.279,1,0.718,2,0.148,3,0.153,4,0.605,6,0.757,7,0.731,9,0.309,11,0.328,16,1.088,20,0.706,23,0.626,25,0.007,30,0.986,31,2.127,32,1.844,35,1.07,37,0.296,38,0.514,40,1.772,43,1.111,44,1.075,46,1.127,47,3.39,49,0.646,60,0.913,65,0.241,69,0.775,70,1.345,71,1.112,76,1.156,79,1.547,81,1.127,82,1.297,89,1.366,91,1.059,92,0.944,93,0.839,109,2.783,110,1.7,113,1.652,115,0.706,118,0.997,121,2.19,126,1.45,136,1.269,137,0.248,139,0.89,148,0.092,149,0.101,167,4.081,177,0.518,178,1.167,179,0.901,181,1.63,182,0.757,183,0.757,184,0.694,185,1.465,186,0.706,187,0.731,188,2.055,189,0.718,190,0.718,191,1.999,192,0.718,193,1.868,194,1.659,195,0.731,196,1.265,197,2.07,198,0.731,199,0.731,200,0.757,201,0.718,202,1.187,203,0.731,204,0.757,205,0.718,206,0.757,207,0.706,208,0.706,209,1.417,210,1.465,211,0.706,212,0.718,213,0.718,214,0.694,215,0.757,216,0.731,217,1.802,218,0.731,219,0.718,220,0.731,221,0.731,222,0.731,223,0.718,224,0.757,225,0.718,226,0.731,227,0.757,228,0.718,229,0.757,230,0.718,231,0.706,232,1.176,233,0.757,234,0.718,235,0.757,236,0.706,237,0.718,238,0.757,239,0.718,240,0.757,241,1.444,242,0.757,243,0.718,244,1.275,245,0.757,246,0.706,247,0.757,248,0.718,249,0.757,250,0.694,251,0.757,252,0.718,253,0.694,254,0.718,255,0.67,256,0.757,257,0.718,258,0.757,259,0.757,260,0.718,261,0.757,262,0.718,263,0.757,264,0.694,265,0.757,266,0.706,267,0.718,268,0.757,269,0.718,270,0.731,271,0.757,272,1.681,273,0.718,274,1.683,275,0.718,276,0.731,277,1.232,278,0.731,279,0.731,280,0.718,281,0.731,282,0.731,283,0.731,284,0.757,285,0.706,286,0.718,287,0.757,288,0.718,289,0.731,290,0.718,291,0.757,292,0.718,293,0.757,294,0.731,295,0.682,296,0.718,297,0.757,298,0.718,299,0.757,300,1.574,301,0.757,302,0.718,303,2.297,304,0.694,305,0.757,306,0.706,307,0.757,308,0.706,309,0.757,310,0.706,311,0.757,312,0.706,313,0.757,314,0.706,315,0.744,316,0.757,317,0.706,318,0.744,319,0.757,320,0.003,321,0.003,344,1.856,346,0.982,358,0.565,412,1.856,413,1.538,414,2.535,417,1.269,435,2.043,438,3.621,439,3.576,448,2.347,449,2.442,470,1.847,475,1.644,477,4.886,497,3.274,512,2.272,514,2.15,555,4.68,556,3.743,558,3.353,560,4.468,570,2.035,571,2.094,573,2.674,584,1.644,585,1.972,591,3.88,592,3.004,602,1.019,603,2.48,727,1.772,756,1.934,774,2.779,828,1.847,908,2.492,919,2.34,923,2.978,924,3.429,934,4.503,937,3.075,938,3.144,939,2.427,942,2.332,948,2.279,967,3.745,1005,2.674,1006,2.094,1007,3.939,1010,1.934,1012,1.772,1030,3.743,1039,2.674,1048,2.492,1096,2.898,1116,2.674,1143,4.343,1303,2.309,1423,2.309,1477,1.934,1508,2.309,1648,3.621,1767,1.772,1780,2.309,1794,3.621,1922,2.579,2185,2.512,2205,5.06,2260,2.579,2339,3.192,2374,5.899,2762,3.884,2974,3.941,3298,3.941,4184,2.512,4198,2.821,4199,4.425,4200,6.184,4201,6.184,4202,6.184,4203,3.941,4204,4.425,4205,4.425,4206,2.821,4207,2.821,4208,2.821,4209,2.821,4210,3.941,4211,2.821,4212,2.821,4213,2.821,4214,3.941,4215,2.821,4216,4.425,4217,2.821,4218,2.821,4219,3.941,4220,2.821,4221,4.425,4222,2.821,4223,4.425,4224,2.821,4225,2.821,4226,2.821,4227,4.425,4228,2.821,4229,4.425,4230,2.821,4231,4.425,4232,2.821,4233,2.821,4234,4.425,4235,2.821,4236,2.821,4237,2.512,4238,2.821,4239,2.821,4240,2.821,4241,2.821,4242,2.821,4243,2.821,4244,2.821,4245,2.821,4246,2.821,4247,2.821,4248,2.821,4249,2.821,4250,5.46,4251,2.821,4252,2.821,4253,2.821,4254,2.821,4255,2.821,4256,2.821,4257,2.821,4258,2.821,4259,2.821,4260,2.821,4261,2.821,4262,2.821,4263,4.425,4264,4.425,4265,4.425,4266,4.425,4267,4.425,4268,4.425]],["title/components/UploadSelectComponent.html",[0,0.189,302,1.281]],["body/components/UploadSelectComponent.html",[0,0.293,1,0.82,2,0.169,3,0.175,4,0.691,6,0.864,7,0.834,9,0.11,16,1.206,20,0.806,21,2.547,23,0.715,25,0.007,31,2.139,32,1.856,35,1.185,37,0.338,38,0.569,40,1.733,43,1.098,44,1.586,47,3.304,49,0.716,52,2.986,65,0.289,69,0.794,70,1.328,71,1.128,76,1.335,79,1.66,81,0.932,82,1.696,91,0.986,92,0.936,93,0.769,110,1.238,113,1.206,115,0.806,118,0.945,136,1.449,137,0.283,139,1.547,148,0.105,149,0.116,167,3.509,177,0.592,178,1.293,179,0.999,181,1.749,182,0.864,183,0.864,184,0.792,185,1.593,186,0.806,187,0.834,188,0.74,189,0.82,190,0.82,191,2.098,192,0.82,193,1.611,194,1.78,195,0.834,196,1.335,197,2.162,198,0.834,199,0.834,200,0.864,201,0.82,202,1.315,203,0.834,204,0.864,205,0.82,206,0.864,207,0.806,208,0.806,209,1.487,210,1.593,211,0.806,212,0.82,213,0.82,214,0.792,215,0.864,216,0.834,217,1.915,218,0.834,219,0.82,220,0.834,221,0.834,222,0.834,223,0.82,224,0.864,225,0.82,226,0.834,227,0.864,228,0.82,229,0.864,230,0.82,231,0.806,232,1.262,233,0.864,234,0.82,235,0.864,236,0.806,237,0.82,238,0.864,239,0.82,240,0.864,241,1.55,242,0.864,243,0.82,244,1.386,245,0.864,246,0.806,247,0.864,248,0.82,249,0.864,250,0.792,251,0.864,252,0.82,253,0.792,254,0.82,255,0.765,256,0.864,257,0.82,258,0.864,259,0.864,260,0.82,261,0.864,262,0.82,263,0.864,264,0.792,265,0.864,266,0.806,267,0.82,268,0.864,269,0.82,270,0.834,271,0.864,272,0.806,273,0.82,274,1.758,275,0.82,276,0.834,277,0.727,278,0.834,279,0.834,280,0.82,281,0.834,282,0.834,283,0.834,284,0.864,285,0.806,286,0.82,287,0.864,288,0.82,289,0.834,290,0.82,291,0.864,292,0.82,293,0.864,294,0.834,295,0.779,296,0.82,297,0.864,298,0.82,299,0.864,300,1.818,301,0.864,302,1.689,303,2.281,304,0.792,305,0.864,306,0.806,307,0.864,308,0.806,309,0.864,310,0.806,311,0.864,312,0.806,313,0.864,314,0.806,315,0.849,316,0.864,317,0.806,318,0.849,319,0.864,320,0.003,321,0.003,346,1.669,354,1.773,358,0.645,363,1.679,393,2.109,419,1.486,435,2.287,448,2.171,449,2.934,468,2.324,469,2.324,497,2.607,553,2.868,554,4.366,555,5.451,556,4.069,559,3.887,560,4.857,562,2.868,567,2.868,568,2.868,569,2.868,570,2.324,908,2.761,938,3.351,939,2.952,941,3.586,942,2.061,948,2.446,960,2.448,967,2.262,975,1.757,1030,4.069,1048,4.404,1061,2.674,1166,3.537,1597,2.324,1610,2.324,1647,4.012,1735,2.462,1736,2.462,1852,2.868,1853,8.343,1858,5.908,2205,2.636,2358,4.012,4203,4.366,4210,4.366,4214,4.366,4219,4.366,4237,2.868,4269,9.369,4270,6.635,4271,6.635,4272,6.635,4273,4.903,4274,4.903,4275,5.936,4276,5.286,4277,4.903,4278,3.221,4279,3.221,4280,3.221,4281,3.221,4282,3.221,4283,3.221,4284,3.221,4285,3.221,4286,3.221,4287,4.903,4288,3.221,4289,4.903,4290,3.221,4291,4.903,4292,3.221,4293,4.903,4294,3.221,4295,3.221,4296,5.936,4297,3.221,4298,3.221,4299,3.221,4300,3.221,4301,3.221,4302,4.903,4303,6.635,4304,4.903,4305,4.903,4306,4.903]],["title/modules/UtilityModule.html",[322,1.079,2584,3.45]],["body/modules/UtilityModule.html",[2,0.304,3,0.314,9,0.199,24,2.173,25,0.007,63,1.936,65,0.348,137,0.51,138,2.325,146,3.072,147,1.161,148,0.291,149,0.208,177,1.065,252,2.455,253,1.426,257,2.455,288,2.455,289,1.502,290,2.455,292,2.455,312,2.412,320,0.005,321,0.005,322,1.588,324,2.377,329,3.106,330,2.094,331,1.936,333,3.265,334,2.012,596,3.378,628,3.506,629,2.609,631,5.89,632,5.597,1163,7.27,1175,5.344,1887,6.337,1897,5.162,2584,6.815,2791,4.744,3823,5.162,3993,5.162,4015,5.162,4307,5.162,4308,5.162,4309,5.797,4310,5.162,4311,5.797,4312,5.797,4313,5.797,4314,5.797,4315,5.797]],["title/pipes/VisibleFieldsPipe.html",[1214,2.584,1886,3.847]],["body/pipes/VisibleFieldsPipe.html",[2,0.344,3,0.355,9,0.225,11,0.761,16,1.611,23,1.453,25,0.007,38,0.761,44,1.289,46,2.387,49,0.956,65,0.31,69,0.703,71,0.966,79,2.001,81,1.044,91,0.974,92,0.943,93,0.644,117,3.15,137,0.576,148,0.214,149,0.235,320,0.005,321,0.005,331,2.67,350,1.887,363,2.262,419,3.021,493,4.753,519,3.688,682,3.541,1056,5.236,1192,3.206,1214,4.432,1218,3.817,1224,5.768,1886,6.87,1892,6.847,1895,5.832,3654,6.112,4316,8.63,4317,6.55,4318,7.995,4319,7.995,4320,6.55,4321,7.995,4322,6.55,4323,6.55,4324,6.55,4325,6.55]],["title/interfaces/WithLoader.html",[338,1.424,923,2.744]],["body/interfaces/WithLoader.html",[0,0.318,2,0.378,3,0.391,9,0.247,11,0.838,25,0.007,37,0.757,38,0.984,60,1.189,65,0.259,69,0.635,148,0.236,241,2.168,320,0.006,321,0.006,338,2.626,428,3.398,497,4.281,527,5.548,923,4.62,2613,6.476,2649,5.904,4326,7.215,4327,7.215,4328,8.472]],["title/interfaces/WithNotifications.html",[338,1.424,924,3.161]],["body/interfaces/WithNotifications.html",[0,0.31,2,0.362,3,0.374,9,0.237,11,0.802,25,0.007,30,1.491,37,0.724,38,0.959,60,1.172,61,3.385,65,0.248,69,0.726,93,0.9,148,0.226,320,0.006,321,0.006,338,2.589,346,1.959,585,2.983,591,4.584,924,5.186,948,3.044,1046,4.989,1441,7.488,1631,4.989,2053,6.273,2058,7.353,3351,8.148,4329,6.908,4330,6.908]],["title/changelog.html",[1193,2.574,3198,2.921,4331,1.672]],["body/changelog.html",[14,3.616,25,0.006,89,1.912,139,2.411,320,0.006,321,0.006,350,2.201,1075,3.712,1212,4.304,2096,4.041,4331,2.999,4332,2.875,4333,4.617,4334,4.799,4335,5.004,4336,5.004,4337,4.799,4338,5.004]],["title/dependencies.html",[63,2.011,4332,1.603]],["body/dependencies.html",[13,4.398,14,3.841,25,0.007,63,2.243,137,0.591,138,2.693,139,2.119,214,1.652,255,1.596,320,0.005,321,0.005,350,1.934,505,3.178,596,3.913,598,3.448,629,3.022,634,6.205,635,5.98,647,4.398,1165,4.844,1166,4.844,1210,4.218,1211,4.844,1212,3.782,1845,5.856,1846,5.316,1994,5.495,2755,5.98,3521,8.63,4037,4.218,4333,4.057,4334,4.218,4335,4.398,4336,4.398,4337,4.218,4338,4.398,4339,8.117,4340,6.715,4341,5.98,4342,8.57,4343,5.98,4344,4.218,4345,6.715,4346,6.715,4347,6.715,4348,6.715,4349,6.715,4350,5.495,4351,6.715,4352,6.715,4353,6.715,4354,6.715,4355,6.715,4356,6.715,4357,6.715,4358,6.715,4359,6.715,4360,6.715]],["title/miscellaneous/functions.html",[532,2.777,4361,3.257]],["body/miscellaneous/functions.html",[25,0.006,37,0.763,70,1.457,91,1.342,92,0.987,93,0.888,320,0.006,321,0.006,346,1.615,428,2.918,445,2.796,532,3.357,623,7.386,625,6.48,633,6.48,753,6.928,1692,5.669,3864,6.48,3868,7.582,3869,7.582,3870,7.582,3878,6.48,3883,6.48,3885,6.48,3886,6.48,4361,5.563,4362,7.277,4363,9.026]],["title/index.html",[37,0.447,1193,2.574,3198,2.921]],["body/index.html",[0,0.35,2,0.284,3,0.293,5,2.561,9,0.186,12,4.721,13,3.544,14,3.966,15,4.117,25,0.006,39,2.981,60,1.195,61,2.219,63,1.807,66,3.537,67,3.639,75,2.366,76,1.626,89,1.354,92,0.592,93,0.532,118,0.68,139,1.708,149,0.194,232,1.029,244,1.264,255,1.286,320,0.005,321,0.005,331,1.807,341,3.682,350,1.559,410,3.904,426,2.509,495,2.322,503,1.955,505,3.966,512,2.779,514,2.629,516,4.433,572,1.842,573,4.281,588,3.353,595,2.951,647,3.544,658,4.129,739,3.27,774,4.45,782,3.27,804,2.779,835,2.951,874,3.544,910,2.862,944,4.885,957,3.544,968,2.561,1024,5.112,1043,2.561,1120,5.798,1193,3.27,1210,3.399,1212,3.048,1237,2.629,1262,6.859,1676,3.399,1681,5.642,1692,3.399,1706,3.544,1753,3.747,1912,2.862,1970,3.71,2053,3.71,2261,6.465,2395,5.112,2601,3.71,3017,4.137,3118,4.137,3198,3.71,3202,3.71,3218,4.137,3220,3.71,3802,5.112,3877,7.12,3912,4.604,3939,4.137,3997,5.416,4037,3.399,4046,5.416,4331,2.124,4332,3.472,4333,3.27,4334,3.399,4335,3.544,4336,3.544,4337,3.399,4338,3.544,4344,5.606,4350,6.465,4364,3.944,4365,4.819,4366,4.819,4367,6.309,4368,4.819,4369,4.819,4370,6.309,4371,4.819,4372,4.137,4373,4.819,4374,6.408,4375,6.309,4376,4.819,4377,4.819,4378,4.819,4379,4.137,4380,5.798,4381,4.819,4382,7.035,4383,4.819,4384,6.859,4385,4.819,4386,4.819,4387,4.819,4388,2.951,4389,4.433,4390,4.819,4391,4.428,4392,4.428,4393,4.819,4394,3.639,4395,4.819,4396,5.798,4397,4.819,4398,3.048,4399,3.048,4400,4.819,4401,6.039,4402,4.428,4403,6.236,4404,3.904,4405,4.428,4406,4.819,4407,4.819,4408,4.819,4409,4.819,4410,4.428,4411,4.428,4412,4.428,4413,6.309,4414,6.309,4415,4.819,4416,4.819,4417,4.819,4418,4.137,4419,4.819,4420,4.819]],["title/modules.html",[322,1.448]],["body/modules.html",[25,0.005,320,0.005,321,0.005,322,1.44,323,4.844,616,4.844,622,3.913,776,4.398,1058,6.861,1148,4.604,1154,4.844,1155,4.604,1156,4.398,1846,6.554,1879,4.604,1887,4.604,1888,4.398,1889,4.057,1890,4.398,1891,4.398,2578,4.604,2584,4.604,2686,4.844,2915,4.844,3267,4.844,3788,4.844,4117,4.844,4276,8.912,4421,10.008]],["title/overview.html",[4422,3.803]],["body/overview.html",[0,0.087,1,2.098,20,1.198,24,2.019,25,0.007,26,3.677,27,3.677,28,3.677,29,4.303,30,1.379,63,0.773,115,1.723,146,0.871,148,0.076,149,0.083,164,0.679,177,0.426,179,0.472,184,1.693,186,1.198,187,1.784,189,1.753,192,1.753,195,1.784,198,1.784,199,1.784,201,1.753,203,1.784,205,1.753,207,1.198,208,1.198,211,1.198,212,1.753,213,1.753,216,1.784,218,1.784,219,1.753,220,1.784,221,1.784,222,1.784,223,1.753,225,1.753,226,1.784,228,1.753,230,1.753,234,1.753,236,1.723,237,1.753,239,1.753,241,1.608,243,1.753,246,1.723,248,1.753,250,1.693,252,1.753,254,2.098,257,1.753,260,1.753,262,1.753,264,1.693,266,1.723,267,1.753,269,1.753,272,1.723,273,1.753,275,1.753,276,1.784,278,1.784,279,1.784,280,1.753,281,1.784,282,1.784,283,1.784,285,1.723,286,1.753,288,1.753,290,1.753,292,1.753,294,1.784,296,1.753,298,1.753,300,1.753,302,1.753,304,1.693,306,1.723,308,1.723,310,1.723,312,1.723,314,1.723,317,1.723,320,0.003,321,0.003,322,0.81,323,4.39,324,0.95,325,2.062,326,2.062,327,2.062,328,2.062,329,1.585,330,0.837,331,0.773,338,0.655,414,1.962,437,0.6,489,2.789,542,3.135,555,3.006,578,1.895,592,2.325,616,6.403,617,2.062,618,2.062,619,2.062,620,2.062,621,2.062,622,5.506,623,3.917,624,2.892,776,5.643,777,2.062,778,2.062,779,2.062,780,5.264,841,1.455,934,2.892,936,2.789,939,1.879,1070,2.892,1077,2.892,1148,6.641,1149,2.062,1150,2.062,1151,2.062,1152,2.062,1153,2.062,1154,6.917,1155,6.535,1156,5.468,1157,3.659,1158,3.006,1214,1.189,1216,4.967,1547,2.892,1697,1.588,1838,2.062,1839,2.062,1841,2.062,1842,2.062,1879,6.535,1880,2.062,1881,2.062,1882,2.062,1883,2.062,1884,2.062,1885,5.264,1886,5.264,1887,6.214,1888,5.776,1889,5.105,1890,5.397,1891,5.397,1892,3.453,1968,3.282,2089,3.453,2116,2.062,2117,2.062,2118,2.062,2119,2.062,2318,2.062,2319,2.062,2320,2.062,2404,2.062,2578,6.465,2579,2.062,2580,2.062,2581,2.062,2582,2.062,2583,2.062,2584,6.266,2644,2.062,2645,2.062,2646,2.062,2647,2.062,2686,6.024,2687,2.062,2688,2.062,2690,2.062,2691,2.062,2915,4.39,2916,2.062,2917,2.062,2918,2.062,2919,2.062,3267,6.269,3268,2.062,3269,2.062,3271,2.062,3272,2.062,3509,2.062,3510,2.062,3512,2.062,3513,2.062,3630,2.062,3631,2.062,3633,2.062,3634,2.062,3698,2.062,3699,2.062,3788,6.217,3789,2.062,3790,2.062,3792,2.062,3906,2.062,3907,2.062,3908,2.062,3909,2.062,3910,5.264,4117,4.39,4118,2.062,4119,2.062,4120,2.062,4190,2.062,4192,2.062,4307,2.062,4308,2.062,4310,2.062,4422,1.304,4423,1.35,4424,2.316,4425,2.316,4426,2.316]],["title/miscellaneous/typealiases.html",[4361,3.257,4427,6.021]],["body/miscellaneous/typealiases.html",[25,0.006,37,0.807,69,0.677,320,0.006,321,0.006,340,6.3,345,7.06,532,3.551,4361,5.885,4428,7.699,4429,7.699]],["title/additional-documentation/angular-7-upgrade-guide.html",[15,1.381,601,0.682,841,1.833,2810,0.956,4372,2.23,4430,2.918]],["body/additional-documentation/angular-7-upgrade-guide.html",[0,0.212,2,0.296,9,0.25,15,4.604,25,0.007,38,0.656,39,1.886,40,1.093,60,1.157,65,0.33,66,3.637,67,2.9,75,1.886,76,1.056,89,2.26,93,0.717,123,4.026,147,1.131,164,1.656,320,0.005,321,0.005,322,1.729,343,3.973,354,1.687,381,4.245,457,3.699,495,3.656,572,1.923,584,4.965,585,3.319,595,3.08,658,4.245,701,4.103,739,3.412,782,3.412,803,3.412,825,3.291,841,5.351,851,4.375,942,2.8,1051,3.412,1067,4.699,1099,3.412,1116,4.402,1174,5.029,1187,4.074,1212,3.181,1214,2.9,1643,5.255,1681,3.291,1704,4.622,1912,2.987,2112,5.139,2128,4.317,2228,3.412,2229,3.412,2339,4.074,2616,3.547,2711,5.029,2841,4.317,2915,4.074,3028,3.699,3198,3.872,3237,4.317,3997,5.569,4052,6.487,4332,2.741,4333,3.412,4337,3.547,4342,5.029,4344,4.575,4372,6.165,4379,4.317,4389,2.987,4394,4.141,4402,4.622,4404,4.074,4410,4.622,4418,4.317,4431,5.648,4432,5.648,4433,5.648,4434,5.648,4435,5.648,4436,5.648,4437,5.648,4438,5.648,4439,5.648,4440,5.648,4441,5.648,4442,4.622,4443,7.285,4444,5.648,4445,5.648,4446,5.648,4447,5.648,4448,5.648,4449,5.648,4450,5.648,4451,5.648,4452,5.648,4453,5.648,4454,5.648,4455,5.029,4456,5.648,4457,5.648,4458,5.029,4459,7.285,4460,8.52,4461,7.587,4462,7.285,4463,5.648,4464,5.648,4465,5.648,4466,5.648,4467,5.648,4468,8.065,4469,5.648,4470,8.52,4471,8.065,4472,8.065,4473,7.285,4474,5.648,4475,5.648,4476,4.622,4477,5.648,4478,5.648,4479,7.285,4480,5.648,4481,5.648,4482,5.648,4483,5.648,4484,5.648,4485,5.648,4486,5.648,4487,5.648,4488,5.648,4489,5.029,4490,5.029,4491,5.648]],["title/additional-documentation/project-setup-tutorial.html",[601,0.762,2810,1.068,3912,1.9,4364,1.628,4492,2.352]],["body/additional-documentation/project-setup-tutorial.html",[0,0.289,2,0.269,5,4.047,9,0.176,15,2.43,24,2.007,25,0.007,30,1.236,32,1.599,39,1.715,49,0.999,60,1.095,61,2.106,63,1.715,65,0.34,67,2.637,76,1.599,79,1.713,90,3.705,92,0.561,93,0.505,107,2.637,108,1.973,118,0.645,137,0.452,138,2.06,146,1.933,147,1.371,148,0.252,149,0.184,164,1.506,214,1.263,320,0.005,321,0.005,322,1.101,324,2.106,334,1.783,341,3.007,363,1.453,410,4.938,490,3.733,499,2.06,505,2.43,512,3.515,516,2.716,572,3.176,586,2.993,591,3.158,596,2.993,627,2.369,629,2.311,648,6.566,651,5.602,653,5.602,654,6.277,656,5.554,657,5.602,658,4.487,677,3.521,701,2.893,773,6.856,774,4.836,825,2.993,826,2.637,840,3.926,841,3.226,874,3.364,938,1.893,944,3.989,961,2.993,968,2.43,1009,3.103,1043,3.239,1048,2.893,1051,3.103,1099,3.103,1114,5.602,1148,5.63,1160,4.573,1192,2.06,1193,4.136,1258,2.06,1659,3.364,1680,3.364,1681,4.785,1705,4.573,1771,3.926,1844,3.926,1845,4.938,1846,4.483,1912,3.62,1988,4.203,2050,4.203,2112,3.989,2229,3.103,2402,4.203,2535,3.705,2614,5.233,2616,4.299,3028,3.364,3089,4.573,3095,3.364,3171,5.602,3194,4.483,3220,3.521,3456,4.573,3912,2.993,3915,5.602,3939,3.926,4332,2.897,4333,4.652,4334,3.226,4341,4.573,4343,6.095,4344,3.226,4364,4.554,4374,5.233,4384,6.72,4388,4.478,4389,3.62,4391,4.203,4394,3.954,4401,5.233,4403,5.63,4404,3.705,4405,4.203,4411,6.3,4412,6.3,4418,3.926,4442,4.203,4461,4.573,4492,5.554,4493,5.136,4494,4.573,4495,5.136,4496,6.845,4497,6.845,4498,9.407,4499,5.136,4500,5.136,4501,5.136,4502,5.136,4503,5.136,4504,5.136,4505,4.573,4506,5.136,4507,5.136,4508,5.136,4509,5.136,4510,5.136,4511,5.136,4512,5.136,4513,5.136,4514,5.136,4515,6.845,4516,5.136,4517,5.136,4518,5.136,4519,5.136,4520,5.136,4521,5.136,4522,5.136,4523,3.989,4524,5.136,4525,6.845,4526,5.136,4527,3.926,4528,5.136,4529,5.136,4530,5.136,4531,5.136,4532,5.136,4533,5.136,4534,5.136,4535,5.136,4536,5.136]],["title/additional-documentation/project-setup-tutorial/routes.html",[490,2.323,601,0.995,2810,1.396]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.353,4,1.527,25,0.007,65,0.256,75,2.808,76,1.572,147,1.426,164,2.089,320,0.006,321,0.006,343,4.585,453,2.796,490,5.264,516,4.731,572,2.425,825,4.151,826,3.658,835,3.885,925,3.885,1046,4.304,1681,4.151,2112,4.151,2229,4.304,2260,4.151,3095,5.506,3730,6.343,4403,4.883,4492,6.066,4537,7.123,4538,7.123,4539,7.123,4540,7.123,4541,7.123,4542,7.123,4543,7.487,4544,7.123,4545,7.123,4546,7.123]],["title/additional-documentation/project-setup-tutorial/authorization.html",[601,0.995,2810,1.396,4527,3.257]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.272,4,1.823,25,0.006,60,0.929,66,3.622,67,3.726,75,2.839,76,1.356,79,1.816,164,2.128,250,1.785,253,2.217,320,0.006,321,0.006,419,3.347,453,2.848,490,5.07,572,2.894,589,6.132,825,4.228,826,3.726,928,5.567,1043,3.434,1258,2.91,1681,4.228,1912,3.837,2112,4.228,2260,4.228,2764,5.938,3912,4.228,4364,3.622,4492,6.504,4527,6.498,4547,6.461,4548,6.461,4549,6.461,4550,6.461]],["title/additional-documentation/project-setup-tutorial/localization.html",[601,0.995,2464,2.676,2810,1.396]],["body/additional-documentation/project-setup-tutorial/localization.html",[0,0.314,3,0.383,4,1.794,25,0.007,35,1.707,60,1.072,65,0.253,92,0.772,118,0.887,144,4.436,148,0.231,149,0.253,320,0.006,321,0.006,356,4.116,381,4.116,461,4.626,588,3.342,602,2.551,682,2.714,803,4.268,833,4.842,938,3.579,939,3.284,1043,3.342,1214,3.627,1404,5.399,1731,4.268,1830,4.842,1912,3.735,2049,3.342,2112,4.116,2464,5.599,2616,4.436,2631,5.78,3194,4.626,3396,5.399,3912,4.116,3913,6.815,3914,5.78,3915,5.78,3916,6.29,3917,6.29,3918,6.29,3919,6.29,3920,6.29,3921,6.29,3922,7.45,3923,6.846,3924,5.399]],["title/additional-documentation/project-setup-tutorial/custom-fields-config.html",[46,0.83,354,0.974,601,0.762,942,1.132,2810,1.068]],["body/additional-documentation/project-setup-tutorial/custom-fields-config.html",[0,0.225,8,2.169,25,0.007,30,1.084,32,1.122,38,0.88,43,1.621,46,2.336,47,3.828,48,1.761,60,0.769,61,2.462,69,0.528,76,1.122,79,1.896,81,1.198,92,0.907,108,2.91,117,2.95,118,0.952,148,0.196,149,0.215,196,1.473,209,1.142,320,0.005,321,0.005,349,3.175,354,2.478,355,3.855,363,1.699,402,4.414,435,1.826,445,2.307,499,3.038,503,2.736,509,3.175,532,2.77,574,5.435,602,2.169,873,4.757,897,4.526,925,3.274,935,3.932,936,4.414,942,2.084,968,3.584,1006,2.841,1046,3.628,1051,3.628,1053,3.083,1059,4.836,1061,3.274,1096,3.932,1192,2.408,1210,3.771,1218,3.499,1244,4.59,1248,5.346,1258,2.408,1264,4.414,1635,4.526,1659,5.435,1681,3.499,1692,3.771,1697,4.116,1700,4.59,1767,3.771,1874,3.771,2310,4.331,2460,5.346,2464,3.771,2951,6.199,3072,3.628,3095,3.932,3124,5.346,3237,4.59,3432,4.59,4543,5.346,4551,6.004,4552,4.913,4553,6.004,4554,6.004,4555,6.004,4556,6.004,4557,6.004,4558,5.346,4559,4.913,4560,6.004,4561,6.004,4562,7.575,4563,6.004,4564,6.004,4565,6.004]],["title/additional-documentation/project-setup-tutorial/custom-entry-list.html",[196,0.579,209,0.62,601,0.762,942,1.132,2810,1.068]],["body/additional-documentation/project-setup-tutorial/custom-entry-list.html",[0,0.31,4,1.003,19,1.798,25,0.007,31,1.003,32,1.201,38,1.065,39,1.562,40,0.905,43,1.477,46,2.357,47,3.639,48,2.571,49,1.209,60,1.143,69,0.695,71,0.777,75,1.562,79,1.837,80,1.112,81,1.165,89,1.978,108,2.469,117,2.36,118,1.075,123,4.135,126,1.533,128,2.403,148,0.153,149,0.168,164,1.372,196,1.556,209,1.503,266,1.608,320,0.005,321,0.004,331,1.562,341,2.055,349,2.474,354,2.764,355,2.007,363,1.324,402,3.745,408,2.938,428,2.944,435,2.666,453,2.522,493,4.97,497,2.055,499,1.876,503,2.321,516,2.474,519,2.158,527,4.209,548,2.726,559,4.209,574,4.209,584,2.726,585,1.69,587,2.938,588,3.74,591,2.158,686,1.798,828,3.064,841,4.036,869,2.336,873,2.938,905,4.166,933,4.036,936,2.726,942,3.24,949,4.003,957,3.064,961,2.726,967,2.964,968,3.041,1039,2.827,1046,2.827,1052,3.829,1055,3.208,1056,3.064,1058,4.406,1059,2.726,1062,3.883,1064,3.745,1067,2.726,1075,2.273,1099,2.827,1134,2.827,1192,3.633,1218,4.827,1244,6.542,1258,2.944,1264,3.745,1410,2.403,1575,3.577,1629,4.636,1632,4.913,1643,4.636,1644,3.375,1659,3.064,1676,2.938,1680,4.209,1686,3.064,1692,4.61,1700,3.577,1706,3.064,1830,3.208,1874,2.938,2049,3.474,2112,2.726,2208,4.166,2229,3.883,2262,5.976,2310,3.375,2354,4.036,2664,4.166,3018,5.612,3072,2.827,3074,3.577,3095,5.425,3194,3.064,3218,3.577,3220,3.208,3325,3.829,3432,4.913,3434,4.003,3654,3.577,4048,3.577,4552,7.003,4558,7.621,4559,7.306,4566,6.427,4567,4.679,4568,4.679,4569,4.679,4570,5.723,4571,4.679,4572,6.427,4573,6.427,4574,4.679,4575,4.679,4576,4.679,4577,4.679,4578,4.679,4579,4.679,4580,4.679,4581,7.341,4582,4.679,4583,4.679,4584,4.679,4585,4.913,4586,6.427,4587,4.679,4588,4.679,4589,4.679,4590,4.679,4591,4.679,4592,4.679,4593,4.679,4594,4.679]],["title/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[117,1.048,209,0.62,601,0.762,942,1.132,2810,1.068]],["body/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[0,0.348,4,1.676,12,3.245,15,1.896,16,1.66,17,4.91,19,2.835,21,1.719,24,1.979,25,0.007,26,3.245,27,2.256,28,3.245,29,2.256,30,0.723,31,1.447,32,1.737,33,3.774,35,1.631,38,0.908,39,1.924,40,1.859,41,4.238,43,1.42,45,3.278,46,2.332,48,1.175,49,0.585,54,2.516,57,3.482,58,3.062,60,1.12,61,1.642,63,1.338,65,0.308,66,4.064,67,4.015,69,0.594,75,2.801,76,1.077,78,2.747,80,0.952,86,2.516,89,1.956,92,0.438,93,0.394,94,2.516,104,2.516,107,2.057,108,2.214,113,1.417,115,2.148,117,3.035,118,0.927,119,2.256,126,1.313,127,3.358,137,0.594,138,2.311,139,2.13,144,2.516,145,4.715,146,1.507,148,0.221,149,0.242,162,3.774,164,1.175,173,3.619,209,1.548,214,1.66,295,0.968,320,0.004,321,0.004,322,0.859,331,1.338,333,3.801,334,1.391,342,1.946,344,2.416,349,2.119,354,2.683,355,3.355,381,2.335,400,3.062,408,2.516,411,4.405,425,2.421,428,1.607,435,2.052,445,1.539,447,2.185,453,2.648,461,3.774,497,2.531,499,1.607,503,2.438,512,2.959,516,3.903,572,2.772,574,3.774,585,2.438,587,3.619,588,2.727,591,2.658,600,3.95,658,3.932,739,2.421,804,2.057,817,2,825,2.335,826,2.057,835,2.185,851,2.959,869,2,873,2.516,897,3.142,908,2.256,909,2.624,919,3.569,921,3.062,935,2.624,936,2.335,942,3.304,949,3.142,1009,4.459,1038,3.062,1039,4.077,1042,2.747,1046,4.077,1047,4.405,1048,3.245,1053,2.959,1058,2.747,1059,3.932,1067,4.556,1100,3.567,1113,4.157,1171,2.516,1220,3.062,1251,4.025,1258,1.607,1391,2.747,1498,3.567,1567,2.747,1635,2.185,1644,2.89,1665,2.624,1673,3.95,1697,2.747,1700,4.405,1701,5.131,1814,3.062,1874,2.516,1877,5.641,1922,4.556,1934,4.715,2001,3.95,2049,2.727,2083,2.421,2166,3.062,2229,5.069,2262,4.157,2268,3.278,2303,3.567,2310,4.157,2338,3.567,2464,2.516,2535,4.157,2598,3.062,2769,3.278,2825,2.89,3018,6.224,3028,2.624,3043,3.278,3072,2.421,3074,3.062,3095,2.624,3102,3.278,3201,3.567,3202,2.747,3236,3.95,3237,3.062,3278,3.062,3408,3.567,3434,3.68,3802,2.89,3923,3.278,4046,3.062,4048,4.405,4403,2.747,4404,2.89,4490,3.567,4494,3.567,4523,2.335,4552,3.278,4559,4.715,4595,4.006,4596,4.006,4597,4.006,4598,4.006,4599,4.006,4600,4.006,4601,5.762,4602,4.006,4603,4.006,4604,4.006,4605,5.762,4606,4.006,4607,4.006,4608,4.006,4609,4.006,4610,5.762,4611,4.006,4612,4.006,4613,4.006,4614,4.006,4615,4.006,4616,4.006,4617,8.142,4618,4.006,4619,4.006,4620,4.006,4621,4.006,4622,5.762,4623,4.006,4624,4.006,4625,4.006,4626,4.006,4627,4.006,4628,4.006,4629,4.006,4630,4.006,4631,4.006,4632,4.006,4633,4.006,4634,4.006,4635,4.006,4636,4.006,4637,4.006,4638,4.006,4639,4.006,4640,4.006,4641,4.006,4642,4.006]],["title/additional-documentation/readme.html",[426,1.509,601,0.995,2810,1.396]],["body/additional-documentation/readme.html",[0,0.35,2,0.284,3,0.293,5,2.561,9,0.186,12,4.721,13,3.544,14,3.966,15,4.117,25,0.006,39,2.981,60,1.195,61,2.219,63,1.807,66,3.537,67,3.639,75,2.366,76,1.626,89,1.354,92,0.592,93,0.532,118,0.68,139,1.708,149,0.194,232,1.029,244,1.264,255,1.286,320,0.005,321,0.005,331,1.807,341,3.682,350,1.559,410,3.904,426,2.509,495,2.322,503,1.955,505,3.966,512,2.779,514,2.629,516,4.433,572,1.842,573,4.281,588,3.353,595,2.951,647,3.544,658,4.129,739,3.27,774,4.45,782,3.27,804,2.779,835,2.951,874,3.544,910,2.862,944,4.885,957,3.544,968,2.561,1024,5.112,1043,2.561,1120,5.798,1193,3.27,1210,3.399,1212,3.048,1237,2.629,1262,6.859,1676,3.399,1681,5.642,1692,3.399,1706,3.544,1753,3.747,1912,2.862,1970,3.71,2053,3.71,2261,6.465,2395,5.112,2601,3.71,3017,4.137,3118,4.137,3198,3.71,3202,3.71,3218,4.137,3220,3.71,3802,5.112,3877,7.12,3912,4.604,3939,4.137,3997,5.416,4037,3.399,4046,5.416,4331,2.124,4332,3.472,4333,3.27,4334,3.399,4335,3.544,4336,3.544,4337,3.399,4338,3.544,4344,5.606,4350,6.465,4364,3.944,4365,4.819,4366,4.819,4367,6.309,4368,4.819,4369,4.819,4370,6.309,4371,4.819,4372,4.137,4373,4.819,4374,6.408,4375,6.309,4376,4.819,4377,4.819,4378,4.819,4379,4.137,4380,5.798,4381,4.819,4382,7.035,4383,4.819,4384,6.859,4385,4.819,4386,4.819,4387,4.819,4388,2.951,4389,4.433,4390,4.819,4391,4.428,4392,4.428,4393,4.819,4394,3.639,4395,4.819,4396,5.798,4397,4.819,4398,3.048,4399,3.048,4400,4.819,4401,6.039,4402,4.428,4403,6.236,4404,3.904,4405,4.428,4406,4.819,4407,4.819,4408,4.819,4409,4.819,4410,4.428,4411,4.428,4412,4.428,4413,6.309,4414,6.309,4415,4.819,4416,4.819,4417,4.819,4418,4.137,4419,4.819,4420,4.819]],["title/additional-documentation/readme/data-readme.html",[341,1.623,426,1.308,601,0.863,2810,1.21]],["body/additional-documentation/readme/data-readme.html",[0,0.317,7,1.861,19,2.76,25,0.007,39,2.399,60,0.92,65,0.303,75,2.399,148,0.235,149,0.322,164,2.107,320,0.006,321,0.006,322,1.925,334,2.494,499,2.881,505,3.399,572,2.446,601,1.678,774,4.512,909,4.705,1148,5.793,1647,5.879,1676,4.512,2400,6.397,3336,5.182,4331,2.819,4332,3.18,4333,5.425,4388,4.896,4389,3.799,4422,4.76,4523,4.186,4585,5.492,4643,5.879,4644,5.879,4645,6.915,4646,7.184,4647,4.705]],["title/additional-documentation/readme/ui-readme.html",[426,1.308,601,0.863,944,2.153,2810,1.21]],["body/additional-documentation/readme/ui-readme.html",[0,0.271,7,1.875,15,3.424,25,0.007,39,2.416,65,0.305,139,2.842,148,0.237,149,0.305,164,2.122,320,0.006,321,0.006,322,1.819,334,2.512,350,2.084,572,2.463,601,1.69,622,4.945,909,4.738,2260,4.216,3098,6.443,3278,5.531,3336,5.22,4177,5.921,4331,2.84,4332,3.388,4388,4.911,4389,3.826,4422,4.78,4523,4.216,4585,5.531,4643,5.921,4644,5.921,4645,6.944,4647,4.738,4648,7.235]],["title/additional-documentation/readme/core-readme.html",[426,1.308,505,1.748,601,0.863,2810,1.21]],["body/additional-documentation/readme/core-readme.html",[15,3.515,25,0.006,39,2.878,48,2.178,76,1.388,147,1.487,149,0.309,320,0.006,321,0.006,350,2.482,505,3.515,739,4.487,874,4.864,909,4.864,1830,5.092,2260,4.328,2335,6.614,2337,5.678,3278,5.678,4331,2.915,4332,2.795,4388,4.05,4389,3.928,4422,4.183,4585,5.678,4643,6.078,4644,6.078,4645,6.078,4649,7.427,4650,7.427,4651,7.427]],["title/additional-documentation/readme/style-readme.html",[5,1.748,426,1.308,601,0.863,2810,1.21]],["body/additional-documentation/readme/style-readme.html",[5,4.567,25,0.006,39,2.379,49,1.227,60,1.146,65,0.332,164,2.089,320,0.006,321,0.006,354,2.511,426,2.522,572,3.046,584,4.151,753,5.139,826,3.658,942,2.473,1053,3.658,1912,3.767,2098,5.445,2262,6.066,3017,7.065,3912,4.151,4331,2.796,4332,3.366,4334,5.281,4344,4.474,4388,5.04,4389,3.767,4422,4.012,4455,8.23,4505,6.343,4652,7.123,4653,8.408,4654,7.123,4655,7.123,4656,7.123,4657,7.123]],["title/additional-documentation/readme/calendar-readme.html",[426,1.308,601,0.863,782,2.232,2810,1.21]],["body/additional-documentation/readme/calendar-readme.html",[0,0.276,24,2.159,25,0.007,60,0.943,65,0.308,148,0.241,149,0.264,164,2.159,320,0.006,321,0.006,322,1.838,334,2.556,572,2.506,601,1.72,776,5.614,782,4.448,803,4.448,826,3.781,954,4.29,1212,5.108,1912,3.893,4331,2.889,4332,3.226,4388,4.946,4389,3.893,4422,4.828,4523,4.29,4647,4.821]],["title/additional-documentation/readme/location-readme.html",[244,0.863,426,1.308,601,0.863,2810,1.21]],["body/additional-documentation/readme/location-readme.html",[12,4.069,15,3.419,25,0.007,40,1.64,46,1.84,60,0.925,65,0.304,117,2.323,118,0.908,148,0.236,149,0.259,164,2.119,244,1.688,246,1.808,320,0.006,321,0.006,322,1.818,334,2.508,572,2.46,601,1.688,602,2.61,826,3.71,910,3.821,1158,4.538,1684,6.434,1756,5.212,1970,4.953,2686,6.117,4331,2.836,4332,3.19,4336,5.894,4388,4.908,4389,3.821,4422,4.776,4523,4.21,4647,4.732,4658,7.225]],["title/additional-documentation/readme/ace-readme.html",[13,2.419,426,1.308,601,0.863,2810,1.21]],["body/additional-documentation/readme/ace-readme.html",[0,0.268,12,4.023,13,5.866,14,3.38,15,3.38,25,0.007,60,1.079,65,0.343,140,6.361,148,0.234,149,0.256,164,2.095,320,0.006,321,0.006,322,1.806,323,6.076,334,2.48,572,3.049,601,1.668,826,3.668,1067,4.163,2098,5.46,2128,5.46,2262,5.153,3028,4.678,4048,5.46,4331,2.803,4332,3.169,4335,5.866,4344,4.486,4388,4.885,4389,3.778,4422,4.744,4523,4.163,4647,4.678,4659,8.422,4660,7.143,4661,7.143,4662,7.143]],["title/additional-documentation/readme/medium-editor-readme.html",[14,1.543,255,0.775,426,1.154,601,0.762,2810,1.068]],["body/additional-documentation/readme/medium-editor-readme.html",[12,4.134,14,4.416,15,3.474,25,0.007,60,0.94,65,0.307,148,0.24,149,0.263,164,2.153,179,1.495,255,1.744,320,0.006,321,0.006,322,1.835,334,2.548,572,2.499,601,1.715,826,3.77,4331,2.881,4332,3.22,4337,5.689,4388,4.94,4389,3.882,4422,4.82,4458,7.621,4523,4.278,4647,4.807]],["title/additional-documentation/readme/tinymce-readme.html",[426,1.308,601,0.863,2810,1.21,4037,2.32]],["body/additional-documentation/readme/tinymce-readme.html",[0,0.273,5,4.029,9,0.25,12,4.099,14,3.444,15,3.444,25,0.007,60,0.932,65,0.306,148,0.238,149,0.261,164,2.134,320,0.006,321,0.006,322,1.826,334,2.526,572,2.899,601,1.7,826,3.737,3028,4.766,4037,4.57,4117,6.142,4331,2.856,4332,3.204,4338,5.911,4388,4.923,4389,3.848,4422,4.796,4476,5.955,4523,4.241,4647,4.766,4663,7.277,4664,7.277]],["title/additional-documentation/changelog.html",[601,0.995,2810,1.396,4331,1.672]],["body/additional-documentation/changelog.html",[14,3.616,25,0.006,89,1.912,139,2.411,320,0.006,321,0.006,350,2.201,1075,3.712,1212,4.304,2096,4.041,4331,2.999,4332,2.875,4333,4.617,4334,4.799,4335,5.004,4336,5.004,4337,4.799,4338,5.004]],["title/additional-documentation/changelog/data-changelog.html",[341,1.623,601,0.863,2810,1.21,4331,1.45]],["body/additional-documentation/changelog/data-changelog.html",[0,0.245,9,0.224,14,2.271,25,0.006,32,0.897,37,0.503,43,0.794,46,1.665,47,3.267,49,0.7,60,0.837,65,0.172,69,0.654,71,0.58,75,2.184,76,0.897,79,1.636,81,0.626,89,1.999,99,3.927,117,2.102,118,0.603,148,0.157,190,1.222,193,1.992,196,1.483,209,1.752,232,1.752,274,1.881,303,1.16,320,0.004,321,0.004,343,2.617,354,2.682,412,2.012,428,1.925,448,1.459,453,1.883,495,2.059,499,1.925,503,1.733,514,2.331,516,2.538,519,2.214,520,2.214,548,3.811,571,2.271,572,1.634,573,2.899,582,2.271,585,1.733,595,2.617,601,1.121,627,2.214,637,3.668,654,4.999,686,1.844,804,2.464,817,3.264,828,3.143,835,2.617,851,2.464,936,2.796,941,2.899,942,2.27,967,3.684,1009,2.899,1045,3.29,1047,3.668,1048,2.703,1053,2.464,1061,2.617,1062,2.899,1113,3.462,1143,2.796,1171,3.014,1237,2.331,1239,3.462,1366,3.668,1469,3.927,1474,4.273,1548,5.231,1629,3.462,1630,3.668,1753,2.538,1755,3.668,1805,3.462,1856,3.462,1862,3.927,1874,3.014,2049,2.271,2096,2.538,2226,4.999,2228,5.565,2229,4.826,2260,3.811,2455,3.668,2456,3.927,2832,3.668,3016,3.668,3236,4.483,3330,4.87,3434,5.07,3551,4.273,3666,5.351,3708,4.273,3735,5.823,4177,3.927,4332,3.498,4333,5.618,4364,2.396,4394,4.775,4398,2.703,4399,4.189,4423,4.335,4570,4.273,4665,2.899,4666,2.899,4667,4.799,4668,5.848,4669,6.592,4670,4.799,4671,6.645,4672,4.799,4673,4.799,4674,4.799,4675,4.799,4676,5.83,4677,3.927,4678,4.799,4679,6.539,4680,4.799,4681,4.799,4682,4.799,4683,5.618,4684,4.799,4685,4.799,4686,4.799,4687,4.799,4688,4.799,4689,4.799,4690,5.05,4691,4.799,4692,4.799,4693,4.799,4694,4.799,4695,4.273,4696,4.273,4697,4.799,4698,4.273,4699,4.799,4700,4.799,4701,4.799,4702,4.799,4703,4.799,4704,4.799,4705,4.799,4706,4.799,4707,4.273,4708,4.799,4709,4.273,4710,4.799,4711,4.799,4712,4.799,4713,4.799,4714,4.799,4715,4.799,4716,4.273,4717,4.273,4718,4.273,4719,4.799,4720,4.799,4721,4.799,4722,4.799,4723,4.799,4724,4.273,4725,4.273,4726,4.799,4727,4.799,4728,3.927,4729,4.799,4730,4.799,4731,4.273,4732,4.273,4733,4.799,4734,4.799,4735,4.799,4736,4.273,4737,4.799,4738,4.799,4739,4.799,4740,4.799,4741,4.799,4742,4.799,4743,4.799,4744,4.799,4745,4.273,4746,4.273,4747,3.927,4748,4.273,4749,4.273,4750,4.799,4751,4.799,4752,4.273]],["title/additional-documentation/changelog/ui-changelog.html",[601,0.863,944,2.153,2810,1.21,4331,1.45]],["body/additional-documentation/changelog/ui-changelog.html",[0,0.267,9,0.187,25,0.006,32,1.332,40,1.535,44,1.074,45,3.462,46,1.39,47,3.13,50,2.887,65,0.256,66,2.725,69,0.627,75,1.823,76,1.02,89,2.104,92,0.597,99,5.831,118,0.895,139,2.876,148,0.26,193,2.019,196,1.265,209,1.355,214,1.342,232,1.733,274,1.19,320,0.005,321,0.005,354,2.511,420,3.938,437,1.414,448,1.66,453,2.142,478,3.428,503,1.972,512,2.803,571,2.583,572,1.858,585,3.038,686,2.097,817,2.725,835,2.977,851,2.803,944,3.181,967,3.66,1045,3.742,1061,2.977,1087,3.428,1143,3.181,1171,4.475,1237,2.652,1258,2.189,1448,4.172,1548,5.508,1629,3.938,1630,4.172,1753,2.887,1805,3.938,1816,3.181,1856,3.938,1862,4.467,2049,2.583,2096,2.887,2228,5.585,2229,4.793,2453,4.172,2455,4.172,2456,4.467,2832,4.172,3016,4.172,3236,4.885,3330,4.901,3336,3.938,3434,4.97,3913,4.172,3924,4.172,3979,4.172,4332,3.478,4364,2.725,4394,4.68,4398,3.074,4399,4.013,4423,4.623,4489,4.86,4665,3.298,4666,3.298,4668,5.855,4669,6.065,4671,6.668,4676,5.855,4677,4.467,4683,5.507,4690,5.271,4695,4.86,4696,4.86,4698,4.86,4709,4.86,4716,4.86,4717,4.86,4718,4.86,4724,4.86,4725,4.86,4728,4.467,4731,4.86,4732,4.86,4736,4.86,4745,4.86,4746,4.86,4747,4.467,4749,4.86,4752,4.86,4753,5.458,4754,5.458,4755,5.458,4756,5.458,4757,4.467,4758,5.458,4759,5.458,4760,5.458,4761,5.458,4762,5.458,4763,5.458,4764,5.458,4765,5.458,4766,5.458,4767,5.458,4768,5.458,4769,5.458,4770,5.458,4771,5.458,4772,5.458,4773,5.458,4774,5.458,4775,5.458,4776,5.458,4777,5.458,4778,5.458,4779,5.458,4780,5.458,4781,5.458,4782,4.86,4783,5.458,4784,4.86,4785,5.458,4786,5.458,4787,5.458]],["title/additional-documentation/changelog/core-changelog.html",[505,1.748,601,0.863,2810,1.21,4331,1.45]],["body/additional-documentation/changelog/core-changelog.html",[9,0.23,25,0.006,32,1.252,43,1.108,60,0.858,81,0.874,89,2.181,232,1.541,320,0.005,321,0.005,350,2.714,503,2.419,512,3.439,514,3.254,519,3.089,520,3.089,571,3.169,574,4.386,585,2.419,686,2.573,948,2.469,1753,3.542,2096,3.542,2226,6.195,2228,4.047,2260,3.903,2377,5.964,2453,5.12,3236,4.592,3330,3.903,3434,5.139,4332,3.546,4364,3.344,4394,4.839,4398,3.772,4399,4.565,4423,4.723,4665,4.047,4666,4.047,4668,5.812,4669,5.12,4671,4.832,4676,5.812,4683,5.694,4690,5.471,4707,5.964,4728,5.481,4747,5.481,4748,5.964,4757,5.481,4784,5.964,4788,6.698,4789,6.698,4790,6.698,4791,6.698,4792,6.698,4793,6.698,4794,6.698,4795,6.698,4796,6.698,4797,6.698,4798,6.698]],["title/additional-documentation/changelog/style-changelog.html",[5,1.748,601,0.863,2810,1.21,4331,1.45]],["body/additional-documentation/changelog/style-changelog.html",[9,0.232,25,0.006,32,1.267,89,2.043,93,0.667,232,1.552,274,1.478,320,0.006,321,0.006,354,2.024,503,2.449,512,3.481,835,3.697,1045,4.647,1753,3.585,1873,5.547,2096,3.585,2228,4.932,2453,5.182,3236,4.647,3330,3.95,3434,5.154,4332,3.556,4334,5.935,4364,3.384,4394,4.853,4398,3.818,4399,4.598,4423,4.757,4665,4.096,4666,4.096,4668,5.864,4669,6.24,4671,5.889,4676,5.864,4677,5.547,4683,5.71,4690,5.493,4757,5.547,4799,6.779,4800,6.779,4801,6.779,4802,6.779,4803,6.779,4804,6.779,4805,6.779,4806,6.779,4807,6.779,4808,6.779,4809,6.779]],["title/additional-documentation/changelog/calendar-changelog.html",[601,0.863,782,2.232,2810,1.21,4331,1.45]],["body/additional-documentation/changelog/calendar-changelog.html",[9,0.239,25,0.006,89,2.076,320,0.006,321,0.006,503,2.516,1212,5.413,1753,3.684,2096,3.684,3330,4.059,3434,5.241,4332,3.616,4364,3.477,4394,4.935,4398,3.923,4399,4.673,4423,5.165,4665,4.209,4666,4.209,4668,5.853,4676,5.853,4683,5.807,4690,5.543,4810,6.966,4811,6.966,4812,6.966,4813,6.966,4814,6.203,4815,6.966,4816,6.966,4817,6.966]],["title/additional-documentation/changelog/location-changelog.html",[244,0.863,601,0.863,2810,1.21,4331,1.45]],["body/additional-documentation/changelog/location-changelog.html",[9,0.242,25,0.006,89,2.092,320,0.006,321,0.006,503,2.548,1753,3.73,2096,3.73,3330,4.11,3434,5.201,4332,3.589,4336,6.246,4364,3.521,4394,4.897,4398,3.973,4399,4.708,4423,4.871,4665,4.262,4666,4.262,4668,5.821,4676,5.821,4683,5.762,4690,5.566,4818,7.053,4819,7.053,4820,7.053,4821,7.053,4822,7.053,4823,7.053,4824,7.053]],["title/additional-documentation/changelog/ace-changelog.html",[13,2.419,601,0.863,2810,1.21,4331,1.45]],["body/additional-documentation/changelog/ace-changelog.html",[9,0.242,25,0.006,89,2.092,320,0.006,321,0.006,503,2.548,1753,3.73,2096,3.73,3330,4.11,3434,5.201,4332,3.589,4335,6.246,4364,3.521,4394,4.897,4398,3.973,4399,4.708,4423,4.871,4665,4.262,4666,4.262,4668,5.821,4676,5.821,4683,5.762,4690,5.566,4825,7.053,4826,7.053,4827,7.053,4828,7.053,4829,7.053,4830,7.053,4831,7.053]],["title/additional-documentation/changelog/medium-editor-changelog.html",[14,1.543,255,0.775,601,0.762,2810,1.068,4331,1.28]],["body/additional-documentation/changelog/medium-editor-changelog.html",[9,0.24,14,4.504,25,0.006,89,2.081,320,0.006,321,0.006,503,2.527,1753,3.699,2096,3.699,3330,4.076,3434,5.191,4332,3.582,4337,5.978,4364,3.492,4394,4.888,4398,3.94,4399,4.685,4423,4.847,4665,4.226,4666,4.226,4668,5.811,4676,5.811,4683,5.751,4690,5.551,4832,6.995,4833,6.995,4834,6.995,4835,6.995,4836,6.995,4837,6.995,4838,6.995]],["title/additional-documentation/changelog/tinymce-changelog.html",[601,0.863,2810,1.21,4037,2.32,4331,1.45]],["body/additional-documentation/changelog/tinymce-changelog.html",[0,0.255,9,0.234,15,3.225,25,0.006,50,3.604,57,4.118,89,2.049,121,2.733,320,0.006,321,0.006,503,2.462,514,3.311,585,2.462,1753,3.604,2096,3.604,2228,5.305,3330,4.773,3434,5.16,4037,5.144,4332,3.56,4338,6.197,4364,3.402,4394,4.914,4398,3.838,4399,4.613,4423,4.773,4665,4.118,4666,4.118,4668,5.83,4671,5.908,4676,5.83,4683,5.717,4690,5.503,4839,6.815,4840,6.815,4841,6.815,4842,6.815,4843,6.815,4844,6.815,4845,6.815,4846,6.815,4847,6.815,4848,6.815,4849,6.815,4850,6.815,4851,6.815,4852,6.815]],["title/additional-documentation/adding-new-packages.html",[76,0.609,601,0.762,835,1.778,2810,1.068,4332,1.227]],["body/additional-documentation/adding-new-packages.html",[8,2.274,9,0.216,25,0.007,43,1.042,61,2.581,63,2.606,65,0.338,66,3.143,67,3.233,75,2.103,76,1.703,89,1.576,92,0.853,164,1.846,320,0.005,321,0.005,341,3.894,343,3.434,381,4.942,503,2.274,516,4.485,572,3.102,585,2.274,591,3.6,597,4.256,598,3.233,601,1.471,647,4.123,693,5.607,701,4.395,816,5.607,825,3.669,826,3.233,835,3.434,840,4.813,841,3.954,924,4.901,1067,3.669,1114,6.386,1366,4.813,1659,5.11,1681,3.669,1697,4.317,1912,4.127,2054,5.152,2112,3.669,2128,4.813,2228,5.124,2527,6.386,2598,4.813,2707,7.551,3028,4.123,3166,6.949,3432,5.965,4331,2.471,4332,3.429,4344,4.901,4374,4.813,4379,4.813,4380,5.152,4392,5.152,4394,3.233,4401,4.813,4403,5.814,4442,6.939,4476,5.152,4782,5.607,4853,6.296,4854,6.296,4855,6.296,4856,6.296,4857,6.296,4858,6.296,4859,6.296,4860,6.296,4861,6.296,4862,6.296,4863,6.296,4864,6.296,4865,6.296,4866,6.296,4867,7.804,4868,7.804,4869,6.296,4870,6.296,4871,6.296,4872,6.296,4873,6.296,4874,6.296,4875,6.296,4876,6.296,4877,6.296,4878,7.804,4879,7.804,4880,6.296]],["title/additional-documentation/stackblitz.html",[601,0.995,2810,1.396,4881,3.794]],["body/additional-documentation/stackblitz.html",[0,0.274,5,3.464,15,3.464,25,0.007,60,0.937,65,0.335,75,2.444,148,0.239,149,0.263,320,0.006,321,0.006,322,1.569,334,2.541,572,2.492,573,4.422,776,5.595,1212,4.812,1912,3.871,2098,5.595,3914,5.99,4523,4.265,4814,6.518,4881,7.608,4882,7.319,4883,7.319,4884,7.319]],["title/additional-documentation/publishing.html",[601,0.995,2810,1.396,4396,3.486]],["body/additional-documentation/publishing.html",[0,0.272,4,1.823,25,0.006,60,0.929,66,3.622,67,3.726,75,2.839,76,1.356,79,1.816,164,2.128,250,1.785,253,2.217,320,0.006,321,0.006,419,3.347,453,2.848,490,5.07,572,2.894,589,6.132,825,4.228,826,3.726,928,5.567,1043,3.434,1258,2.91,1681,4.228,1912,3.837,2112,4.228,2260,4.228,2764,5.938,3912,4.228,4364,3.622,4492,6.504,4527,6.498,4547,6.461,4548,6.461,4549,6.461,4550,6.461]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["0",{"_index":869,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["0.12.3\",in",{"_index":4475,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["0.17.20",{"_index":4348,"title":{},"body":{"dependencies.html":{}}}],["0.18.3",{"_index":4824,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.4",{"_index":4823,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.5",{"_index":4822,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.6",{"_index":4821,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.7",{"_index":4820,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.8",{"_index":4819,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.9",{"_index":4818,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.19.10",{"_index":4791,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.11",{"_index":4790,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.12",{"_index":4789,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.6",{"_index":4795,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.7",{"_index":4794,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.8",{"_index":4793,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.9",{"_index":4792,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.2.10",{"_index":4810,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.3",{"_index":4817,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.4",{"_index":4816,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.5",{"_index":4815,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.6",{"_index":4814,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["0.2.7",{"_index":4813,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.8",{"_index":4812,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.9",{"_index":4811,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.20.0",{"_index":4788,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.21.0",{"_index":4807,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.1",{"_index":4806,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.2",{"_index":4805,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.3",{"_index":4804,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.4",{"_index":4803,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.5",{"_index":4802,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.6",{"_index":4801,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.0",{"_index":4800,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.1",{"_index":4799,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.36.10",{"_index":4764,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.11",{"_index":4763,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.12",{"_index":4762,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.13",{"_index":4761,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.14",{"_index":4760,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.15",{"_index":4759,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.4",{"_index":4773,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.5",{"_index":4772,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.6",{"_index":4771,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.7",{"_index":4770,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.8",{"_index":4767,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.9",{"_index":4765,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.0",{"_index":4756,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.1",{"_index":4754,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.2",{"_index":4753,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.4.3",{"_index":4838,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.4",{"_index":4837,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.5",{"_index":4836,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.6",{"_index":4835,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.7",{"_index":4834,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.8",{"_index":4833,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.9",{"_index":4832,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.42.10",{"_index":4699,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.11",{"_index":4697,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.12",{"_index":4694,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.13",{"_index":4693,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.14",{"_index":4692,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.15",{"_index":4691,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.16",{"_index":4689,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.4",{"_index":4705,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.5",{"_index":4704,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.6",{"_index":4703,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.7",{"_index":4702,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.8",{"_index":4701,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.9",{"_index":4700,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.0",{"_index":4686,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.1",{"_index":4684,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.2",{"_index":4682,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.3",{"_index":4678,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.4",{"_index":4675,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.5",{"_index":4667,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.5.10",{"_index":4839,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.3",{"_index":4850,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.4",{"_index":4849,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.5",{"_index":4848,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.6",{"_index":4847,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.7",{"_index":4842,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.8",{"_index":4841,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.9",{"_index":4840,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.6.3",{"_index":4831,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.4",{"_index":4830,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.5",{"_index":4829,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.6",{"_index":4828,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.7",{"_index":4827,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.8",{"_index":4826,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.9",{"_index":4825,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.8.26",{"_index":4360,"title":{},"body":{"dependencies.html":{}}}],["00a2e2",{"_index":4851,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["00dbf0",{"_index":2945,"title":{},"body":{"components/MenuComponent.html":{}}}],["01",{"_index":4676,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["02",{"_index":4669,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["020e689",{"_index":4727,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["04",{"_index":4670,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["04fffbd",{"_index":4732,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["06b615c",{"_index":4715,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0b433be",{"_index":4713,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["1",{"_index":164,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["1&&!pagination?.isfirst",{"_index":3412,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1&&!pagination?.islast",{"_index":3416,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1)[0",{"_index":895,"title":{},"body":{"classes/Collection.html":{}}}],["1.0.0",{"_index":4339,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":4354,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":4349,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":4497,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1.4.2",{"_index":4345,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":4358,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1659,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["100",{"_index":1817,"title":{},"body":{"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["10004",{"_index":1389,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["10m",{"_index":2408,"title":{},"body":{"components/ListComponent.html":{}}}],["11",{"_index":4878,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["12",{"_index":1716,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{}}}],["121566c",{"_index":4744,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["14",{"_index":4426,"title":{},"body":{"overview.html":{}}}],["18",{"_index":4425,"title":{},"body":{"overview.html":{}}}],["187",{"_index":4719,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["1].id",{"_index":383,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["1].indexof(tab.rout",{"_index":4022,"title":{},"body":{"components/TabsComponent.html":{}}}],["1c382d1",{"_index":4736,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1cb8b1c",{"_index":4783,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["1cfc328",{"_index":4709,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1d9e231",{"_index":4776,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2",{"_index":825,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["2.0.1",{"_index":4353,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":4501,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.5.4",{"_index":4347,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":4633,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["20",{"_index":2404,"title":{},"body":{"components/ListComponent.html":{},"overview.html":{}}}],["200",{"_index":2135,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":2625,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2019",{"_index":4668,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["21",{"_index":4423,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["24868b9",{"_index":4725,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["25",{"_index":3330,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["25a36aa",{"_index":4758,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["27",{"_index":3527,"title":{},"body":{"injectables/PopService.html":{}}}],["28",{"_index":4690,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["2826ac4",{"_index":4741,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["29a9e1",{"_index":2944,"title":{},"body":{"components/MenuComponent.html":{}}}],["3",{"_index":826,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["3.10.5",{"_index":4351,"title":{},"body":{"dependencies.html":{}}}],["300px",{"_index":2684,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["364482b",{"_index":4740,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["373bebf",{"_index":4809,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["39;muffin",{"_index":3114,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["3fb8f47",{"_index":4781,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["4",{"_index":3028,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["4.3.6",{"_index":4498,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.4",{"_index":4843,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["4.9.2",{"_index":4356,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2173,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["42",{"_index":1344,"title":{},"body":{"interfaces/Day.html":{}}}],["431e3fd",{"_index":4722,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43c7da5",{"_index":4711,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["46d4a1f",{"_index":4755,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["47a7930",{"_index":4746,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["48.8093253",{"_index":2665,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4920dd4",{"_index":4677,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["4a14246",{"_index":4714,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4a5ea9",{"_index":2946,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1697,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["5.0.0",{"_index":1954,"title":{},"body":{"injectables/FormService.html":{}}}],["5.23.2",{"_index":4352,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2951,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["500",{"_index":2958,"title":{},"body":{"components/MenuComponent.html":{}}}],["5000",{"_index":3294,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["500px",{"_index":176,"title":{},"body":{"components/AceComponent.html":{}}}],["50e2d98",{"_index":4777,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["5892365",{"_index":4726,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["5see",{"_index":3365,"title":{},"body":{"classes/Pagination.html":{}}}],["5the",{"_index":1699,"title":{},"body":{"classes/Field.html":{}}}],["6",{"_index":840,"title":{},"body":{"classes/Collection.html":{},"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["6.3.3",{"_index":4355,"title":{},"body":{"dependencies.html":{}}}],["68",{"_index":4424,"title":{},"body":{"overview.html":{}}}],["6e961b8",{"_index":4698,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["7",{"_index":841,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["7.2.0",{"_index":4342,"title":{},"body":{"dependencies.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["7.2.1",{"_index":4402,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["70d5e24",{"_index":4784,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["7430c70",{"_index":4757,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["7580583",{"_index":4742,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7733151",{"_index":4766,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["789e7ca",{"_index":4712,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["79c1a6d",{"_index":4685,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7a88da8",{"_index":4786,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["8",{"_index":2402,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["8236caf",{"_index":4752,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["83cc6374",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["8abc48b",{"_index":4681,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8fab72f",{"_index":4852,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["9",{"_index":1771,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/PopService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["9.159388100000001",{"_index":2666,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["96a29d70d11b",{"_index":3021,"title":{},"body":{"components/ModalComponent.html":{}}}],["9776",{"_index":2548,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["9a",{"_index":3168,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["9bf067d",{"_index":4747,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9e23457",{"_index":4674,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["9e671b9",{"_index":4724,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["_",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["_'@ec.components/$1'_",{"_index":4454,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_'@ec.components/(\\w+).*'_",{"_index":4453,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_]{22}$/.test(id",{"_index":1772,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":3170,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_api",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["_api.login(email",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["_cre",{"_index":3110,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_creat",{"_index":3124,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["_creator",{"_index":3131,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entri",{"_index":1126,"title":{},"body":{"injectables/CrudService.html":{}}}],["_entrytitl",{"_index":3172,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item",{"_index":3891,"title":{},"body":{"classes/Sorter.html":{}}}],["_item.id",{"_index":1519,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items.indexof(item",{"_index":3892,"title":{},"body":{"classes/Sorter.html":{}}}],["_method",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter(x",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modifi",{"_index":3129,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1356,"title":{},"body":{"interfaces/Day.html":{}}}],["_resourc",{"_index":3685,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["_toggl",{"_index":3494,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":4258,"title":{},"body":{"components/UploadComponent.html":{}}}],["a.path",{"_index":3571,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["a.then(r",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["a08a9d6",{"_index":4735,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a992381",{"_index":4718,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["abov",{"_index":1700,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["abstract",{"_index":909,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["abstractcontrol",{"_index":1940,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["ac",{"_index":13,"title":{"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}},"body":{"components/AceComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["accept",{"_index":3308,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["access",{"_index":1046,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/Symbol.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["access=publ",{"_index":4397,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["accessor",{"_index":3714,"title":{},"body":{"injectables/SdkService.html":{}}}],["accord",{"_index":3359,"title":{},"body":{"classes/Pagination.html":{}}}],["account",{"_index":406,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["accountresourc",{"_index":2779,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["accounts(environment.environ",{"_index":3769,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace'},{'nam",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ace.compon",{"_index":335,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":36,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":34,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeel",{"_index":155,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mod",{"_index":100,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/them",{"_index":103,"title":{},"body":{"components/AceComponent.html":{}}}],["acecompon",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["acemodul",{"_index":323,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["acemoduleconfig",{"_index":336,"title":{},"body":{"modules/AceModule.html":{}}}],["act",{"_index":1404,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["action",{"_index":339,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["action(item.getbody().data",{"_index":3546,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar",{"_index":351,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["actionbar'},{'nam",{"_index":185,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["actionbar.compon",{"_index":3639,"title":{},"body":{"modules/ResourceModule.html":{}}}],["actionbar.component.t",{"_index":3537,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.dropdownload",{"_index":3565,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.dropdownloader.wait(load",{"_index":3566,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.loadactions(act",{"_index":3564,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar/actionbar.compon",{"_index":3795,"title":{},"body":{"modules/SelectModule.html":{}}}],["actionbar/api",{"_index":3640,"title":{},"body":{"modules/ResourceModule.html":{}}}],["actionbar/resourc",{"_index":3536,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"modules/ResourceModule.html":{}}}],["actionbarcompon",{"_index":184,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["actionbarconfig",{"_index":352,"title":{"interfaces/ActionbarConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionfunct",{"_index":345,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"miscellaneous/typealiases.html":{}}}],["actions.length",{"_index":3581,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actions.push",{"_index":3549,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionsbefor",{"_index":374,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionstack",{"_index":357,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["activ",{"_index":582,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["activatedrout",{"_index":545,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active>a",{"_index":3013,"title":{},"body":{"components/MenuComponent.html":{}}}],["activi",{"_index":2633,"title":{},"body":{"components/LoaderComponent.html":{}}}],["actual",{"_index":2551,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_compon",{"_index":319,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ad",{"_index":835,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ad58c68",{"_index":4751,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["add",{"_index":572,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["add(item",{"_index":832,"title":{},"body":{"classes/Collection.html":{}}}],["addal",{"_index":813,"title":{},"body":{"classes/Collection.html":{}}}],["addall(item",{"_index":837,"title":{},"body":{"classes/Collection.html":{}}}],["addfield",{"_index":1913,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":1920,"title":{},"body":{"injectables/FormService.html":{}}}],["addimagebyurl",{"_index":4041,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addimagebyurl(url",{"_index":4059,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addit",{"_index":2810,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{}}}],["address",{"_index":1987,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["addtostack",{"_index":388,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["admin",{"_index":410,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["adminentryinputcompon",{"_index":186,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["adress",{"_index":3447,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["advanc",{"_index":3231,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["advantag",{"_index":2628,"title":{},"body":{"components/LoaderComponent.html":{}}}],["affect",{"_index":4580,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["aftercontentinit",{"_index":3999,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":2746,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["afterward",{"_index":3040,"title":{},"body":{"components/ModalComponent.html":{}}}],["agm",{"_index":2685,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["agm/cor",{"_index":1994,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":2697,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":2703,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnost",{"_index":4645,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["aizasyadgeue1yxo1f",{"_index":2705,"title":{},"body":{"modules/LocationModule.html":{}}}],["al",{"_index":4562,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["algorithm",{"_index":3874,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolv",{"_index":3898,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(properti",{"_index":3900,"title":{},"body":{"classes/Sorter.html":{}}}],["alias",{"_index":4428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{}}}],["along",{"_index":4524,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["alreadi",{"_index":3288,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["alt",{"_index":2190,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["alter",{"_index":3697,"title":{},"body":{"interfaces/SdkField.html":{}}}],["alter(valu",{"_index":1367,"title":{},"body":{"interfaces/Day.html":{}}}],["altern",{"_index":2166,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["alway",{"_index":1038,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["alwaysloadentri",{"_index":1020,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowhead",{"_index":2448,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amaz",{"_index":4559,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["amazement_factor",{"_index":4558,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazement_factor>=5",{"_index":4594,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amount",{"_index":3206,"title":{},"body":{"classes/Notification.html":{}}}],["angezeigt",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":15,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["angular.json",{"_index":4476,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["angular/anim",{"_index":4341,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":4496,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clith",{"_index":4495,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":629,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compil",{"_index":4343,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cor",{"_index":137,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/core/src/metadata/lifecycle_hook",{"_index":2573,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/datamanag",{"_index":4368,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["angular/form",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/http",{"_index":4499,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/languag",{"_index":4500,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":1845,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/rout",{"_index":596,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular7",{"_index":4431,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["anim",{"_index":3024,"title":{},"body":{"components/ModalComponent.html":{}}}],["anoth",{"_index":600,"title":{},"body":{"guards/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["anweisungen",{"_index":3464,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anyth",{"_index":4447,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["anywher",{"_index":1650,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{}}}],["api",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["api(api",{"_index":3758,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid",{"_index":481,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permiss",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.create(rel",{"_index":3689,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["api.createdmassets(assetgroupid",{"_index":1784,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["api.getschema(model",{"_index":3784,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.me().then((account",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["api.resourcelist",{"_index":517,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.resourcelist(rel",{"_index":3561,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["api.signup(email",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiactionbarcompon",{"_index":187,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["apikey",{"_index":2704,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolv",{"_index":3707,"title":{},"body":{"injectables/SdkService.html":{}}}],["app",{"_index":3220,"title":{},"body":{"components/NotificationsComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["app.compon",{"_index":4536,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.component.html",{"_index":3914,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/stackblitz.html":{}}}],["app.modul",{"_index":4660,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["appcompon",{"_index":3915,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["appear",{"_index":1648,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{}}}],["append",{"_index":1477,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["appletre",{"_index":2399,"title":{},"body":{"components/ListComponent.html":{}}}],["appli",{"_index":1253,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{}}}],["applic",{"_index":4046,"title":{},"body":{"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["applicationref",{"_index":4044,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applyconfig",{"_index":2471,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyconfig(list",{"_index":2475,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyfilt",{"_index":2515,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applyfilter(properti",{"_index":2523,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["appmodul",{"_index":4523,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["approutingmodul",{"_index":4521,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrari",{"_index":3362,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["architect",{"_index":4477,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["area",{"_index":3473,"title":{},"body":{"components/PopComponent.html":{}}}],["argument",{"_index":1411,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["around",{"_index":3408,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["array",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["array(42",{"_index":1326,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.tot",{"_index":3380,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from(new",{"_index":3367,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":1764,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1232,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.slice(start",{"_index":2874,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["artifact",{"_index":4409,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["ask",{"_index":3287,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobserv",{"_index":4090,"title":{},"body":{"components/TinymceComponent.html":{}}}],["asset",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["asset.assetid",{"_index":1768,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.file.resolut",{"_index":2214,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getfilevariant(this.s",{"_index":2158,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.s",{"_index":2160,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(s",{"_index":2195,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getimageurl(this.s",{"_index":2161,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getoriginalfil",{"_index":2209,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.id",{"_index":2156,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduc",{"_index":1765,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.titl",{"_index":2212,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.typ",{"_index":2154,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset/asset.direct",{"_index":1849,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirect",{"_index":304,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["assetgroup",{"_index":190,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["assetgroupid",{"_index":556,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["assetgrouplist",{"_index":1739,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":1825,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromis",{"_index":1740,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgroupselectcompon",{"_index":189,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["assetid",{"_index":432,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["assetlist.getallitem",{"_index":1786,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlistcompon",{"_index":192,"title":{"components/AssetListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["assetlistpopcompon",{"_index":195,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["assets.map((asset",{"_index":1822,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.map(asset",{"_index":1789,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((id",{"_index":1808,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets/asset",{"_index":429,"title":{},"body":{"directives/AssetDirective.html":{}}}],["assets[0",{"_index":1787,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetselectcompon",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["assign",{"_index":1134,"title":{},"body":{"injectables/CrudService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["associ",{"_index":1652,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["assum",{"_index":4531,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["attempt",{"_index":3246,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["attribut",{"_index":1454,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["audio",{"_index":1751,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["auth",{"_index":626,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["auth.servic",{"_index":637,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth/auth.modul",{"_index":1167,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.servic",{"_index":977,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authent",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":579,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["authmodul",{"_index":616,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4527,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["authservic",{"_index":624,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["auto",{"_index":2127,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{}}}],["autocomplet",{"_index":1983,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1999,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplac",{"_index":2002,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":1972,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":1981,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocusfirst",{"_index":2353,"title":{},"body":{"components/ListComponent.html":{}}}],["autoload",{"_index":433,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{}}}],["autoload=fals",{"_index":454,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automat",{"_index":1706,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Notification.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["avail",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["availab",{"_index":68,"title":{},"body":{"components/AceComponent.html":{}}}],["availables",{"_index":2449,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avatar",{"_index":4157,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["b",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{},"additional-documentation/readme/style-readme.html":{}}}],["b(r",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolv",{"_index":3899,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(properti",{"_index":3901,"title":{},"body":{"classes/Sorter.html":{}}}],["b365847",{"_index":4846,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["b3e8115",{"_index":4798,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["b4d03eb",{"_index":4729,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b7460e6",{"_index":4775,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b760780",{"_index":4787,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["ba52443",{"_index":4688,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["back",{"_index":1056,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["backdrop",{"_index":1582,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["backend",{"_index":4585,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["background",{"_index":1254,"title":{},"body":{"interfaces/Day.html":{}}}],["bake",{"_index":3240,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baken",{"_index":3242,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bakery:bakeryservic",{"_index":3239,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["ball",{"_index":3232,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bar",{"_index":3545,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["barrel",{"_index":4768,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["base",{"_index":1673,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["basi",{"_index":1359,"title":{},"body":{"interfaces/Day.html":{}}}],["basic",{"_index":1380,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{}}}],["bcbefd1",{"_index":4723,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["be",{"_index":3336,"title":{},"body":{"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["befor",{"_index":514,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["beforehand",{"_index":4577,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["begin",{"_index":1323,"title":{},"body":{"interfaces/Day.html":{}}}],["begin.clone().add(index",{"_index":1329,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":3072,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beim",{"_index":3468,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["belong",{"_index":2243,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":3201,"title":{},"body":{"classes/Notification.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beneath",{"_index":2304,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["beschreibung",{"_index":3227,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["beta.3",{"_index":4340,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2632,"title":{},"body":{"components/LoaderComponent.html":{}}}],["between",{"_index":1911,"title":{},"body":{"injectables/FormService.html":{}}}],["bilder",{"_index":4554,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["bind",{"_index":4489,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["birch",{"_index":2403,"title":{},"body":{"components/ListComponent.html":{}}}],["blur",{"_index":1953,"title":{},"body":{"injectables/FormService.html":{}}}],["bobbi",{"_index":1694,"title":{},"body":{"classes/Field.html":{}}}],["bodi",{"_index":1680,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor",{"_index":4579,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor*body.flavour/body.pric",{"_index":4583,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.value.nam",{"_index":1688,"title":{},"body":{"classes/Field.html":{}}}],["boolean",{"_index":346,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":324,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["both",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/adding-new-packages.html":{}}}],["bound",{"_index":1409,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["box",{"_index":921,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["break",{"_index":4052,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["broadcast",{"_index":3666,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["broken",{"_index":4743,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["brows",{"_index":4276,"title":{},"body":{"components/UploadSelectComponent.html":{},"modules.html":{}}}],["browser",{"_index":1846,"title":{},"body":{"modules/FilesModule.html":{},"injectables/NotificationsService.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodul",{"_index":1844,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["btn._clear",{"_index":4808,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["bubbl",{"_index":4745,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["buchstaben",{"_index":1691,"title":{},"body":{"classes/Field.html":{}}}],["bug",{"_index":4671,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["build",{"_index":4344,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["builder",{"_index":4470,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/custom",{"_index":4471,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/dev",{"_index":4472,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builds/blob/master/src/ext",{"_index":151,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/webpack",{"_index":142,"title":{},"body":{"components/AceComponent.html":{}}}],["built",{"_index":4369,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["bump",{"_index":4683,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["button",{"_index":1042,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["buttonclass",{"_index":2799,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["buttonlabel",{"_index":2800,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["c",{"_index":4613,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["c89591a",{"_index":4748,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["c950461",{"_index":4769,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c9c8d4",{"_index":2947,"title":{},"body":{"components/MenuComponent.html":{}}}],["cach",{"_index":3721,"title":{},"body":{"injectables/SdkService.html":{}}}],["calculc",{"_index":3355,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":782,"title":{"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/calendar-changelog.html":{}},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["calendar'},{'nam",{"_index":200,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["calendar/calendar.compon",{"_index":790,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar/month.compon",{"_index":793,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendarcompon",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["calendarish",{"_index":1247,"title":{},"body":{"interfaces/Day.html":{}}}],["calendarmodul",{"_index":776,"title":{"modules/CalendarModule.html":{}},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["calendarmoduleconfig",{"_index":794,"title":{},"body":{"modules/CalendarModule.html":{}}}],["call",{"_index":453,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["callback",{"_index":90,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["can't",{"_index":4460,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["canactiv",{"_index":590,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canalter(valu",{"_index":1362,"title":{},"body":{"interfaces/Day.html":{}}}],["cancel",{"_index":2961,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":2930,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":2677,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["caption",{"_index":4060,"title":{},"body":{"components/TinymceComponent.html":{}}}],["case",{"_index":2268,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["catch",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"components/LoaderComponent.html":{}}}],["catch((err",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{}}}],["catch((error",{"_index":2785,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["catch(err",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch(error",{"_index":1511,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{}}}],["caution",{"_index":3665,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["ccc",{"_index":1260,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":4504,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["cdn",{"_index":4659,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["cdr",{"_index":359,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["cell",{"_index":1244,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["center",{"_index":2663,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["certain",{"_index":2327,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chang",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["change(",{"_index":4216,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filt",{"_index":1082,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.valu",{"_index":3423,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.broadcast",{"_index":3669,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change.color",{"_index":1318,"title":{},"body":{"interfaces/Day.html":{}}}],["change.d",{"_index":1315,"title":{},"body":{"interfaces/Day.html":{}}}],["change.heatmap",{"_index":1319,"title":{},"body":{"interfaces/Day.html":{}}}],["change.select",{"_index":1313,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1317,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":3672,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changedetect",{"_index":2085,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategi",{"_index":2105,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2086,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectorref",{"_index":347,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["changelog",{"_index":4331,"title":{"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["changelog.md",{"_index":4879,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["changesenviron",{"_index":3708,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["changespan",{"_index":1268,"title":{},"body":{"interfaces/Day.html":{}}}],["check",{"_index":595,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["checkbox",{"_index":2461,"title":{},"body":{"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{}}}],["checkpermiss",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permiss",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":2974,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["child.data?.titl",{"_index":3010,"title":{},"body":{"components/MenuComponent.html":{}}}],["child.path",{"_index":3011,"title":{},"body":{"components/MenuComponent.html":{}}}],["children",{"_index":4545,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["class",{"_index":149,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/Sorter.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["class.i",{"_index":1397,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":3424,"title":{},"body":{"components/PaginationComponent.html":{}}}],["clean",{"_index":1078,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["clean(valu",{"_index":1085,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["clear",{"_index":1143,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["clearer",{"_index":4574,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clearselect",{"_index":1358,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":3005,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":4401,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["cli/issues/11041",{"_index":4845,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["click",{"_index":949,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clickedoutside($ev",{"_index":3496,"title":{},"body":{"components/PopComponent.html":{}}}],["clickev",{"_index":1549,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["client",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clone",{"_index":4386,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["close",{"_index":2043,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{}}}],["clubapp",{"_index":4615,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clunki",{"_index":4591,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cluster_acemodul",{"_index":325,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_provid",{"_index":327,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declar",{"_index":326,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_export",{"_index":328,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":617,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":618,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_export",{"_index":620,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":619,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":621,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_calendarmodul",{"_index":777,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_declar",{"_index":778,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_export",{"_index":779,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1149,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declar",{"_index":1150,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_export",{"_index":1152,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_import",{"_index":1151,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1153,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodul",{"_index":1838,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declar",{"_index":1839,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_export",{"_index":1841,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_import",{"_index":1840,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_provid",{"_index":1842,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodul",{"_index":1880,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declar",{"_index":1881,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_export",{"_index":1883,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_import",{"_index":1882,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_provid",{"_index":1884,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodul",{"_index":2116,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declar",{"_index":2117,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_export",{"_index":2118,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_provid",{"_index":2119,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodul",{"_index":2318,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declar",{"_index":2319,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_export",{"_index":2320,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodul",{"_index":2579,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declar",{"_index":2580,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_export",{"_index":2582,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_import",{"_index":2581,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_provid",{"_index":2583,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodul",{"_index":2644,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declar",{"_index":2645,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_export",{"_index":2646,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_provid",{"_index":2647,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":2687,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":2688,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_export",{"_index":2690,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":2689,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":2691,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodul",{"_index":2916,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_declar",{"_index":2917,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_export",{"_index":2919,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_mediumeditorcomponent_provid",{"_index":2918,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_notificationsmodul",{"_index":3268,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declar",{"_index":3269,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_export",{"_index":3271,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_import",{"_index":3270,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_provid",{"_index":3272,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodul",{"_index":3509,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declar",{"_index":3510,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_export",{"_index":3512,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_import",{"_index":3511,"title":{},"body":{"modules/PopModule.html":{}}}],["cluster_popmodule_provid",{"_index":3513,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodul",{"_index":3630,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declar",{"_index":3631,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_export",{"_index":3633,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_import",{"_index":3632,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_provid",{"_index":3634,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodul",{"_index":3698,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_provid",{"_index":3699,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodul",{"_index":3789,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declar",{"_index":3790,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_export",{"_index":3792,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_import",{"_index":3791,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_symbolmodul",{"_index":3906,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_declar",{"_index":3907,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_export",{"_index":3908,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_provid",{"_index":3909,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodul",{"_index":4118,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declar",{"_index":4119,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_export",{"_index":4120,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":4190,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_export",{"_index":4192,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":4191,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodul",{"_index":4307,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declar",{"_index":4308,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_export",{"_index":4310,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_import",{"_index":4309,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cmd+click",{"_index":4618,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["code",{"_index":3802,"title":{},"body":{"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["col",{"_index":1672,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{}}}],["collat",{"_index":3879,"title":{},"body":{"classes/Sorter.html":{}}}],["collator.compare(a",{"_index":3884,"title":{},"body":{"classes/Sorter.html":{}}}],["collect",{"_index":809,"title":{"classes/Collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{}}}],["collection([1",{"_index":824,"title":{},"body":{"classes/Collection.html":{}}}],["collection.add(4",{"_index":866,"title":{},"body":{"classes/Collection.html":{}}}],["collection.addall([10,11,12",{"_index":870,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(1",{"_index":864,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(4",{"_index":865,"title":{},"body":{"classes/Collection.html":{}}}],["collection.hasall([1,10,11",{"_index":871,"title":{},"body":{"classes/Collection.html":{}}}],["collection.index(1",{"_index":868,"title":{},"body":{"classes/Collection.html":{}}}],["collection.remove(4",{"_index":867,"title":{},"body":{"classes/Collection.html":{}}}],["collection.removeall();it",{"_index":872,"title":{},"body":{"classes/Collection.html":{}}}],["color",{"_index":1250,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{}}}],["column",{"_index":1064,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columnclick",{"_index":933,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columnclick(item",{"_index":2371,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["combin",{"_index":3218,"title":{},"body":{"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["come",{"_index":408,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["command",{"_index":4857,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["comment",{"_index":2630,"title":{},"body":{"components/LoaderComponent.html":{}}}],["commit",{"_index":4399,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commonmodul",{"_index":628,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{}}}],["commun",{"_index":2774,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["complain",{"_index":3299,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["complet",{"_index":4214,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["complex",{"_index":4606,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["compliant",{"_index":4856,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["compon",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["component(",{"_index":4884,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["component_templ",{"_index":182,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["componentfactori",{"_index":1461,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolv",{"_index":1438,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentinst",{"_index":2238,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1456,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.inst",{"_index":2283,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control",{"_index":2285,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control.valuechang",{"_index":2286,"title":{},"body":{"components/InputComponent.html":{}}}],["components.entrecode.d",{"_index":4373,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["concat",{"_index":3551,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["concat(this.config.availables",{"_index":3369,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.getresourcelistactions(list",{"_index":3557,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concat(this.timespan",{"_index":1288,"title":{},"body":{"interfaces/Day.html":{}}}],["concept",{"_index":1703,"title":{},"body":{"classes/Field.html":{}}}],["config",{"_index":354,"title":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["config.filt",{"_index":1761,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["config.input",{"_index":4182,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interfac",{"_index":975,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["config.interface.t",{"_index":1018,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{}}}],["config.interface.ts:11",{"_index":3430,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:6",{"_index":1720,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3433,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3431,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":4183,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.servic",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["config.service.t",{"_index":2469,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:100",{"_index":3107,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:121",{"_index":3097,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:14",{"_index":2482,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:15",{"_index":4153,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:17",{"_index":3117,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:179",{"_index":4143,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:18",{"_index":2484,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:183",{"_index":4149,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:191",{"_index":3085,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:199",{"_index":4152,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:209",{"_index":4146,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:217",{"_index":4144,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:220",{"_index":3104,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:223",{"_index":4150,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:23",{"_index":2478,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:35",{"_index":2486,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:39",{"_index":3093,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:44",{"_index":2476,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:54",{"_index":3112,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:59",{"_index":3108,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:7",{"_index":2487,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:9",{"_index":2480,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.view",{"_index":4181,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1707,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":980,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["config/resourc",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.servic",{"_index":1106,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.t",{"_index":3641,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["config/resource.service.ts:103",{"_index":3646,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:121",{"_index":3648,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:132",{"_index":3650,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:35",{"_index":3642,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:38",{"_index":3661,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":3653,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:53",{"_index":3643,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:64",{"_index":3657,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:82",{"_index":3660,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:97",{"_index":3651,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/sdk",{"_index":3693,"title":{},"body":{"interfaces/SdkField.html":{}}}],["config/typ",{"_index":1180,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["config?.createlabel",{"_index":1016,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["configinput",{"_index":2414,"title":{},"body":{"components/ListComponent.html":{}}}],["configur",{"_index":897,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["configuration.interface.t",{"_index":3189,"title":{},"body":{"interfaces/ModelConfiguration.html":{}}}],["configure(key",{"_index":899,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":913,"title":{},"body":{"classes/Config.html":{}}}],["confirm",{"_index":1068,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["connect",{"_index":2294,"title":{},"body":{"components/InputComponent.html":{}}}],["connectcontrol",{"_index":2239,"title":{},"body":{"components/InputComponent.html":{}}}],["connector",{"_index":501,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["consid",{"_index":4432,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["consist",{"_index":1347,"title":{},"body":{"interfaces/Day.html":{}}}],["console.error('cannot",{"_index":4184,"title":{},"body":{"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('miss",{"_index":4179,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error(err",{"_index":4259,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.error(notification.error",{"_index":3305,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.log('cannot",{"_index":2497,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.log('could",{"_index":2788,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('entry',item.getbody(),item.id",{"_index":4569,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["console.log('error",{"_index":1008,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('no",{"_index":3547,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["console.log('raw",{"_index":1229,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('receiv",{"_index":4642,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["console.log('rout",{"_index":2991,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log('should",{"_index":2227,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["console.warn('addfield",{"_index":1957,"title":{},"body":{"injectables/FormService.html":{}}}],["console.warn('cannot",{"_index":1504,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":2293,"title":{},"body":{"components/InputComponent.html":{}}}],["console.warn('field",{"_index":2511,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.warn('fileservice#resolveasset",{"_index":1802,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn('ha",{"_index":881,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":1834,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LocationMapComponent.html":{},"interfaces/Upload.html":{}}}],["console.warn('notification.tim",{"_index":3265,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('thi",{"_index":3312,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('to",{"_index":3507,"title":{},"body":{"components/PopComponent.html":{}}}],["console.warn('tri",{"_index":2422,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":1813,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn(`crudservice.chang",{"_index":1110,"title":{},"body":{"injectables/CrudService.html":{}}}],["console.warn(`ec",{"_index":3061,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.warn(`icon",{"_index":2110,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`rel",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/readme/core-readme.html":{}}}],["construct",{"_index":823,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"components/ModalComponent.html":{}}}],["constructor",{"_index":358,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(@inject('environ",{"_index":3762,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('moment.format.d",{"_index":1226,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["constructor(@inject('usedesktopnotif",{"_index":3300,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":4043,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":2765,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(cdr",{"_index":2556,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["constructor(componentfactoryresolv",{"_index":1437,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":3328,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(crud",{"_index":3082,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(el",{"_index":1401,"title":{},"body":{"directives/DropzoneDirective.html":{},"directives/FocusDirective.html":{},"components/TabComponent.html":{}}}],["constructor(environ",{"_index":3715,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":2806,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservic",{"_index":561,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(geocodeservic",{"_index":2716,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":2603,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservic",{"_index":2088,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(item",{"_index":821,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(listconfig",{"_index":2356,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["constructor(mapload",{"_index":1976,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(modelconfig",{"_index":1554,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["constructor(notif",{"_index":3192,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservic",{"_index":2039,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservic",{"_index":2171,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["constructor(priv",{"_index":602,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme/location-readme.html":{}}}],["constructor(properti",{"_index":1638,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protect",{"_index":2849,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{}}}],["constructor(publ",{"_index":419,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DynamicSlotComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["constructor(resourceconfig",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceListPopComponent.html":{}}}],["constructor(rout",{"_index":2941,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":413,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1610,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/InputErrorsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(usedesktopnotif",{"_index":3283,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":3859,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["consum",{"_index":4567,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["contact",{"_index":4328,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["contain",{"_index":39,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["content",{"_index":2083,"title":{},"body":{"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["contentchildren",{"_index":3055,"title":{},"body":{"components/ModalComponent.html":{},"components/TabsComponent.html":{}}}],["contentchildren(tabcompon",{"_index":4012,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(templateref",{"_index":3049,"title":{},"body":{"components/ModalComponent.html":{}}}],["context",{"_index":2338,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["control",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["control'",{"_index":2303,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["control.reset",{"_index":2543,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["controls[field.properti",{"_index":1950,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":17,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["convent",{"_index":4398,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["cooki",{"_index":635,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactori",{"_index":623,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["cookiemodul",{"_index":633,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":644,"title":{},"body":{"modules/AuthModule.html":{}}}],["coord",{"_index":2005,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":2681,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":2680,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["core",{"_index":505,"title":{"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/core-changelog.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["correct",{"_index":4862,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["correctli",{"_index":4610,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["count",{"_index":3356,"title":{},"body":{"classes/Pagination.html":{}}}],["counter",{"_index":4636,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["counter.component.html",{"_index":4637,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["countercompon",{"_index":4638,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["cours",{"_index":1701,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["creat",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["create(model",{"_index":1088,"title":{},"body":{"injectables/CrudService.html":{}}}],["create(rel",{"_index":3647,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["create/edit/delet",{"_index":920,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delet",{"_index":3663,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createclick",{"_index":3592,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created.otherwis",{"_index":3658,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createlabel",{"_index":1021,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":492,"title":{},"body":{"components/AssetListComponent.html":{}}}],["createnew",{"_index":3584,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["creates/upd",{"_index":536,"title":{},"body":{"components/AssetListComponent.html":{}}}],["creator",{"_index":3116,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["credenti",{"_index":2793,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["crud",{"_index":925,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["crud'",{"_index":943,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'nam",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["crud.compon",{"_index":3637,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":926,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.t",{"_index":3590,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:29",{"_index":3594,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:31",{"_index":3596,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:33",{"_index":3595,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":3597,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":3607,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":3610,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":3608,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":3598,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":3600,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":3593,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:53",{"_index":3612,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:54",{"_index":3611,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:57",{"_index":3604,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:61",{"_index":3603,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:72",{"_index":3602,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:77",{"_index":3605,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:90",{"_index":3601,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":1597,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["crud/crud.compon",{"_index":1168,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/crud.servic",{"_index":1169,"title":{},"body":{"modules/DataModule.html":{},"injectables/ModelConfigService.html":{}}}],["crud/resourc",{"_index":3589,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["crudcompon",{"_index":201,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["crudcomponent#loadentri",{"_index":3618,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":941,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["crudservic",{"_index":1070,"title":{"injectables/CrudService.html":{}},"body":{"injectables/CrudService.html":{},"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{}}}],["crudservice#chang",{"_index":1118,"title":{},"body":{"injectables/CrudService.html":{}}}],["crypto",{"_index":4486,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["css",{"_index":4653,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["current",{"_index":126,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["currentact",{"_index":386,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currentid",{"_index":378,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["custom",{"_index":942,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["customfieldcompon",{"_index":1443,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["customfieldconfig",{"_index":3084,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldscompon",{"_index":4634,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["custominputcompon",{"_index":4617,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customupload",{"_index":1022,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["customwebpackconfig",{"_index":4479,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["d5dc292",{"_index":4708,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d7fa72b",{"_index":4696,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["da",{"_index":3223,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["darf",{"_index":4564,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["dark",{"_index":3030,"title":{},"body":{"components/ModalComponent.html":{}}}],["data",{"_index":341,"title":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["data.entryid",{"_index":2078,"title":{},"body":{"injectables/HistoryService.html":{}}}],["data.modul",{"_index":4737,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["datamanag",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamanager(environment.environ",{"_index":3775,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.enablehistoryevents(eventsourc",{"_index":2075,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamanagerid",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerresourc",{"_index":404,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamodul",{"_index":1148,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamodule.forenvironment(environ",{"_index":4522,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["datamoduleconfig",{"_index":1184,"title":{},"body":{"modules/DataModule.html":{}}}],["datarun",{"_index":4876,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["date",{"_index":803,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"modules/SymbolModule.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["date()).format",{"_index":4169,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":4170,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clon",{"_index":1350,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[0].clone().startof('day",{"_index":1332,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[1].clone().startof('day",{"_index":1334,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1341,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1335,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1352,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1337,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":2640,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{}}}],["dateformat",{"_index":1227,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["datenschutz",{"_index":4420,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["datepick",{"_index":3919,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["daterange'},{'nam",{"_index":204,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["daterange/daterange.compon",{"_index":792,"title":{},"body":{"modules/CalendarModule.html":{}}}],["daterangecompon",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["datetim",{"_index":1187,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["datetime'},{'nam",{"_index":206,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["datetime.component.html",{"_index":1189,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.pip",{"_index":789,"title":{},"body":{"modules/CalendarModule.html":{}}}],["datetime/datetime.compon",{"_index":1898,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecompon",{"_index":205,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["datetimepip",{"_index":780,"title":{"pipes/DatetimePipe.html":{}},"body":{"modules/CalendarModule.html":{},"pipes/DatetimePipe.html":{},"overview.html":{}}}],["datum",{"_index":4166,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1208,"title":{"interfaces/Day.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["day.clone().startof('month').startof('week",{"_index":1324,"title":{},"body":{"interfaces/Day.html":{}}}],["day.date.clon",{"_index":1290,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1283,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1336,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1285,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclick",{"_index":1266,"title":{},"body":{"interfaces/Day.html":{}}}],["dd.mm.yyyi",{"_index":796,"title":{},"body":{"modules/CalendarModule.html":{}}}],["de",{"_index":3924,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["de51159",{"_index":4720,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["deactiv",{"_index":3981,"title":{},"body":{"components/TabComponent.html":{}}}],["debounc",{"_index":2240,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetim",{"_index":1245,"title":{},"body":{"interfaces/Day.html":{},"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime(this.debounc",{"_index":2287,"title":{},"body":{"components/InputComponent.html":{}}}],["decid",{"_index":1934,"title":{},"body":{"injectables/FormService.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decim",{"_index":4156,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["deck",{"_index":3052,"title":{},"body":{"components/ModalComponent.html":{}}}],["declar",{"_index":146,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/GeocodeService.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decor",{"_index":110,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["decrement",{"_index":4641,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dedupl",{"_index":1722,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["def9084",{"_index":4706,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["default",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultcolumn",{"_index":3522,"title":{},"body":{"injectables/PopService.html":{}}}],["defaultentryinputcompon",{"_index":207,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["defaultentryoutputcompon",{"_index":208,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["defaultinputcompon",{"_index":20,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["defaultinputcomponent:11",{"_index":130,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:13",{"_index":134,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:15",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:17",{"_index":129,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultmonthformat",{"_index":1270,"title":{},"body":{"interfaces/Day.html":{}}}],["defaultopt",{"_index":1742,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["defaultoutputcompon",{"_index":211,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["defaults",{"_index":2170,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["defaulttim",{"_index":3280,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["defin",{"_index":71,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["del",{"_index":1079,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1090,"title":{},"body":{"injectables/CrudService.html":{}}}],["del(rel",{"_index":3649,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["delay",{"_index":2949,"title":{},"body":{"components/MenuComponent.html":{}}}],["delet",{"_index":277,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["deletenullproperti",{"_index":3645,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deleteonremov",{"_index":1023,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["deliv",{"_index":3101,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["demo",{"_index":573,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["demonstr",{"_index":4537,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["deni",{"_index":3311,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["depend",{"_index":63,"title":{"dependencies.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["deprec",{"_index":1111,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["der",{"_index":3225,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["desc",{"_index":2450,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["descend",{"_index":2459,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describ",{"_index":1677,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselect",{"_index":3991,"title":{},"body":{"components/TabComponent.html":{}}}],["desir",{"_index":2664,"title":{},"body":{"components/LocationMapComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["desktop",{"_index":3279,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotif",{"_index":3281,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notif",{"_index":3285,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dest",{"_index":4868,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["destroy",{"_index":2892,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["detail",{"_index":4655,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["determin",{"_index":1242,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":4384,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["develop",{"_index":1024,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["devkit/build",{"_index":4473,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["devth",{"_index":4474,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["dialog",{"_index":2176,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["die",{"_index":3226,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["dies",{"_index":606,"title":{},"body":{"guards/AuthGuard.html":{}}}],["differ",{"_index":961,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["direct",{"_index":179,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":4408,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["directli",{"_index":461,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["directori",{"_index":4410,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["disabl",{"_index":1395,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{}}}],["disablecolumnfilt",{"_index":2451,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disablecreatepop",{"_index":1025,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabledrag",{"_index":2452,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disabledragend",{"_index":1263,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1261,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledrop",{"_index":4275,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["disabledropdown",{"_index":2453,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["disablehead",{"_index":1603,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["disablelegaci",{"_index":557,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":1026,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disablesearchbar",{"_index":1027,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["disableselectswitch",{"_index":1028,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabletim",{"_index":1191,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupd",{"_index":2037,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":2041,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableurlupload",{"_index":1029,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["display",{"_index":1192,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["displayaccount",{"_index":4140,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayd",{"_index":4141,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(tim",{"_index":4145,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dist",{"_index":4380,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dist/data",{"_index":4877,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["div",{"_index":3401,"title":{},"body":{"components/PaginationComponent.html":{}}}],["dma",{"_index":3158,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["dmasset",{"_index":1793,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["dmassetconfig",{"_index":1743,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1733,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitem",{"_index":1819,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetresourc",{"_index":1735,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["dnddraggabl",{"_index":4716,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dndmodul",{"_index":1164,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":574,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Field.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["document",{"_index":1753,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["document:click",{"_index":1553,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["document:click($ev",{"_index":1569,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["done",{"_index":4854,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["dont",{"_index":4605,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dosomethingriski",{"_index":3228,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doubt",{"_index":1803,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["drag",{"_index":1165,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"interfaces/ListConfig.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["dragend",{"_index":2674,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggabl",{"_index":1236,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleav",{"_index":1399,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(",{"_index":1412,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragov",{"_index":1400,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(",{"_index":1415,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1300,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":3475,"title":{},"body":{"components/PopComponent.html":{}}}],["driven",{"_index":4365,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["drop",{"_index":1166,"title":{},"body":{"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{}}}],["drop(",{"_index":1417,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1281,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":1045,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["dropzone/dropzone.direct",{"_index":1850,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirect",{"_index":306,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["due",{"_index":4844,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["duplic",{"_index":1730,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["dure",{"_index":2819,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["dynam",{"_index":214,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dynamicrackcompon",{"_index":212,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["dynamicslotcompon",{"_index":213,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2270,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:14",{"_index":2269,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:18",{"_index":2258,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["e).then",{"_index":4299,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["e.datatransfer.fil",{"_index":1427,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1428,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.g",{"_index":61,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["e.preventdefault",{"_index":1303,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropag",{"_index":2577,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["e.stoppropag",{"_index":1423,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":4238,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.fil",{"_index":4239,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":4240,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localnam",{"_index":4110,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toel",{"_index":4112,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2",{"_index":4416,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["e8b0e49",{"_index":4796,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["each",{"_index":1075,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog.html":{}}}],["easi",{"_index":4853,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["eb506da",{"_index":4730,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ec",{"_index":32,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.api",{"_index":409,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.compon",{"_index":1912,"title":{},"body":{"injectables/FormService.html":{},"modules/SymbolModule.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["ec.components/ac",{"_index":4335,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ec.components/ace@0.6.0",{"_index":4433,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/calendar",{"_index":1212,"title":{},"body":{"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["ec.components/calendar@0.2.0",{"_index":4434,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/cor",{"_index":350,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ec.components/core@0.19.0",{"_index":4435,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/coreimport",{"_index":4650,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["ec.components/data",{"_index":4333,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ec.components/data/src/entri",{"_index":4444,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/data@0.42.0",{"_index":4436,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/loc",{"_index":4336,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["ec.components/location@0.18.0",{"_index":4437,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/medium",{"_index":4337,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["ec.components/styl",{"_index":4334,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.components/style/components';new",{"_index":4456,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style/components.scss\";5",{"_index":4511,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/scss/compon",{"_index":4657,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["ec.components/style/scss/components';3",{"_index":4457,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style@0.21.0",{"_index":4439,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/tinymc",{"_index":4338,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ec.components/tinymce@0.5.0",{"_index":4440,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/ui",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"modules/FilesModule.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ec.components/ui';8",{"_index":4872,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":2100,"title":{},"body":{"components/IconComponent.html":{}}}],["ec.components/ui@0.36.0",{"_index":4441,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.datamanag",{"_index":4643,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ec.sdk",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ec.sdk/lib/account",{"_index":3750,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/cor",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/datamanag",{"_index":2062,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":470,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresourc",{"_index":2780,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresourc",{"_index":418,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresourc",{"_index":2061,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresourc",{"_index":1500,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1734,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresourc",{"_index":1736,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1499,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresourc",{"_index":1105,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1738,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresourc",{"_index":469,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/resourc",{"_index":3628,"title":{},"body":{"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/sess",{"_index":3751,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":431,"title":{},"body":{"directives/AssetDirective.html":{}}}],["ecasset]'},{'nam",{"_index":305,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecdropzon",{"_index":1394,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'nam",{"_index":307,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentri",{"_index":1469,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ecentries]'},{'nam",{"_index":309,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentry]'},{'nam",{"_index":311,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecfocu",{"_index":1862,"title":{},"body":{"directives/FocusDirective.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ecfocus]'},{'nam",{"_index":313,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecicon",{"_index":2123,"title":{},"body":{"injectables/IconService.html":{}}}],["ecimag",{"_index":2129,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'nam",{"_index":316,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecslothost",{"_index":318,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecthi",{"_index":4859,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["edg",{"_index":1297,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":1009,"title":{},"body":{"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["edit/cr",{"_index":4595,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["editfilt",{"_index":2516,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editfilter(pop",{"_index":2525,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editor",{"_index":14,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["editor#mediumeditor",{"_index":2904,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'nam",{"_index":256,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["editor.compon",{"_index":2921,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["editor.component.html",{"_index":2883,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":2882,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.t",{"_index":2877,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:35",{"_index":2886,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":2888,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":2889,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":2890,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":2897,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":2901,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":2898,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":2900,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":2893,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":2891,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":2896,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":2899,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":2894,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":2895,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.getcont",{"_index":4093,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.module.t",{"_index":2920,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["editor.on('chang",{"_index":166,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.scss",{"_index":2914,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setcontent(this.valu",{"_index":2912,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setvalue(this.valu",{"_index":172,"title":{},"body":{"components/AceComponent.html":{}}}],["editor/dist/js/medium",{"_index":2902,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/lib/medium",{"_index":2876,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{}}}],["editor/src/sass/medium",{"_index":2913,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor?e=1",{"_index":2880,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor@0.4.0",{"_index":4438,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["editor[0",{"_index":4107,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editorset",{"_index":4089,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editorsettings.setup(editor",{"_index":4101,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ein",{"_index":3461,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["eingeloggt",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{}}}],["eject",{"_index":4469,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["el",{"_index":1403,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"components/TabComponent.html":{}}}],["element",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["elementref",{"_index":109,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["email",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{}}}],["emailavail",{"_index":2854,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emaillabel",{"_index":2801,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailplacehold",{"_index":2802,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["embed",{"_index":1442,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["embedd",{"_index":2097,"title":{},"body":{"components/IconComponent.html":{}}}],["emit",{"_index":948,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["emit(host",{"_index":3233,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["emit(notif",{"_index":3290,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emitt",{"_index":2368,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{}}}],["emojiicon",{"_index":2099,"title":{},"body":{"components/IconComponent.html":{}}}],["empti",{"_index":851,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["empty=tru",{"_index":4602,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["en",{"_index":3913,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["enabl",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["enableupd",{"_index":2038,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resourc",{"_index":2046,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsul",{"_index":2343,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1262,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["endless",{"_index":1474,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["enforc",{"_index":4529,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhanc",{"_index":3947,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":4513,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ensur",{"_index":3454,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/PopComponent.html":{}}}],["enter",{"_index":4620,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entiti",{"_index":1063,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ItemConfig.html":{}}}],["entrecod",{"_index":4367,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entrecode.github.io/ec.compon",{"_index":4371,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entri",{"_index":209,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["entries/entries.direct",{"_index":1170,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirect",{"_index":308,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["entry.del().then((r",{"_index":1147,"title":{},"body":{"injectables/CrudService.html":{}}}],["entry.getimagethumburl(properti",{"_index":4158,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(properti",{"_index":4171,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.sav",{"_index":1122,"title":{},"body":{"injectables/CrudService.html":{},"injectables/SymbolPipe.html":{}}}],["entry.save(safeput).then((_entri",{"_index":1135,"title":{},"body":{"injectables/CrudService.html":{}}}],["entry/entry.direct",{"_index":1178,"title":{},"body":{"modules/DataModule.html":{}}}],["entry[key",{"_index":1131,"title":{},"body":{"injectables/CrudService.html":{}}}],["entrycompon",{"_index":333,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/TinymceModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrydirect",{"_index":310,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["entryform",{"_index":4443,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["entryformcompon",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["entryid",{"_index":1525,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["entrylist",{"_index":541,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{}}}],["entrylist.model",{"_index":1607,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["entrylistcompon",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["entrylistpopcompon",{"_index":219,"title":{"components/EntryListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["entrylistselectcompon",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["entrypop",{"_index":927,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcompon",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["entryresourc",{"_index":1091,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["entryselectcompon",{"_index":222,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["env",{"_index":3735,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["environ",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":3767,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":3770,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environ",{"_index":3777,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.init",{"_index":3763,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments/environ",{"_index":4520,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":991,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{}}}],["erhalten",{"_index":3465,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":1010,"title":{},"body":{"components/CrudComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["err.messag",{"_index":2856,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":585,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["error'},{'nam",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["error('cannot",{"_index":479,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":3757,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":3752,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('th",{"_index":3974,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":3381,"title":{},"body":{"classes/Pagination.html":{}}}],["error.cod",{"_index":1621,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail}}{{error.verbos",{"_index":1626,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1609,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1622,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail}}{{error.verbos",{"_index":1624,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.messag",{"_index":2317,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error.verbos",{"_index":1625,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.compon",{"_index":3274,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.messag",{"_index":1623,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":223,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["errormessag",{"_index":2796,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["errors'},{'nam",{"_index":235,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["errors.compon",{"_index":2324,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2305,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.t",{"_index":2302,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:12",{"_index":2307,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":2311,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:18",{"_index":2308,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2301,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{}}}],["errs.push",{"_index":2316,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellen",{"_index":3583,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["erstellt",{"_index":4556,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["es6",{"_index":1211,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["escap",{"_index":3519,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1644,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["even",{"_index":1040,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["event",{"_index":448,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event.key",{"_index":3528,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycod",{"_index":3526,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitt",{"_index":449,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["eventemitter.t",{"_index":912,"title":{},"body":{"classes/Config.html":{}}}],["eventsourc",{"_index":2036,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsource/lib/eventsourc",{"_index":2063,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventu",{"_index":4243,"title":{},"body":{"components/UploadComponent.html":{}}}],["everyth",{"_index":3073,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["everytim",{"_index":1741,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1217,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{}}}],["exactli",{"_index":4593,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["exampl",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/adding-new-packages.html":{}}}],["execut",{"_index":4414,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["exist",{"_index":1099,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ListConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["existing.hid",{"_index":2506,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["existing.hide.foreach(properti",{"_index":2509,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["expect",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["experiment",{"_index":1958,"title":{},"body":{"injectables/FormService.html":{},"interfaces/ListConfig.html":{}}}],["export",{"_index":148,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["exporta",{"_index":471,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["expos",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["extend",{"_index":19,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["extens",{"_index":1873,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["extensions/modes/them",{"_index":4662,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["extern",{"_index":1054,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":1044,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["extract",{"_index":1930,"title":{},"body":{"injectables/FormService.html":{}}}],["f.hideinlist).map(f",{"_index":2503,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.name",{"_index":4268,"title":{},"body":{"components/UploadComponent.html":{}}}],["f.properti",{"_index":2504,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.url",{"_index":1782,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["f3590a7",{"_index":4750,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["f7b65f4",{"_index":4780,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["factor",{"_index":4601,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fadein",{"_index":3027,"title":{},"body":{"components/ModalComponent.html":{}}}],["fail",{"_index":599,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{}}}],["failiur",{"_index":3245,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["faktor",{"_index":4560,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["fall",{"_index":1055,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["fallback",{"_index":2376,"title":{},"body":{"components/ListComponent.html":{},"components/ModalComponent.html":{}}}],["fals",{"_index":363,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["false).then((act",{"_index":3580,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["fancier",{"_index":4126,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fb",{"_index":2809,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["fcfdf32",{"_index":4738,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fd41ccc",{"_index":4774,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["featur",{"_index":3236,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["fed2c52",{"_index":4721,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fehler",{"_index":3230,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["ffnungszeiten",{"_index":4623,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field",{"_index":46,"title":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["field'",{"_index":1663,"title":{},"body":{"classes/Field.html":{}}}],["field('nam",{"_index":1687,"title":{},"body":{"classes/Field.html":{}}}],["field(this.properti",{"_index":2274,"title":{},"body":{"components/InputComponent.html":{}}}],["field.compon",{"_index":1444,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.creat",{"_index":1942,"title":{},"body":{"injectables/FormService.html":{}}}],["field.display(nam",{"_index":1695,"title":{},"body":{"classes/Field.html":{}}}],["field.edit",{"_index":1944,"title":{},"body":{"injectables/FormService.html":{}}}],["field.form",{"_index":1945,"title":{},"body":{"injectables/FormService.html":{}}}],["field.group(nam",{"_index":1696,"title":{},"body":{"classes/Field.html":{}}}],["field.hideinform",{"_index":4325,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["field.hideinlist",{"_index":2508,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["field.label",{"_index":2544,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.maxitems||10",{"_index":1387,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.placehold",{"_index":1384,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.properti",{"_index":2545,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.readonli",{"_index":4604,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field.requir",{"_index":1960,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobbi",{"_index":1693,"title":{},"body":{"classes/Field.html":{}}}],["field.sort(nam",{"_index":1698,"title":{},"body":{"classes/Field.html":{}}}],["field.t",{"_index":3694,"title":{},"body":{"interfaces/SdkField.html":{}}}],["field.typ",{"_index":424,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.valid",{"_index":1937,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.valu",{"_index":1963,"title":{},"body":{"injectables/FormService.html":{}}}],["fieldconfig",{"_index":1718,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{}}}],["fieldconfig[field].inputview",{"_index":3140,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[field].typ",{"_index":3138,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[key",{"_index":3183,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[properti",{"_index":3152,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperti",{"_index":1628,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"components/InputComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{}}}],["fieldfilt",{"_index":531,"title":{},"body":{"components/AssetListComponent.html":{}}}],["fieldhost",{"_index":1450,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirect",{"_index":1459,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldlabel",{"_index":2517,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldlabel(field",{"_index":2528,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldnam",{"_index":1723,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fields.filter((field",{"_index":4323,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pip",{"_index":1896,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.t",{"_index":4317,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe.ts:10",{"_index":4322,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe.ts:12",{"_index":4320,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalid",{"_index":2847,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["fieldvalidators.email",{"_index":2853,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["fieldvalidators.uuid",{"_index":3854,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["file.servic",{"_index":570,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["fileinput",{"_index":4200,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":1775,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filenam",{"_index":1724,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fileopt",{"_index":1030,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["files.length",{"_index":1779,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.map(f",{"_index":1781,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.split('\\n').map(url",{"_index":4244,"title":{},"body":{"components/UploadComponent.html":{}}}],["files/file.servic",{"_index":1069,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["files/files.modul",{"_index":1179,"title":{},"body":{"modules/DataModule.html":{}}}],["files[0].url",{"_index":1780,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["fileservic",{"_index":555,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["filesmodul",{"_index":1154,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":4201,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill(0",{"_index":1327,"title":{},"body":{"interfaces/Day.html":{}}}],["filter",{"_index":493,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["filter((item",{"_index":3890,"title":{},"body":{"classes/Sorter.html":{}}}],["filter((valu",{"_index":3572,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter(field",{"_index":3137,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filter(i",{"_index":3555,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter(properti",{"_index":525,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["filter(rout",{"_index":2986,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter(v",{"_index":3575,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter.model",{"_index":1107,"title":{},"body":{"injectables/CrudService.html":{}}}],["filter.rel",{"_index":1108,"title":{},"body":{"injectables/CrudService.html":{}}}],["filter[key",{"_index":3673,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filterdropdownlist(listcompon",{"_index":3568,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filteroper",{"_index":1629,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filteropt",{"_index":1482,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpopclass",{"_index":1630,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["find",{"_index":3939,"title":{},"body":{"injectables/SymbolService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["finish",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":447,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["first",{"_index":1237,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fit",{"_index":3655,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":2228,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["flag",{"_index":512,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["flexibl",{"_index":2397,"title":{},"body":{"components/ListComponent.html":{}}}],["flip",{"_index":1414,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":4547,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["fn",{"_index":94,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["focu",{"_index":1856,"title":{"interfaces/Focus.html":{}},"body":{"interfaces/Focus.html":{},"components/ListComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["focus",{"_index":2358,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/UploadSelectComponent.html":{}}}],["focus/focus.direct",{"_index":4312,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirect",{"_index":312,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["focusev",{"_index":1858,"title":{},"body":{"interfaces/Focus.html":{},"components/UploadSelectComponent.html":{}}}],["focusfirst",{"_index":2348,"title":{},"body":{"components/ListComponent.html":{}}}],["focusitem",{"_index":2346,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focusnext",{"_index":2349,"title":{},"body":{"components/ListComponent.html":{}}}],["focusprev",{"_index":2350,"title":{},"body":{"components/ListComponent.html":{}}}],["focuss",{"_index":2569,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["folder",{"_index":4379,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["follow",{"_index":2112,"title":{},"body":{"components/IconComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["font",{"_index":3904,"title":{},"body":{"interfaces/Symbol.html":{}}}],["footer",{"_index":3025,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["forcegroup",{"_index":1747,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["forcereload",{"_index":1826,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["foreach",{"_index":3153,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["foreach((field",{"_index":1948,"title":{},"body":{"injectables/FormService.html":{}}}],["forenviron",{"_index":1160,"title":{},"body":{"modules/DataModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environ",{"_index":1161,"title":{},"body":{"modules/DataModule.html":{}}}],["forev",{"_index":3204,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":117,"title":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["form'",{"_index":2264,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'nam",{"_index":217,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["form.compon",{"_index":1175,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{}}}],["form.component'new",{"_index":4445,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form.component.html",{"_index":2795,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.t",{"_index":2792,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:17",{"_index":3826,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:18",{"_index":2839,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":3829,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:20",{"_index":2842,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":3827,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":2838,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":3842,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:24",{"_index":2829,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":2827,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":2820,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:30",{"_index":2826,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":2816,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":2818,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":2822,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":3840,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:38",{"_index":2824,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":2813,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":2811,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":2808,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:47",{"_index":2843,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":2834,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:59",{"_index":2837,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:67",{"_index":2831,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":2835,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.creat",{"_index":4778,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["form.display('amazement_factor",{"_index":4609,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["form.fields.filter((field",{"_index":1946,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form",{"_index":1964,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.display",{"_index":1967,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.isedit",{"_index":1966,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getbodi",{"_index":1943,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getvalue('keepratio",{"_index":2232,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue('ratio",{"_index":2231,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.alt.setvalue(titl",{"_index":2219,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.height.setvalue(math.round(valu",{"_index":2233,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.ratio.setvalue(ratio",{"_index":2220,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(math.round(valu",{"_index":2235,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(width",{"_index":2218,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.servic",{"_index":1895,"title":{},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["form/admin",{"_index":399,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/TypeConfigService.html":{}}}],["form/default",{"_index":1172,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["form/entri",{"_index":1174,"title":{},"body":{"modules/DataModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form/form.compon",{"_index":1941,"title":{},"body":{"injectables/FormService.html":{},"components/ListHeaderComponent.html":{}}}],["form/form.modul",{"_index":2586,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":2791,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{}}}],["form/resourc",{"_index":3636,"title":{},"body":{"modules/ResourceModule.html":{}}}],["form/signup",{"_index":3823,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{}}}],["format",{"_index":788,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{}}}],["formats.d",{"_index":806,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.month",{"_index":808,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.tim",{"_index":807,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formattedtext",{"_index":4154,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuild",{"_index":2807,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcompon",{"_index":225,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["formcomponent#input",{"_index":2265,"title":{},"body":{"components/InputComponent.html":{}}}],["formconfig",{"_index":1871,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{}}}],["formcontrol",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["formcontrol(form.getvalue(field.properti",{"_index":1951,"title":{},"body":{"injectables/FormService.html":{}}}],["formdata",{"_index":1773,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formdata.append(key",{"_index":1776,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formgroup",{"_index":132,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup(control",{"_index":1956,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodul",{"_index":1879,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formmoduleconfig",{"_index":1905,"title":{},"body":{"modules/FormModule.html":{}}}],["formservic",{"_index":1892,"title":{"injectables/FormService.html":{}},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{},"pipes/VisibleFieldsPipe.html":{},"overview.html":{}}}],["formsmodul",{"_index":632,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ListModule.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{}}}],["forroot",{"_index":784,"title":{},"body":{"modules/CalendarModule.html":{},"modules/LocationModule.html":{}}}],["forroot(format",{"_index":785,"title":{},"body":{"modules/CalendarModule.html":{}}}],["forroot(undefin",{"_index":2695,"title":{},"body":{"modules/LocationModule.html":{}}}],["forwardref",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["found",{"_index":584,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/style-readme.html":{}}}],["framework",{"_index":4644,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["freedom",{"_index":4599,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fresh",{"_index":4385,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["from(this.maploader.load",{"_index":2012,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":2723,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["fruit",{"_index":2400,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/readme/data-readme.html":{}}}],["fs",{"_index":4487,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["full",{"_index":2971,"title":{},"body":{"components/MenuComponent.html":{}}}],["fun",{"_index":4532,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":532,"title":{"miscellaneous/functions.html":{}},"body":{"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["fundament",{"_index":812,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":3202,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["futur",{"_index":1119,"title":{},"body":{"injectables/CrudService.html":{}}}],["g",{"_index":4494,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["gener",{"_index":516,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/InputErrorsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["generateconfig",{"_index":3077,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":3083,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["geo",{"_index":2726,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocod",{"_index":1971,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.servic",{"_index":2698,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":1973,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocod",{"_index":1984,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocod",{"_index":2017,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":1968,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"overview.html":{}}}],["get",{"_index":3198,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/Notification.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["get(nam",{"_index":3937,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(properti",{"_index":3092,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(typ",{"_index":4148,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getaccount(api",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":3867,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(item",{"_index":3872,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethod",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethod",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(rel",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["getassetconfig(assetgroupid",{"_index":1757,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getcolor",{"_index":2931,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":2962,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolumn",{"_index":1636,"title":{},"body":{"classes/Field.html":{}}}],["getdaycolor(_mo",{"_index":1307,"title":{},"body":{"interfaces/Day.html":{}}}],["getdayheat(_mo",{"_index":1310,"title":{},"body":{"interfaces/Day.html":{}}}],["geterror",{"_index":2306,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfieldconfig",{"_index":3078,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getfieldconfig(model",{"_index":3096,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getformdata(fil",{"_index":1774,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getformlabel",{"_index":1914,"title":{},"body":{"injectables/FormService.html":{}}}],["getformlabel(form",{"_index":1923,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup",{"_index":1915,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":1926,"title":{},"body":{"injectables/FormService.html":{}}}],["gethead",{"_index":1550,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getheader(entrylist",{"_index":1572,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getitemcolor",{"_index":2932,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":2964,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel",{"_index":2933,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":2966,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlightmodel",{"_index":3079,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getlightmodel(model",{"_index":3103,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel",{"_index":3080,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(model",{"_index":3106,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getmonth(day",{"_index":1322,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":1974,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(loc",{"_index":1989,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpag",{"_index":3324,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":396,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/MenuComponent.html":{}}}],["getpath(item",{"_index":2969,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermiss",{"_index":3282,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplacehold",{"_index":1637,"title":{},"body":{"classes/Field.html":{}}}],["getresourcelistactions(listresourc",{"_index":3540,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["getroot",{"_index":3745,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema",{"_index":3711,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":3719,"title":{},"body":{"injectables/SdkService.html":{}}}],["getstoragekey",{"_index":2472,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getstoragekey(list",{"_index":2477,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getsystemfield",{"_index":3081,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getter",{"_index":901,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{}}}],["getvalid",{"_index":1916,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":1928,"title":{},"body":{"injectables/FormService.html":{}}}],["ghost",{"_index":4607,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["give",{"_index":3654,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["given",{"_index":80,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["global",{"_index":2614,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["globalload",{"_index":2619,"title":{},"body":{"components/LoaderComponent.html":{}}}],["glyph",{"_index":3905,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":4418,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["googl",{"_index":1970,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["google.maps.geocod",{"_index":2024,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":1998,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemap",{"_index":2755,"title":{},"body":{"components/LocationSearchComponent.html":{},"dependencies.html":{}}}],["googlemaps.apikey",{"_index":2709,"title":{},"body":{"modules/LocationModule.html":{}}}],["grant",{"_index":3289,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["group",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["group.addcontrol(field.properti",{"_index":1959,"title":{},"body":{"injectables/FormService.html":{}}}],["group.pip",{"_index":2588,"title":{},"body":{"modules/ListModule.html":{}}}],["group.valu",{"_index":549,"title":{},"body":{"components/AssetListComponent.html":{}}}],["groupchang",{"_index":560,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["groupdat",{"_index":4142,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["grouppip",{"_index":1216,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"overview.html":{}}}],["grow",{"_index":1478,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":4561,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["guard",{"_index":578,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guard.servic",{"_index":636,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.t",{"_index":581,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:12",{"_index":593,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:17",{"_index":594,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guid",{"_index":4372,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["guidelin",{"_index":4666,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["h",{"_index":2406,"title":{},"body":{"components/ListComponent.html":{}}}],["haben",{"_index":3459,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hack",{"_index":4731,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["handi",{"_index":4584,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["handl",{"_index":1922,"title":{},"body":{"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handler",{"_index":2373,"title":{},"body":{"components/ListComponent.html":{}}}],["happen",{"_index":1561,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["hard",{"_index":4611,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["has(item",{"_index":842,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":2934,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":2972,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasal",{"_index":814,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(item",{"_index":845,"title":{},"body":{"classes/Collection.html":{}}}],["hasfocu",{"_index":2554,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasfocus(item",{"_index":2567,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasmethod",{"_index":929,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hasmethod(method",{"_index":952,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hassl",{"_index":4654,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["have",{"_index":403,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1264,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header'},{'nam",{"_index":238,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["header.compon",{"_index":2589,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2514,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.t",{"_index":2513,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":2521,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:19",{"_index":2522,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:21",{"_index":2539,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":2520,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2536,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:29",{"_index":2526,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":2524,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:39",{"_index":2531,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:44",{"_index":2529,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:52",{"_index":2533,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/items/pagin",{"_index":4571,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header/list",{"_index":2512,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{}}}],["headlin",{"_index":3208,"title":{},"body":{"classes/Notification.html":{}}}],["heat",{"_index":1238,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap",{"_index":1252,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'nam",{"_index":227,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["heatmap/heatmap.compon",{"_index":791,"title":{},"body":{"modules/CalendarModule.html":{}}}],["heatmapcompon",{"_index":226,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["height",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{}}}],["hellip",{"_index":1388,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["help",{"_index":2261,"title":{},"body":{"components/InputComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["helper",{"_index":1485,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["here",{"_index":2616,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["hh:mm",{"_index":798,"title":{},"body":{"modules/CalendarModule.html":{}}}],["hidden",{"_index":1631,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/WithNotifications.html":{}}}],["hide",{"_index":1006,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["hideassetgroupselect",{"_index":1031,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["hidefirstlast",{"_index":3427,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hideinform",{"_index":2223,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{}}}],["hideinlist",{"_index":3109,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonclickoutsid",{"_index":1552,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hideoncr",{"_index":3159,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonedit",{"_index":3160,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hidepag",{"_index":3428,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagin",{"_index":1602,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["hidesubmitbutton",{"_index":1875,"title":{},"body":{"interfaces/FormConfig.html":{}}}],["higher",{"_index":2407,"title":{},"body":{"components/ListComponent.html":{}}}],["highest",{"_index":4649,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["histori",{"_index":2058,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservic",{"_index":1157,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"overview.html":{}}}],["hold",{"_index":401,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["host",{"_index":1410,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["host.direct",{"_index":1460,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.t",{"_index":3857,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:11",{"_index":3862,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":3860,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbind",{"_index":1396,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class",{"_index":1598,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class.i",{"_index":1419,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostlisten",{"_index":1398,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostlistener('document:click",{"_index":3495,"title":{},"body":{"components/PopComponent.html":{}}}],["hostlistener('dragleav",{"_index":1430,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragov",{"_index":1420,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1425,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hour",{"_index":4627,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.html",{"_index":4628,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.scss",{"_index":4629,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hover",{"_index":2928,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":2939,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":2935,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":2975,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":2936,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":178,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["http",{"_index":4461,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["http://localhost:1337",{"_index":4406,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["https://angular.io/guide/dynam",{"_index":3858,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":4632,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["https://components.entrecode.de/assets/asset?e=1",{"_index":430,"title":{},"body":{"directives/AssetDirective.html":{}}}],["https://components.entrecode.de/auth/auth?e=1",{"_index":2763,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/auth/password",{"_index":3441,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["https://components.entrecode.de/auth/signup?e=1",{"_index":3799,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://components.entrecode.de/entries/crud?e=1",{"_index":922,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/entries/entries?e=1",{"_index":1468,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["https://components.entrecode.de/misc/ace?e=1",{"_index":18,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":2879,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymce?e=1",{"_index":4038,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetime?e=1",{"_index":1188,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["https://components.entrecode.de/ui/icons?e=1",{"_index":2084,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["https://components.entrecode.de/ui/list/basic?e=1",{"_index":2341,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transforms?e=1",{"_index":2342,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/loader?e=1",{"_index":2599,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login?e=1",{"_index":2794,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["https://components.entrecode.de/ui/modal?e=1",{"_index":3019,"title":{},"body":{"components/ModalComponent.html":{}}}],["https://components.entrecode.de/ui/notifications?e=1",{"_index":3214,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop?e=1",{"_index":3476,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/symbols?e=1",{"_index":3934,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://components.entrecode.de/ui/tabs?e=1",{"_index":3998,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/data_manager/#field",{"_index":3695,"title":{},"body":{"interfaces/SdkField.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":504,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environ",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ac",{"_index":150,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":1955,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":642,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/ng",{"_index":3959,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://localhost:4200",{"_index":4535,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffin",{"_index":4546,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://medium.com/claritydesignsystem/ng",{"_index":3020,"title":{},"body":{"components/ModalComponent.html":{}}}],["human",{"_index":1682,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["i+1",{"_index":3415,"title":{},"body":{"components/PaginationComponent.html":{}}}],["i.getbodi",{"_index":3554,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["i.id",{"_index":3556,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["icon",{"_index":1632,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["icon'},{'nam",{"_index":229,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["icon.compon",{"_index":2121,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":2087,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.cont",{"_index":2115,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.servic",{"_index":2106,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.modul",{"_index":1901,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{}}}],["iconcompon",{"_index":228,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["iconmodul",{"_index":1889,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["iconservic",{"_index":2089,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"overview.html":{}}}],["id",{"_index":342,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["idea",{"_index":2396,"title":{},"body":{"components/ListComponent.html":{}}}],["identifi",{"_index":356,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["identifierpattern",{"_index":2328,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["ids.push(asset",{"_index":1809,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["if(body.amazement_factor",{"_index":4578,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(valu",{"_index":4573,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value===10",{"_index":4572,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ifram",{"_index":180,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignor",{"_index":1729,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["ignoredupl",{"_index":1725,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["imag",{"_index":231,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["image/image.direct",{"_index":1851,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirect",{"_index":314,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["imageform",{"_index":2168,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageload",{"_index":2169,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageselectpopcompon",{"_index":230,"title":{"components/ImageSelectPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["img",{"_index":315,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["img'",{"_index":2126,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immedi",{"_index":442,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/PopComponent.html":{}}}],["immut",{"_index":1095,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["implement",{"_index":16,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["import",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["impressum",{"_index":4419,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["includ",{"_index":1731,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["includeassetidinpath",{"_index":1726,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["incom",{"_index":4134,"title":{},"body":{"components/ToggleComponent.html":{}}}],["increment",{"_index":4639,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["index(item",{"_index":848,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":2098,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["indic",{"_index":1728,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["inform",{"_index":2535,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inhabit",{"_index":2333,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":128,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["init",{"_index":50,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["init(environ",{"_index":3723,"title":{},"body":{"injectables/SdkService.html":{}}}],["init(list",{"_index":2383,"title":{},"body":{"components/ListComponent.html":{}}}],["initfilterqueri",{"_index":494,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initfilterquery(fieldfilt",{"_index":528,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initi",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["initmethod",{"_index":3591,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initmod",{"_index":3023,"title":{},"body":{"components/ModalComponent.html":{}}}],["inittab",{"_index":4001,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":437,"title":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inject('environ",{"_index":3737,"title":{},"body":{"injectables/SdkService.html":{}}}],["inject('moment.format.month",{"_index":1269,"title":{},"body":{"interfaces/Day.html":{}}}],["input",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["input'",{"_index":1198,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'nam",{"_index":233,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["input('config",{"_index":2413,"title":{},"body":{"components/ListComponent.html":{}}}],["input.compon",{"_index":1171,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["input.component.html",{"_index":411,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.scss",{"_index":4616,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.t",{"_index":400,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts:10",{"_index":1372,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:11",{"_index":1382,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:13",{"_index":415,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:14",{"_index":416,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:15",{"_index":1383,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:17",{"_index":1381,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1371,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input/default",{"_index":1379,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{}}}],["input/ec",{"_index":4597,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input/input.compon",{"_index":2323,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":4608,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input[type=fil",{"_index":4229,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcompon",{"_index":115,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputerrorscompon",{"_index":234,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["inputthi",{"_index":4614,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputview",{"_index":2204,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["insid",{"_index":968,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["inspir",{"_index":3619,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["instal",{"_index":4388,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["instanc",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"pipes/DatetimePipe.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["instanceof",{"_index":2157,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instead",{"_index":1113,"title":{},"body":{"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["intend",{"_index":4057,"title":{},"body":{"components/TinymceComponent.html":{}}}],["interact",{"_index":3277,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interfac",{"_index":338,"title":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"overview.html":{}}}],["interfer",{"_index":2634,"title":{},"body":{"components/LoaderComponent.html":{}}}],["intern",{"_index":1057,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["interpret",{"_index":1748,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["intial",{"_index":2263,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefin",{"_index":3880,"title":{},"body":{"classes/Sorter.html":{}}}],["invalid",{"_index":4163,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["invit",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["inviteplacehold",{"_index":3824,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["invok",{"_index":2332,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["io/io.modul",{"_index":1897,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodul",{"_index":1887,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isact",{"_index":2937,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(pag",{"_index":3340,"title":{},"body":{"classes/Pagination.html":{}}}],["isactive(path",{"_index":2978,"title":{},"body":{"components/MenuComponent.html":{}}}],["isclick",{"_index":2555,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["isempti",{"_index":815,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1333,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1470,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperti",{"_index":1080,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1093,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1471,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isload",{"_index":2347,"title":{},"body":{"components/ListComponent.html":{}}}],["isn't",{"_index":4491,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["isnewasset(asset",{"_index":1763,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isnewassetgroupid(assetgroupid",{"_index":1831,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isoldassetgroupid",{"_index":2184,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["isoldassetgroupid(assetgroupid",{"_index":1829,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isoutsid",{"_index":1551,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isoutside(el",{"_index":1579,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isselect",{"_index":2938,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_mo",{"_index":1360,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":2980,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1331,"title":{},"body":{"interfaces/Day.html":{}}}],["ist",{"_index":3224,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["isvis",{"_index":3390,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(pag",{"_index":3393,"title":{},"body":{"components/PaginationComponent.html":{}}}],["item",{"_index":48,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/core-readme.html":{}}}],["item'",{"_index":2559,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item(",{"_index":1832,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item('a",{"_index":4651,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["item(asset",{"_index":1790,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":1788,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item.config.fields[property].form",{"_index":993,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":992,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsav",{"_index":3678,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.data?.titl",{"_index":3009,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(valu",{"_index":3680,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbodi",{"_index":550,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody().act",{"_index":365,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().action(item",{"_index":366,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().children",{"_index":367,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().select",{"_index":362,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.group(properti",{"_index":2033,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":1002,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":3007,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.resolve(field.properti",{"_index":4589,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["item.sort(properti",{"_index":3888,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":1878,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.properti",{"_index":1377,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.resolve(field.property)?.length",{"_index":1390,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemclick",{"_index":4672,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["itemconfig",{"_index":1874,"title":{"interfaces/ItemConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["items'},{'nam",{"_index":240,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["items.compon",{"_index":2590,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":2553,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.t",{"_index":2550,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:14",{"_index":2563,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:16",{"_index":2564,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:18",{"_index":2562,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:20",{"_index":2565,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:22",{"_index":2558,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:24",{"_index":2557,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:27",{"_index":2572,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:29",{"_index":2571,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:45",{"_index":2568,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:49",{"_index":2570,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:54",{"_index":2566,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":2032,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":876,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":891,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pip",{"_index":1903,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.t",{"_index":2869,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.pipe.ts:8",{"_index":2873,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((ha",{"_index":882,"title":{},"body":{"classes/Collection.html":{}}}],["items.revers",{"_index":3902,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.pag",{"_index":3383,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":3897,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":2549,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{}}}],["iter",{"_index":2309,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["itself",{"_index":1581,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["javascript",{"_index":62,"title":{},"body":{"components/AceComponent.html":{}}}],["js",{"_index":4346,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["json.parse(config",{"_index":2489,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.parse(e.data",{"_index":2077,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(object.assign(exist",{"_index":2493,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.stringify(valu",{"_index":2491,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["jwt/issues/305",{"_index":643,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":608,"title":{},"body":{"guards/AuthGuard.html":{}}}],["karma",{"_index":4415,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["keep",{"_index":1345,"title":{},"body":{"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{}}}],["keeppopopen",{"_index":1032,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["keepratio",{"_index":2224,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["key",{"_index":903,"title":{},"body":{"classes/Config.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["key[0",{"_index":1139,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keydown",{"_index":3520,"title":{},"body":{"injectables/PopService.html":{}}}],["keyup",{"_index":4114,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kind",{"_index":2613,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{}}}],["kleiner",{"_index":4563,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["know",{"_index":1814,"title":{},"body":{"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["known",{"_index":457,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["label",{"_index":355,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["languag",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["last",{"_index":1239,"title":{},"body":{"interfaces/Day.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["lat",{"_index":2025,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1441,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":3521,"title":{},"body":{"injectables/PopService.html":{},"dependencies.html":{}}}],["latestpop",{"_index":3530,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hid",{"_index":3532,"title":{},"body":{"injectables/PopService.html":{}}}],["latitud",{"_index":2006,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["layer",{"_index":3278,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["layout",{"_index":1346,"title":{},"body":{"interfaces/Day.html":{}}}],["lazi",{"_index":4042,"title":{},"body":{"components/TinymceComponent.html":{}}}],["left",{"_index":3039,"title":{},"body":{"components/ModalComponent.html":{}}}],["legaci",{"_index":577,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legacyasset",{"_index":1755,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["legacyassetconfig",{"_index":1745,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":177,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["lemontre",{"_index":2401,"title":{},"body":{"components/ListComponent.html":{}}}],["length",{"_index":885,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":4350,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["let'",{"_index":3309,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letter",{"_index":1073,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":434,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["li",{"_index":3404,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.i",{"_index":3012,"title":{},"body":{"components/MenuComponent.html":{}}}],["lib",{"_index":4866,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["librari",{"_index":2707,"title":{},"body":{"modules/LocationModule.html":{},"additional-documentation/adding-new-packages.html":{}}}],["light",{"_index":3105,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lightmodel",{"_index":1546,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["line",{"_index":2631,"title":{},"body":{"components/LoaderComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["line:direct",{"_index":1866,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":2412,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3432,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["lint",{"_index":4782,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["linter",{"_index":4728,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["list",{"_index":196,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["list'},{'nam",{"_index":194,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["list(act",{"_index":390,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["list(this.collection.item",{"_index":2421,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.item",{"_index":2418,"title":{},"body":{"components/ListComponent.html":{}}}],["list.compon",{"_index":548,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["list.component.html",{"_index":488,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.t",{"_index":487,"title":{},"body":{"components/AssetListComponent.html":{}}}],["list.component.ts:10",{"_index":522,"title":{},"body":{"components/AssetListComponent.html":{}}}],["list.config",{"_index":2495,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.config.storagekey",{"_index":2496,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.field",{"_index":2494,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.filter(f",{"_index":2502,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.find(f",{"_index":2510,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.foreach(field",{"_index":2507,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.load",{"_index":4592,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["list.ts/list.compon",{"_index":3366,"title":{},"body":{"classes/Pagination.html":{}}}],["list/asset",{"_index":486,"title":{},"body":{"components/AssetListComponent.html":{},"modules/FilesModule.html":{}}}],["list/entri",{"_index":976,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{}}}],["list/list",{"_index":2467,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["list/list.modul",{"_index":3794,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resourc",{"_index":547,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["listcompon",{"_index":236,"title":{"components/ListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["listconfig",{"_index":349,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["listconfigservic",{"_index":542,"title":{"injectables/ListConfigService.html":{}},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"overview.html":{}}}],["listen",{"_index":1571,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["listheadercompon",{"_index":237,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["listitemscompon",{"_index":239,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["listmodul",{"_index":2578,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listmoduleconfig",{"_index":2593,"title":{},"body":{"modules/ListModule.html":{}}}],["listresourc",{"_index":496,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{}}}],["listresource.follownextlink().then((list",{"_index":3550,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.getallitem",{"_index":3541,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.hasnextlink",{"_index":3548,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["lists/form",{"_index":3091,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["listtempl",{"_index":2345,"title":{},"body":{"components/ListComponent.html":{}}}],["liter",{"_index":786,"title":{},"body":{"modules/CalendarModule.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{}}}],["live",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":2027,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":428,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"interfaces/WithLoader.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["load(config",{"_index":3345,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":451,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadactions(act",{"_index":387,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadactionsbefor",{"_index":373,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadcompon",{"_index":1451,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(compon",{"_index":1453,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadentri",{"_index":930,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":955,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":497,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loader'",{"_index":2612,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'nam",{"_index":242,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["loader.compon",{"_index":2649,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":2600,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interfac",{"_index":2846,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loader.interface.t",{"_index":4327,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["loader.servic",{"_index":2650,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promis",{"_index":2656,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.compon",{"_index":2844,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.modul",{"_index":1900,"title":{},"body":{"modules/FormModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":2845,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loadercompon",{"_index":241,"title":{"components/LoaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"overview.html":{}}}],["loadermodul",{"_index":1890,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaderservic",{"_index":934,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"overview.html":{}}}],["loaderth",{"_index":2615,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadimag",{"_index":2200,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadimg",{"_index":2206,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadresourcelistactions(st",{"_index":3560,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["loadwhen",{"_index":498,"title":{},"body":{"components/AssetListComponent.html":{}}}],["local",{"_index":2464,"title":{"additional-documentation/project-setup-tutorial/localization.html":{}},"body":{"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["localiz",{"_index":3155,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["localload",{"_index":2621,"title":{},"body":{"components/LoaderComponent.html":{}}}],["localstorage.getitem(key",{"_index":2488,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["localstorage.setitem(key",{"_index":2490,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["locat",{"_index":244,"title":{"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/location-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["location.latitud",{"_index":2026,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitud",{"_index":2028,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":2693,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_compon",{"_index":2694,"title":{},"body":{"modules/LocationModule.html":{}}}],["locationmapcompon",{"_index":243,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["locationmodul",{"_index":2686,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationmoduleconfig",{"_index":2702,"title":{},"body":{"modules/LocationModule.html":{}}}],["locationpickercompon",{"_index":246,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationsearchcompon",{"_index":248,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["lock",{"_index":3455,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["lockform",{"_index":3444,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":2096,"title":{},"body":{"components/IconComponent.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["logic",{"_index":4631,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["login",{"_index":253,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login'",{"_index":2840,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login'},{'nam",{"_index":251,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["login(undefin",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["login(valu",{"_index":2830,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login.component.html",{"_index":2764,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login.component.t",{"_index":4549,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login/login.compon",{"_index":638,"title":{},"body":{"modules/AuthModule.html":{},"components/SignupComponent.html":{}}}],["logincompon",{"_index":250,"title":{"components/LoginComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["logincomponent:24",{"_index":3804,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:26",{"_index":3807,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:28",{"_index":3806,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:30",{"_index":3813,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:32",{"_index":3814,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:34",{"_index":3812,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:35",{"_index":3815,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:36",{"_index":3816,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:39",{"_index":3809,"title":{},"body":{"components/SignupComponent.html":{}}}],["loginformcompon",{"_index":252,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["loginformcomponent:18",{"_index":3848,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:20",{"_index":3850,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:22",{"_index":3847,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:24",{"_index":3839,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:26",{"_index":3838,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:28",{"_index":3834,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:30",{"_index":3837,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:32",{"_index":3832,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:34",{"_index":3833,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:36",{"_index":3835,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:38",{"_index":3836,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:40",{"_index":3831,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:42",{"_index":3830,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:44",{"_index":3849,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:47",{"_index":3851,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:51",{"_index":3844,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:59",{"_index":3846,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:67",{"_index":3843,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:72",{"_index":3845,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["logout",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2462,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{}}}],["longer",{"_index":4448,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["longitud",{"_index":2008,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":3194,"title":{},"body":{"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["lookup",{"_index":1988,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lower",{"_index":2409,"title":{},"body":{"components/ListComponent.html":{}}}],["lowest",{"_index":4646,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["lvl",{"_index":3146,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lvl1",{"_index":1041,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["made",{"_index":4056,"title":{},"body":{"components/TinymceComponent.html":{}}}],["mail",{"_index":2814,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["main",{"_index":2395,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["mainli",{"_index":4366,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["make",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["manag",{"_index":4378,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["mandatori",{"_index":3038,"title":{},"body":{"components/ModalComponent.html":{}}}],["mani",{"_index":1052,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["manual",{"_index":4048,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["map",{"_index":910,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["map'},{'nam",{"_index":245,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["map((d",{"_index":1328,"title":{},"body":{"interfaces/Day.html":{}}}],["map((dat",{"_index":1330,"title":{},"body":{"interfaces/Day.html":{}}}],["map((method",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((resourc",{"_index":3542,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map(a",{"_index":3570,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map(field",{"_index":3139,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["map(i",{"_index":3553,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map(item",{"_index":3889,"title":{},"body":{"classes/Sorter.html":{}}}],["map.compon",{"_index":2699,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":2660,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":2659,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.t",{"_index":2658,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:12",{"_index":2667,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:14",{"_index":2669,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:16",{"_index":2671,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:18",{"_index":2670,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:24",{"_index":2676,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2673,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.valu",{"_index":2744,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["mapload",{"_index":1980,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapsapiload",{"_index":1977,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mark",{"_index":1256,"title":{},"body":{"interfaces/Day.html":{}}}],["marker",{"_index":2668,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":2661,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coord",{"_index":2672,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markup",{"_index":3018,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["match",{"_index":321,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["match.level",{"_index":3144,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches(chang",{"_index":3652,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["math.abs(curr",{"_index":3411,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(max",{"_index":3147,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["math.max(minlevel",{"_index":997,"title":{},"body":{"components/CrudComponent.html":{}}}],["math.max(value.width",{"_index":2191,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.defaults",{"_index":2217,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.getpag",{"_index":3385,"title":{},"body":{"classes/Pagination.html":{}}}],["matter",{"_index":4518,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":1902,"title":{},"body":{"modules/FormModule.html":{}}}],["maxcolumn",{"_index":2454,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["maxim",{"_index":2460,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["maximum",{"_index":1657,"title":{},"body":{"classes/Field.html":{}}}],["maxitem",{"_index":1633,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{}}}],["maxitemspip",{"_index":1885,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"overview.html":{}}}],["mean",{"_index":1830,"title":{},"body":{"interfaces/FileOptions.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/core-readme.html":{}}}],["meant",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["meantion",{"_index":4603,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["medium",{"_index":255,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediumeditor",{"_index":2887,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeel",{"_index":2907,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcompon",{"_index":254,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["mediumeditormodul",{"_index":2915,"title":{"modules/MediumEditorModule.html":{}},"body":{"modules/MediumEditorModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["mediummodul",{"_index":4458,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediummoduleconfig",{"_index":2922,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["menu",{"_index":2925,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu,[ec",{"_index":258,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menu.component.html",{"_index":2927,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":2926,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":4313,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'nam",{"_index":259,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menucompon",{"_index":257,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["merg",{"_index":907,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["merge(route.data",{"_index":981,"title":{},"body":{"components/CrudComponent.html":{}}}],["merged[titl",{"_index":3162,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfield",{"_index":3179,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields[key",{"_index":3182,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["messag",{"_index":586,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["message.clos",{"_index":3315,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["met",{"_index":4624,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["metadata",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["middl",{"_index":4648,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{}}}],["min",{"_index":174,"title":{},"body":{"components/AceComponent.html":{}}}],["minimum",{"_index":3437,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["miscellan",{"_index":4361,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":4695,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["mit",{"_index":3462,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mmmm",{"_index":800,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["modal",{"_index":3016,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["modal'},{'nam",{"_index":261,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["modal.component.html",{"_index":3022,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.compon",{"_index":3515,"title":{},"body":{"modules/PopModule.html":{}}}],["modalcompon",{"_index":260,"title":{"components/ModalComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["mode",{"_index":58,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model'",{"_index":3071,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.${filter.model",{"_index":1109,"title":{},"body":{"injectables/CrudService.html":{}}}],["model.${model",{"_index":1137,"title":{},"body":{"injectables/CrudService.html":{}}}],["model.field",{"_index":906,"title":{},"body":{"classes/Config.html":{}}}],["model/schema",{"_index":4568,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["modelchang",{"_index":2885,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":935,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["modelconfig.field",{"_index":3135,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":3094,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":3119,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":3113,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":3121,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfield",{"_index":3176,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields[key",{"_index":3184,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservic",{"_index":936,"title":{"injectables/ModelConfigService.html":{}},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["modelconfigur",{"_index":3188,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{}}}],["modelist.j",{"_index":152,"title":{},"body":{"components/AceComponent.html":{}}}],["modelresourc",{"_index":2047,"title":{},"body":{"injectables/HistoryService.html":{}}}],["models[model",{"_index":3187,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modifi",{"_index":1072,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["modified'].indexof(key",{"_index":1140,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modul",{"_index":322,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["module'",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["module(",{"_index":4883,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["module.export",{"_index":4484,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["modulewithprovid",{"_index":630,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{}}}],["moment",{"_index":1210,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{}}}],["moment'",{"_index":1343,"title":{},"body":{"interfaces/Day.html":{}}}],["moment().startof('day').diff(d",{"_index":1342,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":4168,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(valu",{"_index":1230,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyi",{"_index":4557,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment(value).format(format",{"_index":4187,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1234,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":4189,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":4164,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.d",{"_index":795,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":799,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.tim",{"_index":797,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.locale('d",{"_index":4551,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment.locale(this.symbols.resolve('moment.locale'));us",{"_index":3920,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["moment.mo",{"_index":1194,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["monorepo",{"_index":4377,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["month",{"_index":805,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["month'},{'nam",{"_index":263,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["month.component.html",{"_index":1249,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcompon",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["monthformat",{"_index":1265,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["mouseout",{"_index":2957,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseov",{"_index":2950,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1305,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1304,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":816,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/adding-new-packages.html":{}}}],["move(item",{"_index":852,"title":{},"body":{"classes/Collection.html":{}}}],["ms",{"_index":2245,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["muffin",{"_index":3095,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffin.entry?.nam",{"_index":1538,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.nam",{"_index":1498,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffincompon",{"_index":3238,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["muffinconfigur",{"_index":4596,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffins/muffins.compon",{"_index":4544,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":4539,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscompon",{"_index":4543,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["multi",{"_index":29,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["multipl",{"_index":1062,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["mustreload",{"_index":931,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":958,"title":{},"body":{"components/CrudComponent.html":{}}}],["mutabl",{"_index":3154,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["myapp",{"_index":2617,"title":{},"body":{"components/LoaderComponent.html":{}}}],["myasset.asset?.assetid",{"_index":462,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.cr",{"_index":465,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":467,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tag",{"_index":464,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.titl",{"_index":463,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.typ",{"_index":466,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycompon",{"_index":3221,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["myimage.asset?.assetid",{"_index":2148,"title":{},"body":{"directives/ImageDirective.html":{}}}],["name",{"_index":92,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["name[0].touppercas",{"_index":4555,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["namespac",{"_index":1996,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["nativ",{"_index":2141,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natur",{"_index":3878,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":4405,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["navigationend",{"_index":4014,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":1991,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":1067,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["nest",{"_index":1061,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["nestedcrudconfig",{"_index":4139,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["nestedpopact",{"_index":1033,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["never",{"_index":4446,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["new",{"_index":76,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["newdat",{"_index":1363,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1365,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistori",{"_index":2074,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newli",{"_index":3696,"title":{},"body":{"interfaces/SdkField.html":{}}}],["newprojectroot",{"_index":4860,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["newtimespan",{"_index":1287,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.revers",{"_index":1292,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1291,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1289,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":520,"title":{},"body":{"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ng",{"_index":4403,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ng_value_accessor",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngaftercontentinit",{"_index":4002,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":1859,"title":{},"body":{"interfaces/Focus.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":1559,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabsComponent.html":{}}}],["ngmodel",{"_index":4490,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngmodul",{"_index":334,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["ngmodule(acemoduleconfig",{"_index":337,"title":{},"body":{"modules/AceModule.html":{}}}],["ngmodule(calendarmoduleconfig",{"_index":802,"title":{},"body":{"modules/CalendarModule.html":{}}}],["ngmodule(datamoduleconfig",{"_index":1185,"title":{},"body":{"modules/DataModule.html":{}}}],["ngmodule(formmoduleconfig",{"_index":1909,"title":{},"body":{"modules/FormModule.html":{}}}],["ngmodule(listmoduleconfig",{"_index":2594,"title":{},"body":{"modules/ListModule.html":{}}}],["ngmodule(locationmoduleconfig",{"_index":2708,"title":{},"body":{"modules/LocationModule.html":{}}}],["ngmodule(mediummoduleconfig",{"_index":2923,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["ngmodule(popmoduleconfig",{"_index":3517,"title":{},"body":{"modules/PopModule.html":{}}}],["ngmodule(selectmoduleconfig",{"_index":3797,"title":{},"body":{"modules/SelectModule.html":{}}}],["ngmodule(tinymcemoduleconfig",{"_index":4124,"title":{},"body":{"modules/TinymceModule.html":{}}}],["ngmodule(uimoduleconfig",{"_index":4197,"title":{},"body":{"modules/UiModule.html":{}}}],["ngmodule(utilitymoduleconfig",{"_index":4315,"title":{},"body":{"modules/UtilityModule.html":{}}}],["ngonchang",{"_index":51,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ngonchanges(chang",{"_index":533,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{}}}],["ngondestroy",{"_index":2884,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ngx",{"_index":634,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1978,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":609,"title":{},"body":{"guards/AuthGuard.html":{}}}],["noapi",{"_index":3712,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":3726,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ac",{"_index":141,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":4661,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["node",{"_index":4485,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modul",{"_index":4392,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["node_modules/@ec.compon",{"_index":4383,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["node_modules/eventsource/lib/eventsource.j",{"_index":4459,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/jsonpath",{"_index":4463,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/tinymce/skins/lightgray/content.min.css",{"_index":4664,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["node_modules/tinymce/skins/lightgray/skin.min.css",{"_index":4663,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["non",{"_index":3037,"title":{},"body":{"components/ModalComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":2560,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["normal",{"_index":1405,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["notabl",{"_index":4665,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["note",{"_index":3434,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["noth",{"_index":3102,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notif",{"_index":591,"title":{"classes/Notification.html":{}},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["notification(notif",{"_index":3301,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":3256,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notif",{"_index":3257,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.t",{"_index":3247,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.error",{"_index":3211,"title":{},"body":{"classes/Notification.html":{},"injectables/NotificationsService.html":{}}}],["notification.hid",{"_index":3252,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":3261,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.messag",{"_index":3255,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replac",{"_index":3258,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":3259,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notif",{"_index":3260,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticki",{"_index":3263,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.tim",{"_index":3264,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.titl",{"_index":3254,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcompon",{"_index":3191,"title":{},"body":{"classes/Notification.html":{}}}],["notifications'},{'nam",{"_index":265,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["notifications.compon",{"_index":3210,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":3215,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interfac",{"_index":4871,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["notifications.interface.t",{"_index":4330,"title":{},"body":{"interfaces/WithNotifications.html":{}}}],["notifications.servic",{"_index":3248,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.modul",{"_index":4194,"title":{},"body":{"modules/UiModule.html":{}}}],["notificationscompon",{"_index":264,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["notificationservic",{"_index":937,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["notificationservice.$emitt",{"_index":3213,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodul",{"_index":3267,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservic",{"_index":592,"title":{"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"overview.html":{}}}],["now",{"_index":2229,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["npm",{"_index":4389,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["nth",{"_index":2871,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":880,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["number",{"_index":445,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["numbers.add(4",{"_index":836,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":839,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":844,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":847,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":856,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeal",{"_index":859,"title":{},"body":{"classes/Collection.html":{}}}],["numer",{"_index":3881,"title":{},"body":{"classes/Sorter.html":{}}}],["object",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["object.assign",{"_index":908,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["object.assign(componentref.inst",{"_index":1466,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":4180,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assign(entri",{"_index":1132,"title":{},"body":{"injectables/CrudService.html":{}}}],["object.assign(merg",{"_index":3149,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(resourc",{"_index":3687,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.assign(thi",{"_index":1709,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":2415,"title":{},"body":{"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][properti",{"_index":916,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.get(model",{"_index":3167,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(this.types[typ",{"_index":4185,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.keys(customfieldconfig",{"_index":3178,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig",{"_index":3136,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig).map(properti",{"_index":3151,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filt",{"_index":3670,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equ",{"_index":990,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permiss",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(symbolservice.sets).length",{"_index":3953,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(this.control.errors).reduce((err",{"_index":2312,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":3971,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1129,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["observ",{"_index":538,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["observable(observ",{"_index":1997,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observable.throw(err",{"_index":2859,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["observeel",{"_index":1975,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":1992,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":2011,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coord",{"_index":2010,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolet",{"_index":3244,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["obtain",{"_index":3087,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["occur",{"_index":2769,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ok",{"_index":2019,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1116,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["oldassetgroupid",{"_index":1749,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["oldvalu",{"_index":1128,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1130,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":3118,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["omittedfield",{"_index":3076,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["on",{"_index":519,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["onchang",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ondestroy",{"_index":2881,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(",{"_index":1431,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(",{"_index":1421,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(",{"_index":1426,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["onedit",{"_index":2329,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["oninit",{"_index":21,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["onsav",{"_index":2189,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["onsubmit",{"_index":2797,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["open",{"_index":1039,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghour",{"_index":4622,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghourscompon",{"_index":4630,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["oper",{"_index":527,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["option",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["option.label?option.label:opt",{"_index":1385,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["options[key",{"_index":1777,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":2903,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["origin",{"_index":2208,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["original.resolut",{"_index":2211,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["other",{"_index":2527,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"additional-documentation/adding-new-packages.html":{}}}],["otherwis",{"_index":1100,"title":{},"body":{"injectables/CrudService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ouput",{"_index":2174,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{}}}],["out",{"_index":331,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["outlin",{"_index":4575,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["output",{"_index":435,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["output'},{'nam",{"_index":210,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["output('toggl",{"_index":3493,"title":{},"body":{"components/PopComponent.html":{}}}],["output.compon",{"_index":1173,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1374,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.t",{"_index":1373,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:11",{"_index":1375,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1376,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1386,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"components/OutputComponent.html":{}}}],["output/output.compon",{"_index":2322,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcompon",{"_index":266,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["outsid",{"_index":107,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["over",{"_index":2310,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["overlay",{"_index":3051,"title":{},"body":{"components/ModalComponent.html":{}}}],["overrid",{"_index":2103,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{}}}],["overridden",{"_index":2860,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["overriden",{"_index":3075,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overview",{"_index":4422,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["overwrit",{"_index":3922,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwritten",{"_index":2832,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["p",{"_index":4858,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packag",{"_index":4332,"title":{"dependencies.html":{},"additional-documentation/adding-new-packages.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["package(",{"_index":4882,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["package.json",{"_index":4442,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages/.../actionbar.component.t",{"_index":4429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../auth.module.t",{"_index":4362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../sorter.t",{"_index":4363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/ace/src/lib/ace.component.t",{"_index":10,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:102",{"_index":105,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:112",{"_index":120,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:116",{"_index":87,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:120",{"_index":95,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:29",{"_index":114,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:33",{"_index":125,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:37",{"_index":122,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:39",{"_index":116,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:43",{"_index":112,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:47",{"_index":72,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:51",{"_index":73,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:54",{"_index":74,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:75",{"_index":97,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:84",{"_index":102,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:93",{"_index":85,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:97",{"_index":83,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.module.t",{"_index":332,"title":{},"body":{"modules/AceModule.html":{}}}],["packages/calendar/src/lib/calendar.module.t",{"_index":781,"title":{},"body":{"modules/CalendarModule.html":{}}}],["packages/calendar/src/lib/calendar.module.ts:46",{"_index":787,"title":{},"body":{"modules/CalendarModule.html":{}}}],["packages/calendar/src/lib/calendar/month.component.t",{"_index":1235,"title":{},"body":{"interfaces/Day.html":{}}}],["packages/calendar/src/lib/datetime.pipe.t",{"_index":1215,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts:12",{"_index":1222,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/core/src/lib/collection/collection.t",{"_index":810,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:10",{"_index":827,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:106",{"_index":855,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:12",{"_index":830,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:123",{"_index":858,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:138",{"_index":863,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:14",{"_index":822,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:147",{"_index":861,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:160",{"_index":850,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:165",{"_index":853,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:31",{"_index":849,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:42",{"_index":843,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:53",{"_index":846,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:71",{"_index":834,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:89",{"_index":838,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/config/config.t",{"_index":896,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/config.ts:13",{"_index":900,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/config.ts:5",{"_index":898,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/field",{"_index":1719,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["packages/core/src/lib/field/field.t",{"_index":1627,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:11",{"_index":1649,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:13",{"_index":1667,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:15",{"_index":1670,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:17",{"_index":1668,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:19",{"_index":1654,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:21",{"_index":1660,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:23",{"_index":1661,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:25",{"_index":1655,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:27",{"_index":1642,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:29",{"_index":1645,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:31",{"_index":1646,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:33",{"_index":1669,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:35",{"_index":1640,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:37",{"_index":1653,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:39",{"_index":1666,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:41",{"_index":1641,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:43",{"_index":1656,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:45",{"_index":1651,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:47",{"_index":1639,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:59",{"_index":1674,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:63",{"_index":1671,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:7",{"_index":1664,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:9",{"_index":1662,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/form/form",{"_index":1872,"title":{},"body":{"interfaces/FormConfig.html":{}}}],["packages/core/src/lib/item/item",{"_index":2326,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["packages/core/src/lib/list/list",{"_index":2447,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["packages/core/src/lib/pagination/pagination.t",{"_index":3322,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:107",{"_index":3341,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:11",{"_index":3334,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:112",{"_index":3342,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:117",{"_index":3343,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:125",{"_index":3358,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:13",{"_index":3331,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:130",{"_index":3348,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:142",{"_index":3361,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:15",{"_index":3329,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:33",{"_index":3338,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:38",{"_index":3339,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:43",{"_index":3347,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:52",{"_index":3349,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:63",{"_index":3354,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:7",{"_index":3335,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:76",{"_index":3346,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:84",{"_index":3352,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:9",{"_index":3333,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:93",{"_index":3337,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:98",{"_index":3344,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/sorter/sorter.t",{"_index":3864,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:25",{"_index":3871,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:32",{"_index":3873,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:62",{"_index":3876,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/data/dist",{"_index":4864,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/lib",{"_index":4865,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/package.json#nam",{"_index":4861,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/src/lib/asset",{"_index":485,"title":{},"body":{"components/AssetListComponent.html":{}}}],["packages/data/src/lib/auth/auth",{"_index":580,"title":{},"body":{"guards/AuthGuard.html":{}}}],["packages/data/src/lib/auth/auth.module.t",{"_index":625,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/lib/auth/auth.service.t",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:113",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:135",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:147",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:157",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:171",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:24",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:31",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:45",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:58",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:67",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:74",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:82",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/login/login.component.t",{"_index":2760,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:24",{"_index":2768,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:26",{"_index":2772,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:28",{"_index":2771,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:30",{"_index":2776,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:32",{"_index":2766,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:34",{"_index":2775,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:35",{"_index":2777,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:36",{"_index":2778,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:39",{"_index":2773,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/password",{"_index":3438,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.t",{"_index":3798,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:17",{"_index":3801,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:19",{"_index":3803,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:21",{"_index":3805,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:23",{"_index":3810,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:25",{"_index":3811,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:28",{"_index":3808,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/crud/crud",{"_index":1017,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["packages/data/src/lib/crud/crud.component.t",{"_index":917,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:115",{"_index":964,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:33",{"_index":946,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:35",{"_index":945,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:37",{"_index":947,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:39",{"_index":970,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:41",{"_index":966,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:43",{"_index":972,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:45",{"_index":950,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:47",{"_index":951,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:49",{"_index":940,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:58",{"_index":974,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:59",{"_index":973,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:70",{"_index":962,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:79",{"_index":953,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:84",{"_index":959,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:91",{"_index":956,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.service.t",{"_index":1071,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:13",{"_index":1081,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:16",{"_index":1104,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:20",{"_index":1083,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:38",{"_index":1098,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:51",{"_index":1103,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:65",{"_index":1094,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:71",{"_index":1086,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:86",{"_index":1089,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/crud/crud.service.ts:98",{"_index":1092,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/lib/data.module.t",{"_index":1159,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/lib/data.module.ts:94",{"_index":1162,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/lib/entri",{"_index":398,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{}}}],["packages/data/src/lib/entries/entries.directive.t",{"_index":1467,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:100",{"_index":1486,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:108",{"_index":1484,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:22",{"_index":1496,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:24",{"_index":1481,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:26",{"_index":1483,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:28",{"_index":1479,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:30",{"_index":1476,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:32",{"_index":1480,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:34",{"_index":1494,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:35",{"_index":1475,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:40",{"_index":1497,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:41",{"_index":1495,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:45",{"_index":1490,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:58",{"_index":1488,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:71",{"_index":1493,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:82",{"_index":1489,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:89",{"_index":1491,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:96",{"_index":1487,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.t",{"_index":1524,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:19",{"_index":1536,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:21",{"_index":1528,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:23",{"_index":1531,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:25",{"_index":1527,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:27",{"_index":1529,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:29",{"_index":1532,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:31",{"_index":1530,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:33",{"_index":1526,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:37",{"_index":1537,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:38",{"_index":1535,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:42",{"_index":1534,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:50",{"_index":1533,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.t",{"_index":427,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:16",{"_index":458,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:18",{"_index":441,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:20",{"_index":444,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:22",{"_index":443,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:24",{"_index":446,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:26",{"_index":440,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:28",{"_index":450,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:30",{"_index":436,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:33",{"_index":459,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:37",{"_index":456,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:48",{"_index":452,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/assetgroup",{"_index":551,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.t",{"_index":1392,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:11",{"_index":1406,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:13",{"_index":1416,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:24",{"_index":1418,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:37",{"_index":1413,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:46",{"_index":1402,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:7",{"_index":1408,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:9",{"_index":1407,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/file.service.t",{"_index":1721,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["packages/data/src/lib/files/files.module.t",{"_index":1843,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/lib/files/imag",{"_index":2165,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["packages/data/src/lib/files/image/image.directive.t",{"_index":2125,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:14",{"_index":2138,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:16",{"_index":2136,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:18",{"_index":2133,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:20",{"_index":2132,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:22",{"_index":2147,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:27",{"_index":2142,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:39",{"_index":2139,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:43",{"_index":2146,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:60",{"_index":2144,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/upload",{"_index":4269,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.t",{"_index":4198,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:16",{"_index":4226,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:17",{"_index":4233,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:18",{"_index":4230,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:20",{"_index":4212,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:22",{"_index":4209,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:24",{"_index":4207,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:26",{"_index":4208,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:28",{"_index":4211,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:30",{"_index":4206,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:32",{"_index":4215,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:34",{"_index":4213,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:36",{"_index":4228,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:38",{"_index":4232,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:40",{"_index":4205,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:49",{"_index":4222,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:59",{"_index":4220,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:65",{"_index":4217,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:73",{"_index":4218,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:80",{"_index":4225,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:99",{"_index":4224,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/model",{"_index":3070,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{}}}],["packages/data/src/lib/resourc",{"_index":3535,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["packages/data/src/lib/resource/resource.module.t",{"_index":3635,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/lib/sdk/history.service.t",{"_index":2034,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:15",{"_index":2057,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:17",{"_index":2040,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:20",{"_index":2056,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:21",{"_index":2055,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:22",{"_index":2060,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:23",{"_index":2059,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:26",{"_index":2052,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:42",{"_index":2042,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:52",{"_index":2048,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/sdk.module.t",{"_index":3700,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/lib/sdk/sdk.service.t",{"_index":3702,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:111",{"_index":3729,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:121",{"_index":3720,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:132",{"_index":3717,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:144",{"_index":3727,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:34",{"_index":3733,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:36",{"_index":3740,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:37",{"_index":3746,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:47",{"_index":3743,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:49",{"_index":3732,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:51",{"_index":3731,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:53",{"_index":3734,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:55",{"_index":3747,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:62",{"_index":3749,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:67",{"_index":3736,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:69",{"_index":3744,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:71",{"_index":3741,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:78",{"_index":3716,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:81",{"_index":3738,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:88",{"_index":3724,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/location/src/lib/geocode.service.t",{"_index":1969,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:12",{"_index":1979,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:18",{"_index":1993,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:43",{"_index":1982,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:49",{"_index":1985,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:62",{"_index":1990,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/loc",{"_index":2657,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["packages/location/src/lib/location.module.t",{"_index":2692,"title":{},"body":{"modules/LocationModule.html":{}}}],["packages/location/src/lib/location.module.ts:34",{"_index":2696,"title":{},"body":{"modules/LocationModule.html":{}}}],["packages/medium",{"_index":2875,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{}}}],["packages/styl",{"_index":4381,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["packages/tinymce/src/lib/tinymce.module.t",{"_index":4121,"title":{},"body":{"modules/TinymceModule.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.t",{"_index":4036,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:103",{"_index":4063,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:133",{"_index":4061,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:138",{"_index":4068,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:145",{"_index":4071,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:147",{"_index":4066,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:151",{"_index":4067,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:48",{"_index":4072,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:50",{"_index":4070,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:52",{"_index":4069,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:54",{"_index":4073,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:56",{"_index":4050,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:58",{"_index":4054,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:60",{"_index":4053,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:62",{"_index":4055,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:65",{"_index":4058,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:67",{"_index":4045,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:85",{"_index":4064,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:91",{"_index":4062,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:98",{"_index":4065,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/ui",{"_index":4635,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["packages/ui/src/lib/actionbar/actionbar.component.t",{"_index":340,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"miscellaneous/typealiases.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.t",{"_index":1186,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:24",{"_index":1195,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:26",{"_index":1197,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:28",{"_index":1204,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:30",{"_index":1207,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:32",{"_index":1196,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:34",{"_index":1199,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:37",{"_index":1202,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:42",{"_index":1205,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:46",{"_index":1200,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:51",{"_index":1201,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/default",{"_index":1378,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["packages/ui/src/lib/form/form.module.t",{"_index":1893,"title":{},"body":{"modules/FormModule.html":{}}}],["packages/ui/src/lib/form/form.service.t",{"_index":1910,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:16",{"_index":1919,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:19",{"_index":1939,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:24",{"_index":1933,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:35",{"_index":1927,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:48",{"_index":1921,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:56",{"_index":1929,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:68",{"_index":1936,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:83",{"_index":1924,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/max",{"_index":2868,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.t",{"_index":4125,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:19",{"_index":4136,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:21",{"_index":4128,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:24",{"_index":4132,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:29",{"_index":4133,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:33",{"_index":4135,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:36",{"_index":4129,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:40",{"_index":4130,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/vis",{"_index":4316,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["packages/ui/src/lib/icon/icon.component.t",{"_index":2081,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:17",{"_index":2091,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:19",{"_index":2090,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:23",{"_index":2094,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:29",{"_index":2093,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:32",{"_index":2092,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.module.t",{"_index":2120,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/lib/icon/icon.service.t",{"_index":2122,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts:11",{"_index":2124,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/lib/io/dynam",{"_index":1432,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["packages/ui/src/lib/io/input",{"_index":2300,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.t",{"_index":2237,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:103",{"_index":2257,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:110",{"_index":2266,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:114",{"_index":2255,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:119",{"_index":2256,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:23",{"_index":2248,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:25",{"_index":2244,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:27",{"_index":2252,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:29",{"_index":2246,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:31",{"_index":2247,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:33",{"_index":2250,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:35",{"_index":2249,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:37",{"_index":2242,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:39",{"_index":2241,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:42",{"_index":2259,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:44",{"_index":2267,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:46",{"_index":2254,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:89",{"_index":2253,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/io.module.t",{"_index":2321,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/lib/io/output/output.component.t",{"_index":3317,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:14",{"_index":3318,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:16",{"_index":3319,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:20",{"_index":3320,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/slot",{"_index":3856,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["packages/ui/src/lib/list/group.pipe.t",{"_index":2029,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts:10",{"_index":2031,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/lib/list/list",{"_index":2468,"title":{},"body":{"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{}}}],["packages/ui/src/lib/list/list.component.t",{"_index":2340,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:102",{"_index":2372,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:110",{"_index":2389,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:116",{"_index":2388,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:123",{"_index":2379,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:129",{"_index":2380,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:142",{"_index":2381,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:155",{"_index":2378,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:27",{"_index":2391,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:30",{"_index":2393,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:32",{"_index":2361,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:34",{"_index":2362,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:36",{"_index":2360,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:38",{"_index":2366,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:40",{"_index":2367,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:42",{"_index":2369,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:44",{"_index":2370,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:46",{"_index":2363,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:48",{"_index":2364,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:50",{"_index":2365,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:52",{"_index":2359,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:54",{"_index":2392,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:56",{"_index":2357,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:59",{"_index":2394,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:60",{"_index":2390,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:66",{"_index":2385,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:75",{"_index":2384,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.module.t",{"_index":2585,"title":{},"body":{"modules/ListModule.html":{}}}],["packages/ui/src/lib/list/pagination/pagin",{"_index":3426,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.t",{"_index":3387,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:15",{"_index":3392,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:17",{"_index":3400,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:19",{"_index":3406,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:21",{"_index":3403,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:23",{"_index":3391,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:26",{"_index":3397,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:31",{"_index":3395,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:39",{"_index":3394,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:45",{"_index":3399,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.t",{"_index":2595,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:14",{"_index":2610,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:16",{"_index":2611,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:18",{"_index":2604,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:25",{"_index":2606,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:31",{"_index":2605,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:38",{"_index":2608,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.module.t",{"_index":2648,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/lib/loader/loader.service.t",{"_index":2651,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:11",{"_index":2653,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:16",{"_index":2654,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:8",{"_index":2655,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/with",{"_index":4326,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["packages/ui/src/lib/modal/modal.component.t",{"_index":3015,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:18",{"_index":3054,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:27",{"_index":3041,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:29",{"_index":3031,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:31",{"_index":3029,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:33",{"_index":3036,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:35",{"_index":3033,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:37",{"_index":3035,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:39",{"_index":3050,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:41",{"_index":3034,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:43",{"_index":3026,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:46",{"_index":3048,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:47",{"_index":3047,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:48",{"_index":3046,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:52",{"_index":3042,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:72",{"_index":3045,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:76",{"_index":3044,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.t",{"_index":1608,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:12",{"_index":1611,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:18",{"_index":1613,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:22",{"_index":1612,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:26",{"_index":1614,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/notification.t",{"_index":3190,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:10",{"_index":3199,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:12",{"_index":3205,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:14",{"_index":3203,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:16",{"_index":3209,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:18",{"_index":3196,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:20",{"_index":3197,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:22",{"_index":3195,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:24",{"_index":3193,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:6",{"_index":3207,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:8",{"_index":3200,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.t",{"_index":3212,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:19",{"_index":3217,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:21",{"_index":3216,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.module.t",{"_index":3273,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.t",{"_index":3276,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:22",{"_index":3295,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:24",{"_index":3297,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:26",{"_index":3284,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:34",{"_index":3291,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:48",{"_index":3293,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:61",{"_index":3286,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/with",{"_index":4329,"title":{},"body":{"interfaces/WithNotifications.html":{}}}],["packages/ui/src/lib/pop/pop.component.t",{"_index":3472,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:29",{"_index":3478,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:31",{"_index":3487,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:33",{"_index":3480,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:35",{"_index":3479,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:37",{"_index":3481,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:39",{"_index":3488,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:42",{"_index":3482,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:52",{"_index":3477,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:55",{"_index":3489,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:61",{"_index":3484,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:67",{"_index":3486,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:77",{"_index":3485,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:90",{"_index":3483,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.module.t",{"_index":3514,"title":{},"body":{"modules/PopModule.html":{}}}],["packages/ui/src/lib/pop/pop.service.t",{"_index":3518,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:11",{"_index":3523,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:9",{"_index":3524,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/select/select.module.t",{"_index":3793,"title":{},"body":{"modules/SelectModule.html":{}}}],["packages/ui/src/lib/symbol/symbol.interface.t",{"_index":3903,"title":{},"body":{"interfaces/Symbol.html":{}}}],["packages/ui/src/lib/symbol/symbol.module.t",{"_index":3911,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.t",{"_index":3927,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts:21",{"_index":3929,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.t",{"_index":3933,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:12",{"_index":3957,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:15",{"_index":3955,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:17",{"_index":3956,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:18",{"_index":3958,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:23",{"_index":3938,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:28",{"_index":3943,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:37",{"_index":3946,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:46",{"_index":3936,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:53",{"_index":3950,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:58",{"_index":3952,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:66",{"_index":3941,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:71",{"_index":3944,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:77",{"_index":3948,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/ui.module.t",{"_index":4193,"title":{},"body":{"modules/UiModule.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.t",{"_index":1861,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:13",{"_index":1864,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:8",{"_index":1863,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.t",{"_index":1857,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts:6",{"_index":1860,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/lib/utility/login",{"_index":2790,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.t",{"_index":2924,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:106",{"_index":2979,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:15",{"_index":2955,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:17",{"_index":2954,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:19",{"_index":2956,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:21",{"_index":2953,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:23",{"_index":2948,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:25",{"_index":2959,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:27",{"_index":2952,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:29",{"_index":2983,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:31",{"_index":2942,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:38",{"_index":2982,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:48",{"_index":2973,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:53",{"_index":2981,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:59",{"_index":2967,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:64",{"_index":2963,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:69",{"_index":2965,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:74",{"_index":2976,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:84",{"_index":2960,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:91",{"_index":2977,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:98",{"_index":2970,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/signup",{"_index":3822,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.t",{"_index":3978,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:11",{"_index":3984,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:13",{"_index":3986,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:15",{"_index":3985,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:17",{"_index":3987,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:19",{"_index":3988,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:21",{"_index":3982,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:24",{"_index":3992,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:27",{"_index":3989,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:32",{"_index":3990,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.t",{"_index":3996,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:14",{"_index":4013,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:16",{"_index":4004,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:27",{"_index":4011,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:38",{"_index":4005,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:48",{"_index":4006,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:53",{"_index":4009,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/utility.module.t",{"_index":4311,"title":{},"body":{"modules/UtilityModule.html":{}}}],["packagr/issues/696",{"_index":3961,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packagr/ng",{"_index":3960,"title":{},"body":{"injectables/SymbolService.html":{}}}],["page",{"_index":601,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"guards/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["page!==1",{"_index":1505,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontain",{"_index":3389,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagin",{"_index":2354,"title":{"classes/Pagination.html":{}},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination'},{'nam",{"_index":268,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pagination.component.html",{"_index":3388,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":3413,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpag",{"_index":3364,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.last",{"_index":3418,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":3417,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":3421,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":3414,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.s",{"_index":3425,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":3363,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination/pagin",{"_index":2411,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.compon",{"_index":2591,"title":{},"body":{"modules/ListModule.html":{}}}],["pagination?.params()?.from",{"_index":3419,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.to",{"_index":3420,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.tot",{"_index":3422,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcompon",{"_index":267,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2355,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{}}}],["paginationconfig(this.config",{"_index":3409,"title":{},"body":{"components/PaginationComponent.html":{}}}],["param",{"_index":3325,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["paramet",{"_index":91,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":873,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parent.getpath(item",{"_index":2993,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":2968,"title":{},"body":{"components/MenuComponent.html":{}}}],["pars",{"_index":3043,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parsetyp",{"_index":4733,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["part",{"_index":954,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["pass",{"_index":2049,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["password",{"_index":270,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["passwordlabel",{"_index":2803,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordplacehold",{"_index":2804,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordreset.button",{"_index":3471,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordresetcompon",{"_index":269,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["passwort",{"_index":2867,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["past",{"_index":3624,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["path",{"_index":343,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/TabsComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["paths.length",{"_index":3577,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["paths[paths.length",{"_index":4021,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1220,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pattern[0",{"_index":1233,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["pend",{"_index":3742,"title":{},"body":{"injectables/SdkService.html":{}}}],["per",{"_index":2463,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["peripher",{"_index":2552,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permiss",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{}}}],["permissions[method",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":4161,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["pick",{"_index":2172,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":2711,"title":{},"body":{"components/LocationPickerComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["picker'},{'nam",{"_index":247,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["picker.compon",{"_index":2700,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":2713,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":2712,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.t",{"_index":2710,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:24",{"_index":2718,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:26",{"_index":2720,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:28",{"_index":2719,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":2730,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:32",{"_index":2733,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:34",{"_index":2717,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:37",{"_index":2728,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:43",{"_index":2724,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:55",{"_index":2727,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:61",{"_index":2725,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:77",{"_index":2731,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:79",{"_index":2721,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:83",{"_index":2722,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pictur",{"_index":4553,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["pipe",{"_index":1214,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"pipes/MaxItemsPipe.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["pipe(debouncetime(100",{"_index":1275,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(this.debounc",{"_index":4091,"title":{},"body":{"components/TinymceComponent.html":{}}}],["pipe(switchmap",{"_index":2013,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["pipetransform",{"_index":1224,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":2001,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["place.geometri",{"_index":2004,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":2007,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":2009,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placehold",{"_index":558,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["plain",{"_index":1752,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plan",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["play",{"_index":4600,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pleas",{"_index":1806,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plug",{"_index":2596,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plurallabel",{"_index":1034,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["plus/lib'to",{"_index":4467,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["plus/lib/jsonpath.j",{"_index":4464,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["polyfil",{"_index":2064,"title":{},"body":{"injectables/HistoryService.html":{}}}],["pop",{"_index":967,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["pop'},{'nam",{"_index":197,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pop.alt",{"_index":2222,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.compon",{"_index":979,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":1545,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.t",{"_index":1544,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:15",{"_index":1557,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:16",{"_index":1556,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:17",{"_index":1558,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:18",{"_index":1564,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:19",{"_index":1592,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:20",{"_index":2175,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:21",{"_index":1568,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:22",{"_index":1555,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:23",{"_index":3625,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:24",{"_index":2181,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:25",{"_index":1589,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:26",{"_index":1590,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:27",{"_index":1588,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:28",{"_index":1587,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":2182,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:30",{"_index":2183,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:31",{"_index":2179,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:32",{"_index":2178,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:33",{"_index":1574,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:35",{"_index":3626,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:37",{"_index":2177,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:41",{"_index":1576,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:45",{"_index":3627,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:50",{"_index":1573,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.head",{"_index":2236,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.height",{"_index":2234,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.keepratio",{"_index":2225,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.servic",{"_index":3492,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.submitbuttonlabel",{"_index":2188,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.toggl",{"_index":2542,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop.width",{"_index":2230,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop/asset",{"_index":1847,"title":{},"body":{"modules/FilesModule.html":{}}}],["pop/entri",{"_index":978,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{}}}],["pop/imag",{"_index":1854,"title":{},"body":{"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop/pop.compon",{"_index":2541,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{}}}],["pop/pop.modul",{"_index":1894,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/pop.servic",{"_index":3056,"title":{},"body":{"components/ModalComponent.html":{}}}],["pop/resourc",{"_index":3613,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{}}}],["pop_dialog",{"_index":4167,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["popcolumn",{"_index":1035,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["popcompon",{"_index":272,"title":{"components/PopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["popcomponent:29",{"_index":1560,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:31",{"_index":1593,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:33",{"_index":1563,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:35",{"_index":1562,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:37",{"_index":1565,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:39",{"_index":1595,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:42",{"_index":1570,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:55",{"_index":1596,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:61",{"_index":1580,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:67",{"_index":1586,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:77",{"_index":1584,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:90",{"_index":1577,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popmodul",{"_index":1888,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popmoduleconfig",{"_index":3516,"title":{},"body":{"modules/PopModule.html":{}}}],["popservic",{"_index":1547,"title":{"injectables/PopService.html":{}},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"overview.html":{}}}],["popservice.defaultcolumn",{"_index":1066,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["popservice.stack",{"_index":1578,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popth",{"_index":3491,"title":{},"body":{"components/PopComponent.html":{}}}],["popul",{"_index":2466,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["posit",{"_index":2679,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possess",{"_index":502,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possibl",{"_index":1059,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["post",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["prebuilt",{"_index":4652,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["preced",{"_index":3243,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["preexist",{"_index":3923,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["prefil",{"_index":2226,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefix",{"_index":1114,"title":{},"body":{"injectables/CrudService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["prequisit",{"_index":4493,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":78,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["preserv",{"_index":1732,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["preservefilenam",{"_index":1727,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["press",{"_index":3599,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretti",{"_index":4590,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["prev",{"_index":1472,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["prevent",{"_index":3703,"title":{},"body":{"injectables/SdkService.html":{}}}],["previou",{"_index":2382,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{}}}],["primit",{"_index":2337,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/readme/core-readme.html":{}}}],["primitv",{"_index":4626,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["privat",{"_index":603,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["pro",{"_index":4449,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["problem",{"_index":4488,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["process",{"_index":4049,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":4411,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["product",{"_index":4412,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["programmat",{"_index":2334,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":4364,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["project/node_modules/eventsource/lib",{"_index":4462,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["project/node_modules/jsonpath",{"_index":4466,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["promis",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["promise((resolv",{"_index":2015,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/TinymceComponent.html":{}}}],["promise.all(this.stack.item",{"_index":2642,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":476,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":3310,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehl",{"_index":3229,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["promise.reject('getaccount",{"_index":3786,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":3781,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimag",{"_index":2155,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1127,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolv",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["promise.resolve().then",{"_index":1795,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>asset",{"_index":1811,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(api",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":3679,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.resolve(method",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(result",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":157,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(valu",{"_index":2861,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["propag",{"_index":1206,"title":{},"body":{"components/DatetimeComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["propagatechang",{"_index":41,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["proper",{"_index":4400,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["properli",{"_index":4548,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["properti",{"_index":38,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property.interfac",{"_index":1708,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["protect",{"_index":491,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{}}}],["protractor",{"_index":4417,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["provd",{"_index":2561,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provid",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["pseudo",{"_index":4581,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["public",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["publicapi",{"_index":439,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["publicapi#getfieldconfig",{"_index":3099,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["publicapi(shortid",{"_index":3776,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1737,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publicassetresourc",{"_index":468,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["publish",{"_index":4396,"title":{"additional-documentation/publishing.html":{}},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["push",{"_index":3292,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":2706,"title":{},"body":{"modules/LocationModule.html":{}}}],["queri",{"_index":2455,"title":{},"body":{"interfaces/ListConfig.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["queryfilt",{"_index":4159,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":2537,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["quick",{"_index":1019,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickli",{"_index":4538,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rack",{"_index":1445,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.compon",{"_index":2325,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1436,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.t",{"_index":1434,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.ts:10",{"_index":1439,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynam",{"_index":1433,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{}}}],["rang",{"_index":3429,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["rank",{"_index":4582,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ratio",{"_index":2167,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["raw",{"_index":1221,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{}}}],["rawfilt",{"_index":3128,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["re",{"_index":84,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reach",{"_index":3664,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["react",{"_index":587,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reaction",{"_index":2770,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiv",{"_index":2878,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodul",{"_index":631,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":1060,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{}}}],["readabl",{"_index":1683,"title":{},"body":{"classes/Field.html":{}}}],["readi",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["readm",{"_index":426,"title":{"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["readonli",{"_index":559,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/ItemConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["realli",{"_index":4680,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recent",{"_index":2841,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["recogn",{"_index":4734,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recommend",{"_index":3237,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reconstruct",{"_index":2386,"title":{},"body":{"components/ListComponent.html":{}}}],["redirect",{"_index":589,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["reduce((a",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((ha",{"_index":3887,"title":{},"body":{"classes/Sorter.html":{}}}],["reduce((match",{"_index":3671,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["reduce((max",{"_index":3145,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["refer",{"_index":2260,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/publishing.html":{}}}],["referenc",{"_index":4619,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reflect",{"_index":1255,"title":{},"body":{"interfaces/Day.html":{}}}],["regex",{"_index":4452,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["regexp",{"_index":2331,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["regist",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["registeronchang",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registerontouch",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registr",{"_index":3817,"title":{},"body":{"components/SignupComponent.html":{}}}],["registri",{"_index":2082,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registry.find(",{"_index":3962,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.indexof(this.get(symbol.nam",{"_index":3967,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.push(symbol",{"_index":3968,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry[index",{"_index":3969,"title":{},"body":{"injectables/SymbolService.html":{}}}],["regular",{"_index":4321,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reinstanti",{"_index":4779,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["reject",{"_index":2016,"title":{},"body":{"injectables/GeocodeService.html":{},"components/TinymceComponent.html":{}}}],["reject(statu",{"_index":2021,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rel",{"_index":1366,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["relat",{"_index":499,"title":{},"body":{"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"modules/LocationModule.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["relativeto",{"_index":4034,"title":{},"body":{"components/TabsComponent.html":{}}}],["releas",{"_index":1120,"title":{},"body":{"injectables/CrudService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["releaseto",{"_index":4395,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["relev",{"_index":405,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relevantkey",{"_index":3177,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.foreach(key",{"_index":3181,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.length",{"_index":3180,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["reli",{"_index":4625,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reload",{"_index":957,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["remain",{"_index":1049,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["remov",{"_index":817,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["remove(item",{"_index":854,"title":{},"body":{"classes/Collection.html":{}}}],["removeal",{"_index":818,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(item",{"_index":857,"title":{},"body":{"classes/Collection.html":{}}}],["removefilt",{"_index":2518,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removefilter(properti",{"_index":2530,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removeitem",{"_index":4739,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["renam",{"_index":2339,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["render",{"_index":919,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["replac",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"injectables/SymbolService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["replacewith",{"_index":819,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(item",{"_index":860,"title":{},"body":{"classes/Collection.html":{}}}],["repo",{"_index":4387,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["repositori",{"_index":4376,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["repres",{"_index":1241,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"classes/Field.html":{}}}],["request",{"_index":2134,"title":{},"body":{"directives/ImageDirective.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requir",{"_index":402,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Field.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["require(\"path",{"_index":4483,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["reset",{"_index":330,"title":{},"body":{"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LoginFormComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["reset'},{'nam",{"_index":271,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["reset.compon",{"_index":640,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":3443,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.t",{"_index":3439,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:17",{"_index":3453,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:19",{"_index":3452,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:21",{"_index":3446,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:23",{"_index":3448,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:25",{"_index":3449,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:27",{"_index":3445,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":3451,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:32",{"_index":3450,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":639,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{}}}],["reset?e=1",{"_index":3442,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resetpassword",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolut",{"_index":2210,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.height",{"_index":2216,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.width",{"_index":2215,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolv",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["resolve(nam",{"_index":3942,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(result",{"_index":2020,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolve(tinymce.init(set",{"_index":4105,"title":{},"body":{"components/TinymceComponent.html":{}}}],["resolveassets(asset",{"_index":1801,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resourc",{"_index":1823,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvefn",{"_index":2498,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvefn(list",{"_index":2500,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvevari",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(str",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["resouc",{"_index":4673,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resourc",{"_index":274,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["resource.assetid",{"_index":1824,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((r",{"_index":3691,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.newhistori",{"_index":2073,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.sav",{"_index":3681,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.save().then((_resourc",{"_index":3688,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource/resource.modul",{"_index":1181,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[identifi",{"_index":3543,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resource[key",{"_index":3686,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource[label",{"_index":3544,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceact",{"_index":3567,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceactionbarcompon",{"_index":273,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourceactionbarst",{"_index":3534,"title":{"interfaces/ResourceActionbarState.html":{}},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceconfig",{"_index":489,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{}}}],["resourceconfig#set",{"_index":4687,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resourcecrudcompon",{"_index":275,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourcedeletepopcompon",{"_index":276,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourceformcompon",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourcelist",{"_index":524,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["resourcelistcompon",{"_index":279,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourcelistcomponent:119",{"_index":534,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:128",{"_index":526,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:132",{"_index":530,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:25",{"_index":544,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:27",{"_index":508,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:29",{"_index":521,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:31",{"_index":515,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:33",{"_index":540,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:35",{"_index":506,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:37",{"_index":518,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:39",{"_index":510,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:48",{"_index":543,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:49",{"_index":539,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:50",{"_index":546,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:62",{"_index":523,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:83",{"_index":535,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistpopcompon",{"_index":280,"title":{"components/ResourceListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourcemodul",{"_index":1155,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcompon",{"_index":281,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourceselectcompon",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["resourceservic",{"_index":1077,"title":{"injectables/ResourceService.html":{}},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{}}}],["resourceservice.chang",{"_index":1112,"title":{},"body":{"injectables/CrudService.html":{}}}],["respons",{"_index":1800,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["response['getallitem",{"_index":1799,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{}}}],["result",{"_index":320,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results.length",{"_index":2742,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":2743,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retriev",{"_index":2473,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["retrieve(key",{"_index":2479,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["return",{"_index":81,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["revers",{"_index":1986,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["role",{"_index":407,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["root",{"_index":381,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["rout",{"_index":490,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["route.data",{"_index":2989,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":2990,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.param",{"_index":982,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.path",{"_index":2987,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":2988,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparam",{"_index":983,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":928,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routermodul",{"_index":1163,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routing.module.t",{"_index":4542,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["row",{"_index":2330,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["run",{"_index":1681,"title":{},"body":{"classes/Field.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["runtim",{"_index":3706,"title":{},"body":{"injectables/SdkService.html":{}}}],["rxfilter",{"_index":3662,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxfilter((chang",{"_index":3676,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxj",{"_index":598,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"dependencies.html":{},"additional-documentation/adding-new-packages.html":{}}}],["rxjs';9",{"_index":4874,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["rxjs/oper",{"_index":1246,"title":{},"body":{"interfaces/Day.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["rxjs/subject",{"_index":4873,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["s.name",{"_index":3963,"title":{},"body":{"injectables/SymbolService.html":{}}}],["safedelet",{"_index":1036,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["safeput",{"_index":1102,"title":{},"body":{"injectables/CrudService.html":{}}}],["same",{"_index":828,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sandbox.scss",{"_index":4510,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["save",{"_index":1051,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["save(item",{"_index":3656,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["save(model",{"_index":1097,"title":{},"body":{"injectables/CrudService.html":{}}}],["save2",{"_index":4647,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["savethi",{"_index":4505,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scaffold",{"_index":4407,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["scale",{"_index":3090,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema",{"_index":3074,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["schemarequest",{"_index":3709,"title":{},"body":{"injectables/SdkService.html":{}}}],["script",{"_index":4391,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["scss",{"_index":4455,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scssmake",{"_index":4502,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":412,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sdk.api",{"_index":438,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.init",{"_index":3704,"title":{},"body":{"injectables/SdkService.html":{}}}],["sdk.servic",{"_index":3701,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.servic",{"_index":1182,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.modul",{"_index":1183,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.servic",{"_index":417,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkfield",{"_index":3692,"title":{"interfaces/SdkField.html":{}},"body":{"interfaces/SdkField.html":{}}}],["sdkmodul",{"_index":1156,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservic",{"_index":414,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"overview.html":{}}}],["sdkservice#api",{"_index":2767,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["search",{"_index":1643,"title":{},"body":{"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["search'},{'nam",{"_index":249,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["search.compon",{"_index":2701,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":2747,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.t",{"_index":2745,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:16",{"_index":2750,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:18",{"_index":2754,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:20",{"_index":2749,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:28",{"_index":2751,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:34",{"_index":2752,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1548,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["searchbar'},{'nam",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["searchbar/searchbar.compon",{"_index":2592,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcompon",{"_index":283,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["searchinput",{"_index":2748,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2405,"title":{},"body":{"components/ListComponent.html":{}}}],["section",{"_index":3490,"title":{},"body":{"components/PopComponent.html":{}}}],["see",{"_index":503,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["sein",{"_index":4565,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["seit",{"_index":607,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select",{"_index":232,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["select#togglepop",{"_index":4679,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["select'},{'nam",{"_index":191,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select(item",{"_index":1575,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["select(pag",{"_index":3350,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":4007,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.compon",{"_index":1177,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":554,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.t",{"_index":553,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:12",{"_index":566,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":563,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":564,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":565,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:16",{"_index":567,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:17",{"_index":562,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:18",{"_index":4280,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:19",{"_index":4278,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:20",{"_index":569,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:21",{"_index":4281,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:23",{"_index":568,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:25",{"_index":4283,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:26",{"_index":4282,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:27",{"_index":4279,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:29",{"_index":4294,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:31",{"_index":4295,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:33",{"_index":4292,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:35",{"_index":4277,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:37",{"_index":4291,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:39",{"_index":4284,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:42",{"_index":4285,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:47",{"_index":4286,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:54",{"_index":4290,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:60",{"_index":4288,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.emit(item",{"_index":2375,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":1848,"title":{},"body":{"modules/FilesModule.html":{}}}],["select/assetgroup",{"_index":552,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{}}}],["select/entri",{"_index":1176,"title":{},"body":{"modules/DataModule.html":{}}}],["select/resourc",{"_index":3638,"title":{},"body":{"modules/ResourceModule.html":{}}}],["select/select.compon",{"_index":348,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.component.html",{"_index":353,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.modul",{"_index":4195,"title":{},"body":{"modules/UiModule.html":{}}}],["select/tag",{"_index":1855,"title":{},"body":{"modules/FilesModule.html":{}}}],["select/upload",{"_index":1853,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{}}}],["selectbyurl",{"_index":4003,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":4010,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcompon",{"_index":285,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["selectday(_mo",{"_index":1354,"title":{},"body":{"interfaces/Day.html":{}}}],["selectentri",{"_index":932,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":963,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2351,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2387,"title":{},"body":{"components/ListComponent.html":{}}}],["selection.config.solo",{"_index":1835,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.select(upload.item",{"_index":1836,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.toggl",{"_index":2377,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.toggleall(upload.item",{"_index":1837,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selectmod",{"_index":2456,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["selectmodul",{"_index":3788,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectmoduleconfig",{"_index":3796,"title":{},"body":{"modules/SelectModule.html":{}}}],["selector",{"_index":31,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["selecttempl",{"_index":3538,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["selectupload(upload",{"_index":1833,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["self",{"_index":3573,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["self.indexof(valu",{"_index":3574,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["semicolon",{"_index":4875,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["send",{"_index":3440,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sensit",{"_index":3882,"title":{},"body":{"classes/Sorter.html":{}}}],["sent",{"_index":3456,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["seper",{"_index":4570,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["serv",{"_index":4404,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["server",{"_index":3997,"title":{},"body":{"components/TabsComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["server:generic\",now",{"_index":4481,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["servic",{"_index":627,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"modules/LocationModule.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["session",{"_index":3710,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environ",{"_index":3766,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/publishing.html":{}}}],["set([this.config.s",{"_index":3368,"title":{},"body":{"classes/Pagination.html":{}}}],["set(key",{"_index":2481,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["set(properti",{"_index":3111,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbol",{"_index":3945,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(typ",{"_index":4151,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":3748,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(d",{"_index":1348,"title":{},"body":{"interfaces/Day.html":{}}}],["setemptystringstonul",{"_index":3644,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["setgroup",{"_index":4203,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setgroup(group",{"_index":4219,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setmod",{"_index":55,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mod",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["setter",{"_index":902,"title":{},"body":{"classes/Config.html":{}}}],["setthem",{"_index":56,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(them",{"_index":101,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":393,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"components/UploadSelectComponent.html":{}}}],["settimeout(resolv",{"_index":2624,"title":{},"body":{"components/LoaderComponent.html":{}}}],["settot",{"_index":3326,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":3382,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(tot",{"_index":3353,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":3912,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/publishing.html":{}}}],["seturl",{"_index":2130,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":2143,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalu",{"_index":2662,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(valu",{"_index":2675,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["short",{"_index":3730,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shorthand",{"_index":4503,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":3171,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["shouldbepartofform",{"_index":1917,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldbepartofform(field",{"_index":1932,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldn't",{"_index":4612,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["show",{"_index":1258,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["show(",{"_index":1583,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["showerror",{"_index":2798,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showerror(err",{"_index":2836,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showhead",{"_index":2352,"title":{},"body":{"components/ListComponent.html":{}}}],["showlabel",{"_index":2805,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["shown",{"_index":509,"title":{},"body":{"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["shownotif",{"_index":3222,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["showrawvalu",{"_index":2715,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["showurlinput",{"_index":4270,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["sie",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["signup",{"_index":289,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{}}}],["signup'},{'nam",{"_index":287,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["signup(undefin",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup(valu",{"_index":3841,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signup.component.html",{"_index":3800,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":641,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupcompon",{"_index":286,"title":{"components/SignupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["signupformcompon",{"_index":288,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["silent",{"_index":3351,"title":{},"body":{"classes/Pagination.html":{},"interfaces/WithNotifications.html":{}}}],["simi",{"_index":911,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1501,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1658,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["simpl",{"_index":3219,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["sind",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{}}}],["singl",{"_index":460,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["singleton",{"_index":3865,"title":{},"body":{"classes/Sorter.html":{}}}],["singularlabel",{"_index":1037,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["site",{"_index":2629,"title":{},"body":{"components/LoaderComponent.html":{}}}],["situat",{"_index":4138,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":1816,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["skip",{"_index":507,"title":{},"body":{"components/AssetListComponent.html":{}}}],["skiprout",{"_index":4008,"title":{},"body":{"components/TabsComponent.html":{}}}],["slice",{"_index":2870,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slice(item",{"_index":3357,"title":{},"body":{"classes/Pagination.html":{}}}],["slot",{"_index":1448,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["slot'},{'nam",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["slot.compon",{"_index":2271,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1449,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.t",{"_index":1447,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:11",{"_index":1452,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":1457,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:18",{"_index":1455,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynam",{"_index":1446,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slothostdirect",{"_index":317,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["sm",{"_index":1717,"title":{},"body":{"classes/Field.html":{}}}],["smoother",{"_index":3435,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["snackbar",{"_index":3053,"title":{},"body":{"components/ModalComponent.html":{}}}],["snippet",{"_index":4566,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["soeben",{"_index":3460,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":500,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{}}}],["somebodi",{"_index":1804,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["somemodul",{"_index":2101,"title":{},"body":{"components/IconComponent.html":{}}}],["sometim",{"_index":4797,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["somewher",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["soon",{"_index":425,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sophist",{"_index":811,"title":{},"body":{"classes/Collection.html":{}}}],["sort",{"_index":1692,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["sort(((a",{"_index":3371,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(item",{"_index":3875,"title":{},"body":{"classes/Sorter.html":{}}}],["sortabl",{"_index":1634,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["sortbi",{"_index":2457,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sortboolean",{"_index":3870,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":3886,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorter",{"_index":3863,"title":{"classes/Sorter.html":{}},"body":{"classes/Sorter.html":{}}}],["sortnumb",{"_index":3869,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":3885,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortstr",{"_index":3868,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":3883,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttyp",{"_index":3866,"title":{},"body":{"classes/Sorter.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{}}}],["source.addeventlistener('entrycr",{"_index":2079,"title":{},"body":{"injectables/HistoryService.html":{}}}],["source.addeventlistener('entryupd",{"_index":2076,"title":{},"body":{"injectables/HistoryService.html":{}}}],["span",{"_index":1257,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchang",{"_index":1267,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1259,"title":{},"body":{"interfaces/Day.html":{}}}],["speakingurl",{"_index":4621,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["specif",{"_index":1676,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["specifi",{"_index":98,"title":{},"body":{"components/AceComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["splice(1).join",{"_index":3064,"title":{},"body":{"components/ModalComponent.html":{}}}],["spreadsheet",{"_index":1754,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["squar",{"_index":2137,"title":{},"body":{"directives/ImageDirective.html":{}}}],["src",{"_index":2128,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["src/app/app",{"_index":4541,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":4530,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.modul",{"_index":4519,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":4540,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environ",{"_index":4512,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.t",{"_index":4516,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.t",{"_index":4514,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl",{"_index":4525,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":4526,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":2601,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["stackblitz",{"_index":4881,"title":{"additional-documentation/stackblitz.html":{}},"body":{"additional-documentation/stackblitz.html":{}}}],["stage",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["stand",{"_index":904,"title":{},"body":{"classes/Config.html":{}}}],["standard",{"_index":4855,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["start",{"_index":1193,"title":{"changelog.html":{},"index.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["startnow",{"_index":4534,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["startth",{"_index":4390,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["state",{"_index":1074,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["statement",{"_index":4710,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["static",{"_index":783,"title":{},"body":{"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{}}}],["statu",{"_index":2018,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":1594,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SymbolService.html":{}}}],["step",{"_index":3166,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/adding-new-packages.html":{}}}],["sticki",{"_index":1012,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["still",{"_index":4177,"title":{},"body":{"injectables/TypeConfigService.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["stop",{"_index":1805,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["storag",{"_index":2465,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["storagekey",{"_index":2458,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["storagekeyresolv",{"_index":2470,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["store",{"_index":2053,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["store(key",{"_index":2483,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig",{"_index":2474,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig(list",{"_index":2485,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["strategy=endless",{"_index":1506,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":2044,"title":{},"body":{"injectables/HistoryService.html":{}}}],["string",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/functions.html":{}}}],["string,valu",{"_index":529,"title":{},"body":{"components/AssetListComponent.html":{}}}],["string.replac",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringifi",{"_index":4717,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["strong",{"_index":4588,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strong.component.t",{"_index":4587,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strongcompon",{"_index":4586,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["structur",{"_index":1678,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{}}}],["stuff",{"_index":2598,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["style",{"_index":5,"title":{"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/style-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["styles.scss",{"_index":4506,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleurl",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sub",{"_index":905,"title":{},"body":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["subbranch",{"_index":2336,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":2833,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["subject",{"_index":597,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/adding-new-packages.html":{}}}],["submenu",{"_index":2943,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":1877,"title":{},"body":{"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["submitbuttonlabel",{"_index":1876,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{}}}],["subscrib",{"_index":537,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribe((chang",{"_index":2288,"title":{},"body":{"components/InputComponent.html":{}}}],["subscribe((day",{"_index":1276,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((ev",{"_index":1868,"title":{},"body":{"directives/FocusDirective.html":{}}}],["subscribe(editor",{"_index":4092,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe(timespan",{"_index":1279,"title":{},"body":{"interfaces/Day.html":{}}}],["subtract(weeksbefor",{"_index":1325,"title":{},"body":{"interfaces/Day.html":{}}}],["succes",{"_index":2828,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["success",{"_index":2762,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["success/error",{"_index":3235,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successfulli",{"_index":1050,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{}}}],["such",{"_index":1679,"title":{},"body":{"classes/Field.html":{}}}],["suitabl",{"_index":1684,"title":{},"body":{"classes/Field.html":{},"additional-documentation/readme/location-readme.html":{}}}],["summary.json",{"_index":4880,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["super",{"_index":420,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["super(elementref",{"_index":360,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["super(popservic",{"_index":1599,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["super(sdk",{"_index":2149,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.filterdropdownlist(listcompon",{"_index":3578,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["super.load",{"_index":2140,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(thi",{"_index":2153,"title":{},"body":{"directives/ImageDirective.html":{}}}],["support",{"_index":1058,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sure",{"_index":67,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["svg",{"_index":4421,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1047,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["switchmap",{"_index":1995,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":938,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol'",{"_index":3917,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.cont",{"_index":3965,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interfac",{"_index":3931,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.languag",{"_index":3921,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.pip",{"_index":3926,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.servic",{"_index":3925,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{}}}],["symbol/symbol.interfac",{"_index":2107,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.modul",{"_index":1904,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.servic",{"_index":1225,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{}}}],["symbolmodul",{"_index":1891,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpip",{"_index":3910,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"overview.html":{}}}],["symbols.map(symbol",{"_index":3966,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservic",{"_index":939,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice#set",{"_index":3918,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice.get(nam",{"_index":3964,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.registri",{"_index":3940,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.resolv",{"_index":3930,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symbolservice.resolve('moment.format.d",{"_index":1906,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.month",{"_index":1908,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.tim",{"_index":1907,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve(nam",{"_index":3976,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.set(symbol",{"_index":3977,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.sets[object.keys(symbolservice.sets)[0",{"_index":3954,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symlink",{"_index":4382,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["syntax",{"_index":4576,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["system",{"_index":1096,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["t",{"_index":829,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["tab",{"_index":3979,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["tab'",{"_index":3983,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'nam",{"_index":291,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tab.activ",{"_index":4031,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":3980,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('select",{"_index":4026,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":4035,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.par",{"_index":4025,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.rout",{"_index":4032,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.compon",{"_index":4015,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcompon",{"_index":290,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["tabl",{"_index":1248,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["tabs'},{'nam",{"_index":293,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tabs.component.html",{"_index":4000,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.compon",{"_index":3993,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscompon",{"_index":292,"title":{"components/TabsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["tag",{"_index":295,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["tagselectcompon",{"_index":294,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["take",{"_index":918,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["target",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"components/TinymceComponent.html":{}}}],["task",{"_index":4393,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["tell",{"_index":1665,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/publishing.html":{}}}],["templateref",{"_index":3032,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["test",{"_index":3877,"title":{},"body":{"classes/Sorter.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["text",{"_index":1391,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MenuComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["textarea",{"_index":4155,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["that",{"_index":4533,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":59,"title":{},"body":{"components/AceComponent.html":{}}}],["themelist.j",{"_index":153,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entri",{"_index":1125,"title":{},"body":{"injectables/CrudService.html":{}}}],["then((_resourc",{"_index":3684,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((_upload",{"_index":4254,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((asset",{"_index":482,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((assetlist",{"_index":1785,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((avail",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((entri",{"_index":1146,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntryDirective.html":{}}}],["then((fieldconfig",{"_index":3175,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((loadedentri",{"_index":1003,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((method",{"_index":987,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["then((minlevel",{"_index":996,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((modelconfig",{"_index":3134,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((r",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["then((resolvedapi",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resourc",{"_index":3690,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((respons",{"_index":1798,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((upload",{"_index":1791,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((us",{"_index":2782,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["then(_method",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(act",{"_index":3563,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["then(asset",{"_index":2194,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then(dmassetlist",{"_index":1818,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then(list",{"_index":1509,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["then(r",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then(result",{"_index":2741,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["then(sourc",{"_index":2069,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then(this.seturl.bind(thi",{"_index":2162,"title":{},"body":{"directives/ImageDirective.html":{}}}],["then(url",{"_index":2196,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["therefor",{"_index":2335,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/readme/core-readme.html":{}}}],["this._api",{"_index":3722,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.m",{"_index":3787,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":3759,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then(api",{"_index":3778,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":3779,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(this.act",{"_index":3504,"title":{},"body":{"components/PopComponent.html":{}}}],["this.account",{"_index":3718,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.act",{"_index":1424,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.actionstack[this.currentid",{"_index":375,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.activ",{"_index":3505,"title":{},"body":{"components/PopComponent.html":{}}}],["this.activated.next",{"_index":3994,"title":{},"body":{"components/TabComponent.html":{}}}],["this.add(item",{"_index":887,"title":{},"body":{"classes/Collection.html":{}}}],["this.add.subscribe((item",{"_index":361,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.addall(item",{"_index":892,"title":{},"body":{"classes/Collection.html":{}}}],["this.additem(item",{"_index":3587,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.api",{"_index":422,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.apiresolv",{"_index":3760,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":4095,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":483,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroup",{"_index":576,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.assetgroupid",{"_index":2205,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.assetgrouplistpromis",{"_index":1827,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.assetid",{"_index":473,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":985,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.rel",{"_index":3616,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.auth.login",{"_index":2781,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.resetpassword(this.email",{"_index":3457,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.auth.signup",{"_index":3818,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.autofocusfirst",{"_index":2425,"title":{},"body":{"components/ListComponent.html":{}}}],["this.autoload",{"_index":474,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.backdrop",{"_index":3067,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bakery.bake().then",{"_index":3241,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.calendar.writevalue(valu",{"_index":1213,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(valu",{"_index":1368,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cdr.markforcheck",{"_index":988,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{}}}],["this.cel",{"_index":1320,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1295,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1296,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cent",{"_index":2678,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobserv",{"_index":3332,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.next(this.config",{"_index":3379,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit",{"_index":2198,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.changed.emit(chang",{"_index":2289,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changed.emit(coord",{"_index":2759,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.changed.emit(posit",{"_index":2683,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.changed.emit(this.list",{"_index":2429,"title":{},"body":{"components/ListComponent.html":{}}}],["this.changed.emit(this.valu",{"_index":4094,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.changes.asobserv",{"_index":3674,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().pip",{"_index":3675,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":3668,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changesenvironment.next(environ",{"_index":3764,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.changespan.asobservable().pipe(debouncetime(800",{"_index":1278,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1294,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.class",{"_index":3063,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.clean(oldvalu",{"_index":1138,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(valu",{"_index":1133,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":4235,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clickev",{"_index":3498,"title":{},"body":{"components/PopComponent.html":{}}}],["this.collect",{"_index":2420,"title":{},"body":{"components/ListComponent.html":{}}}],["this.color",{"_index":1308,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":2999,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostr",{"_index":1309,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":2998,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.column",{"_index":1715,"title":{},"body":{"classes/Field.html":{}}}],["this.columnclicked.emit(item",{"_index":1014,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":1013,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":1462,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinst",{"_index":2282,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchang",{"_index":2295,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange(this.propagatechang",{"_index":2296,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalu",{"_index":2298,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue(valu",{"_index":2299,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":391,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["this.config.alwaysloadentri",{"_index":999,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availables",{"_index":3386,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.field",{"_index":995,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.level",{"_index":998,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.method",{"_index":986,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":989,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.pag",{"_index":3373,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.s",{"_index":3370,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.singularlabel",{"_index":1606,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.config[key",{"_index":914,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][properti",{"_index":915,"title":{},"body":{"classes/Config.html":{}}}],["this.configinput",{"_index":2416,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":3120,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.connectcontrol",{"_index":2284,"title":{},"body":{"components/InputComponent.html":{}}}],["this.container.nativeel",{"_index":4100,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":2905,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.control",{"_index":2275,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2313,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.create(model",{"_index":1124,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.create(rel",{"_index":3683,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.create.emit(queri",{"_index":3586,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.create.observers.length",{"_index":3585,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.createclicked.next",{"_index":3621,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":3620,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.crud.change({model:'muffin",{"_index":1115,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.crud.save(model",{"_index":3173,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.currentact",{"_index":3569,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.custom",{"_index":4246,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.dat",{"_index":1349,"title":{},"body":{"interfaces/Day.html":{}}}],["this.datamanag",{"_index":3774,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":3755,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date.clone().add(valu",{"_index":1364,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dateformat",{"_index":1223,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["this.dayclicked.emit(_mo",{"_index":1357,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":3995,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaultmonthformat",{"_index":1273,"title":{},"body":{"interfaces/Day.html":{}}}],["this.defaulttim",{"_index":3316,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.desktopnotification(inst",{"_index":3303,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.destroy",{"_index":4098,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.dis",{"_index":1422,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.disabledragend",{"_index":1302,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1301,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":2067,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(tru",{"_index":4162,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.dmassetconfig",{"_index":1762,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.drag",{"_index":1282,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.asobserv",{"_index":1274,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1306,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1284,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1286,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1277,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropdownlist",{"_index":394,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.dropdownlist.focusfirst",{"_index":395,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.ecasset",{"_index":472,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(",{"_index":1429,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocu",{"_index":1867,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimag",{"_index":2150,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2151,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(tru",{"_index":4111,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":2911,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.execcommand('mceinsertcont",{"_index":4116,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.getcont",{"_index":2909,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":4113,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":4109,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.remov",{"_index":4097,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mod",{"_index":169,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.valu",{"_index":4108,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/them",{"_index":170,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.valu",{"_index":163,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":2908,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":1870,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focu",{"_index":1869,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref",{"_index":3499,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeel",{"_index":3502,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.classlist.add(`${this.typ",{"_index":3068,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.classlist.remove(`${typ",{"_index":3066,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.contains(el",{"_index":3501,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":2164,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobserv",{"_index":3296,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(inst",{"_index":3304,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resourc",{"_index":2068,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1502,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entri",{"_index":1541,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1539,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1514,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then(list",{"_index":1520,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then(list",{"_index":1521,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitem",{"_index":1515,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1523,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1522,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentri",{"_index":1004,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.environ",{"_index":3725,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.error",{"_index":1617,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.cod",{"_index":1619,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":2858,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.messag",{"_index":1620,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.next(error",{"_index":2787,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.errormessag",{"_index":2855,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.ev",{"_index":4247,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":2070,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].clos",{"_index":2072,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[rel",{"_index":2066,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":2851,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.field",{"_index":2272,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.config",{"_index":2279,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init",{"_index":2291,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinst",{"_index":2292,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2281,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.properti",{"_index":2278,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1463,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":4234,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":4236,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.valu",{"_index":4242,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then(assetgroup",{"_index":575,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.defaultopt",{"_index":4210,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.fileservice.isnewassetgroupid(this.assetgroupid",{"_index":4251,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.isoldassetgroupid(this.assetgroupid",{"_index":2185,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(fil",{"_index":4252,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(fil",{"_index":4253,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":4245,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.focusevent.emit(tru",{"_index":4297,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.focusfirst",{"_index":2427,"title":{},"body":{"components/ListComponent.html":{}}}],["this.focusitem",{"_index":2428,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.focusnext",{"_index":2442,"title":{},"body":{"components/ListComponent.html":{}}}],["this.form",{"_index":2850,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.get('password').setvalu",{"_index":2857,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":2865,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.valid",{"_index":2863,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.format",{"_index":1351,"title":{},"body":{"interfaces/Day.html":{}}}],["this.formservice.shouldbepartofform(field",{"_index":4324,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["this.generateconfig(model",{"_index":3133,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng",{"_index":2023,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeel",{"_index":2758,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(valu",{"_index":2740,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.getaccount",{"_index":3772,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(item",{"_index":3896,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":3001,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(d",{"_index":1339,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getdayheat(d",{"_index":1340,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getfieldconfig(model",{"_index":3174,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getformdata(fil",{"_index":1783,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.getmonth(date.clon",{"_index":1353,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clon",{"_index":1321,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpag",{"_index":3384,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":2995,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":3313,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getresourcelistactions(list",{"_index":3562,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.getstoragekey(list",{"_index":2501,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.getsystemfield",{"_index":3150,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getvalidators(field",{"_index":1949,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2276,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.properti",{"_index":2277,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":4237,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.has(item",{"_index":883,"title":{},"body":{"classes/Collection.html":{}}}],["this.heatmap",{"_index":1311,"title":{},"body":{"interfaces/Day.html":{}}}],["this.heatmap[_moment.toisostr",{"_index":1312,"title":{},"body":{"interfaces/Day.html":{}}}],["this.hid",{"_index":2197,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.hideonclickoutsid",{"_index":3497,"title":{},"body":{"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('i",{"_index":2636,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('i",{"_index":2637,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hov",{"_index":3002,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":3004,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":2108,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.nam",{"_index":2109,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registri",{"_index":2113,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicon",{"_index":2104,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.use(emojiicon",{"_index":2102,"title":{},"body":{"components/IconComponent.html":{}}}],["this.id",{"_index":1710,"title":{},"body":{"classes/Field.html":{}}}],["this.imageform",{"_index":2186,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimag",{"_index":2203,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimg",{"_index":2221,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.index(item",{"_index":879,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":171,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.init(new",{"_index":2417,"title":{},"body":{"components/ListComponent.html":{}}}],["this.initmethod",{"_index":3614,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initmod",{"_index":3069,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.initselect",{"_index":392,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.inittab",{"_index":4029,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.invit",{"_index":3853,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.isactive(item",{"_index":3000,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":3377,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1144,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":3376,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":1766,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolv",{"_index":1812,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoldassetgroupid(assetgroupid",{"_index":1758,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoutside($event.target",{"_index":3500,"title":{},"body":{"components/PopComponent.html":{}}}],["this.item",{"_index":875,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.properti",{"_index":2273,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items.concat(item",{"_index":1516,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1517,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1518,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":878,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":886,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":877,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(index",{"_index":893,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":888,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.items.indexof(item",{"_index":894,"title":{},"body":{"classes/Collection.html":{}}}],["this.label",{"_index":1713,"title":{},"body":{"classes/Field.html":{}}}],["this.lazi",{"_index":4096,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.legacyassetconfig",{"_index":1759,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.level",{"_index":1540,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.lightmodel",{"_index":1601,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.list",{"_index":389,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.change$.subscrib",{"_index":2424,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.change$.subscribe(newlist",{"_index":2575,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.config",{"_index":2430,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.alwaysshowhead",{"_index":2438,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.disablehead",{"_index":2435,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.selectmod",{"_index":2433,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.titl",{"_index":2437,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields.length",{"_index":2436,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(properti",{"_index":2446,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.isempti",{"_index":2439,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfilt",{"_index":2426,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.item",{"_index":3552,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.list.items[index",{"_index":2440,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.pag",{"_index":2574,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.page.indexof(this.focusitem",{"_index":2443,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page.length",{"_index":2445,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page[index",{"_index":2444,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.togglevisibility(field",{"_index":2546,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.listconfig.applyconfig(this.list",{"_index":2423,"title":{},"body":{"components/ListComponent.html":{}}}],["this.listconfig.storeconfig(this.list",{"_index":2547,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.load",{"_index":475,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["this.loadact",{"_index":3582,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(actionsbefor",{"_index":376,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(concat",{"_index":3558,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(item.getbody().children",{"_index":368,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.act",{"_index":377,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actionstack[this.currentid",{"_index":385,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactionsbefor",{"_index":372,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadcomponent(this.compon",{"_index":2280,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loadcomponent(this.field.output",{"_index":3321,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":484,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entri",{"_index":1542,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader.wait(login",{"_index":2789,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.loader.wait(registr",{"_index":3821,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.loader.wait(reset",{"_index":3470,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promis",{"_index":1513,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalload",{"_index":2622,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(load",{"_index":2080,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":2623,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":1015,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":2071,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromis",{"_index":4261,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.loadresourcelistact",{"_index":3539,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.localload",{"_index":2626,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.localloader.wait(new",{"_index":2627,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.lockform",{"_index":3466,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.valu",{"_index":2864,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(valu",{"_index":2735,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.valu",{"_index":2738,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":2022,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(chang",{"_index":3677,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.mod",{"_index":158,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{}}}],["this.mode.replace(this.typ",{"_index":3060,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.mode.split",{"_index":3058,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.model",{"_index":984,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig.getlightmodel(this.model).then(model",{"_index":1600,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.modelconfig.getminlevel(this.model",{"_index":994,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":4552,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.monthformat",{"_index":1271,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":1000,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.nam",{"_index":2111,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":4172,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":2000,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":3756,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":3780,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notif",{"_index":1007,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notifications.add(notif",{"_index":3262,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":605,"title":{},"body":{"guards/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.notifications.remove(notif",{"_index":3266,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hid",{"_index":3253,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttim",{"_index":3250,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":1005,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notif",{"_index":3251,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.observeelement(el",{"_index":2014,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.oldassetgroupids.includes(assetgroupid",{"_index":1760,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.opt",{"_index":1508,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.pag",{"_index":1503,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placehold",{"_index":2906,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pag",{"_index":3374,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pages.length",{"_index":3375,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagin",{"_index":2419,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["this.pagination.getpag",{"_index":3410,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.par",{"_index":2992,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":2997,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.rout",{"_index":3008,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.placehold",{"_index":1712,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":3622,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.cr",{"_index":3623,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbodi",{"_index":3617,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hid",{"_index":4257,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":4248,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.popservice.stack.add(thi",{"_index":3506,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(thi",{"_index":3508,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promis",{"_index":480,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":2065,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechang",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(++this.valu",{"_index":4640,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(chang",{"_index":2290,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalu",{"_index":168,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.valu",{"_index":2910,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.propagatechange(valu",{"_index":2737,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.properti",{"_index":1714,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1711,"title":{},"body":{"classes/Field.html":{}}}],["this.readi",{"_index":156,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.then",{"_index":3754,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.ready.then(editor",{"_index":4106,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.registri",{"_index":3970,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.rel",{"_index":3615,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.reload",{"_index":3588,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.remove(item",{"_index":889,"title":{},"body":{"classes/Collection.html":{}}}],["this.remove.subscribe((item",{"_index":370,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.removeall(undefin",{"_index":890,"title":{},"body":{"classes/Collection.html":{}}}],["this.resolv",{"_index":2114,"title":{},"body":{"components/IconComponent.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":1744,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1746,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(rel",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.resourceconfig.get(relation).permiss",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(this.rel",{"_index":3629,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["this.resourceconfig.get(this.state.rel",{"_index":3579,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.resourceservice.change(filt",{"_index":1121,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.resourceservice.change({relation:'model.muffin",{"_index":1117,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.resourceservice.changes.next",{"_index":1136,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.retrieve(key",{"_index":2492,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":3753,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.rout",{"_index":2984,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":2985,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":4016,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navig",{"_index":4033,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profil",{"_index":4550,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["this.router.url",{"_index":2994,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":2996,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":2045,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.schemarequests[model",{"_index":3782,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].api",{"_index":3783,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].request",{"_index":3785,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.account",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.m",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":477,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api.asset(unresolved[0]).then(asset",{"_index":1820,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.asset(value).then(asset",{"_index":2207,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.asset(value.img",{"_index":2193,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":1828,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":1821,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":1796,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":1797,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createentry(model",{"_index":1145,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.sdk.api.dmasset(this.assetgroupid",{"_index":2201,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.dmassetlist(assetgroupid",{"_index":1815,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.emailavailable(email",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.entry(this.model",{"_index":1001,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntryDirective.html":{}}}],["this.sdk.api.entrylist(this.model",{"_index":1507,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.sdk.api.getfieldconfig(model).then((fieldconfig",{"_index":3148,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.logout",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.m",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.modellist()).then((model",{"_index":3186,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.signup(email",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.changesenvironment.subscribe(env",{"_index":3667,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.sdk.environ",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.environment.clientid",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.init",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then",{"_index":3185,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.sdk.ready.then((us",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":3739,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.ready.then(us",{"_index":604,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.sdk.root.then((root",{"_index":421,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["this.sdk.sess",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.session.logout().catch",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.us",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":2734,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.valu",{"_index":2739,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar.clear",{"_index":369,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.searchbar.focusevent.emit(tru",{"_index":1605,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.searchinput",{"_index":2756,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.valu",{"_index":2757,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select",{"_index":379,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.select(match",{"_index":4023,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":4027,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":4017,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":4028,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.deactiv",{"_index":4030,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(select",{"_index":2432,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_mo",{"_index":1361,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selection.add(item",{"_index":364,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.getvalu",{"_index":397,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.isempti",{"_index":380,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.items[this.selection.items.length",{"_index":382,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.remove(item",{"_index":371,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.removeal",{"_index":384,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2441,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle(item",{"_index":1604,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.update$.subscribe((select",{"_index":2431,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.update$.subscribe(newlist",{"_index":2576,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.sess",{"_index":3765,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":3768,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.set",{"_index":4099,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setd",{"_index":1299,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_mo",{"_index":1355,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1298,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(mo",{"_index":1370,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.d",{"_index":1316,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(valu",{"_index":1369,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.select",{"_index":1314,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mod",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":3973,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":3972,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.them",{"_index":161,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settings.setup",{"_index":4102,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup(editor",{"_index":4103,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settotal(tot",{"_index":3372,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setup.emit(editor",{"_index":4104,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setvalue(posit",{"_index":2682,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.shouldbepartofform(field",{"_index":1947,"title":{},"body":{"injectables/FormService.html":{}}}],["this.show",{"_index":2639,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.show(",{"_index":3503,"title":{},"body":{"components/PopComponent.html":{}}}],["this.showurlinput",{"_index":4296,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.signup(this.form.valu",{"_index":3855,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.solo",{"_index":2434,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":3894,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1280,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promis",{"_index":2638,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":3529,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":3531,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":3533,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeal",{"_index":2643,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stat",{"_index":3559,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.storagekeyresolv",{"_index":2499,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.store(key",{"_index":2505,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.submit",{"_index":2862,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit",{"_index":3467,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":4255,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(r",{"_index":2866,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit(us",{"_index":2784,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.symbol.resolve('datetime.loc",{"_index":3163,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('entries.load.error",{"_index":1512,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.symbol.resolve('entry.load.error",{"_index":1543,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.symbol.resolve('error",{"_index":1618,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2314,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2315,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":1011,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":4260,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecus",{"_index":4188,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.cr",{"_index":3125,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":3123,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.modifi",{"_index":3130,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('imag",{"_index":2187,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.symbol.resolve('login.button.label",{"_index":2812,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.label",{"_index":2815,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.placehold",{"_index":2817,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.error",{"_index":2786,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.password.label",{"_index":2821,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.password.placehold",{"_index":2823,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":2783,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.d",{"_index":1228,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1272,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.tim",{"_index":4186,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('resourc",{"_index":1965,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('resource.gener",{"_index":1925,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('signup.button.label",{"_index":3825,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.error",{"_index":3820,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('signup.invite.placehold",{"_index":3828,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.success",{"_index":3819,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":4256,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve(nam",{"_index":3932,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.symbols.set(en",{"_index":3916,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["this.tab",{"_index":4018,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":4020,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":4024,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.them",{"_index":160,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2159,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.tim",{"_index":3249,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":3003,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1293,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1338,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":2641,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.tot",{"_index":3378,"title":{},"body":{"classes/Pagination.html":{}}}],["this.tre",{"_index":2398,"title":{},"body":{"components/ListComponent.html":{}}}],["this.typ",{"_index":3057,"title":{},"body":{"components/ModalComponent.html":{},"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":3132,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displayd",{"_index":3126,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(fieldconfig[field].type).inputview",{"_index":3141,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(typ",{"_index":3161,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupd",{"_index":3127,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.set('loc",{"_index":4658,"title":{},"body":{"additional-documentation/readme/location-readme.html":{}}}],["this.types.foreach(typ",{"_index":3065,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.includes(this.typ",{"_index":3059,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.join",{"_index":3062,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types[typ",{"_index":4178,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.upd",{"_index":1616,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1123,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.update(rel",{"_index":3682,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.update.asobserv",{"_index":831,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(thi",{"_index":884,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":4115,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":2736,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(fil",{"_index":4249,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.trigger(",{"_index":4301,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploader.uploadfiles(url",{"_index":4298,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploadfiles(e.target.fil",{"_index":4241,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromis",{"_index":4250,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":4262,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":1792,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2163,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.urlstoupload",{"_index":4300,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.us",{"_index":3773,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.use(this.ecimag",{"_index":2152,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":3975,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":3771,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotif",{"_index":3302,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1510,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.valu",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.vanishdelay",{"_index":3006,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.vis",{"_index":2635,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.writevalue(this.valu",{"_index":2297,"title":{},"body":{"components/InputComponent.html":{}}}],["those",{"_index":1705,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["three",{"_index":3086,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["through",{"_index":2050,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":478,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["thrown",{"_index":1615,"title":{},"body":{"components/ErrorComponent.html":{}}}],["thumb",{"_index":2131,"title":{},"body":{"directives/ImageDirective.html":{}}}],["tick",{"_index":4047,"title":{},"body":{"components/TinymceComponent.html":{}}}],["time",{"_index":804,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["timeout",{"_index":2929,"title":{},"body":{"components/MenuComponent.html":{}}}],["timespan",{"_index":1243,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":2602,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tini",{"_index":4051,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymc",{"_index":4037,"title":{"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tinymce'},{'nam",{"_index":297,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tinymce.component.html",{"_index":4040,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":4039,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":4075,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autores",{"_index":4076,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/cod",{"_index":4077,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpick",{"_index":4078,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":4079,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":4080,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":4081,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/list",{"_index":4082,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/past",{"_index":4083,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/t",{"_index":4084,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/templ",{"_index":4085,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":4086,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblock",{"_index":4087,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":4088,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymc",{"_index":4074,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.compon",{"_index":4122,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecompon",{"_index":296,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["tinymcemodul",{"_index":4117,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["tinymcemoduleconfig",{"_index":4123,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tip",{"_index":4450,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["titel",{"_index":3122,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["titel&#39",{"_index":3115,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["titl",{"_index":344,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["toast",{"_index":1566,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["today",{"_index":1240,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":571,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["togeth",{"_index":1685,"title":{},"body":{"classes/Field.html":{}}}],["toggl",{"_index":820,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggle'},{'nam",{"_index":299,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["toggle(",{"_index":1585,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["toggle(item",{"_index":862,"title":{},"body":{"classes/Collection.html":{}}}],["toggle(resourc",{"_index":2051,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle.component.html",{"_index":4127,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.compon",{"_index":1899,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecompon",{"_index":298,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["toggleurlinput",{"_index":4272,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["togglevis",{"_index":2519,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["togglevisibility(field",{"_index":2532,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["token",{"_index":4517,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["top",{"_index":3088,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["total",{"_index":3323,"title":{},"body":{"classes/Pagination.html":{}}}],["total>0",{"_index":4785,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["touch",{"_index":4131,"title":{},"body":{"components/ToggleComponent.html":{}}}],["track",{"_index":2035,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["transform",{"_index":1218,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"interfaces/ListConfig.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["transform(array",{"_index":2872,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(field",{"_index":4319,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(item",{"_index":2030,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(nam",{"_index":3928,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(valu",{"_index":1219,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["translat",{"_index":3396,"title":{},"body":{"components/PaginationComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["tri",{"_index":2761,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["trigger",{"_index":2374,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{}}}],["trigger(",{"_index":4221,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggerupload",{"_index":4273,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["triggerupload(",{"_index":4287,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["true",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ts",{"_index":3761,"title":{},"body":{"injectables/SdkService.html":{}}}],["tsconfig.json",{"_index":4863,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["tslib",{"_index":4357,"title":{},"body":{"dependencies.html":{}}}],["tslint:dis",{"_index":1865,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":513,"title":{},"body":{"components/AssetListComponent.html":{},"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/ListConfig.html":{}}}],["tutori",{"_index":4492,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["twice",{"_index":4707,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["two",{"_index":3089,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":69,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["type'",{"_index":4137,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.includes('asset",{"_index":3156,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.replace('a",{"_index":3157,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typealias",{"_index":4427,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconfig",{"_index":1756,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfig.inputview",{"_index":3165,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig.placehold",{"_index":3164,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfigservic",{"_index":1158,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfigservice#get",{"_index":3100,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typed.isvalid",{"_index":1231,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":1767,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["types.length",{"_index":3893,"title":{},"body":{"classes/Sorter.html":{}}}],["types[0",{"_index":3895,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":874,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["typic",{"_index":3234,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["ui",{"_index":944,"title":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ui/src/notifications/notif",{"_index":4869,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ui/src/notifications/with",{"_index":4870,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["uimodul",{"_index":622,"title":{"modules/UiModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["uimoduleconfig",{"_index":4196,"title":{},"body":{"modules/UiModule.html":{}}}],["ul",{"_index":3407,"title":{},"body":{"components/PaginationComponent.html":{}}}],["undefin",{"_index":1087,"title":{},"body":{"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["under",{"_index":2054,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{},"additional-documentation/adding-new-packages.html":{}}}],["underlin",{"_index":3014,"title":{},"body":{"components/MenuComponent.html":{}}}],["ungültig",{"_index":4165,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["uniqu",{"_index":833,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["unit",{"_index":4413,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["unresolv",{"_index":1807,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":1810,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["until",{"_index":2609,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":1043,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/publishing.html":{}}}],["updat",{"_index":495,"title":{"interfaces/Update.html":{}},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["update(model",{"_index":1101,"title":{},"body":{"injectables/CrudService.html":{}}}],["update(rel",{"_index":3659,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updateaddress",{"_index":2714,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updateon",{"_index":1952,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":3327,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(s",{"_index":3360,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(valu",{"_index":3398,"title":{},"body":{"components/PaginationComponent.html":{}}}],["upgrad",{"_index":4430,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{}}],["upload",{"_index":303,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["upload'},{'nam",{"_index":301,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["upload(fil",{"_index":4223,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":4263,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.brows",{"_index":4305,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.component.html",{"_index":4199,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.dedupl",{"_index":4267,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoredupl",{"_index":4266,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":4265,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.link",{"_index":4302,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.or",{"_index":4303,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.preservefilenam",{"_index":4264,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.url",{"_index":4304,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.url.start",{"_index":4306,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload/upload.compon",{"_index":1852,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{}}}],["uploadassets(fil",{"_index":1778,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["uploadcompon",{"_index":300,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["uploadfil",{"_index":4204,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadfiles(fil",{"_index":1794,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadfromurl",{"_index":4274,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfromurls(url",{"_index":4289,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadpromis",{"_index":4202,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadselectcompon",{"_index":302,"title":{"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["upon",{"_index":1076,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1048,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["url.split",{"_index":4019,"title":{},"body":{"components/TabsComponent.html":{}}}],["urlstoupload",{"_index":4271,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["us",{"_index":60,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["usag",{"_index":1686,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["use(asset",{"_index":2145,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(load",{"_index":2652,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbol",{"_index":3949,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usedatamanag",{"_index":3713,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":3728,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotif",{"_index":3275,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexist",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["uselist",{"_index":1473,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1492,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":583,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["uses",{"_index":4147,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":3935,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":3951,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalu",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/LocationModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["util",{"_index":3098,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["utility/utility.modul",{"_index":2587,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utility/validators/field",{"_index":3852,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["utilitymodul",{"_index":2584,"title":{"modules/UtilityModule.html":{}},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["utilitymoduleconfig",{"_index":4314,"title":{},"body":{"modules/UtilityModule.html":{}}}],["ux",{"_index":3436,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":3576,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["v.name",{"_index":3143,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["valid",{"_index":1635,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["validatefactori",{"_index":1918,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":1935,"title":{},"body":{"injectables/FormService.html":{}}}],["validationerror",{"_index":1938,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":1931,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(this.validatefactory(field",{"_index":1962,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.requir",{"_index":1961,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.requir",{"_index":2852,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators/field",{"_index":2848,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["valu",{"_index":43,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["value).then(asset",{"_index":2213,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.alt",{"_index":2199,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.hasownproperty(key",{"_index":1141,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.height",{"_index":2192,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.img",{"_index":2202,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.latitud",{"_index":4174,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1690,"title":{},"body":{"classes/Field.html":{}}}],["value.longitud",{"_index":4173,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.nam",{"_index":4176,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":4160,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.titl",{"_index":4175,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.touppercas",{"_index":1689,"title":{},"body":{"classes/Field.html":{}}}],["value[key",{"_index":1142,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["vanishdelay",{"_index":2940,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["variabl",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"components/TabsComponent.html":{}}}],["variables[key",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["variou",{"_index":2597,"title":{},"body":{"components/LoaderComponent.html":{}}}],["verifi",{"_index":2003,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":3458,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":4394,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["via",{"_index":588,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["viabl",{"_index":1702,"title":{},"body":{"classes/Field.html":{}}}],["video",{"_index":1750,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["view",{"_index":1251,"title":{},"body":{"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["viewchild",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["viewchild('contain",{"_index":111,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":4227,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterform",{"_index":2534,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalload",{"_index":2618,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('imageload",{"_index":2180,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["viewchild('localload",{"_index":2620,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('pagecontain",{"_index":3405,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":2753,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcompon",{"_index":1203,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcompon",{"_index":969,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcompon",{"_index":965,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercompon",{"_index":971,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(locationmapcompon",{"_index":2729,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcompon",{"_index":2732,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcompon",{"_index":4231,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild(resourcelistcompon",{"_index":3606,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcompon",{"_index":3609,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcompon",{"_index":1591,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["viewchild(slothostdirect",{"_index":1458,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["viewchild(uploadcompon",{"_index":4293,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["viewchildren",{"_index":2540,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{}}}],["viewchildren('filterpop",{"_index":2538,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchildren('pag",{"_index":3402,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontain",{"_index":3861,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1440,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1464,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactori",{"_index":1465,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewencapsul",{"_index":2410,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.non",{"_index":2344,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["views.find(v",{"_index":3142,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["visibl",{"_index":960,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/UploadSelectComponent.html":{}}}],["visiblefield",{"_index":4318,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspip",{"_index":1886,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"overview.html":{}}}],["vm",{"_index":4465,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["void",{"_index":82,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["vscode",{"_index":4451,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["wait",{"_index":511,"title":{},"body":{"components/AssetListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wait(promis",{"_index":2607,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["want",{"_index":2262,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["warn",{"_index":2095,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{}}}],["way",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["webpack",{"_index":4468,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.j",{"_index":4482,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js\"},notic",{"_index":4480,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack:brows",{"_index":4478,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["week",{"_index":1209,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekday",{"_index":1190,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weiteren",{"_index":3463,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1435,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{}}}],["werden",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wether",{"_index":1647,"title":{},"body":{"classes/Field.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{}}}],["whenev",{"_index":2251,"title":{},"body":{"components/InputComponent.html":{}}}],["whitelistednonpeerdepend",{"_index":4867,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["whole",{"_index":1704,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["whose",{"_index":3474,"title":{},"body":{"components/PopComponent.html":{}}}],["width",{"_index":1065,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{}}}],["wildcard",{"_index":1675,"title":{},"body":{"classes/Field.html":{}}}],["window",{"_index":3298,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{}}}],["window.addeventlistener('keydown",{"_index":3525,"title":{},"body":{"injectables/PopService.html":{}}}],["window.notification(notification.titl",{"_index":3314,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permiss",{"_index":3306,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permiss",{"_index":3307,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["withload",{"_index":923,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{}}}],["withnotif",{"_index":924,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/adding-new-packages.html":{}}}],["without",{"_index":1053,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["won't",{"_index":4528,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":2825,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["work",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["workaround",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{}}}],["workspac",{"_index":4375,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["wrap",{"_index":12,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["wrapper",{"_index":1567,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["write",{"_index":106,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["writevalu",{"_index":57,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["writevalue(valu",{"_index":104,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrong",{"_index":4749,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["wysiwyg",{"_index":4370,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["x",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.ui",{"_index":3017,"title":{},"body":{"components/ModalComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["x.ui/src/_config",{"_index":4508,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":4509,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui.scss",{"_index":4656,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":423,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":4507,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":4515,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":4374,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ye",{"_index":455,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListPopComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{}}}],["yield",{"_index":1084,"title":{},"body":{"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["you'll",{"_index":4598,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["yourself",{"_index":3705,"title":{},"body":{"injectables/SdkService.html":{}}}],["yyyi",{"_index":801,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["z",{"_index":3169,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["z0",{"_index":1770,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["za",{"_index":1769,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["zone",{"_index":1393,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.j",{"_index":4359,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":329,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["zurücksetzen",{"_index":3469,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/lib/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace?e=1\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:51\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:29\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:39\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:37\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:11\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/webpack-resolver';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace?e=1\n*/\n@Component({\n    selector: 'ec-ace',\n    templateUrl: 'ace.component.html',\n    styleUrls: ['ace.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AceComponent),\n            multi: true\n        }\n    ]\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n    /** The ace editor instance */\n    editor: any;\n    /**\n     * The current value of the editor\n     */\n    value = '';\n    /**\n     * Promise that resolves when the editor has been initialized.\n     */\n    ready: Promise;\n    /** Form input component */\n    input: InputComponent;\n    /**\n     * container element for ace editor\n     */\n    @ViewChild('container') container: ElementRef;\n    /**\n     * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n     */\n    @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n    /**\n     * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n     */\n    @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n    /** creates new ace instance if not present and sets mode and theme if given */\n    init() {\n        if (!this.editor) {\n            this.editor = ace.edit(this.container.nativeElement);\n        }\n        this.ready = Promise.resolve(this.editor);\n        if (this.mode) {\n            this.setMode(this.mode);\n        }\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n        if (this.value) {\n            this.editor.setValue(this.value, 1);\n        }\n        this.ready.then((editor) => {\n            editor.on('change', (e) => {\n                this.propagateChange(this.editor.getValue());\n            });\n        });\n    }\n    /** Sets the editor mode to the specified language (after ace/mode/) */\n    setMode(mode: string) {\n        this.mode = mode;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.session.setMode('ace/mode/' + this.mode);\n    }\n\n    /** Sets the editor theme to the specified theme (after ace/theme/) */\n    setTheme(theme: string) {\n        this.theme = theme;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.setTheme('ace/theme/' + this.theme);\n    }\n\n    /** Inits the editor */\n    ngOnInit() {\n        this.init();\n    }\n    /** Re-inits the editor */\n    ngOnChanges() {\n        this.init();\n    }\n\n    /** writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.value = value || '';\n        if (!this.ready) {\n            return;\n        }\n        this.ready.then((editor) => {\n            editor.setValue(this.value, 1);\n        });\n    }\n\n    propagateChange = (_: any) => {\n    }\n\n    /** Registers change callback */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ace.component.scss\n                \n                .ec-ace {\n    min-height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n    Modules\n    AceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n AceComponent), multi: true\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}->AceComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/lib/ace.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AceComponent } from './ace.component';\n\nexport const aceModuleConfig = {\n    imports: [],\n    exports: [AceComponent],\n    declarations: [AceComponent],\n    entryComponents: [AceComponent],\n    providers: [],\n};\n\n@NgModule(aceModuleConfig)\nexport class AceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n    title: string;\n    id: string;\n    path?: string;\n    data?: any;\n    select?: boolean;\n    action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {\n\n}\n\n@Component({\n    selector: 'ec-actionbar',\n    templateUrl: '../select/select.component.html'\n})\n\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n    @Input() config: ActionbarConfig = {\n        label: 'title',\n        identifier: 'id',\n        fields: {\n            title: {}\n        }\n    };\n    @Input() actions: Action[];\n    actionStack: { [id: string]: Action[] } = {};\n\n    constructor(\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n        this.add.subscribe((item) => {\n            if (item.getBody().select !== false) {\n                this.selection.add(item);\n            }\n            if (item.getBody().action) {\n                item.getBody().action(item, this);\n            }\n            if (item.getBody().children) {\n                this.loadActions(item.getBody().children);\n            }\n            this.searchbar.clear();\n        });\n        this.remove.subscribe((item) => {\n            this.selection.remove(item);\n            this.loadActionsBefore();\n        });\n    }\n\n    loadActionsBefore() {\n        const actionsBefore = this.actionStack[this.currentID()];\n        if (actionsBefore) {\n            this.loadActions(actionsBefore);\n        }\n    }\n\n    ngOnInit() {\n        this.loadActions(this.actions);\n    }\n\n    currentID() {\n        if (!this.selection || this.selection.isEmpty()) {\n            return 'ROOT';\n        }\n        return this.selection.items[this.selection.items.length - 1].id();\n    }\n\n    reset() {\n        this.selection.removeAll();\n        this.loadActions(this.actionStack[this.currentID()]);\n    }\n\n    currentActions() {\n        return this.actionStack[this.currentID()];\n    }\n\n    loadActions(actions, addToStack = true) {\n        if (addToStack) {\n            this.actionStack[this.currentID()] = actions;\n        }\n        this.list = new List(actions, this.config);\n        if (!this.selection) {\n            this.initSelection();\n        }\n        setTimeout(() => {\n            if (this.dropdownList) {\n                this.dropdownList.focusFirst();\n            }\n        });\n    }\n\n    getPath() {\n        return this.selection.getValue();\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionbarConfig.html":{"url":"interfaces/ActionbarConfig.html","title":"interface - ActionbarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionbarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n    title: string;\n    id: string;\n    path?: string;\n    data?: any;\n    select?: boolean;\n    action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {\n\n}\n\n@Component({\n    selector: 'ec-actionbar',\n    templateUrl: '../select/select.component.html'\n})\n\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n    @Input() config: ActionbarConfig = {\n        label: 'title',\n        identifier: 'id',\n        fields: {\n            title: {}\n        }\n    };\n    @Input() actions: Action[];\n    actionStack: { [id: string]: Action[] } = {};\n\n    constructor(\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n        this.add.subscribe((item) => {\n            if (item.getBody().select !== false) {\n                this.selection.add(item);\n            }\n            if (item.getBody().action) {\n                item.getBody().action(item, this);\n            }\n            if (item.getBody().children) {\n                this.loadActions(item.getBody().children);\n            }\n            this.searchbar.clear();\n        });\n        this.remove.subscribe((item) => {\n            this.selection.remove(item);\n            this.loadActionsBefore();\n        });\n    }\n\n    loadActionsBefore() {\n        const actionsBefore = this.actionStack[this.currentID()];\n        if (actionsBefore) {\n            this.loadActions(actionsBefore);\n        }\n    }\n\n    ngOnInit() {\n        this.loadActions(this.actions);\n    }\n\n    currentID() {\n        if (!this.selection || this.selection.isEmpty()) {\n            return 'ROOT';\n        }\n        return this.selection.items[this.selection.items.length - 1].id();\n    }\n\n    reset() {\n        this.selection.removeAll();\n        this.loadActions(this.actionStack[this.currentID()]);\n    }\n\n    currentActions() {\n        return this.actionStack[this.currentID()];\n    }\n\n    loadActions(actions, addToStack = true) {\n        if (addToStack) {\n            this.actionStack[this.currentID()] = actions;\n        }\n        this.list = new List(actions, this.config);\n        if (!this.selection) {\n            this.initSelection();\n        }\n        setTimeout(() => {\n            if (this.dropdownList) {\n                this.dropdownList.focusFirst();\n            }\n        });\n    }\n\n    getPath() {\n        return this.selection.getValue();\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     DataManagerResource\n\n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:11\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '../sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n    templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n    api: DataManagerResource;\n    constructor(public sdk: SdkService) {\n        super();\n        /* this.sdk.root.then((root) => this.api = root); */\n    }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template.\nassets/asset\nhttps://components.entrecode.de/assets/asset?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use. Defaults to sdk.api \n\n                            \n                            Type :    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:24\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the asset has been loaded. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:48\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        asset:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:16\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template.\n * assets/asset\n * https://components.entrecode.de/assets/asset?e=1\n */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset'\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId)\n      .then((asset) => {\n        this.asset = asset;\n        this.loaded.emit(asset);\n        return asset;\n      });\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListComponent.html":{"url":"components/AssetListComponent.html","title":"component - AssetListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/asset-list/asset-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list\n            \n\n\n\n\n            \n                templateUrl\n                ./asset-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                list\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                loadWhen\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type :    Core\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                            \n                            Type :    ListResource\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown while the list is loaded. \n\n                            \n                            Type :    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loadWhen\n                    \n                    \n                        If set to false, the list will wait for the flag to turn true before loading. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/asset-list/asset-list.component.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:62\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:128\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:119\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:83\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceList\n\n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:33\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listConfig:     ListConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\n\n@Component({\n    selector: 'ec-asset-list',\n    templateUrl: './asset-list.component.html'\n})\n\nexport class AssetListComponent extends ResourceListComponent implements OnInit {\n    ngOnInit() {\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                \n                    \n                \n                \n                    {{group.value}}\n                \n            \n             -->\n\n            \n            \n                \n                    \n                \n                {{item.getBody()}}\n             -->\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                    {{group.value}}                                         -->                                                                                            {{item.getBody()}}             -->            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        \n                            Default value : 'select assetgroup..'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '../file.service';\n\n// TODO: add demo + doc\n\n@Component({\n    selector: 'ec-assetgroup-select',\n    templateUrl: './assetgroup-select.component.html',\n})\n\nexport class AssetgroupSelectComponent implements OnInit {\n    @Input() placeholder = 'select assetgroup..';\n    @Input() assetGroupID: string;\n    @Input() assetGroups: string[];\n    @Input() disableLegacy: boolean;\n    @Input() readOnly: boolean;\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n\n    constructor(\n        public fileService: FileService\n    ) { }\n\n    ngOnInit() {\n        this.fileService.assetGroupList().then(assetGroups => this.assetGroups = assetGroups);\n    }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth-guard.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui';\nimport { Subject } from 'rxjs';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {\n  }\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then(user => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.'\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for all auth related components and services. \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                        \n                            cookieFactory()\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { CookieModule } from 'ngx-cookie';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { SignupComponent } from './signup/signup.component';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [\n    PasswordResetComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    FormsModule,\n    cookieFactory(),\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    PasswordResetComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  providers: [AuthGuard, AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, private sdk: SdkService) {\n  }\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      }).then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.signup(email, password, invite) :\n      this.sdk.api.signup(email, password, invite)\n        .catch(() => this.sdk.accounts.signup(email, password, invite))\n        .then((res) => {\n          return this.sdk.init();\n        });\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api.me().then((account) => {\n      return account || this.sdk.accounts.me();\n    }).catch((err) => {\n      return this.sdk.api.me();\n    });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      api = api || this.sdk.user;\n      return api.checkPermission(permission);\n    });\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(relation: string, variables: Object = {}, methods?: string[], api?: Core): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method] ? Promise.resolve(results) :\n          permissions[method] === true ? Promise.resolve(results.concat(method)) :\n            this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then(res => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              }).catch(err => {\n                return results;\n              });\n      })\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api)\n          .then(res => {\n            if (res) {\n              results.push(method);\n            }\n            return results;\n          })\n      )\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.accounts;\n        return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n      });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.logout() : this.sdk.session.logout().catch(() => this.sdk.api.logout())\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api.emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      }).catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.sdk.environment || !this.sdk.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarModule.html":{"url":"modules/CalendarModule.html","title":"module - CalendarModule","body":"\n                   \n\n\n\n\n    Modules\n    CalendarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module contains all calendar related components \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(formats: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/calendar.module.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formats\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DatetimePipe } from './datetime.pipe';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { HeatmapComponent } from './heatmap/heatmap.component';\nimport { DaterangeComponent } from './daterange/daterange.component';\nimport { MonthComponent } from './calendar/month.component';\nimport { CommonModule } from '@angular/common';\n\nexport const calendarModuleConfig = {\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        DatetimePipe,\n        CalendarComponent,\n        HeatmapComponent,\n        DaterangeComponent,\n        MonthComponent,\n    ],\n    declarations: [\n        DatetimePipe,\n        CalendarComponent,\n        HeatmapComponent,\n        DaterangeComponent,\n        MonthComponent,\n    ],\n    providers: [\n        {\n            provide: 'moment.format.date',\n            useValue: 'DD.MM.YYYY'\n        },\n        {\n            provide: 'moment.format.time',\n            useValue: 'HH:mm'\n        },\n        {\n            provide: 'moment.format.month',\n            useValue: 'MMMM YYYY'\n        }\n    ]\n};\n\n/** This Module contains all calendar related components */\n@NgModule(calendarModuleConfig)\nexport class CalendarModule {\n    static forRoot(formats: { date?, time?, month?}): ModuleWithProviders {\n        return {\n            ngModule: CalendarModule,\n            providers: [\n                {\n                    provide: 'moment.format.date',\n                    useValue: formats.date\n                },\n                {\n                    provide: 'moment.format.time',\n                    useValue: formats.time\n                },\n                {\n                    provide: 'moment.format.month',\n                    useValue: formats.month\n                },\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                move\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                               *  const numbers = new Collection([1, 2, 3]);\n   *\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:10\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update$:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:71\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.add(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:89\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.addAll([5, 6, 7]);\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has(2); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:53\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has([1,2]); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:31\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:160\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            move\n                            \n                            \n                        \n                    \n                \n                \n                    \nmove(item: T, index: number, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:165\n                            \n                        \n\n\n                \n                    \n                            Moves the given item to the given array index. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:106\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.remove(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:123\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.removeAll();\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:147\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:138\n                            \n                        \n\n\n                \n                    \n                            Toggles the item in and out of collection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable, Subject } from 'rxjs';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /** Moves the given item to the given array index. */\n  move(item: T, index: number, event: boolean = true) {\n    if (!this.has(item) || this.items.indexOf(item) === index) {\n      return;\n    }\n    this.items.splice(index, 0, this.items.splice(this.items.indexOf(item), 1)[0]);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * \n *https://components.entrecode.de/entries/crud?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, modelConfig: ModelConfigService, notificationService: NotificationsService, symbol: SymbolService, cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/crud/crud.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type :    CrudConfig\n\n                            \n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model that should be crud'ed. \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type :    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryPop:     EntryPopComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryPopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     EntryListComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:49\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, EventEmitter, Input, OnInit, Optional,\n  Output, ViewChild, ChangeDetectorRef\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { Notification, WithNotifications, SymbolService } from '@ec.components/ui';\nimport { ModelConfigService } from '../model-config/model-config.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/entries/crud?e=1\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private modelConfig: ModelConfigService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    private cdr: ChangeDetectorRef,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute) {\n    /* if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    } */\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods)\n      .then((methods) => {\n        this.config.methods = methods;\n        this.cdr.markForCheck();\n      });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return this.modelConfig.getMinLevel(this.model, this.config.fields)\n      .then((minLevel) => {\n        const levels = Math.max(minLevel, this.config.levels || 1);\n        if (!this.config.alwaysLoadEntry && !this.mustReload(item) && levels === 1) {\n          return item.getBody();\n        }\n        return this.sdk.api.entry(this.model, item.id(), levels);\n      }).then((loadedEntry) => {\n        this.entryPop.edit(loadedEntry);\n        this.notificationService.emit({ hide: this.notifications });\n      }).catch((err) => {\n        console.log('error while loading entry to edit', err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.load'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n      });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  public selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        customUpload\n                                \n                                \n                                            Optional\n                                        deleteOnRemove\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        disableUrlUpload\n                                \n                                \n                                            Optional\n                                        fileOptions\n                                \n                                \n                                            Optional\n                                        hideAssetGroupSelect\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopActive\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        pluralLabel\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        safeDelete\n                                \n                                \n                                            Optional\n                                        singularLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customUpload\n                                    \n                                \n                                \n                                    \n                                        customUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a pop will open before upload to set up custom options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteOnRemove\n                                    \n                                \n                                \n                                    \n                                        deleteOnRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, selects will delete entries that are removed from the selection \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be accessible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableUrlUpload\n                                    \n                                \n                                \n                                    \n                                        disableUrlUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, assets cannot be upload via url \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileOptions\n                                    \n                                \n                                \n                                    \n                                        fileOptions:     FileOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default options for file uploads \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideAssetGroupSelect\n                                    \n                                \n                                \n                                    \n                                        hideAssetGroupSelect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Hides the assetGroup select in asset-list-pop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopActive\n                                    \n                                \n                                \n                                    \n                                        nestedPopActive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a nested pop will be active immediately \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets a placeholder. Used e.g. for empty entry-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluralLabel\n                                    \n                                \n                                \n                                    \n                                        pluralLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for multiple entities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the column width of the pops used. Defaults to popService.defaultColumns \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeDelete\n                                    \n                                \n                                \n                                    \n                                        safeDelete:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, delete operations need confirmation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singularLabel\n                                    \n                                \n                                \n                                    \n                                        singularLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for one entity \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig } from '@ec.components/core';\nimport { NotificationsComponent, LoaderComponent } from '@ec.components/ui';\nimport { FileOptions } from '../files/file.service';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The label for one entity */\n  singularLabel?: string;\n  /** The label for multiple entities */\n  pluralLabel?: string;\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean, post?: string | boolean, get?: string | boolean, delete?: string | boolean };\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, assets cannot be upload via url */\n  disableUrlUpload?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, no dropdown will be accessible */\n  disableSearchbar?: boolean;\n  /** If true, selects will delete entries that are removed from the selection */\n  deleteOnRemove?: boolean;\n  /** If true, delete operations need confirmation */\n  safeDelete?: boolean;\n  /** Hides the assetGroup select in asset-list-pop */\n  hideAssetGroupSelect?: boolean;\n  /** Default options for file uploads */\n  fileOptions?: FileOptions;\n  /** If true, a pop will open before upload to set up custom options */\n  customUpload?: boolean;\n  /** Defines the column width of the pops used. Defaults to popService.defaultColumns */\n  popColumns?: number;\n  /** If true, a nested pop will be active immediately */\n  nestedPopActive?: boolean;\n  /** Sets a placeholder. Used e.g. for empty entry-select */\n  placeholder?: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resourceService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/crud/crud.service.ts:13\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(model, entry: EntryResource, value: Object, safePut)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        safePut\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs';\nimport { ResourceService } from '../resource-config/resource.service';\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public resourceService: ResourceService) {\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: any): Observable {\n    if (filter.model) {\n      filter.relation = `model.${filter.model}`;\n      delete filter.model;\n    }\n    console.warn(`CrudService.change is deprecated! Use ResourceService.change instead!\n    Make sure to change the \"model\" property to \"relation\" with prefix \"model.\":\n\n    this.crud.change({model:'muffin'}) // OLD\n    // CHANGE TO\n    this.resourceService.change({relation:'model.muffin'}) // NEW\n\n    The CrudService#change method will be removed in a future release!\n    `);\n    return this.resourceService.change(filter);\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object, safePut = true): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save(safePut).then((_entry) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: _entry, type: 'put' });\n      return _entry;\n    }).catch((err) => {\n      Object.assign(entry, this.clean(oldValues)); // fall back to old values\n      return Promise.reject(err);\n    });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // TODO: make sure leveled entries are returned leveled\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/data.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CrudService\n                        \n                        \n                            HistoryService\n                        \n                        \n                            ModelConfigService\n                        \n                        \n                            TypeConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forEnvironment(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/data.module.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { CrudService } from './crud/crud.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListPopComponent } from './entry-list-pop/entry-list-pop.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\nimport { EntryListSelectComponent } from './entry-list-select/entry-list-select.component';\n\nexport const dataModuleConfig = {\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntryListSelectComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListPopComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n    DndModule\n  ],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule\n  ],\n  providers: [\n    CrudService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live'\n      }\n    }\n  ]\n};\n\n@NgModule(dataModuleConfig)\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live'\n            },\n            environment\n          )\n        }\n      ]\n    };\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                    \n                        The date that should be displayed at start. \n\n                            \n                            Type :    moment.Moment\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the date \n\n                            \n                            Type :    FormControl\n\n                            \n                        \n                            Default value : new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input's placeholder \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendar:     CalendarComponent\n\n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CalendarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:28\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:42\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weekdays:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from '@ec.components/calendar';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime?e=1\n *\n*/\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {\n  }\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.dateFormat\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Inject } from '@angular/core';\nimport moment from 'moment-es6';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime'\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(@Inject('moment.format.date') private dateFormat/* private symbol: SymbolService */) { }\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.dateFormat/* this.symbol.resolve('moment.format.date') */,\n    raw?: string\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                            Optional\n                                        heat\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heat\n                                    \n                                \n                                \n                                    \n                                        heat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Inject } from '@angular/core';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\nimport moment from 'moment-es6';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/** Interface for a day inside the a month.\n * https://components.entrecode.de/ui/datetime?e=1\n * */\nexport interface Day {\n  /** The cell index */\n  index: number;\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n  /** custom class */\n  heat?: string;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  templateUrl: 'month.component.html'\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color mapping for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Class mapping for day cells. E.g. to apply different background classes */\n  @Input() heatmap: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc';\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  constructor(\n    @Inject('moment.format.month') protected defaultMonthFormat\n    /* public symbol: SymbolService */\n  ) {\n    /* this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat; */\n    this.monthFormat = this.defaultMonthFormat || this.monthFormat;\n    this.drag.asObservable()\n      .pipe(debounceTime(100))\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan.asObservable().pipe(debounceTime(800))\n      .subscribe(timespan => this.spanChanged.emit(this.timespan));\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || (day.first && this.dragged.first || day.last && this.dragged.last)) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  getDayHeat(_moment: moment.Moment) {\n    if (this.heatmap && this.heatmap[_moment.toISOString()]) {\n      return this.heatmap[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    } if (change.colors || change.heatmap) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day.clone().startOf('month').startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart = this.timespan && date.clone().startOf('day').isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd = this.timespan && date.clone().startOf('day').isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          heat: this.getDayHeat(date),\n          format: date.format('DD'),\n          today: moment().startOf('day').diff(date, 'days') === 0,\n        };\n      });\n  }\n\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment): void {\n    this.setDate(_moment);\n    this.selected = _moment;\n    this.dayClicked.emit(_moment);\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:11\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService) {\n    super();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:17\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:15\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field, Item } from '@ec.components/core';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    {{field.placeholder}}\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n      {{option.label?option.label:option}}\n    \n  \n\n  \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{field.placeholder}}                          {{option.label?option.label:option}}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n    \n    (field.maxItems||10)\">\n      &hellip;\n    \n  \n\n  {{item?.display(field.property)}}\n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n\n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    {{item?.display(field.property)}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}        (field.maxItems||10)\">      …        {{item?.display(field.property)}}      ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                    {{item?.resolve(field.property)?.length}}                    {{item?.resolve(field.property)?.length}}                                {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}            {{item?.display(field.property)}}      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. TODO: demo \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        If true the element acts normal \n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                    \n                        Emits when files are dropped \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.is-active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. TODO: demo */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n    /** The is-active class is bound to the host when dragover is active */\n    @HostBinding('class.is-active') public active: boolean;\n    /** Emits when files are dropped */\n    @Output() ecDropzone: EventEmitter = new EventEmitter();\n    /** If true the element acts normal */\n    @Input() disabled = false;\n    /** flips active to true on dragover */\n    @HostListener('dragover', ['$event']) onDragOver(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this.active) {\n            this.active = true;\n        }\n    }\n    /** emits dropped files and flips active to false on drop */\n    @HostListener('drop', ['$event']) onDrop(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n        }\n        this.ecDropzone.emit(e);\n        this.active = false;\n    }\n    /** flips active to false on dragleave */\n    @HostListener('dragleave', ['$event']) onDragLeave(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    constructor(private el: ElementRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html'\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html'\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, attributes: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, attributes);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Private\n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type :    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from. \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        The filterOptions for loading. \n\n                            \n                            Type :    any\n\n                            \n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:26\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:108\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:58\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryList:     EntryList\n\n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     EntryResource[]\n\n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:22\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader, NotificationsService } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { SymbolService } from '@ec.components/ui';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/entries/entries?e=1\n*/\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries'\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService) {\n  }\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api.entryList(this.model, this.options)\n      .then(list => this.useList(list))\n      .catch(error => this.notificationService.emit({\n        title: this.symbol.resolve('entries.load.error'),\n        error\n      }));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                    \n                        The entry id that should be loaded\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type :    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:23\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the entry has been loaded. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:29\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:50\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:19\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/entries/entries?e=1\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry'\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService) {\n  }\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api.entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      })\n      .catch(error =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entry.load.error'),\n          error\n        }));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListPopComponent.html":{"url":"components/EntryListPopComponent.html","title":"component - EntryListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop that contains an entry list. TODO: add demo \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./entry-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                modelConfig\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeader\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelConfig: ModelConfigService, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    CrudConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                            \n                            Type :    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        $event Type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:21\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHeader(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lightModel:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modelConfig:     ModelConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ModelConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popService:     PopService\n\n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchbar:     SearchbarComponent\n\n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnChanges, Output, ViewChild } from '@angular/core';\nimport { Item, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\n\n/** A Pop that contains an entry list. TODO: add demo */\n@Component({\n    selector: 'ec-entry-list-pop',\n    templateUrl: './entry-list-pop.component.html',\n\n})\nexport class EntryListPopComponent extends PopComponent implements OnChanges {\n    @Input() model: string;\n    @Input() config: CrudConfig;\n    @Input() selection: Selection;\n    @Output() columnClicked: EventEmitter> = new EventEmitter();\n    @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'toast-wrapper';\n    lightModel: any;\n\n    constructor(\n        public modelConfig: ModelConfigService,\n        public popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef\n    ) {\n        super(popService, elementRef, cdr);\n    }\n\n    ngOnChanges() {\n        if (this.model) {\n            this.modelConfig.getLightModel(this.model).then(model => this.lightModel = model);\n        }\n        this.config = Object.assign({}, this.config || {}, { hidePagination: true, disableHeader: true });\n    }\n\n    /** emits columnClicked event or toggles selection if no observers. */\n    select(item) {\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n        } else if (this.selection) {\n            this.selection.toggle(item);\n        }\n        this.searchbar.focusEvent.emit(true);\n    }\n\n    getHeader(entryList) {\n        const label = this.config.singularLabel || entryList.model;\n        return `${label}`;\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{getHeader(entryList)}}\n        \n        \n    \n    \n        \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{getHeader(entryList)}}                                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        The error that should be displayed \n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html'\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {\n  }\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}{{error.verbose?': '+error.verbose:''}}\n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}{{error.verbose?\\': \\'+error.verbose:\\'\\'}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumns\n                            \n                            \n                                getPlaceholder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:47\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterOperator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPopClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidden:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        output:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placeholder:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        property:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        required:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validate:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        values:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColumns()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns the column class for data-col, based on configured columns \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:45\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n  /** Returns the column class for data-col, based on configured columns */\n  getColumns() {\n    return (this.columns || 12) + '-sm';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/config/field-config.interface.ts:6\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FieldConfigProperty } from './field-config-property.interface';\n\n/**\n * Configuration for list fields.\n */\nexport interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deduplicate\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fileName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deduplicate\n                                    \n                                \n                                \n                                    \n                                        deduplicate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deduplicate upload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: []\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, (config.filter || {}), {\n          type: assetGroupID\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n          if (key in options) {\n            formData.append(key, `${options[key]}`);\n          }\n        });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map(f => f.url) : this.getFormData(files, options);\n    return api.createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {});\n      }\n      return this.sdk.api.createAssets(data, {});\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string):\n    Promise> {\n    console.warn('FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.');\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset];\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset);\n        });\n\n    });\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { AssetListComponent } from '../asset-list/asset-list.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\nimport { UploadSelectComponent } from './upload-select/upload-select.component';\nimport { ImageSelectPopComponent } from './image-select-pop/image-select-pop.component';\nimport { TagSelectComponent } from './tag-select/tag-select.component';\n\n@NgModule({\n  entryComponents: [\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    UploadComponent,\n    TagSelectComponent,\n  ],\n  declarations: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    ImageSelectPopComponent,\n    TagSelectComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    ResourceModule\n  ],\n  exports: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    SdkModule,\n    ImageSelectPopComponent,\n    TagSelectComponent\n  ],\n  providers: [\n    FileService\n  ],\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.interface.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                    \n                            \n                            Type :    EventEmitter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit {\n  @Input() ecFocus: EventEmitter;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.ecFocus\n      .subscribe((event: boolean) => {\n        if (event) {\n          this.element.nativeElement.focus();\n        } else {\n          this.element.nativeElement.blur();\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hideSubmitButton\n                                \n                                \n                                            Optional\n                                        submitButtonLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideSubmitButton\n                                    \n                                \n                                \n                                    \n                                        hideSubmitButton:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no submit button will be rendered. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonLabel\n                                    \n                                \n                                \n                                    \n                                        submitButtonLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the submit button \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n    /** If true, no submit button will be rendered. */\n    hideSubmitButton?: boolean;\n    /** The label of the submit button */\n    submitButtonLabel?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nCalendarModule\n\nCalendarModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CalendarModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            IoModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SymbolModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            IoModule\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            PopModule\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { CalendarModule } from '@ec.components/calendar';\n\nexport const formModuleConfig = {\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  declarations: [\n    FormComponent,\n    DatetimeComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule,\n    CalendarModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    IoModule,\n    FormComponent,\n    DatetimeComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService,\n    /* {\n      provide: 'moment.format.date',\n      useValue: SymbolService.resolve('moment.format.date')\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: SymbolService.resolve('moment.format.time')\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: SymbolService.resolve('moment.format.month')\n    } */\n  ]\n};\n\n@NgModule(formModuleConfig)\nexport class FormModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                getFormLabel\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                    Public\n                                shouldBePartOfForm\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/form.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormLabel(form: FormComponent, label)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns label for given form (e.g. Edit label) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('resource.generic')\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldBePartOfForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldBePartOfForm(field, form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be included in the form.\nDecides based on field config values form, edit and create \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form, Field } from '@ec.components/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { SymbolService } from '../symbol/symbol.service';\nimport { FormComponent } from '../form/form.component';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n\n  constructor(\n    public symbol: SymbolService\n  ) { }\n\n  /** Returns true if the field should be included in the form.\n   * Decides based on field config values form, edit and create */\n  public shouldBePartOfForm(field, form) {\n    if (field.create === false && !form.getBody()) {\n      return false;\n    }\n    if (field.edit === false && !!form.getBody()) {\n      return false;\n    }\n    return field.form !== false;\n  }\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const controls = {};\n    form.fields.filter((field) => this.shouldBePartOfForm(field, form))\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        controls[field.property] = new FormControl(form.getValue(field.property), validators);\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(controls);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    console.warn('addField is experimental!');\n    const validators = this.getValidators(field);\n    const control = new FormControl(form.getValue(field.property), validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error\n        };\n      }\n    };\n  }\n\n  /** Returns label for given form (e.g. Edit label) */\n  getFormLabel(form: FormComponent, label = this.symbol.resolve('resource.generic')) {\n    if (!form || !form.form) {\n      return '';\n    }\n    return `${this.symbol.resolve('resource.' + (form.form.isEditing() ? 'edit' : 'create'))}\n    ${label} ${form.form.display() ? `\"${form.form.display()}\"` : ''}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/lib/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder, location)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n\n    constructor(private mapLoader: MapsAPILoader,\n        private ngZone: NgZone) { }\n\n    /** Observes a given input element, transforming it into an autocomplete */\n    public observeElement(el) {\n        return new Observable(observer => {\n            const autocomplete = new google.maps.places.Autocomplete(el, {\n                types: ['address']\n            });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    const place = autocomplete.getPlace();\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    const coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    };\n                    observer.next(coords);\n                    /* observer.complete(); */\n                });\n            });\n        });\n    }\n\n    /** Turns an input element to an maps autocomplete searchbar. */\n    public autocompleteAddress(el): Observable {\n        return from(this.mapLoader.load())\n            .pipe(switchMap(() => this.observeElement(el)));\n    }\n\n    /** Reverse address lookup for a given location */\n    geocodeLatLng(geocoder, location): Promise {\n        return new Promise((resolve, reject) => {\n            geocoder.geocode({ location }, (results, status) => {\n                if (status === 'OK') {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n            });\n        });\n    }\n\n    /** Returns the nearest address for a given location */\n    public getNearestAddress(location: { latitude: number, longitude: number }): Promise> {\n        return this.mapLoader.load().then(() => {\n            return this.geocodeLatLng(\n                new google.maps.Geocoder, {\n                    lat: location.latitude,\n                    lng: location.longitude\n                }\n            );\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group'\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key.\nThe relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventSources:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderService:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promises:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport * as EventSource from 'eventsource/lib/eventsource-polyfill';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n    /** Current loaded histories */\n    promises: { [relation: string]: Promise } = {};\n    /** EventSources that are active */\n    eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n    constructor(\n        public notificationService: NotificationsService,\n        public loaderService: LoaderService,\n        public router: Router,\n        public resourceService: ResourceService) { }\n    /** Toggles live updates on the resource and stores them under the given key.\n     * The relation is passed through the Update instances on change. */\n    toggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (this.promises[key] && !this.eventSources[relation]) {\n            return this.promises[key];\n        }\n        this.disableUpdates(key);\n        this.promises[key] = this.enableUpdates(resource, relation, key)\n            .then(source => {\n                this.eventSources[key] = source;\n            })\n            .catch(error => {\n                delete this.promises[key];\n            });\n        this.loaderService.wait(this.promises[key]);\n    }\n\n    /** Closes the event stream for the given key */\n    disableUpdates(key = this.router.url.split('?')[0]) {\n        if (this.eventSources[key]) {\n            this.eventSources[key].close();\n            delete this.promises[key];\n            delete this.eventSources[key];\n            return;\n        }\n    }\n\n    /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n    enableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (!resource || !resource.newHistory) {\n            throw new Error('cannot get history: no newHistory method found on given resource');\n        }\n        if (this.promises[key]) {\n            return this.promises[key];\n        }\n        DataManager.enableHistoryEvents(EventSource);\n        const loading = resource.newHistory()\n            .then(source => {\n                source.addEventListener('entryUpdated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'put',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                source.addEventListener('entryCreated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'post',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                return source;\n            })\n            .catch(error => {\n                this.notificationService.emit({\n                    title: 'History Error',\n                    error\n                });\n            });\n        this.loaderService.wait(loading);\n        return loading;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\nIf not, is is expected to be a ec-icon.\nhttps://components.entrecode.de/ui/icons?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/icon/icon.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:23\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     Symbol\n\n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:19\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nOpen Demo\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\n * If not, is is expected to be a ec-icon.\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Component({\n    selector: 'ec-icon',\n    templateUrl: './icon.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class IconComponent implements OnInit, OnChanges {\n    /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n    @Input() name: string;\n    /** The resolved icon (by name) */\n    icon: Symbol;\n    constructor(private iconService: IconService) {\n    }\n    /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n    resolve() {\n        this.icon = this.iconService.get(this.name);\n        if (!this.icon) {\n            console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n        }\n    }\n    ngOnInit() {\n        this.resolve();\n    }\n    ngOnChanges() {\n        this.resolve();\n    }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n    Modules\n    IconModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IconService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent],\n    providers: [IconService],\n})\nexport class IconModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\nhttps://components.entrecode.de/ui/icons?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.service.ts:11\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\n * https://components.entrecode.de/ui/icons?e=1\n*/\n@Injectable()\nexport class IconService extends SymbolService {\n    /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n    public registry: Symbol[] = ecIcons;\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                    \n                        The assetID that should be loaded \n\n                            \n                            Type :    string | DMAssetResource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        The size that should be requested. \n\n                        \n                            Default value : 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                    \n                        If true, the image will be requested as thumb (square) \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:27\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage'\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve().then(() => {\n      if (asset.type !== 'image') {\n        return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n      }\n      if (asset instanceof DMAssetResource) { // new asset\n        return asset.getFileVariant(this.size, this.thumb);\n      } else if (asset instanceof PublicAssetResource) { // old asset\n        if (this.thumb) {\n          return asset.getImageThumbUrl(this.size, '');\n        }\n        return asset.getImageUrl(this.size, '');\n      }\n    }).then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageSelectPopComponent.html":{"url":"components/ImageSelectPopComponent.html","title":"component - ImageSelectPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageSelectPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a pop with a form to add images. You can set an the alternative Text and the size.\nThe size inputs will keep the image ratio by default.  \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-image-select-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./image-select-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                imageForm\n                            \n                            \n                                imageLoader\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                defaultSize\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, sdk: SdkService, symbol: SymbolService, fileService: FileService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The assetGroupID to pick from \n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultSize\n                    \n                    \n                        The default size used \n\n                        \n                            Default value : 400\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        Ouput that emits when image changes  \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'dialog-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Inits the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageForm:     FormConfig\n\n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:22\n                            \n                        \n\n                \n                    \n                        The instance of the imageForm  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageLoader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('imageLoader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:24\n                            \n                        \n\n                \n                    \n                        The loader that is shown after an image has been selected  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popService:     PopService\n\n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormConfig } from '@ec.components/core';\nimport { FormComponent, LoaderComponent, PopComponent, PopService, SymbolService } from '@ec.components/ui';\nimport { DefaultEntryInputComponent } from '../../entry-form/default-entry-input.component';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService } from '../file.service';\n\n/** This component is a pop with a form to add images. You can set an the alternative Text and the size.\n * The size inputs will keep the image ratio by default.  */\n@Component({\n    selector: 'ec-image-select-pop',\n    templateUrl: './image-select-pop.component.html'\n})\nexport class ImageSelectPopComponent extends PopComponent implements OnInit {\n    /** The assetGroupID to pick from */\n    @Input() assetGroupID;\n    /** The default size used */\n    @Input() defaultSize = 400;\n    /** Ouput that emits when image changes  */\n    @Output() changed: EventEmitter = new EventEmitter();\n    /** The instance of the imageForm  */\n    imageForm: FormConfig;\n    /** The loader that is shown after an image has been selected  */\n    @ViewChild('imageLoader') imageLoader: LoaderComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'dialog-wrapper';\n\n    constructor(public popService: PopService,\n        public sdk: SdkService,\n        public symbol: SymbolService,\n        public fileService: FileService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef) {\n        super(popService, elementRef, cdr);\n    }\n    /** Inits the form */\n    ngOnInit() {\n        const isOldAssetGroupID = this.fileService.isOldAssetGroupID(this.assetGroupID);\n        this.imageForm = {\n            submitButtonLabel: this.symbol.resolve('image-select-pop.submitButtonLabel'),\n            onSave: (form, value: { img, height, width, alt }) => {\n                const size = Math.max(value.width, value.height);\n                if (isOldAssetGroupID) {\n                    this.sdk.api.asset(value.img)\n                        .then(asset =>\n                            asset.getImageUrl(size, '')\n                        ).then(url => {\n                            this.hide();\n                            this.changed.emit({ url, alt: value.alt, size });\n                        });\n                } else {\n                    const loadImage = this.sdk.api.dmAsset(this.assetGroupID, value.img)\n                        .then(asset =>\n                            asset.getImageUrl(size)\n                        ).then(url => {\n                            this.hide();\n                            this.changed.emit({ url, alt: value.alt, size });\n                        });\n                    this.imageLoader.wait(loadImage);\n                }\n            },\n            fields: {\n                img: {\n                    label: ' ',\n                    input: DefaultEntryInputComponent,\n                    inputView: isOldAssetGroupID ? 'asset-select' : 'dmAsset-select',\n                    relation: !isOldAssetGroupID ? this.assetGroupID : 'legacyAsset',\n                    required: true,\n                    changed: (value, form) => {\n                        const loadImg = Promise.resolve().then(() => {\n                            if (isOldAssetGroupID) {\n                                return this.sdk.api.asset(value).then(asset => {\n                                    const original = asset.getOriginalFile();\n                                    const resolution = original.resolution;\n                                    return { resolution, title: asset.title };\n                                });\n                            } else {\n                                return this.sdk.api.dmAsset(this.assetGroupID, value).then(asset => {\n                                    const resolution = asset.file.resolution;\n                                    return { resolution, title: asset.title };\n                                });\n                            }\n                        }).then(({ resolution, title }) => {\n                            const ratio = resolution.width / resolution.height;\n                            const width = Math.min(this.defaultSize, resolution.width);\n                            form.group.controls.width.setValue(width);\n                            form.group.controls.alt.setValue(title);\n                            form.group.controls.ratio.setValue(ratio);\n                        });\n                        this.imageLoader.wait(loadImg);\n                    }\n                },\n                alt: {\n                    label: this.symbol.resolve('image-select-pop.alt'),\n                    view: 'string'\n                },\n                ratio: {\n                    hideInForm: true,\n                    view: 'number'\n                },\n                keepRatio: {\n                    label: this.symbol.resolve('image-select-pop.keepRatio'),\n                    view: 'boolean',\n                    prefill: true,\n                    changed: (value) => {\n                        if (value === true) {\n                            console.log('should fix ratio now...');\n                        }\n                    }\n                },\n                width: {\n                    label: this.symbol.resolve('image-select-pop.width'),\n                    view: 'number',\n                    columns: 6,\n                    changed: (value, form: FormComponent) => {\n                        const ratio = form.getValue('ratio');\n                        if (ratio && form.getValue('keepRatio')) {\n                            form.group.controls.height.setValue(Math.round(value / ratio));\n                        }\n                    }\n                },\n                height: {\n                    label: this.symbol.resolve('image-select-pop.height'),\n                    view: 'number',\n                    columns: 6,\n                    changed: (value, form) => {\n                        const ratio = form.getValue('ratio');\n                        if (ratio && form.getValue('keepRatio')) {\n                            form.group.controls.width.setValue(Math.round(value * ratio));\n                        }\n                    }\n                }\n            }\n        };\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{'image-select-pop.header' | symbol}}\n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'image-select-pop.header\\' | symbol}}                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageSelectPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectControl\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                config\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                    \n                        Overrides the default component \n\n                            \n                            Type :    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Config that should be used, only needed when not using field input \n\n                            \n                            Type :    FieldConfigProperty\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                            \n                            Type :    AbstractControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time in ms before the changed event emits. \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                            \n                            Type :    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        The belonging form group \n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type :    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        The property name that is edited. Expects a form as item input \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentInstance:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:42\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:44\n                            \n                        \n\n                \n                    \n                        The current value of the input. Needs to be saved for the case the component is not yet loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnChanges, Output, Type, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, AbstractControl } from '@angular/forms';\nimport { FieldConfigProperty, Field, Form, Item } from '@ec.components/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { debounceTime } from 'rxjs/operators';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: AbstractControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Config that should be used, only needed when not using field input */\n  @Input() config: FieldConfigProperty;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: InputComponent;\n  /** The current value of the input. Needs to be saved for the case the component is not yet loaded */\n  value: any;\n\n  ngOnChanges() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    } else if (!this.field && this.config) {\n      this.field = new Field(this.property || 'input', this.config);\n    }\n    if (!this.field) {\n      return;\n    }\n    if (!this.control) {\n      this.control = this.group ? this.group.get(this.field.property) : new FormControl();\n    }\n    if (!this.group) {\n      this.group = new FormGroup({\n        [this.property || this.field.property || 'input']: this.control\n      });\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this,\n      config: this.config || this.field.config || {}\n    };\n\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    this.connectControl();\n    if (componentRef.instance.control) {\n      componentRef.instance.control.valueChanges\n        .pipe(\n          debounceTime(this.debounce)\n        ).subscribe((change) => {\n          this.changed.emit(change);\n          this.propagateChange(change);\n        });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  connectControl() {\n    if (!this.componentInstance) {\n      // console.warn('could not connect control: no instance loaded');\n      return;\n    }\n    if (this.componentInstance.registerOnChange && this.propagateChange) {\n      this.componentInstance.registerOnChange(this.propagateChange);\n    }\n    if (this.value !== undefined) {\n      this.writeValue(this.value);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance.writeValue) {\n      this.componentInstance.writeValue(value);\n    }\n    this.value = value;\n  }\n\n  propagateChange = (_: any) => {\n  }\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n    this.connectControl();\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The form control that should be tracked \n\n                            \n                            Type :    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {\n  }\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  public getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message\n      });\n      return errs;\n    }, []);\n  }\n\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n    Modules\n    IoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/io/io.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n  ],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: []\n})\nexport class IoModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onEdit\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEdit\n                                    \n                                \n                                \n                                    \n                                        onEdit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked before the item is edited \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n  /** Callback that is invoked before the item is edited */\n  onEdit?: (value?: T) => Promise | T; // TODO rename to save\n  /** This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class */\n  classes?: (item?: Item) => string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nhttps://components.entrecode.de/ui/list/basic?e=1\nhttps://components.entrecode.de/ui/list/transforms?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n\n\n            \n                template\n                listTemplate\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                config\n                            \n                            \n                                focusItem\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                filter\n                            \n                            \n                                focusFirst\n                            \n                            \n                                focusNext\n                            \n                            \n                                focusPrev\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoFocusFirst\n                            \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                pagination\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoFocusFirst\n                    \n                    \n                        If true, the first item in the list will always be focused after changed \n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        collection\n                    \n                    \n                        The used collection \n\n                            \n                            Type :    Collection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        The visible items \n\n                            \n                            Type :    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type :    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        Pagination that should be used \n\n                            \n                            Type :    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                    \n                        Custom PaginationConfig \n\n                            \n                            Type :    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type :    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        emits after the list changed \n\n                        $event Type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event Type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Event emitter on selection change \n\n                        $event Type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Filters the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:27\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        focusItem:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:54\n                            \n                        \n\n                \n                    \n                        Current focus \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:30\n                            \n                        \n\n                \n                    \n                        Config input for List \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listConfig:     ListConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import {\n  Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation,\n  ChangeDetectionStrategy, ChangeDetectorRef\n} from '@angular/core';\nimport { Collection, List, ListConfig, Selection, Pagination } from '@ec.components/core';\nimport { Item } from '@ec.components/core';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\nimport { ListConfigService } from './list-config.service';\n\nimport { listTemplate } from './list.component.html';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * https://components.entrecode.de/ui/list/basic?e=1\n * https://components.entrecode.de/ui/list/transforms?e=1\n * */\n@Component({\n  selector: 'ec-list',\n  /* templateUrl: './list.component.html', */\n  template: listTemplate,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  /** Flag that flips true when loading. */\n  isLoading = false;\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Pagination that should be used */\n  @Input() pagination: Pagination;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n  /** If true, the first item in the list will always be focused after changed */\n  @Input() autoFocusFirst = false;\n  /** Current focus */\n  focusItem: Item;\n  /** emits after the list changed */\n  @Output() changed: EventEmitter> = new EventEmitter();\n\n  constructor(\n    public listConfig: ListConfigService,\n    public cdr: ChangeDetectorRef\n  ) {\n  }\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.init(new List(this.items, this.config, this.pagination));\n    } else if (this.collection) {\n      this.init(new List(this.collection.items, this.config, this.pagination));\n    }\n  }\n\n  init(list: List) {\n    if (!list) {\n      console.warn('tried to init list.component with undefined list');\n      return;\n    }\n    this.list = list;\n    this.listConfig.applyConfig(this.list);\n    this.list.change$.subscribe(() => {\n      if (this.autoFocusFirst || this.list.isFiltered()) {\n        this.focusFirst();\n      } else {\n        delete this.focusItem;\n      }\n      this.cdr.markForCheck();\n      this.changed.emit(this.list);\n    });\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      });\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return this.list && this.list.config && !this.list.config.disableHeader && (this.list.fields.length || this.list.config.title);\n    /* && (this.list.config.alwaysShowHeader || !this.list.isEmpty()); */\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  focusFirst() {\n    delete this.focusItem;\n    this.focusNext();\n  }\n\n  /** Selects the next item */\n  focusNext() {\n    if (!this.list) {\n      return;\n    }\n    let index = 0;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Selects the previous item */\n  focusPrev() {\n    if (!this.list) {\n      return;\n    }\n    let index = this.list.page.length - 1;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + this.list.page.length - 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Filters the list */\n  filter(property, value) {\n    this.list.filter(property, value);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'listTemplate'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        autoload\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        disableDrag\n                                \n                                \n                                            Optional\n                                        disableDropdown\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        storageKey\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoload\n                                    \n                                \n                                \n                                    \n                                        autoload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will automatically load on change \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no column filter will be shown in the list header \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDrag\n                                    \n                                \n                                \n                                    \n                                        disableDrag:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, select items cannot be dragged \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDropdown\n                                    \n                                \n                                \n                                    \n                                        disableDropdown:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be shown for a select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select dropdown will be shown on ec-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Transforms the Items before they are displayed, e.g. to apply a filter for the view *\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    how many columns should the pop have? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageKey\n                                    \n                                \n                                \n                                    \n                                        storageKey:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that should store the lists config in the local storage.\nIf set, the key will be populated on config changes. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\nimport { List } from '../list/list';\nimport { Item } from '../item/item';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean;\n  /** If true, no select dropdown will be shown on ec-select */\n  disableSearchbar?: boolean;\n  /** If true, the list will have no header. */\n  disableHeader?: boolean;\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean;\n  /** If true, no dropdown will be shown for a select */\n  disableDropdown?: boolean;\n  /** If true, no column filter will be shown in the list header */\n  disableColumnFilter?: boolean;\n  /** If true, select items cannot be dragged */\n  disableDrag?: boolean;\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number;\n  /** The number of items per page */\n  size?: number;\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[];\n  /** Should the selection be solo? */\n  solo?: boolean;\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any };\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any };\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number;\n  /** how many columns should the pop have? */\n  popColumns?: number;\n  /** If true, the list will automatically load on change */\n  autoload?: boolean;\n  /** The key that should store the lists config in the local storage.\n   * If set, the key will be populated on config changes. */\n  storageKey?: string | ((list: List) => string);\n  /** Transforms the Items before they are displayed, e.g. to apply a filter for the view **/\n  display?: (items: Item[]) => Item[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListConfigService.html":{"url":"injectables/ListConfigService.html","title":"injectable - ListConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/list-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                storageKeyResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyConfig\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                retrieve\n                            \n                            \n                                set\n                            \n                            \n                                store\n                            \n                            \n                                storeConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStorageKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStorageKey(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieve(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(key, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \nstore(key, config)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageKeyResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storageKeyResolver:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { List } from '@ec.components/core';\n\n@Injectable()\nexport class ListConfigService {\n\n    public storageKeyResolver: (list: List) => string;\n\n    retrieve(key) {\n        const config = localStorage.getItem(key);\n        return config ? JSON.parse(config) : null;\n    }\n\n    set(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    store(key, config) {\n        const existing = this.retrieve(key) || {};\n        localStorage.setItem(key, JSON.stringify(Object.assign(existing, config)));\n    }\n\n    getStorageKey(list: List) {\n        if (!list || !list.fields || !list.config || !list.config.storageKey) {\n            // console.log('cannot apply config: no storage key or list set');\n            return;\n        }\n        const resolveFn = list.config.storageKey || this.storageKeyResolver;\n        if (typeof resolveFn === 'function') {\n            return resolveFn(list);\n        }\n        return list.config.storageKey;\n    }\n\n    storeConfig(list: List) {\n        const key = this.getStorageKey(list);\n        if (!key) {\n            return;\n        }\n        const config = { hide: list.fields.filter(f => f.hideInList).map(f => f.property) };\n        this.store(key, config);\n    }\n\n    applyConfig(list: List) {\n        const key = this.getStorageKey(list);\n        if (!key) {\n            return;\n        }\n        const existing = this.retrieve(key);\n        if (existing && existing.hide) {\n            list.fields.forEach(field => field.hideInList = false);\n            existing.hide.forEach(property => {\n                const field = list.fields.find(f => f.property === property);\n                if (!field) {\n                    console.warn('field ', property, ' not found');\n                    return;\n                }\n                field.hideInList = true;\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                            \n                                pops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilter\n                            \n                            \n                                    Public\n                                editFilter\n                            \n                            \n                                    Public\n                                fieldLabel\n                            \n                            \n                                    Public\n                                removeFilter\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type :    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type :    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilter(property, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Applies the given filter to the list. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editFilter(pop)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pop\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fieldLabel(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Returns the fields label \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFilter(property, control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Resets the fields filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Toggles the fields visibility in the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     FormComponent\n\n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('filterForm')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:23\n                            \n                        \n\n                \n                    \n                        The form that holds the current filter information \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listConfig:     ListConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pops\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pops:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('filterPop')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, QueryList, ViewChild, ViewChildren, ChangeDetectionStrategy } from '@angular/core';\nimport { PopComponent } from '../../pop/pop.component';\nimport { FormComponent } from '../../form/form.component';\nimport { List } from '@ec.components/core';\nimport { Selection } from '@ec.components/core';\nimport { Field } from '@ec.components/core';\nimport { ListConfigService } from '../list-config.service';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListHeaderComponent {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChildren('filterPop') pops: QueryList;\n  /** The form that holds the current filter information */\n  @ViewChild('filterForm') filter: FormComponent;\n\n  constructor(public listConfig: ListConfigService) {\n  }\n\n  /** opens the given filter pop and closes all others */\n  public editFilter(pop) {\n    pop.toggle();\n  }\n\n  /** Applies the given filter to the list. */\n  public applyFilter(property, value) {\n    this.list.filter(property, value);\n  }\n\n  /** Resets the fields filter */\n  public removeFilter(property, control) {\n    control.reset();\n  }\n\n  /** Returns the fields label */\n  public fieldLabel(field: Field) {\n    if (field.label === false) {\n      return '';\n    }\n    return field.label || field.property;\n  }\n\n  /** Toggles the fields visibility in the list */\n  public toggleVisibility(field: Field) {\n    this.list.toggleVisibility(field);\n    this.listConfig.storeConfig(this.list);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n\n    \n      \n    \n\n    \n      {{fieldLabel(field)}}\n    \n    \n\n    \n       \n      \n      &times;\n    \n  \n\n  \n    &#9776;\n    \n      \n        \n          \n            {{fieldLabel(field)}}\n          \n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{fieldLabel(field)}}                               ×            ☰                                        {{fieldLabel(field)}}                              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                hasFocus\n                            \n                            \n                                isClickable\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusItem\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        focusItem\n                    \n                    \n                        The current focused item \n\n                            \n                            Type :    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                            \n                            Type :    Item[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type :    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type :    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item clicked \n\n                        $event Type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasFocus(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            yields true if the item is focussed \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClickable\n                            \n                            \n                        \n                    \n                \n                \n                    \nisClickable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** The current focused item */\n  @Input() focusItem: Item;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n\n  constructor(public cdr: ChangeDetectorRef) { }\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n    if (this.list) {\n      this.list.change$.subscribe(newList => {\n        this.cdr.markForCheck();\n      });\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe(newList => {\n        this.cdr.markForCheck();\n      });\n    }\n  }\n  /** yields true if the item is focussed */\n  hasFocus(item) {\n    return this.focusItem === item;\n  }\n\n  isClickable() {\n    return this.columnClicked.observers.length || (this.selection && this.list && this.list.config.selectMode);\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n    Modules\n    ListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ListConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { ListConfigService } from './list-config.service';\nimport { FormsModule } from '@angular/forms';\n\nexport const listModuleConfig = {\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormModule,\n    IconModule,\n    SymbolModule,\n    UtilityModule\n  ],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: [\n    ListConfigService\n  ]\n};\n\n@NgModule(listModuleConfig)\nexport class ListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection>\n\n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Collection } from '@ec.components/core';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader?e=1\n*/\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {\n  }\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items)\n      .then(() => {\n        if (timestamp === this.timestamp) {\n          this.hide();\n          this.stack.removeAll();\n        }\n      });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    LoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LoaderComponent,\n  ],\n  providers: [LoaderService]\n})\nexport class LoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                ./location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        The desired map center \n\n                            \n                            Type :    literal type\n\n                            \n                        \n                            Default value : { latitude: 48.8093253, longitude: 9.159388100000001 }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                        If true, no markers can be changed or set \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Form input component \n\n                            \n                            Type :    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        Emits when the marker has been changed \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n    selector: 'ec-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\n\nexport class LocationMapComponent {\n    /** The desired map center */\n    @Input() center: { longitude: any; latitude: any; } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n    /** If true, no markers can be changed or set */\n    @Input() readOnly: boolean;\n    /** Emits when the marker has been changed */\n    @Output() changed: EventEmitter = new EventEmitter();\n    /** Form input component */\n    @Input() value: {\n        longitude: number,\n        latitude: number\n    };\n\n    /** sets the value cand changes the center */\n    setValue(value) {\n        this.value = value;\n        if (value) {\n            this.center = value;\n        }\n    }\n    /** changes value on marker dragend */\n    markerDragEnd(coords) {\n        if (!coords) {\n            console.warn('no coords');\n            return;\n        }\n        const position = { longitude: coords.lng, latitude: coords.lat };\n        this.setValue(position);\n        this.changed.emit(position);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./location-map.component.scss\n                \n                :host {\n    height: 300px;\n}\nagm-map {\n    height: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/lib/location.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module holds all location/map related components and services \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LOCATION_COMPONENTS\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GeocodeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location.module.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n];\n\nexport const locationModuleConfig = {\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UiModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n            libraries: ['places']\n        })],\n    exports: LOCATION_COMPONENTS,\n    declarations: LOCATION_COMPONENTS,\n    entryComponents: LOCATION_COMPONENTS,\n    providers: [GeocodeService],\n};\n/** This module holds all location/map related components and services */\n@NgModule(locationModuleConfig)\nexport class LocationModule {\n    static forRoot({ apiKey }): ModuleWithProviders {\n        return {\n            ngModule: LocationModule,\n            providers: [\n                {\n                    provide: 'googlemaps.apiKey',\n                    useValue: apiKey\n                }\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LocationPickerComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                ./location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-picker.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the location \n\n                            \n                            Type :    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for search input \n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                    \n                        If true, the raw location value will be visible\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value, fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocodeService:     GeocodeService\n\n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:34\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     LocationMapComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationMapComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:30\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     LocationSearchComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationSearchComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:11\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n    selector: 'ec-location-picker',\n    templateUrl: './location-picker.component.html',\n    styleUrls: ['./location-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LocationPickerComponent),\n            multi: true\n        }\n    ]\n})\n\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n    /** The form control that holds the location */\n    @Input() formControl: FormControl;\n    /** If true, the raw location value will be visible*/\n    @Input() showRawValue = true;\n    /** Placeholder for search input */\n    @Input() placeholder;\n    /** The nested LocationMapComponent */\n    @ViewChild(LocationMapComponent) map: LocationMapComponent;\n    /** The nested LocationSearchComponent */\n    @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n    /** Form input component */\n    input: InputComponent;\n\n    constructor(\n        public geocodeService: GeocodeService,\n    ) {\n        super();\n    }\n\n    /** Sets value of map and propagates change */\n    setValue(value, fromSearch?: boolean) {\n        if (!value) {\n            this.search.clear();\n        }\n        this.map.setValue(value);\n        if (!fromSearch) {\n            this.updateAddress();\n        }\n        this.propagateChange(value);\n    }\n\n    /** Writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.map.setValue(value);\n        this.updateAddress();\n    }\n\n    /** updates the address string by reverse geo lookup  */\n    updateAddress() {\n        const value = this.map.value;\n        if (!value) {\n            this.search.searchInput.nativeElement.value = '';\n            return;\n        }\n        this.geocodeService.getNearestAddress(value)\n            .then(results => {\n                if (results.length) {\n                    this.search.searchInput.nativeElement.value = results[0].formatted_address;\n                } else {\n                    this.search.searchInput.nativeElement.value = '';\n                }\n            });\n    }\n\n    propagateChange = (_: any) => { };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() { }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n                \n                    ./location-picker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-search.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for input \n\n                        \n                            Default value : 'Search Location...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('search')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:18\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit, Component, ElementRef,\n    EventEmitter, Input, NgZone, Output, ViewChild\n} from '@angular/core';\nimport { } from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n    selector: 'ec-location-search',\n    templateUrl: './location-search.component.html'\n})\n\nexport class LocationSearchComponent implements AfterViewInit {\n    /** Placeholder for input */\n    @Input() placeholder = 'Search Location...';\n    /** The search input element */\n    @ViewChild('search') searchInput: ElementRef;\n    /** emits when the coords have been changed (after selecting a match) */\n    @Output() changed: EventEmitter = new EventEmitter();\n\n    constructor(\n        private geocodeService: GeocodeService,\n        private ngZone: NgZone\n    ) {\n    }\n    /** Clears the searchbar input value */\n    clear() {\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = '';\n        }\n    }\n    /** subscribes to changes from the inputs autocomplete using geocodeService. */\n    ngAfterViewInit() {\n        this.geocodeService.autocompleteAddress(this.searchInput.nativeElement)\n            .subscribe(\n                coords => {\n                    this.changed.emit(coords);\n                }\n            );\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type :    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  SymbolService,\n  WithNotifications,\n  Notification,\n  LoaderComponent,\n  NotificationsService,\n  WithLoader\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { AuthService } from '../auth.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth?e=1\n*/\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when an error occurs. For custom error reactions */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService) {\n  }\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth.login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        this.error.next(error);\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value : this.symbol.resolve('login.button.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value : this.symbol.resolve('login.email.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value : this.symbol.resolve('login.email.placeholder')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type :    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value : this.symbol.resolve('login.password.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value : this.symbol.resolve('login.password.placeholder')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { SymbolService } from '../../symbol/symbol.service';\nimport { FieldValidators } from '../validators/field-validators';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n*/\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  protected submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = this.symbol.resolve('login.email.label');\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = this.symbol.resolve('login.email.placeholder');\n  /** The Label of the password field. */\n  @Input() passwordLabel = this.symbol.resolve('login.password.label');\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = this.symbol.resolve('login.password.placeholder');\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('login.button.label');\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(protected fb: FormBuilder, public symbol: SymbolService) {\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    Observable.throw(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value)\n      .then((res) => {\n        this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/max-items.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n    name: 'maxItems'\n})\n\nexport class MaxItemsPipe implements PipeTransform {\n    transform(array: Array = [], maxItems: number, start: number = 0): any {\n        return array.slice(start, maxItems);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/lib/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                ./medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        data model \n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        MediumEditor options \n\n                            \n                            Type :    any\n\n                            \n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        empty placeholder \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                    \n                        change emitter \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     MediumEditor\n\n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor?e=1\n*/\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any = {};\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {\n  }\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./medium-editor.component.scss\n                \n                @import '~medium-editor/src/sass/medium-editor.scss';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumEditorModule.html":{"url":"modules/MediumEditorModule.html","title":"module - MediumEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MediumEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n MediumEditorComponent), multi: true\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}->MediumEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/lib/medium-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\nexport const mediumModuleConfig = {\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n};\n\n@NgModule(mediumModuleConfig)\nexport class MediumEditorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        Color map of submenus. \n\n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                    \n                        Delay before menu is shown on mouseover. \n\n                        \n                            Default value : 50\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                    \n                        Parent Menu (when nested) \n\n                            \n                            Type :    MenuComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        The currently active route \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        The title of the menu \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                    \n                        Delay before menu is hidden after mouseout. \n\n                        \n                            Default value : 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item, path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item, parent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hover:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {\n  }\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n        .filter(route => route.path && route.path.indexOf(':') === -1)\n        .filter(route => !route.data || !route.data.hidden);\n      console.log('routes', this.routes);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) { // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) { // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay);\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n\n  isActive(path) {\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{item.data?.title || item.path}}\n      \n      \n        \n          {{child.data?.title || child.path}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                li.is-active>a {\n    text-decoration: underline;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item.data?.title || item.path}}                              {{child.data?.title || child.path}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/modal/modal.component.ts\n\n\n    \n        Description\n    \n    \n        A modal is an extension of a pop. It adds different style options that apply x.ui markup.\nhttps://components.entrecode.de/ui/modal?e=1\nhttps://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                classes\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                templates\n                            \n                            \n                                types\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initMode\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animation\n                            \n                            \n                                backdrop\n                            \n                            \n                                body\n                            \n                            \n                                columns\n                            \n                            \n                                footer\n                            \n                            \n                                header\n                            \n                            \n                                mode\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                            Constructs the modal, injects pop service \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animation\n                    \n                    \n                        Sets data-animate. \n\n                        \n                            Default value : 'fadeIn 4'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        backdrop\n                    \n                    \n                        If true, the modal will have a dark backdrop that disables clicking outside. \n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                    \n                        Body Template \n\n                            \n                            Type :    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                    \n                        Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). \n\n                            \n                            Type :    number | string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        footer\n                    \n                    \n                        Footer Template \n\n                            \n                            Type :    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                    \n                        Header Template \n\n                            \n                            Type :    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        This property sets the mode + additional options.\nIt expects the type at first and non mandatory options like opens-left afterwards. \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMode\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Is called on init and change. Parses mode input and throws warning if type is not supported. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            classes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        classes:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                        Will contain the classes (mode - type) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popService:     PopService\n\n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     TemplateRef[]\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:39\n                            \n                        \n\n                \n                    \n                        Templates for header body and footer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'dialog',\n        'overlay',\n        'deck',\n        'toast',\n        'snackbar'\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:18\n                            \n                        \n\n                \n                    \n                        all possible modes that can be set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ElementRef, OnChanges, TemplateRef, ContentChildren, ChangeDetectorRef } from '@angular/core';\nimport { PopComponent } from '../pop/pop.component';\nimport { PopService } from '../pop/pop.service';\n\n/**\n * A modal is an extension of a pop. It adds different style options that apply x.ui markup.\n * https://components.entrecode.de/ui/modal?e=1\n *\n * https://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n */\n@Component({\n    selector: 'ec-modal',\n    templateUrl: './modal.component.html'\n})\n\nexport class ModalComponent extends PopComponent implements OnInit, OnChanges {\n    /** all possible modes that can be set */\n    types = [\n        'dialog',\n        'overlay',\n        'deck',\n        'toast',\n        'snackbar'\n    ];\n    /** This property sets the mode + additional options.\n     * It expects the type at first and non mandatory options like opens-left afterwards. */\n    @Input() mode: string;\n    /** If true, the modal will have a dark backdrop that disables clicking outside. */\n    @Input() backdrop = false;\n    /** Sets data-animate. */\n    @Input() animation = 'fadeIn 4';\n    /** Header Template */\n    @Input() header: TemplateRef;\n    /** Body Template */\n    @Input() body: TemplateRef;\n    /** Footer Template */\n    @Input() footer: TemplateRef;\n    /** Templates for header body and footer */\n    @ContentChildren(TemplateRef) templates: TemplateRef[];\n    /** Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). */\n    @Input() columns: number | string;\n    /** Will contain the classes (mode - type) */\n    public classes: string;\n    /** Constructs the modal, injects pop service */\n    constructor(\n        public popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef) {\n        super(popService, elementRef, cdr);\n    }\n    /** Is called on init and change. Parses mode input and throws warning if type is not supported. */\n    initMode() {\n        this.mode = this.mode || 'dialog';\n        this.type = this.mode.split(' ')[0];\n        if (!this.types.includes(this.type)) {\n            const fallback = this.mode.replace(this.type, 'dialog');\n            console.warn(`ec-modal does not support the mode \"${this.type}\".\n            Use one of ${this.types.join(', ')}.\n            Falling back to ${fallback}.`);\n            this.type = fallback;\n        }\n        this.classes = this.mode.split(' ').splice(1).join(' ');\n        this.types.forEach(type => {\n            this.elementRef.nativeElement.classList.remove(`${type}-wrapper`);\n        });\n        if (this.backdrop) {\n            this.elementRef.nativeElement.classList.add(`${this.type}-wrapper`);\n        }\n    }\n\n    /** calls initMode */\n    ngOnInit() {\n        this.initMode();\n    }\n    /** calls initMode */\n    ngOnChanges() {\n        this.initMode();\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateConfig\n                            \n                            \n                                get\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getLightModel\n                            \n                            \n                                getMinLevel\n                            \n                            \n                                getSystemFields\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(crud: CrudService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/model-config.service.ts:23\n                            \n                        \n\n                \n                    \n                            Injects CrudService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateConfig(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:191\n                            \n                        \n\n\n                \n                    \n                            Generates a CrudConfig for the given model.\nMerges three configurations into one:\n\ndefault field config, obtained by getFieldConfig\nglobal model config (if any) configured via with set\ncustomFieldConfig: any custom field config that is merged on top of the other two.\nThis enables the developer to either customize at a global scale to target all lists/forms,\nor just specific components. \n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFieldConfig(model: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns the default field config for the given model.\nUtilizes PublicAPI#getFieldConfig + TypeConfigService#get.\nThis config is meant to deliver the default behaviour when nothing else is configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLightModel(model)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:220\n                            \n                        \n\n\n                \n                    \n                            Returns light model information \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMinLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMinLevel(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Parses config for fields that require leveled entries \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSystemFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSystemFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the field config for all system fields \n\n\n                            \n                                Returns :     { id: { label: any; view: string; form: boolean; immutable: boolean; hideInList: boolean; }; _cre...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.set(&#39;muffin&#39;, {\n   *  fields: {\n   *    title: {\n   *      label: &#39;Muffin Titel&#39;\n   *    }\n   *  });\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        omittedFields:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:17\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config, FieldConfig, Item } from '@ec.components/core';\nimport { SymbolService } from '@ec.components/ui';\nimport { fields } from 'ec.sdk/lib/PublicAPI';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { CrudService } from '../crud/crud.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ];\n\n  /** Injects CrudService and SdkService. */\n  constructor(private crud: CrudService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Returns the field config for all system fields */\n  getSystemFields() {\n    return {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        view: 'string',\n        form: false,\n        immutable: true,\n        hideInList: true\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hideInList: true,\n        rawFilter: true\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hideInList: false,\n        rawFilter: true\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        view: 'account',\n        form: false,\n        immutable: true,\n        hideInList: true\n      }\n    };\n  }\n\n  /** Parses config for fields that require leveled entries */\n  getMinLevel(model: string, customFieldConfig?: FieldConfig) {\n    return this.generateConfig(model, customFieldConfig)\n      .then((modelConfig) => {\n        const fieldConfig = modelConfig.fields;\n        return Object.keys(fieldConfig)\n          .filter(field => !!fieldConfig[field].type)\n          .map(field => {\n            const inputView = fieldConfig[field].inputView;\n            const views = this.typeConfig.get(fieldConfig[field].type).inputViews || [];\n            if (!inputView || !views) {\n              return 1;\n            }\n            const match = views.find(v => v.name === inputView);\n            return match ? match.levels || 1 : 1;\n          }).reduce((max, lvl) => Math.max(max, lvl), 1);\n      });\n  }\n\n  /** Returns the default field config for the given model.\n   * Utilizes PublicAPI#getFieldConfig + TypeConfigService#get.\n   * This config is meant to deliver the default behaviour when nothing else is configured. */\n  getFieldConfig(model: string): Promise {\n    return this.sdk.api.getFieldConfig(model).then((fieldConfig: fields) => {\n      const merged = {};\n      Object.assign(merged, this.getSystemFields());\n      Object.keys(fieldConfig).map(property => fieldConfig[property])\n        .forEach(({\n          config,\n          type,\n          title,\n          unique,\n          mutable,\n          readOnly,\n          required,\n          validation,\n          description,\n          localizable\n        }) => {\n          /* type = type as string; */\n          config = config || {};\n          if (type.includes('asset')) {\n            type = type.replace('a', 'dmA');\n          }\n          // parse field config\n          const { hideInList,\n            hideInForm,\n            hideOnCreate,\n            hideOnEdit,\n            placeholder,\n            inputView,\n            label,\n            classes,\n            columns = 12\n          } = config;\n          const typeConfig = this.typeConfig.get(type);\n          // assign default values + merge customFieldConfig if given\n          merged[title] = Object.assign({\n            property: title,\n            label: label || title + (type === 'datetime' ? ` ${this.symbol.resolve('datetime.local')}` : ''),\n            placeholder,\n            description,\n            validation,\n            relation: validation,\n            immutable: !mutable,\n            readOnly,\n            hideInList,\n            hideInForm,\n            create: !hideOnCreate,\n            edit: !hideOnEdit,\n            classes,\n            unique,\n            required,\n            columns,\n            /* display: ((value) => value), */\n            localizable,\n          }, typeConfig, {\n              placeholder: placeholder || typeConfig.placeholder,\n              inputView: inputView || typeConfig.inputView || type\n            });\n        });\n      return merged;\n    });\n  }\n\n  /** Generates a CrudConfig for the given model.\n   * Merges three configurations into one:\n   * - default field config, obtained by getFieldConfig\n   * - global model config (if any) configured via with set\n   * - customFieldConfig: any custom field config that is merged on top of the other two.\n   * This enables the developer to either customize at a global scale to target all lists/forms,\n   * or just specific components. */\n  generateConfig(model: string, customFieldConfig?: FieldConfig): Promise> {\n    // first step: merge global model config with default entry config\n    const modelConfig = Object.assign(this.get(model) || {}, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      onSave: (item: Item, value) => this.crud.save(model, item.getBody(), value)\n    });\n    return this.getFieldConfig(model)\n      .then((fieldConfig: FieldConfig) => {\n        const modelConfigFields = modelConfig.fields || {};\n        const relevantKeys = Object.keys(customFieldConfig || modelConfigFields);\n        const mergedFields = {};\n        if (!relevantKeys.length) {\n          modelConfig.fields = fieldConfig;\n        } else {\n          relevantKeys.forEach(key => {\n            mergedFields[key] = Object.assign(\n              {},\n              fieldConfig[key] || {},\n              modelConfigFields[key] || {},\n              (customFieldConfig || {})[key]);\n          });\n          modelConfig.fields = mergedFields;\n        }\n        return modelConfig;\n      });\n  }\n  /** Returns light model information */\n  getLightModel(model) {\n    return this.sdk.ready.then(() => this.sdk.api.modelList()).then((models) => models[model]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        append:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hide:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     NotificationsComponent\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replace:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sticky:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications?e=1\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                        \n                            PopModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    PopModule,\n    IconModule,\n  ],\n  exports: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false\n    }, NotificationsService]\n})\nexport class NotificationsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {\n  }\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    if (notification && notification.error) {\n      console.error(notification.error);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template \n\n                            \n                            Type :    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type :    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field, Item } from '@ec.components/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:13\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:9\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:11\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        total:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:7\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:93\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:33\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:38\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:107\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:112\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:117\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:98\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:76\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:43\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:130\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:52\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number, silent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:84\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        silent\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:63\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:125\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:142\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Subject, Observable } from 'rxjs';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number, silent = false): void {\n    if (page === this.config.page || silent) {\n      this.config.page = page;\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    };\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        The config that is used \n\n                            \n                            Type :    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        A Pagination Instance \n\n                            \n                            Type :    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:17\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('page')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pageContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnChanges, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return Math.abs(current - page) \n    \n\n    \n        \n  1&&!pagination?.isFirst()\">\n    \n      \n        {{'pagination.first' | symbol}}\n      \n    \n    \n      \n        {{'pagination.prev' | symbol}}\n      \n    \n  \n  1\">\n    \n      \n        \n          {{i+1}}\n        \n      \n    \n  \n  1&&!pagination?.isLast()\">\n    \n      \n        {{'pagination.next' | symbol}}\n      \n    \n    \n      \n        {{'pagination.last' | symbol}}\n      \n    \n  \n  \n    {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ 'pagination.of' | symbol}} {{pagination?.params()?.total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  1&&!pagination?.isFirst()\">                  {{\\'pagination.first\\' | symbol}}                            {{\\'pagination.prev\\' | symbol}}              1\">                            {{i+1}}                      1&&!pagination?.isLast()\">                  {{\\'pagination.next\\' | symbol}}                            {{\\'pagination.last\\' | symbol}}                  {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ \\'pagination.of\\' | symbol}} {{pagination?.params()?.total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideFirstLast:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePages:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '../../symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n    /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n    range = 2;\n    /** Hides first and last Link */\n    hideFirstLast: boolean;\n    /** Hides pages */\n    hidePages: boolean;\n    /** The constructor assigns the config */\n    constructor(config: PaginationConfig) {\n        Object.assign(this, config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request.\nhttps://components.entrecode.de/auth/password-reset?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                            \n                            Type :    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Custom placeholder for email field \n\n                        \n                            Default value : 'E-Mail Adresse...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event after request was successful \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:19\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:27\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:17\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request.\n * https://components.entrecode.de/auth/password-reset?e=1\n *\n*/\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html'\n})\n\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {\n  }\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth.resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true\n        });\n        this.lockForm = true;\n        this.success.emit();\n      }).catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    {{'passwordReset.button' | symbol}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'passwordReset.button\\' | symbol}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:37\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  HostBinding,\n  OnInit,\n  HostListener,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop?e=1\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() @HostBinding('class.is-active') active: boolean;\n  /** Flip and stays true after first show */\n  activated = false;\n  /** The used type on the host element */\n  @Input() type: string;\n  /** If set to true, the pop will hide when a click happens outside the pop. */\n  @Input() hideOnClickOutside = false;\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n\n  clickEvent;\n\n  /** Listens for document:click and hides */\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (\n      this.hideOnClickOutside &&\n      this.active &&\n      this.clickEvent &&\n      $event !== this.clickEvent && // to ensure the show event wont hide immediately\n      this.elementRef &&\n      this.isOutside($event.target)) {\n      this.hide();\n    }\n  }\n\n  constructor(protected popService: PopService,\n    public elementRef: ElementRef,\n    protected cdr: ChangeDetectorRef\n  ) {\n  }\n\n  /** yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) */\n  isOutside(element) {\n    return !this.elementRef.nativeElement.contains(element)/*  ||\n      element === this.elementRef.nativeElement */;\n  }\n\n  /** Shows if not active, hides if active. */ // active: boolean = !this.active, emit: boolean = false\n  public toggle(e?) {\n    if (this.active) {\n      this.hide();\n    } else {\n      this.show(e);\n    }\n    this._toggle.emit(this.active);\n  }\n\n  /** Shows the pop. Sets active true and adds pop to popService.stack */\n  public show(e?) {\n    this.active = true;\n    this.activated = true;\n    this.popService.stack.add(this);\n    if (e) {\n      this.clickEvent = e;\n    } else if (this.hideOnClickOutside) {\n      // console.warn('To use hideOnClickOutside, you need to pass the click event to the show method of ec-pop!');\n    }\n    this.cdr.markForCheck();\n  }\n\n  /** Hides the pop. Sets active false and removes pop from popService.stack */\n  public hide() {\n    this.popService.stack.remove(this);\n    this.active = false;\n    this.cdr.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n    Modules\n    PopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_imports\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PopService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { IconModule } from '../icon/icon.module';\n\nexport const popModuleConfig = {\n  declarations: [\n    PopComponent,\n    ModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    IconModule\n  ],\n  exports: [\n    PopComponent,\n    ModalComponent,\n  ],\n  providers: [PopService]\n};\n\n@NgModule(popModuleConfig)\nexport class PopModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultColumns\n                            \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultColumns:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 9\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        default value for columns of any pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n    /** default value for columns of any pop */\n    defaultColumns = 9;\n    /** Stack of current opened pops */\n    stack: Collection = new Collection();\n    /** Listens for escape keys and hides latest pop + removes the pop from stack */\n    constructor() {\n        window.addEventListener('keydown', (event) => {\n            if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n                const latestPop = this.stack.items[this.stack.items.length - 1];\n                latestPop.hide();\n                this.stack.remove(latestPop);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceActionbarState.html":{"url":"interfaces/ResourceActionbarState.html","title":"interface - ResourceActionbarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceActionbarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                        actionbar\n                                \n                                \n                                        api\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        relation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionbar\n                                    \n                                \n                                \n                                    \n                                        actionbar:     ActionbarComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionbarComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                    \n                                \n                                \n                                    \n                                        api:     Core\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Core\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ElementRef, Input, ChangeDetectorRef, EventEmitter, Output } from '@angular/core';\nimport { ActionbarComponent, Action, ActionFunction, selectTemplate } from '@ec.components/ui';\nimport { NotificationsService, ListComponent } from '@ec.components/ui';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport ListResource from 'ec.sdk/lib/resources/ListResource';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { SdkService } from '../sdk/sdk.service';\n\nexport interface ResourceActionbarState {\n    api: Core;\n    relation: string;\n    actionbar: ActionbarComponent;\n    action?: ActionFunction;\n    options?: Object;\n}\n\n@Component({\n    selector: 'ec-resource-actionbar',\n    template: selectTemplate\n})\nexport class ResourceActionbarComponent extends ActionbarComponent implements OnInit {\n\n    state: ResourceActionbarState;\n\n    @Output() create: EventEmitter = new EventEmitter();\n    @Output() select: EventEmitter> = new EventEmitter();\n\n    @Input() actions: Action[];\n\n    constructor(\n        public notificationService: NotificationsService,\n        public sdk: SdkService,\n        public resourceConfig: ResourceConfig,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n    }\n\n    ngOnInit() {\n        const state = {\n            api: this.sdk.api,\n            relation: 'tags'\n        };\n        const { api, relation } = state;\n        this.sdk.ready.then(() => {\n            this.loadResourceListActions({\n                api,\n                relation,\n                actionbar: this\n            });\n        });\n    }\n\n    getResourceListActions(listResource: ListResource, relation: string, action?: ActionFunction): Action[] {\n        const actions: Action[] = listResource.getAllItems()\n            .map((resource) => {\n                const { identifier, label } = this.resourceConfig.get(relation);\n                return {\n                    id: resource[identifier],\n                    title: resource[label] || '- no title -',\n                    data: resource,\n                    path: relation,\n                    action: (item, bar) => {\n                        if (action) {\n                            action(item.getBody().data, bar);\n                        } else {\n                            console.log('no action specified..');\n                        }\n                    }\n                };\n            });\n        if (listResource.hasNextLink()) {\n            actions.push({\n                id: 'next-page',\n                title: `Load Page`,\n                path: null,\n                data: {},\n                select: false,\n                action: () => {\n                    listResource.followNextLink().then((list) => {\n                        const concatted = this.list.items\n                            .map(i => i.getBody())\n                            .filter(i => i.id !== 'next-page')\n                            .concat(this.getResourceListActions(list, relation, action));\n                        this.loadActions(concatted);\n                    });\n                }\n            });\n        }\n        return actions;\n    }\n\n    reload() {\n        this.loadResourceListActions({\n            ...this.state,\n            options: {}\n        });\n    }\n\n    loadResourceListActions(state: ResourceActionbarState = this.state, stack = true): Promise {\n        const { api, relation, actionbar, action, options } = state;\n        this.state = {\n            ...this.state,\n            ...state\n        };\n        const loading = api.resourceList(relation, options)\n            .then(list => {\n                return this.getResourceListActions(list, relation, action);\n            }).then(actions => {\n                if (actions) {\n                    actionbar.loadActions(actions, stack);\n                }\n                return actions;\n            }).catch(error => {\n                this.notificationService.emit({\n                    title: 'Error while loading Resources',\n                    error\n                });\n            }).then(actions => actions || []);\n        if (actionbar.dropdownLoader) {\n            actionbar.dropdownLoader.wait(loading);\n        }\n        return loading;\n    }\n\n    resourceAction({ relation, title, api, action, actionbar, add, path }:\n        {\n            relation: string,\n            title: string,\n            api: Core,\n            action?: ActionFunction,\n            actionbar?: ActionbarComponent,\n            add?: boolean,\n            path?: string\n        }) {\n        return {\n            id: path || relation,\n            title: title,\n            add,\n            action: () => this.loadResourceListActions(\n                { api, relation, actionbar, action }\n            )\n        };\n    }\n\n    filterDropdownList(listComponent: ListComponent, query) {\n        const paths = this.currentActions()\n            .map(a => a.path)\n            .filter((value, index, self) => self.indexOf(value) === index)\n            .filter(v => !!v);\n        if (!paths.length) {\n            return super.filterDropdownList(listComponent, query);\n        }\n        const { identifier, label } = this.resourceConfig.get(this.state.relation);\n        this.loadResourceListActions({\n            ...this.state,\n            options: {\n                [label + '~']: { exact: query }\n            }\n        }, false).then((actions) => {\n            if (actions.length === 0) {\n                this.loadActions([{\n                    title: `\"${query}\" erstellen`,\n                    id: 'createnew',\n                    select: false,\n                    action: () => {\n                        if (this.create.observers.length) {\n                            this.create.emit(query);\n                        } else {\n                            const item = new Item({\n                                id: Date.now() + '',\n                                title: query,\n                            }, this.config);\n                            this.addItem(item);\n                            this.searchbar.clear();\n                            this.reload();\n                        }\n                    }\n                }], false);\n            }\n        });\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * \n *\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type :    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type :    CrudConfig\n\n                            \n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type :    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                    \n                        Output that is nexted when pressing the create button \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:45\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceListComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourceListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:37\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     ResourcePopComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourcePopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { LoaderService } from '@ec.components/ui';\nimport { NotificationsService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n    selector: 'ec-resource-crud',\n    templateUrl: './resource-crud.component.html',\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n    /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n    @Input() api: Core; // sdk api connector\n    /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n    @Input() relation: string;\n    /** CrudConfig for customization of the crud's UI.*/\n    @Input() config: CrudConfig = {};\n    /** The selection that should be used */\n    @Input() selection: Selection;\n    /** The ResourceListComponent inside the template. */\n    @ViewChild(ResourceListComponent) list: ResourceListComponent;\n    /** The Pop inside the template. */\n    @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n    /** The lists loader */\n    @ViewChild(LoaderComponent) loader: LoaderComponent;\n    /** Emits when a list element is clicked */\n    @Output() columnClicked: EventEmitter = new EventEmitter();\n    /** Emits when the selection has changed */\n    @Output() selected: EventEmitter = new EventEmitter();\n    /** Output that is nexted when pressing the create button */\n    @Output() createClicked: EventEmitter = new EventEmitter();\n\n    constructor(private sdk: SdkService,\n        private auth: AuthService,\n        private loaderService: LoaderService,\n        private notificationService: NotificationsService,\n        @Optional() public router: Router,\n        @Optional() public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.initMethods();\n    }\n\n    initMethods() {\n        if (!this.relation) {\n            return;\n        }\n        this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods)\n            .then((methods) => {\n                this.config.methods = methods;\n            });\n    }\n\n    /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n    public hasMethod(method: string) {\n        return this.config.methods && this.config.methods.indexOf(method) !== -1;\n    }\n\n    /** Called on list columnClicked */\n    select(item) {\n        if (!item) {\n            return;\n        }\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n            return;\n        }\n        this.pop.edit(item.getBody());\n        // TODO: check CrudComponent#loadEntry for further inspiration\n    }\n\n    /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n    create() {\n        if (this.createClicked.observers.length) {\n            this.createClicked.next();\n        } else if (this.pop) {\n            this.pop.create();\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceListPopComponent.html":{"url":"components/ResourceListPopComponent.html","title":"component - ResourceListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                resourceConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                pasted\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                            \n                            Type :    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                            \n                            Type :    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        $event Type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pasted\n                    \n                    \n                        $event Type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:23\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lightModel:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popService:     PopService\n\n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchbar:     SearchbarComponent\n\n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnChanges, Output, ViewChild } from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@Component({\n    selector: 'ec-resource-list-pop',\n    templateUrl: './resource-list-pop.component.html',\n\n})\n\nexport class ResourceListPopComponent extends PopComponent implements OnChanges {\n    @Input() relation: string;\n    @Input() api: Core;\n    @Input() config: ListConfig;\n    @Input() selection: Selection;\n    @Output() columnClicked: EventEmitter> = new EventEmitter();\n    @Output() pasted: EventEmitter> = new EventEmitter();\n    @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'toast-wrapper';\n    lightModel: any;\n\n    constructor(\n        public resourceConfig: ResourceConfig,\n        public popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef\n    ) {\n        super(popService, elementRef, cdr);\n    }\n\n    ngOnChanges() {\n        if (this.relation) {\n            this.config = Object.assign({}, this.config || {}, this.resourceConfig.get(this.relation));\n        }\n        if (this.config) {\n            this.config = Object.assign({ hidePagination: true, disableHeader: true }, this.config);\n        }\n    }\n\n    /** emits columnClicked event or toggles selection if no observers. */\n    select(item) {\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n        } else if (this.selection) {\n            this.selection.toggle(item);\n        }\n        this.searchbar.focusEvent.emit(true);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n        \n    \n    \n        \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/resource/resource.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ResourceListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ResourceConfig\n                        \n                        \n                            ResourceService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceListPopComponent } from '../resource-list-pop/resource-list-pop.component';\nimport { ResourceActionbarComponent } from '../resource-actionbar/resource-actionbar.component';\nimport { ApiActionbarComponent } from '../resource-actionbar/api-actionbar.component';\n\n@NgModule({\n  entryComponents: [\n    ResourceListComponent,\n  ],\n  declarations: [\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n  ],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  providers: [\n    ResourceService,\n    ResourceConfig,\n  ],\n})\nexport class ResourceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull, deleteNullProperties)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation, resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[];\n    /** The relevant resource. */\n    resource?: Resource;\n    /** The list where it happened. */\n    list?: ResourceList;\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete';\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string;\n    /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n    broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n        /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return change.broadcast || Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().pipe(\n            rxFilter((change: Update) => this.matches(change, filter))\n        );\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value));\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SdkField.html":{"url":"interfaces/SdkField.html","title":"interface - SdkField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SdkField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/sdk-field.ts\n        \n\n            \n                Description\n            \n            \n                Field Config as obtained by PublicAPI#getFieldConfig.\nSee https://doc.entrecode.de/data_manager/#field-data-types for more info\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        localizable\n                                \n                                \n                                        mutable\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                                \n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    further field config options (like columns etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default value that is returned for a newly created required field on old entries \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Description. Used for placeholders \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizable\n                                    \n                                \n                                \n                                    \n                                        localizable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Not implemented yet. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutable\n                                    \n                                \n                                \n                                    \n                                        mutable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tells if the field value can be changed. If true, the field is a system field  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field can only be altered when creating. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field must have a value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    System Title \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Type \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique: each entry has a unique value for that field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Validation info, depends on field type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SdkField {\n    /** further field config options (like columns etc.) */\n    config: Object;\n    /** Field Type */\n    type: string;\n    /** System Title */\n    title: string;\n    /** Unique: each entry has a unique value for that field */\n    unique: boolean;\n    /** Default value that is returned for a newly created required field on old entries */\n    default: string;\n    /** Tells if the field value can be changed. If true, the field is a system field  */\n    mutable: boolean;\n    /** If true, the field can only be altered when creating. */\n    readOnly: boolean;\n    /** If true, the field must have a value */\n    required: boolean;\n    /** Validation info, depends on field type. */\n    validation: string;\n    /** Field Description. Used for placeholders */\n    description: string;\n    /** Not implemented yet. */\n    localizable: boolean;\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n    Modules\n    SdkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SdkService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    SdkService\n  ],\n})\nexport class SdkModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                changesEnvironment\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    root\n                                \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/sdk.service.ts:78\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. Omits init if environment has set init: false \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:88\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:111\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api.\nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _api:     PublicAPI\n\n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:51\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accounts:     Accounts\n\n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:49\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiResolved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:34\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changesEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesEnvironment:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:53\n                            \n                        \n\n                \n                    \n                        Emits when the env changes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datamanager:     DataManager\n\n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:67\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject('environment')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:78\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\n   * this.sdk.ready.then(account => {});\n   *\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roots:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:36\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemaRequests:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:71\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     Session\n\n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:47\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     AccountResource\n\n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:69\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:55\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api)\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:62\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport { Subject } from 'rxjs';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() => this.datamanager.dataManager(this._api.dataManagerID));\n    }\n    return this.roots[this._api.dataManagerID];\n  }\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** Emits when the env changes */\n  public changesEnvironment: Subject = new Subject();\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => this.apiResolved = true);\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. Omits init if environment has set init: false */\n  constructor(@Inject('environment') public environment) {\n    if (!environment || environment.init !== false) {\n      this.init();\n    }\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    if (environment !== this.environment) {\n      this.changesEnvironment.next(environment);\n    }\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount()\n      .then((user) => {\n        this.user = user;\n        this.datamanager = new DataManager(environment.environment);\n        return this.user;\n      });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api.\n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    this._api.resolve().then(api => this.apiResolved = true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model] || this.schemaRequests[model].api !== api) {\n      this.schemaRequests[model] = { request: api.getSchema(model), api };\n    }\n    return this.schemaRequests[model].request;\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api.me().then((account) => {\n      return account || this._api.me();\n    }).catch((err) => {\n      return null;\n    });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n    Modules\n    SelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/select/select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            ListModule\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\nimport { ActionbarComponent } from '../actionbar/actionbar.component';\nimport { LoaderModule } from '../loader/loader.module';\n\nexport const selectModuleConfig = {\n  imports: [\n    CommonModule,\n    ListModule,\n    DndModule,\n    LoaderModule\n  ],\n  declarations: [\n    SelectComponent,\n    ActionbarComponent\n  ],\n  exports: [\n    ListModule,\n    SelectComponent,\n    ActionbarComponent,\n    DndModule\n  ],\n  providers: [],\n};\n\n\n@NgModule(selectModuleConfig)\nexport class SelectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/signup?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginComponent\n    \n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup\n            \n\n\n\n\n            \n                templateUrl\n                signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                invite\n                            \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type :    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                    \n                        Invite code to use. If set, the invite form field will be hidden. \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type :    PublicAPI\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:23\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:25\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:30\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:32\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { WithNotifications, LoaderComponent, WithLoader, Notification } from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/signup?e=1\n*/\n@Component({\n  selector: 'ec-signup',\n  templateUrl: 'signup.component.html'\n})\n\nexport class SignupComponent extends LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Invite code to use. If set, the invite form field will be hidden. */\n  @Input() invite = '';\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  signup({ email, password, invite }) {\n    const registration = this.auth.signup({ email, password, invite }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('signup.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('signup.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        this.error.next(error);\n        console.log('could not signup', error);\n      });\n    this.loader.wait(registration);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginFormComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup-form\n            \n\n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonLabel\n                            \n                            \n                                invite\n                            \n                            \n                                invitePlaceholder\n                            \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value : this.symbol.resolve('signup.button.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                    \n                        If set, the invite field will be hidden and the given code will be used for signup \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invitePlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value : this.symbol.resolve('signup.invite.placeholder')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value : this.symbol.resolve('login.button.label')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value : this.symbol.resolve('login.email.label')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value : this.symbol.resolve('login.email.placeholder')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type :    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value : this.symbol.resolve('login.password.label')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value : this.symbol.resolve('login.password.placeholder')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value : true\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:23\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FieldValidators } from '../../utility/validators/field-validators';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { LoginFormComponent } from '../login-form/login-form.component';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n*/\n@Component({\n  selector: 'ec-signup-form',\n  templateUrl: './signup-form.component.html',\n})\nexport class SignupFormComponent extends LoginFormComponent implements OnInit, WithLoader {\n\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('signup.button.label');\n  /** The Placeholder of the mail Field */\n  @Input() invitePlaceholder = this.symbol.resolve('signup.invite.placeholder');\n  /** If set, the invite field will be hidden and the given code will be used for signup */\n  @Input() invite = '';\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  signup(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n      invite: [this.invite, [Validators.required]] // FieldValidators.uuid\n    });\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.signup(this.form.value)\n      .then((res) => {\n        // this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    Invite\n    \n    \n  \n\n  \n    {{buttonLabel}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                Invite                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecSlotHost]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ecSlotHost]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortType:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:25\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:62\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n    /** The name under which the symbol is accessible. */\n    name: string;\n    /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n    content?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n    Modules\n    SymbolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Collects all localization related components and services.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SymbolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n    \n        Localization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n    \n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n/**\n * Collects all localization related components and services.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [SymbolPipe],\n    exports: [SymbolPipe],\n    providers: [SymbolService],\n})\nexport class SymbolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n * {{ 'entry.saved' | symbol }}\n *See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n    name: 'symbol'\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n    /** Depends on the SymbolService */\n    constructor(private symbol: SymbolService) { }\n    /** Calls SymbolService.resolve with the given name */\n    transform(name: string): string {\n        if (!name) {\n            return '';\n        }\n        return this.symbol.resolve(name) || '';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de.\nhttps://components.entrecode.de/ui/symbols?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                registry\n                            \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Static\n                                sets\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                get\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                resolve\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/symbol/symbol.service.ts:46\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(symbols: Symbol[], registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : Object.keys(SymbolService.sets).length ? SymbolService.sets[Object.keys(SymbolService.sets)[0]] : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sets:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:12\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sets:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { de } from './de';\nimport { en } from './en';\n/** Service to register symbols for localization. The default set is de.\n * https://components.entrecode.de/ui/symbols?e=1\n*/\n// https://github.com/ng-packagr/ng-packagr/issues/696\n@Injectable()\nexport class SymbolService {\n    /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n    public static sets: { [key: string]: Symbol[] } = {\n        en, de\n    };\n    public static registry: Symbol[] = Object.keys(SymbolService.sets).length ? SymbolService.sets[Object.keys(SymbolService.sets)[0]] : [];\n\n    public registry: Symbol[];\n    public sets: { [key: string]: Symbol[] } = {\n        en, de\n    };\n\n    /** finds a symbol in the registry by name */\n    static get(name: string, registry = SymbolService.registry): Symbol {\n        const symbol = registry.find(s => s.name === name);\n        return symbol;\n    }\n\n    static resolve(name: string, registry = SymbolService.registry): string {\n        const symbol = SymbolService.get(name, registry);\n        if (symbol) {\n            return symbol.content;\n        }\n        return null;\n    }\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    static set(symbols: Symbol[] = [], registry = SymbolService.registry) {\n        symbols.map(symbol => {\n            const index = registry.indexOf(this.get(symbol.name));\n            if (index === -1) {\n                registry.push(symbol);\n            } else {\n                registry[index] = symbol;\n            }\n        });\n    }\n\n    constructor() {\n        this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n    }\n\n    /** Uses the given symbol set. Replaces registry. */\n    use(symbols: Symbol[]) {\n        this.registry = symbols;\n    }\n\n    /** uses the set with the given key */\n    useSet(key: string) {\n        if (!this.sets[key]) {\n            throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n        }\n        this.use(this.sets[key]);\n    }\n\n    /** finds a symbol in the registry by name */\n    get(name: string): Symbol {\n        return SymbolService.get(name, this.registry);\n    }\n\n    /** resolves a symbols content by name */\n    resolve(name: string): string {\n        return SymbolService.resolve(name, this.registry);\n    }\n\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    set(symbols: Symbol[] = []) {\n        SymbolService.set(symbols, this.registry);\n    }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                        The tab's label \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        If set to true, the tab will be selected at start. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                    \n                        Output that emits when the tab is activated \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                    \n                        Output that emits when the tab is deactivated \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     TabsComponent\n\n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {\n  }\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                            \n                            Type :    TabComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent, skipRoute)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        skipRoute\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TabComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:14\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { AfterContentInit, Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs?e=1\n*/\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = url.split('/');\n    const match = this.tabs.find((tab) => paths[paths.length - 1].indexOf(tab.route) !== -1);\n    if (match) {\n      this.select(match, true);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent, skipRoute = false) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route && !skipRoute) {\n      this.router.navigate(['../' + tab.route], { relativeTo: this.route });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/lib/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TinymceComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                ./tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImageByUrl\n                            \n                            \n                                destroy\n                            \n                            \n                                init\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                lazy\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time for value change processing \n\n                        \n                            Default value : 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                    \n                        If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks \n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                            \n                            Type :    any\n\n                            \n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        Output that emits when the value has been changed by the user \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        setup\n                    \n                    \n                        Output that is emitted when the setup is being made.\nPasses the editor instance. Intended to be used for custom controls  \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addImageByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \naddImageByUrl(url: string, caption: string, size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            adds an image by url to the editor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        caption\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                200\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            calls init \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            calls destroy \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:52\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:50\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:48\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:54\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit, ApplicationRef,\n  Component, ElementRef,\n  EventEmitter, forwardRef,\n  Input, OnDestroy, Output,\n  ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport tinymce from 'tinymce/tinymce';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/themes/modern';\n\nimport { editorSettings } from './tinymce-settings';\nimport { debounceTime } from 'rxjs/operators';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce?e=1\n*/\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true\n    }\n  ]\n})\nexport class TinymceComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor, OnDestroy {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks */\n  @Input() lazy = false;\n  /** Output that emits when the value has been changed by the user */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Output that is emitted when the setup is being made.\n   * Passes the editor instance. Intended to be used for custom controls  */\n  @Output() setup: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .pipe(debounceTime(this.debounce))\n      .subscribe(editor => {\n        if (!this.editor) {\n          return;\n        }\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.changed.emit(this.value);\n        this.app.tick();\n      });\n  }\n  /** calls init */\n  ngAfterViewInit() {\n    if (!this.lazy) {\n      this.init();\n    }\n  }\n  /** Destroys the editor. */\n  destroy() {\n    if (this.editor) {\n      this.editor.remove();\n      delete this.editor;\n    }\n  }\n  /** calls destroy */\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  /** Initializes the editor */\n  init() {\n    const settings = Object.assign({},\n      editorSettings,\n      this.settings,\n      {\n        target: this.container.nativeElement,\n        setup: (editor) => {\n          editorSettings.setup(editor);\n          if (this.settings && this.settings.setup) {\n            this.settings.setup(editor);\n          }\n          this.setup.emit(editor);\n        }\n      }\n    );\n    this.ready = new Promise((resolve, reject) => setTimeout(() => resolve(tinymce.init(settings))));\n    this.ready.then(editor => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', e => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', res => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** adds an image by url to the editor */\n  addImageByUrl(url: string, caption = '', size = 200) {\n    this.editor.execCommand('mceInsertContent', false,\n      ``);\n  }\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (this.editor) {\n      this.editor.setContent(this.value);\n    }\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./tinymce.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n    Modules\n    TinymceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/lib/tinymce.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\nexport const tinymceModuleConfig = {\n  declarations: [TinymceComponent],\n  entryComponents: [TinymceComponent],\n  exports: [TinymceComponent]\n};\n\n@NgModule(tinymceModuleConfig)\nexport class TinymceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ToggleComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The toggles placeholder (currently not in use) \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {\n  }\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/type-config.service.ts:179\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:217\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:209\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too.\nUsese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:223\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:199\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedCrudConfig:     CrudConfig\n\n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /* size: 5, */\n    // methods: ['get']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:15\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     FieldConfig\n\n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact'\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true\n    },\n    url: {\n      sortable: true,\n      filterable: true\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: value => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(\n        this.symbol.resolve('moment.format.date')\n      )\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select'\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2\n        }\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: value => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? JSON.stringify(value) : '')\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: value => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: value => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:23\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfig, FieldConfigProperty } from '@ec.components/core';\nimport { DefaultInputComponent, DefaultOutputComponent, SymbolService } from '@ec.components/ui';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    /* size: 5, */\n    // methods: ['get']\n  };\n\n  // TODO check if filterPopClass: '' is still needed\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact'\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true\n    },\n    url: {\n      sortable: true,\n      filterable: true\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: value => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(\n        this.symbol.resolve('moment.format.date')\n      )\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select'\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2\n        }\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: value => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? JSON.stringify(value) : '')\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: value => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: value => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too.\n   * Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format =\n      this.symbol.resolve('moment.format.date') +\n      (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return value => (value ? moment(value).format(format) : '');\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) =>\n      entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return value =>\n      moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n    Modules\n    UiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ListModule } from './list/list.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\nimport { FormModule } from './form/form.module';\n\nexport const uiModuleConfig = {\n  imports: [\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ]\n};\n\n@NgModule(uiModuleConfig)\nexport class UiModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        broadcast\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        relation\n                                \n                                \n                                            Optional\n                                        resource\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcast\n                                    \n                                \n                                \n                                    \n                                        broadcast:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An identifier associated with the update e.g. an entryID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The relation that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:     Resource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Resource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant resource. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[];\n    /** The relevant resource. */\n    resource?: Resource;\n    /** The list where it happened. */\n    list?: ResourceList;\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete';\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string;\n    /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n    broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n        /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return change.broadcast || Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().pipe(\n            rxFilter((change: Update) => this.matches(change, filter))\n        );\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value));\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: []\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, (config.filter || {}), {\n          type: assetGroupID\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n          if (key in options) {\n            formData.append(key, `${options[key]}`);\n          }\n        });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map(f => f.url) : this.getFormData(files, options);\n    return api.createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {});\n      }\n      return this.sdk.api.createAssets(data, {});\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string):\n    Promise> {\n    console.warn('FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.');\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset];\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset);\n        });\n\n    });\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. TODO: demo \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload/upload.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                            \n                            Type :    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used while uploading\n\n                            \n                            Type :    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Upload options \n\n                            \n                            Type :    FileOptions\n\n                            \n                        \n                            Default value : Object.assign({}, this.fileService.defaultOptions)\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input placeholder\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        emits when the group has been set from the upload pop \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(files, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFiles(files, e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fileInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filesToUpload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:40\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:38\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  LoaderComponent, LoaderService, Notification, NotificationsService,\n  PopComponent, SymbolService, WithLoader, WithNotifications\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileOptions, FileService, Upload } from '../file.service';\n\n/** This component will render an input field to upload files to the datamanager. TODO: demo */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService) {\n  }\n  /** opens the system upload window by triggering the input */\n  trigger(e) {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    files = typeof files === 'string'\n      ? files.split('\\n').map(url => ({ name: url, url }))\n      : files;\n    if (files[0].url && this.fileService.isOldAssetGroupID(this.assetGroupID)) {\n      delete this.assetGroupID;\n    }\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return Promise.resolve();\n    }\n    return this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.fileService.isNewAssetGroupID(this.assetGroupID) ?\n      this.fileService.uploadAssets(files, this.assetGroupID, this.options, api) :\n      this.fileService.uploadFiles(files))\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications\n        });\n        this.pop.hide();\n        return _upload;\n      }).catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    });\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            {{'upload.assetGroup' | symbol}}\n            \n        \n        \n            \n                \n                \n                    \n                    {{'upload.preserveFilenames' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.includeAssetIDInPath' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.ignoreDuplicates' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.deduplicate' | symbol}}\n                \n            \n            \n                {{ f.name }}\n                \n                    \n                \n            \n        \n        Upload\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{\\'upload.assetGroup\\' | symbol}}                                                                                                                {{\\'upload.preserveFilenames\\' | symbol}}                                                                                                                {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                                                {{\\'upload.ignoreDuplicates\\' | symbol}}                                                                                                                {{\\'upload.deduplicate\\' | symbol}}                                                        {{ f.name }}                                                                                Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadSelectComponent.html":{"url":"components/UploadSelectComponent.html","title":"component - UploadSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload-select/upload-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload-select\n            \n\n\n\n\n            \n                templateUrl\n                ./upload-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                showUrlInput\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                uploader\n                            \n                            \n                                urlsToUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGroup\n                            \n                            \n                                toggleUrlInput\n                            \n                            \n                                triggerUpload\n                            \n                            \n                                uploadFromUrls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                custom\n                            \n                            \n                                disableDrop\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                browse\n                            \n                            \n                                groupChanged\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    CrudConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDrop\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                            \n                            Type :    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type :    FileOptions\n\n                            \n                        \n                            Default value : Object.assign({}, this.fileService.defaultOptions)\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        browse\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        emits when the group has been set from the upload pop \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleUrlInput\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleUrlInput()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            triggerUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \ntriggerUpload(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFromUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFromUrls(urls, e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        focusEvent:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:35\n                            \n                        \n\n                \n                    \n                        The event that focuses the url input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUrlInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showUrlInput:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:33\n                            \n                        \n\n                \n                    \n                        Wether or not the url input should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploader:     UploadComponent\n\n                    \n                \n                    \n                        \n                            Type :     UploadComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(UploadComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:29\n                            \n                        \n\n                \n                    \n                        The nested upload component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlsToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urlsToUpload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:31\n                            \n                        \n\n                \n                    \n                        The Url to upload from \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SymbolService } from '@ec.components/ui';\nimport { UploadComponent } from '../upload/upload.component';\nimport { Upload, FileOptions, FileService } from '../file.service';\n\n@Component({\n    selector: 'ec-upload-select',\n    templateUrl: './upload-select.component.html'\n})\n\nexport class UploadSelectComponent implements OnInit {\n    @Input() readOnly: boolean;\n    @Input() custom: boolean;\n    @Input() disableDrop: boolean;\n    @Input() assetGroupID: string;\n    @Input() loader: LoaderComponent;\n    @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n    /** emits when the group has been set from the upload pop */\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n    /** Emits when an upload is complete. */\n    @Output() uploaded: EventEmitter = new EventEmitter();\n    @Output() browse: EventEmitter = new EventEmitter();\n    @Input() config: CrudConfig;\n    /** The nested upload component */\n    @ViewChild(UploadComponent) uploader: UploadComponent;\n    /** The Url to upload from */\n    urlsToUpload = '';\n    /** Wether or not the url input should be visible */\n    showUrlInput = false;\n    /** The event that focuses the url input */\n    public focusEvent: EventEmitter = new EventEmitter();\n\n    constructor(public symbol: SymbolService, public fileService: FileService) { }\n\n    ngOnInit() { }\n\n    /** Sets the asset group to upload to */\n    setGroup(group) {\n        this.assetGroupID = group;\n        this.groupChanged.emit(group);\n    }\n\n    toggleUrlInput() {\n        this.showUrlInput = !this.showUrlInput;\n        setTimeout(() => {\n            this.focusEvent.emit(true);\n        });\n    }\n\n    uploadFromUrls(urls, e) {\n        this.uploader.uploadFiles(urls, e).then(() => {\n            this.urlsToUpload = '';\n            this.showUrlInput = false;\n        });\n    }\n    triggerUpload(e) {\n        this.uploader.trigger(e);\n    }\n}\n\n    \n\n    \n        \n    Drop to upload\n    \n    {{'upload.link' | symbol}}\n     {{'upload.or' | symbol}}\n        {{'upload.url' | symbol}}\n    \n     {{'upload.or' | symbol}}\n        {{'upload.browse' | symbol}}\n    \n    \n        \n        {{'upload.url.start' | symbol}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Drop to upload        {{\\'upload.link\\' | symbol}}     {{\\'upload.or\\' | symbol}}        {{\\'upload.url\\' | symbol}}         {{\\'upload.or\\' | symbol}}        {{\\'upload.browse\\' | symbol}}                        {{\\'upload.url.start\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/utility/utility.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\n\nexport const utilityModuleConfig = {\n  entryComponents: [],\n  declarations: [\n    TabsComponent,\n    TabComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    /* FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    */\n    TabsComponent,\n    TabComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [],\n};\n\n@NgModule(utilityModuleConfig)\nexport class UtilityModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array, form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formService:     FormService\n\n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field, Form } from '@ec.components/core';\nimport { FormService } from './form.service';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields'\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  constructor(public formService: FormService) { }\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array, form: Form): any {\n    return fields.filter((field) =>\n      this.formService.shouldBePartOfForm(field, form)\n      && !field.hideInForm\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n    /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n    notifications?: Notification[];\n    /** If true, no notifications will be emitted */\n    silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : 1.0.0-beta.3\n        \n            @angular/animations : ~7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @ec.components/ace : latest\n        \n            @ec.components/calendar : latest\n        \n            @ec.components/core : latest\n        \n            @ec.components/data : latest\n        \n            @ec.components/location : latest\n        \n            @ec.components/medium-editor : latest\n        \n            @ec.components/style : latest\n        \n            @ec.components/tinymce : latest\n        \n            @ec.components/ui : latest\n        \n            ace-builds : ^1.4.2\n        \n            core-js : ^2.5.4\n        \n            ec.sdk : ^0.17.20\n        \n            googlemaps : ^1.12.0\n        \n            lerna : ^3.10.5\n        \n            medium-editor : ^5.23.2\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.1.0\n        \n            rxjs : ~6.3.3\n        \n            tinymce : ^4.9.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/lib/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                    \n                \n            \n        \n\n    packages/core/src/lib/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n AceComponent), multi: true\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}->AceComponent\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n MediumEditorComponent), multi: true\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}->MediumEditorComponent\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        21 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    68 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    20 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (packages/.../actionbar.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ui/src/lib/actionbar/actionbar.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionFunction\n                    \n                \n                \n                    \n                        ActionFunction:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/angular-7-upgrade-guide.html":{"url":"additional-documentation/angular-7-upgrade-guide.html","title":"additional-page - Angular 7 Upgrade Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngular7 update: BREAKING changes\nThe following breaking changes need to be considered when updating the components with angular 7. This update guide is just for @ec.components and angular 7. A whole angular 7 update guide can be found here.\nAngular 7 is used since the following versions:\n\n@ec.components/ace@0.6.0\n@ec.components/calendar@0.2.0\n@ec.components/core@0.19.0\n@ec.components/data@0.42.0\n@ec.components/location@0.18.0\n@ec.components/medium-editor@0.4.0\n@ec.components/style@0.21.0\n@ec.components/tinymce@0.5.0\n@ec.components/ui@0.36.0\n\nIt is recommended you use the most recent versions. Also add @ec.components/calendar to your package.json if you use datetime pipe or calendars / date pickers.\n1. All imports now go from the packages roots\nold:\nimport { EntryForm } from '@ec.components/data/src/entry-form/entry-form.component'new:\nimport { EntryForm } from '@ec.components/data'=> make sure you never import anything from src, since this folder no longer exists in the package\nPRO TIP\nUse VSCode \"Search: Replace in Files\" with the following Regex:\n\nSearch: _'@ec.components/(\\w+).*'_\nReplace: _'@ec.components/$1'_\n\n2. SCSS import changes\nold:\n@import '~@ec.components/style/components';new:\n@import '~@ec.components/style/scss/components';3. MediumModule has been renamed to MediumEditorModule\n4. Build Errors\nIf you are getting this:\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'http' in '/your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'https' in 'your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/jsonpath-plus/lib/jsonpath.js\nModule not found: Error: Can't resolve 'vm' in 'your-project/node_modules/jsonpath-plus/lib'To fix it, you need a custom webpack config. Eject is not available any more so we need to use angular-builders:\nnpm i @angular-builders/custom-webpack @angular-builders/dev-server @angular-devkit/build-angular --save-devThe following versions were used in this guide:\n\"@angular-builders/custom-webpack\": \"^7.2.0\",\n\"@angular-builders/dev-server\": \"^7.2.1\",\n\"@angular-devkit/build-angular\": \"^0.12.3\",In angular.json make following changes -\n\"architect\": {\n    \"build\": {\n        \"builder\": \"@angular-builders/custom-webpack:browser\",\n        \"options\": {\n        \"customWebpackConfig\": {\"path\": \"./custom-webpack.config.js\"},Notice change in builder and new option customWebpackConfig. Also change\n\"serve\": {\n    \"builder\": \"@angular-builders/dev-server:generic\",Now create a custom-webpack.config.js file in the root directory, containing:\nconst path = require(\"path\");\nmodule.exports = {\n    node: {\n        crypto: 'empty',\n        fs: 'empty',\n        http: 'empty',\n        https: 'empty',\n    }\n};Check this for more info.\nOther Problems you might run into\n\nCan't bind to 'ngModel' since it isn't a known property of 'input'\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/localization.html":{"url":"additional-documentation/project-setup-tutorial/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields-config.html","title":"additional-page - Custom Fields Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nExample\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nSee the related doc links for default values / possible config values.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-list.html","title":"additional-page - Custom Entry List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec-entry-list\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry Lists load multiple entries from a model and display them in a paginated list. It supports load error notifications, loader, filtering, sorting and automatic reloading + many customizations.\nDefault Usage\nThe above snippet will either consume the config for muffin in ModelConfigService, or if no config is found, generate one from the model schema.\nPassing a Config\nThe following snippet will assign the given config to the model/schema config:\ncolumnClicked output\nYou can react to column clicks via the columnClicked output:\nselect(item) {\n    console.log('entry',item.getBody(),item.id());\n}Seperated header/items/pagination markup\nIf you need a seperation of the list-header -items and -pagination, you can use the sub components of list.component:\n\n\n\n\nCreate Custom Cells via transform methods\nIf you want to custom cell values that do not require a custom markup, you can use transforms\ndisplay\nThe display transform method is used to display the value (say what?).\nIt is called from inside ec-output, which is used in list-cells and form readOnly fields.\nYou can change the display behaviour like this:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            display: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});group\nYou can use grouping to get a clearer outline over sorted data:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            group: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});The syntax is the same as for display but the result is used as a group label when the property is sorted.\nresolve\nThe value that is passed to the transform methods like display, group etc. can be changed beforehand with the resolve method. NOTE: the params are different than for the transform methods:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            resolve: (body, item) => {\n                if(body.amazement_factor === -1) {\n                    return 0;\n                }\n                return body.amazement_factor;\n            }\n        }\n    }\n});this will also affect your forms!\npseudo properties via resolve\nYou can also define pseudo properties, meaning properties that do not exist on the original object:\nthis.modelConfig.set('muffin', {\n    fields: {\n        ranking: {\n            resolve: (body, item) => body.amazement_factor*body.flavour/body.price\n        }\n    }\n});This comes in handy when you want to display a often combined value out of multiple values.\nNOTE: pseudo properties should not be passed to the backend...\nCustom Cells via custom output component\nIf you want to custom cell values that do require a custom markup, you can use a custom output component:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            output: StrongComponent\n        }\n    }\n});In your strong.component.ts, you can inherit OutputComponent, giving you access to the field and item of your cell:\n@Component({\n  selector: 'app-strong',\n  template: `{{item.resolve(field.property)}}`\n})\nexport class StrongComponent extends OutputComponent {}NOTE: customizing the output component will also change the look of forms using that config, if the property is set readOnly.\nFiltering Lists\nBy default, each column that hosts a filterable property contains a search icon in its header. If the property is filterable is defined either by the field config (filterable) or falls back to the backend types that support filters. The search icon will open a pop with a field type specific filter input inside.\nCustom Filtering\nIf you do not want that (currently pretty clunky) pop filters, you can set filterable to false and manually call list.load with the desired filter:\n\n    show amazing muffins\n\nClicking the link will now show all muffins with exactly amazement_factor 10.\nCustom filter operators\nBy default, the entry-list will filter the property by its default filterOperator (see type config). If you want to change the default operator you can set it in the config:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            filterOperator: 'from'\n        }\n    }\n});\n    show amazing muffins\n\nIf you now click the link, all muffins with amazement_factor>=5 will be loaded.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-forms.html","title":"additional-page - Custom Entry Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEntry Forms\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry forms can edit and create entries. They support notifications, loader, validation error handling and dynamic config generation out of the box.\nNOTE: it is expected you have placed a ec-notifications tag somewhere in your root component.\nDefault Behaviour\nCreate\nsubmitting the form will create a new entry and then switch to edit mode.\nEdit\nDynamic Edit/Create from template\nYou can also access the form from the template and call edit or create:\n\n\n    \n      {{muffin.name}}\n    \n  \nCreate new MuffinConfiguration\nIf nothing else is configured, the form will parse the schema of muffin and generate a generic field config.\nIf you configured the model via ModelConfigService (see Custom Fields), the form will use that config.\nAlternatively, you can also pass a config directly:\nThe given config will be Object.assigned to the possible preexisting modelConfig.\nCustom Markup with ec-input/ec-output\nMost times, you'll want more freedom over your forms markup etc. This is where ec-input and ec-output come into play:\n  \n    \n    Title\n        \n    \n    \n    Amazement Factor\n    \n    Submit\n  As soon as the ec-entry-form contains elements (or you pass empty=true, as meantioned below), the contents will be rendered instead of the default form.\nFeatures you have to add manually (if needed)\n\nsubmit button\nfield.readOnly handling (show ec-output instead of ec-input)\nlocal ec-loader\n\nNOTE: dont wrap labels around complex input components, because they fire ghost clicks!\nCustom input/output markup\nOf course you can remove another layer of abstraction to further customize the form:\n  \n    \n    Title\n    \n    \n    \n    Amazement Factor\n    {{form.display('amazement_factor')}}\n\n    Submit\n  Features you have to add manually:\n\nhandling of input errors (ec-input-errors)\nmaking sure your markup handles the field type correctly\nmaking sure your markup handles the field value correctly\n\nIt is generally recommended to use ec-input over hard coded forms.\nThe empty flag\nYou can also place the ec-input elements somewhere else and just tell the ec-entry-form that it shouldn't render the default form with the empty flag:\n\nNOTE: Always make sure the property accessed by ec-input is also present in your config (or you dont use a config at all). Otherwise, the input wont know what to render.\nCreating custom inputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nCustom Fields without wrapper\nYou can also use custom components as input directly without needing to wrap them in \"CustomFieldsComponent\".\nJust make sure you implement ControlValueAccessor like above. When changes occur from the template, call propagateChange. You can react to outside model changes in writeValue.\nimport { Component, OnInit, Input } from '@angular/core';\nimport { InputComponent } from '../../../packages/ui';\nimport { ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'ec-counter',\n    templateUrl: './counter.component.html'\n})\n\nexport class CounterComponent extends InputComponent implements ControlValueAccessor {\n\n    value = 0;\n\n    increment() {\n        this.propagateChange(++this.value);\n    }\n\n    decrement() {\n        this.propagateChange(--this.value);\n    }\n\n    writeValue(value: any) {\n        this.value = value;\n        console.log('received value', value);\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme.html":{"url":"additional-documentation/readme.html","title":"additional-page - README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/data-readme.html":{"url":"additional-documentation/readme/data-readme.html","title":"additional-page - data README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/data\nThis package contains all ec.datamanager related components.\nBeing wether framework agnostic nor backend agnostic, it is lowest fruit on the abstraction tree.\nIt extends the classes of the core module to create datamanager specific classes that are then used in the components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/data --save2. Add Module\nimport { DataModule } from '@ec.components/data';\n\n@NgModule({\n  imports: [\n    DataModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ui-readme.html":{"url":"additional-documentation/readme/ui-readme.html","title":"additional-page - ui README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ui\nThis package contains all angular components that have no ec.datamanager references.\nIt utilizes the classes of the @ec.components/core package.\nBeing the middle layer in the abstraction tree, it is still backend agnostic but not framework agnostic.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ui --save2. Add Module\nimport { UiModule } from '@ec.components/ui';\n\n@NgModule({\n  imports: [\n    UiModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/core-readme.html":{"url":"additional-documentation/readme/core-readme.html","title":"additional-page - core README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/core\nThis package contains all the core typescript classes.\nIt is the highest abstraction layer and is therefor framework and backend agnostic.\nThis means it contains no angular or ec.datamanager references.\nOverview\n\nCHANGELOG\nAvailable Classes\n\nInstallation\nnpm i @ec.components/coreimport { Item } from '@ec.components/core';\nconst primitive = new Item('a');\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/style-readme.html":{"url":"additional-documentation/readme/style-readme.html","title":"additional-page - style README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/style\nThis package contains all scss styles for the ec.components packages.\nOverview\n\nCHANGELOG\nx.ui\n\nInstallation\nMethod A: With prebuilt CSS styles\nIf you are not using scss or you just want to add styles without hassle, just add this css to your index.html:\nMethod B: Custom Styles with SCSS\nIf you want to use your own styles, you can use scss to import and build the styles with x.ui:\n1. Install package\nnpm install @ec.components/style --saveThis will also install x.ui.\n3. Add styles\nDetails on how to setup your config can be found in the x.ui README.\n@import 'config';\n@import '~x.ui/src/x.ui.scss';\n@import '~@ec.components/style/scss/components';\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/calendar-readme.html":{"url":"additional-documentation/readme/calendar-readme.html","title":"additional-page - calendar README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/calendar\nThis package provides calendar and date components as part of ec.components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/calendar --save2. Add Module\nimport { CalendarModule } from '@ec.components/calendar';\n\n@NgModule({\n  imports: [\n    CalendarModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/location-readme.html":{"url":"additional-documentation/readme/location-readme.html","title":"additional-page - location README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/location\nThis package wraps the angular-google-maps to be suitable for forms.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/location --save2. Add Module\nimport { LocationModule } from '@ec.components/location';\n\n@NgModule({\n  imports: [\n    LocationModule\n  ]\n})\nexport class AppModule {\n}3. Use it as default input for location fields\n  constructor(private typeConfig: TypeConfigService) {\n    this.typeConfig.set('location', {\n      input: LocationPickerComponent\n    });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ace-readme.html":{"url":"additional-documentation/readme/ace-readme.html","title":"additional-page - ace README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ace --save2. Add Module\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}3. Add CDN\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/medium-editor-readme.html":{"url":"additional-documentation/readme/medium-editor-readme.html","title":"additional-page - medium-editor README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/medium-editor --save2. Add Module\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/tinymce-readme.html":{"url":"additional-documentation/readme/tinymce-readme.html","title":"additional-page - tinymce README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/tinymce --save2. Add Module\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}3. Add styles files to angular.json\n\"styles\": [\n  \"node_modules/tinymce/skins/lightgray/skin.min.css\",\n  \"node_modules/tinymce/skins/lightgray/content.min.css\"\n],4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog.html":{"url":"additional-documentation/changelog.html","title":"additional-page - CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/data-changelog.html":{"url":"additional-documentation/changelog/data-changelog.html","title":"additional-page - data CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.43.5 (2019-02-04)\nBug Fixes\n\ncan now set itemClick in field config + fix resouce-select config (9e23457)\n\n0.43.4 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.43.3 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop now really fixed (8abc48b)\n\n0.43.2 (2019-02-01)\nNote: Version bump only for package @ec.components/data\n0.43.1 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop (79c1a6d)\n\n0.43.0 (2019-02-01)\nFeatures\n\nResourceConfig#set (ba52443)\n\n0.42.16 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.15 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.14 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.13 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.12 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.42.11 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.42.10 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.9 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.8 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.7 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.6 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.5 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.4 (2019-01-21)\nBug Fixes\n\nauth.service clientID check + removed broadcast load on env switch (def9084)\ncalling entry-pop create twice would edit the first entry (d5dc292)\nclear searchbar when changing asset group (1cfc328)\nclientID if statement (43c7da5)\nconfig generation for empty forms was bugged since last commit (789e7ca)\ncould not define custom components for entry field types (0b433be)\ncould not pass config to entry-list seperately (4a14246)\ncould not set custom asset list config (06b615c)\ndndDraggable stringify error (a992381)\nEDITOR-187 (de51159)\nendless ecEntries could concat same page multiple times (fed2c52)\nentry-list.component (431e3fd)\nfiles index (bcbefd1)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfocus asset list pop searchbar when changing group (24868b9)\nform without config would bug (5892365)\ngroup resource-config (020e689)\nlinter bug (b4d03eb)\nModelConfigService now using CrudConfig instead of ItemConfig (eb506da)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nparseType would not recognize relations with \"-\" (a08a9d6)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nrelative path in data.module (fcfdf32)\nremoveItem still activated entry-select + entry-select demo (364482b)\nresource-list.component (2826ac4)\nselect assetGroup if legacyAsset and url upload (7580583)\nselection was broken for ec-entry-select list (121566c)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\nwrong method reference (f3590a7)\n\nFeatures\n\nsdk changesEnvironment + resource service env update broadcast (ad58c68)\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ui-changelog.html":{"url":"additional-documentation/changelog/ui-changelog.html","title":"additional-page - ui CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.37.2 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.37.1 (2019-02-01)\nBug Fixes\n\ndefault input config to empty object (46d4a1f)\n\n0.37.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\nnow passing field config to input component (25a36aa)\n\n0.36.15 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.14 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.13 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.12 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.11 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.36.10 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.36.9 (2019-01-25)\nBug Fixes\n\nnow exporting languages by name (7733151)\n\n0.36.8 (2019-01-25)\nBug Fixes\n\nexport de + en from ui package barrel (c950461)\n\n0.36.7 (2019-01-25)\nNote: Version bump only for package @ec.components/ui\n0.36.6 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.5 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.4 (2019-01-21)\nBug Fixes\n\nclear searchbar when changing asset group (1cfc328)\ncontrol binding (fd41ccc)\ndndDraggable stringify error (a992381)\ndynamic-slot make inject public to be able to call super (b7460e6)\nec-input bug (1d9e231)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfirst tab selection was throwing an error (50e2d98)\nfocus asset list pop searchbar when changing group (24868b9)\nform.create would not reinstantiate with config being undefined (f7b65f4)\ninit control in input.component (3fb8f47)\nlint errors (1cb8b1c)\nlinter errors (70d5e24)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nonly show size select if total>0 (7a88da8)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwrong import (b760780)\n\nFeatures\n\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/core-changelog.html":{"url":"additional-documentation/changelog/core-changelog.html","title":"additional-page - core CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.20.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.19.12 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.11 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.10 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.9 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.8 (2019-01-25)\nNote: Version bump only for package @ec.components/core\n0.19.7 (2019-01-21)\nNote: Version bump only for package @ec.components/core\n0.19.6 (2019-01-21)\nBug Fixes\n\nlinter errors (70d5e24)\nselection has + docs (e8b0e49)\nselection.toggle would emit change twice sometimes (b3e8115)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/style-changelog.html":{"url":"additional-documentation/changelog/style-changelog.html","title":"additional-page - style CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.22.1 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.22.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.21.6 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.5 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.4 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.3 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.2 (2019-01-25)\nNote: Version bump only for package @ec.components/style\n0.21.1 (2019-01-21)\nNote: Version bump only for package @ec.components/style\n0.21.0 (2019-01-21)\nBug Fixes\n\nadded optional to btn._clear extension (373bebf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/calendar-changelog.html":{"url":"additional-documentation/changelog/calendar-changelog.html","title":"additional-page - calendar CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.2.10 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.9 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.8 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.7 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.6 (2019-01-25)\nNote: Version bump only for package @ec.components/calendar\n0.2.5 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.4 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/location-changelog.html":{"url":"additional-documentation/changelog/location-changelog.html","title":"additional-page - location CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.18.9 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.8 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.7 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.6 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.5 (2019-01-25)\nNote: Version bump only for package @ec.components/location\n0.18.4 (2019-01-21)\nNote: Version bump only for package @ec.components/location\n0.18.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ace-changelog.html":{"url":"additional-documentation/changelog/ace-changelog.html","title":"additional-page - ace CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.6.9 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.8 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.7 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.6 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.5 (2019-01-25)\nNote: Version bump only for package @ec.components/ace\n0.6.4 (2019-01-21)\nNote: Version bump only for package @ec.components/ace\n0.6.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/medium-editor-changelog.html":{"url":"additional-documentation/changelog/medium-editor-changelog.html","title":"additional-page - medium-editor CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.4.9 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.8 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.7 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.6 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.5 (2019-01-25)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.4 (2019-01-21)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/tinymce-changelog.html":{"url":"additional-documentation/changelog/tinymce-changelog.html","title":"additional-page - tinymce CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.5.10 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.9 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.8 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.7 (2019-01-28)\nBug Fixes\n\ntinymce fix version 4.7.4 due to angular-cli/issues/11041 (b365847)\n\n0.5.6 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.5 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.4 (2019-01-21)\nNote: Version bump only for package @ec.components/tinymce\n0.5.3 (2019-01-21)\nBug Fixes\n\ncould not writeValue before init component (00a2e2e)\ntinyMCE promise error (8fab72f)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adding-new-packages.html":{"url":"additional-documentation/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new Package in 10 easy steps\nThe following steps need to be done to generate a new library that is standards compliant.\nJust replace the example name \"data\" with the new package name.\n1. Run CLI command to generate a new library\nng generate library data -p ecThis will create a new folder under packages/ (see newProjectRoot in angular.json).\n2. Prefix packages/data/package.json#name with @ec.components\nalso make sure the version is correct\n3. Prefix root tsconfig.json paths \"data\" and \"data/*\" with @ec.components\nalso change value to \"packages/data/dist/*\"\n4. Move src files to packages/data/lib\n5. add dependencies (e.g. ec.sdk) to both root and lib package.json\n6. add whitelistedNonPeerDependencies and dest to ng-package.json\n  \"dest\": \"./dist\",\n  \"whitelistedNonPeerDependencies\": [\n    \".\"\n  ]7. fix relative imports\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\n// replace with\nimport { WithNotifications, Notification } from '@ec.components/ui';8. fix rxjs imports\nimport { Subject } from 'rxjs/Subject';\n// to\nimport { Subject } from 'rxjs';9. fix other lint errors like semicolon stuff\nbuild it\nng build datarun yarn to link dist/data to node_modules\n10. add dependency to root package.json\n11. add CHANGELOG.md of package to summary.json (like others)\n11. add link to package changelog page to CHANGELOG.md (like others)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/stackblitz.html":{"url":"additional-documentation/stackblitz.html","title":"additional-page - Stackblitz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStackblitz Demos\n\nCreate Angular Stackblitz\nimport styles to index.html:\n\n\n\nAdd @ec.components package(s):\n\n\"@ec.components/calendar\": \"^0.2.6\",\n/** any other components module */\nimport module(s):\n\nimport { CalendarModule } from '@ec.components/calendar';\n@NgModule({\n  imports:      [ /* .. */ CalendarModule ],\n  /* ... */\n})\nexport class AppModule { }\nuse component(s) in app.component.html:\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/publishing.html":{"url":"additional-documentation/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
