var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.292,1,1.278]],["body/components/AceComponent.html",[0,0.443,1,1.856,2,0.855,3,0.159,4,0.164,5,0.611,6,1.643,7,0.814,8,0.787,9,1.266,10,0.124,11,2.675,12,0.346,13,2.717,14,5.532,15,4.018,16,2.21,17,1.568,18,4.363,19,4.649,20,1.836,21,2.124,22,2.512,23,2.573,24,0.675,25,1.536,26,0.007,27,2.053,28,3.113,29,2.544,30,3.113,31,2.544,32,0.88,33,2.173,34,1.86,35,3.051,36,5.69,37,1.177,38,4.649,39,0.319,40,0.567,41,3.916,42,1.602,43,3.582,44,3.582,45,1.415,46,1.629,47,2.852,48,1.946,49,2.927,50,3.02,51,2.512,52,1.768,53,3.051,54,0.732,55,3.4,56,2.969,57,2.897,58,3.051,59,4.033,60,4.649,61,4.649,62,2.817,63,3.211,64,3.447,65,1.157,66,6.642,67,8.864,68,0.807,69,1.687,70,1.19,71,3.002,72,1.371,73,2.642,74,6.407,75,4.904,76,5.248,77,5.248,78,3.303,79,3.303,80,6.407,81,3.002,82,3.002,83,3.359,84,0.977,85,2.701,86,3.193,87,2.895,88,1.1,89,1.238,90,1.833,91,3.002,92,4.649,93,5.248,94,3.002,95,2.927,96,3.002,97,3.558,98,1.831,99,3.359,100,1.017,101,1.025,102,0.722,103,2.927,104,3.002,105,4.649,106,3.002,107,4.4,108,3.808,109,4.649,110,4.649,111,3.002,112,4.649,113,2.927,114,3.002,115,3.193,116,2.397,117,1.798,118,2.062,119,4.304,120,2.298,121,0.964,122,2.298,123,2.573,124,1.186,125,3.558,126,3.002,127,1.622,128,3.002,129,1.595,130,3.002,131,2.002,132,3.002,133,2.585,134,3.002,135,3.051,136,3.808,137,3.002,138,1.626,139,1.696,140,2.298,141,2.298,142,1.238,143,1.401,144,2.298,145,1.696,146,3.558,147,1.819,148,2.298,149,2.298,150,2.062,151,1.696,152,0.264,153,1.358,154,0.263,155,1.211,156,0.938,157,2.675,158,3.002,159,3.002,160,3.002,161,2.675,162,2.459,163,2.675,164,2.459,165,2.298,166,0.581,167,0.11,168,0.129,169,4.649,170,4.649,171,3.002,172,3.002,173,5.248,174,3.002,175,3.558,176,2.675,177,5.069,178,3.002,179,5.69,180,3.002,181,3.051,182,3.002,183,1.377,184,3.808,185,3.002,186,1.505,187,3.002,188,1.011,189,3.002,190,3.002,191,3.558,192,3.002,193,1.696,194,1.89,195,3.002,196,2.298,197,3.002,198,0.561,199,1.239,200,0.621,201,1.266,202,1.708,203,0.814,204,0.814,205,0.735,206,1.738,207,0.735,208,0.773,209,0.699,210,0.76,211,0.773,212,2.074,213,0.76,214,1.302,215,1.738,216,0.773,217,1.259,218,2.143,219,0.773,220,0.773,221,0.814,222,0.76,223,1.261,224,0.773,225,0.814,226,0.76,227,0.814,228,0.747,229,0.735,230,1.58,231,1.543,232,0.747,233,0.76,234,0.76,235,0.747,236,0.814,237,0.773,238,0.773,239,1.88,240,0.773,241,0.76,242,0.773,243,0.773,244,0.773,245,0.76,246,0.814,247,0.747,248,0.773,249,0.814,250,0.76,251,0.814,252,0.76,253,0.76,254,0.93,255,0.814,256,0.76,257,0.814,258,0.747,259,0.76,260,0.814,261,0.76,262,0.814,263,0.699,264,0.814,265,0.76,266,1.346,267,0.814,268,0.747,269,0.814,270,0.76,271,0.814,272,0.735,273,0.814,274,0.76,275,0.747,276,0.76,277,0.723,278,0.814,279,0.76,280,0.814,281,0.814,282,0.76,283,0.814,284,0.76,285,0.814,286,0.735,287,0.814,288,0.747,289,0.76,290,0.814,291,0.76,292,0.787,293,0.814,294,0.747,295,0.76,296,1.748,297,0.76,298,0.773,299,0.675,300,0.773,301,0.773,302,0.76,303,0.773,304,0.773,305,0.773,306,0.814,307,0.747,308,0.76,309,0.814,310,0.76,311,0.787,312,0.76,313,0.814,314,0.76,315,0.814,316,0.773,317,0.76,318,0.76,319,0.814,320,0.76,321,0.814,322,0.76,323,0.814,324,0.76,325,0.723,326,0.71,327,0.735,328,0.814,329,0.747,330,0.814,331,0.747,332,0.814,333,0.747,334,0.814,335,0.747,336,0.814,337,0.747,338,0.8,339,0.814,340,0.747,341,0.8,342,0.814,343,0.002,344,0.003,345,0.002]],["title/modules/AceModule.html",[346,1.155,347,3.646]],["body/modules/AceModule.html",[1,2.541,3,0.349,4,0.36,10,0.273,25,2.66,26,0.007,27,3.835,28,4.752,29,4.752,30,4.752,31,5.07,32,1.434,152,0.331,154,0.579,156,2.066,166,1.279,167,0.295,168,0.284,198,1.236,343,0.004,344,0.005,345,0.004,346,1.513,347,7.008,348,2.611,349,2.504,350,3.581,351,2.726,352,3.504,353,5.89,354,5.89,355,5.89,356,5.89,357,5.89,358,5.324,359,3.396,360,2.557,361,2.226,362,5.89,363,4.55,364,2.711,365,2.312,366,6.612,367,5.89,368,6.612]],["title/interfaces/Action.html",[369,1.369,370,2.678]],["body/interfaces/Action.html",[0,0.416,3,0.291,4,0.3,5,1.121,10,0.228,17,1.348,20,2.835,22,3.169,26,0.007,32,0.852,33,1.198,34,1.03,39,0.585,40,0.876,42,1.582,46,1.048,52,2.335,57,2.491,68,0.821,69,1.896,84,0.946,102,0.967,123,3.611,152,0.323,154,0.483,166,1.065,167,0.309,168,0.237,188,1.503,205,1.757,217,0.946,254,1.692,307,1.787,343,0.004,344,0.005,345,0.004,360,2.13,369,1.947,370,4.931,371,2.376,372,4.216,373,3.649,374,4.47,375,4.78,376,3.629,377,6.476,378,1.652,379,3.81,380,4.908,381,5.494,382,4.908,383,3.412,384,1.574,385,4.93,386,5.494,387,4.837,388,3.468,389,1.574,390,2.323,391,3.112,392,2.13,393,6.54,394,4.908,395,2.175,396,3.81,397,4.512,398,4.908,399,4.908,400,1.444,401,4.908,402,4.908,403,4.908,404,4.908,405,4.908,406,4.512,407,4.908,408,4.908,409,4.908,410,4.908,411,6.396,412,7.114,413,4.908,414,4.908,415,4.908,416,4.93,417,4.908,418,4.908,419,4.908,420,4.908,421,4.908,422,4.908,423,4.908,424,4.216,425,4.908,426,6.396,427,4.837,428,3.219,429,2.688,430,4.512,431,4.908,432,4.908,433,3.98,434,4.908,435,3.337,436,4.908,437,3.337,438,4.908,439,4.908,440,4.512,441,4.908]],["title/interfaces/ActionbarConfig.html",[369,1.369,386,3.862]],["body/interfaces/ActionbarConfig.html",[0,0.43,3,0.306,4,0.316,5,1.18,10,0.24,17,1.42,20,3.232,22,3.277,26,0.007,32,0.898,33,1.262,34,1.085,42,1.613,46,1.103,52,2.381,57,2.623,68,0.52,69,1.726,84,0.996,123,3.701,152,0.329,154,0.508,166,1.122,167,0.316,168,0.249,188,1.533,205,1.817,217,0.996,254,1.16,307,1.848,343,0.004,344,0.005,345,0.004,360,2.243,369,2.013,370,4.579,371,2.502,372,4.44,373,2.502,374,4.209,375,3.278,376,3.302,377,5.681,378,1.2,379,3.939,380,5.169,381,5.681,382,5.169,383,3.89,384,1.658,385,5.098,386,6.264,387,4.958,388,3.652,389,1.658,390,2.446,391,3.278,392,2.243,393,6.704,394,5.169,395,2.291,396,3.939,397,4.752,398,5.169,399,5.169,400,1.52,401,5.169,402,5.169,403,5.169,404,5.169,405,5.169,406,4.752,407,5.169,408,5.169,409,5.169,410,5.169,411,6.613,412,7.292,413,5.169,414,5.169,415,5.169,416,5.098,417,5.169,418,5.169,419,5.169,420,5.169,421,5.169,422,5.169,423,5.169,424,4.44,425,5.169,426,6.613,427,4.958,428,3.39,429,2.83,430,4.752,431,5.169,432,5.169,433,4.192,434,5.169,435,3.514,436,5.169,437,3.514,438,5.169,439,5.169,440,4.752,441,5.169]],["title/components/AdminEntryInputComponent.html",[0,0.292,207,1.235]],["body/components/AdminEntryInputComponent.html",[0,0.451,1,0.998,2,1.048,3,0.208,4,0.215,5,0.802,7,1.069,8,1.033,10,0.163,12,0.454,20,2.252,21,2.243,24,0.887,26,0.007,32,0.61,33,2.194,34,1.879,37,1.444,39,0.419,40,0.696,42,1.603,45,0.93,46,1.813,47,3.358,48,2.351,49,3.59,50,4.863,51,2.958,52,2.026,53,5.626,54,0.898,63,3.679,64,4.058,68,0.813,70,1.171,72,1.066,84,0.677,89,0.852,90,1.261,100,0.837,101,1.045,102,0.594,118,2.708,119,4.636,120,3.017,121,0.966,122,3.017,127,1.444,129,0.981,131,1.782,139,2.227,140,3.017,141,3.017,142,1.626,143,1.719,144,3.017,145,2.227,146,4.364,147,2.388,148,3.017,149,3.017,150,2.708,151,4.587,152,0.28,154,0.345,156,1.232,167,0.144,168,0.169,198,0.737,199,1.52,200,0.816,202,1.957,203,1.069,204,1.069,205,0.965,206,1.991,207,1.797,208,1.015,209,1.889,210,0.998,211,1.015,212,2.271,213,0.998,214,1.533,215,1.991,216,1.015,217,1.394,218,2.325,219,1.015,220,1.015,221,1.069,222,0.998,223,1.547,224,1.015,225,1.069,226,0.998,227,1.069,228,0.981,229,0.965,230,1.872,231,1.817,232,0.981,233,0.998,234,0.998,235,0.981,236,1.069,237,1.015,238,1.015,239,2.112,240,1.015,241,0.998,242,1.015,243,1.015,244,1.015,245,0.998,246,1.069,247,0.981,248,1.015,249,1.069,250,0.998,251,1.069,252,0.998,253,0.998,254,1.141,255,1.069,256,0.998,257,1.069,258,0.981,259,0.998,260,1.069,261,0.998,262,1.069,263,0.917,264,1.069,265,0.998,266,1.585,267,1.069,268,0.981,269,1.069,270,0.998,271,1.069,272,0.965,273,1.069,274,0.998,275,0.981,276,0.998,277,0.949,278,1.069,279,0.998,280,1.069,281,1.069,282,0.998,283,1.069,284,0.998,285,1.069,286,0.965,287,1.069,288,0.981,289,0.998,290,1.069,291,0.998,292,1.033,293,1.069,294,0.981,295,0.998,296,1.896,297,0.998,298,1.015,299,0.887,300,1.015,301,1.015,302,0.998,303,1.015,304,1.015,305,1.015,306,1.069,307,0.981,308,0.998,309,1.069,310,0.998,311,1.033,312,0.998,313,1.069,314,0.998,315,1.069,316,1.015,317,0.998,318,0.998,319,1.069,320,0.998,321,1.069,322,0.998,323,1.069,324,0.998,325,0.949,326,0.933,327,0.965,328,1.069,329,0.981,330,1.069,331,0.981,332,1.069,333,0.981,334,1.069,335,0.981,336,1.069,337,0.981,338,1.051,339,1.069,340,0.981,341,1.051,342,1.069,343,0.003,344,0.004,345,0.003,392,2.205,395,1.557,442,5.866,443,5.866,444,2.848,445,3.12,446,3.59,447,2.939,448,4.364,449,5.08,450,6.379,451,3.742,452,3.59,453,4.12,454,5.08,455,5.08,456,5.702,457,4.12,458,4.364,459,3.095,460,0.789,461,2.157,462,3.142,463,5.702,464,5.968,465,1.783,466,3.229,467,3.229,468,3.229,469,4.67,470,4.67,471,3.454]],["title/directives/AssetDirective.html",[200,1.044,327,1.235]],["body/directives/AssetDirective.html",[3,0.264,4,0.273,5,1.729,9,2.11,10,0.207,12,0.576,17,1.649,23,3.443,24,1.126,26,0.007,32,1.042,33,1.465,39,0.532,40,0.822,42,1.637,46,1.702,54,1.061,56,3.775,65,1.677,68,0.848,69,1.79,70,1.2,72,0.936,84,1.157,89,1.006,90,1.107,100,0.988,101,0.806,102,0.701,117,2.605,133,3.43,138,2.356,143,2.455,152,0.311,154,0.438,166,0.968,167,0.183,168,0.215,188,1.447,200,1.575,201,2.11,209,2.117,214,2.257,326,1.184,327,1.649,343,0.003,344,0.004,345,0.003,374,4.584,376,2.019,378,1.393,395,1.976,400,1.311,459,3.692,460,1.001,461,2.738,462,3.43,465,2.263,471,4.934,472,1.75,473,4.458,474,4.602,475,6.736,476,6.736,477,8.948,478,4.651,479,6.234,480,5.501,481,6.142,482,2.551,483,5.623,484,6.736,485,3.376,486,4.997,487,5.004,488,2.369,489,4.323,490,5.517,491,5.004,492,5.004,493,4.867,494,5.004,495,2.66,496,5.004,497,5.004,498,3.936,499,6.001,500,5.004,501,3.202,502,3.046,503,6.001,504,1.976,505,5.004,506,4.421,507,5.004,508,3.575,509,5.004,510,4.458,511,3.284,512,5.004,513,5.004,514,3.437,515,5.004,516,3.15,517,5.004,518,5.004,519,2.924,520,5.004,521,2.03,522,3.615,523,3.615,524,3.284,525,3.83,526,6.736,527,7.257,528,3.83,529,3.615,530,5.004,531,1.765,532,3.83,533,2.924,534,3.437,535,4.458,536,5.517,537,5.004,538,5.004,539,5.004]],["title/components/AssetListComponent.html",[0,0.292,213,1.278]],["body/components/AssetListComponent.html",[0,0.385,1,0.982,2,1.036,3,0.205,4,0.212,5,0.789,7,1.052,8,1.017,10,0.16,17,1.38,20,2.226,21,0.95,22,2.931,24,0.873,26,0.007,32,0.872,33,2.194,34,1.88,37,1.427,39,0.412,40,0.688,42,1.054,45,1.082,46,1.535,52,1.071,54,0.888,56,2.612,57,3.295,65,1.403,68,0.819,69,1.328,70,1.19,72,1.054,85,1.636,88,1.571,89,1.206,90,1.712,100,0.974,101,1.072,102,0.806,117,1.5,119,4.954,121,0.741,124,1.532,127,1.427,129,0.966,133,2.274,152,0.215,154,0.34,167,0.142,168,0.167,198,0.725,199,1.502,200,0.803,202,1.942,203,1.052,204,1.052,205,0.95,206,1.976,207,0.95,208,0.999,209,1.695,210,0.982,211,0.999,212,2.259,213,1.845,214,1.906,215,1.976,216,0.999,217,1.612,218,2.315,219,0.999,220,0.999,221,1.052,222,0.982,223,1.529,224,0.999,225,1.052,226,0.982,227,1.052,228,0.966,229,0.95,230,1.707,231,1.8,232,0.966,233,0.982,234,0.982,235,0.966,236,1.052,237,0.999,238,0.999,239,2.099,240,0.999,241,0.982,242,0.999,243,0.999,244,0.999,245,0.982,246,1.052,247,0.966,248,0.999,249,1.052,250,0.982,251,1.052,252,0.982,253,0.982,254,1.127,255,1.052,256,0.982,257,1.052,258,0.966,259,0.982,260,1.052,261,0.982,262,1.052,263,1.311,264,1.052,265,0.982,266,1.571,267,1.052,268,0.966,269,1.052,270,0.982,271,1.052,272,0.95,273,1.052,274,0.982,275,0.966,276,0.982,277,0.934,278,1.052,279,0.982,280,1.052,281,1.052,282,0.982,283,1.052,284,0.982,285,1.052,286,0.95,287,1.052,288,0.966,289,0.982,290,1.052,291,0.982,292,1.017,293,1.052,294,0.966,295,0.982,296,1.981,297,0.982,298,0.999,299,0.873,300,0.999,301,2.45,302,0.982,303,0.999,304,0.999,305,0.999,306,1.052,307,0.966,308,0.982,309,1.052,310,0.982,311,1.017,312,0.982,313,1.052,314,0.982,315,1.052,316,0.999,317,0.982,318,0.982,319,1.052,320,0.982,321,1.052,322,0.982,323,1.052,324,0.982,325,0.934,326,0.918,327,0.95,328,1.052,329,0.966,330,1.052,331,0.966,332,1.052,333,0.966,334,1.052,335,0.966,336,1.052,337,0.966,338,1.034,339,1.052,340,0.966,341,1.034,342,1.052,343,0.003,344,0.004,345,0.003,378,1.166,379,2.059,383,2.679,389,1.109,396,2.991,400,1.017,429,1.893,483,2.267,504,1.532,508,3.523,511,2.546,531,1.477,540,5.021,541,4.616,542,3.456,543,5.021,544,3.75,545,3.414,546,3.699,547,6.638,548,3.422,549,5.636,550,3.376,551,6.612,552,2.931,553,5.636,554,2.991,555,4.314,556,1.844,557,3.879,558,3.456,559,3.456,560,1.411,561,3.456,562,3.456,563,3.879,564,3.879,565,3.879,566,2,567,3.879,568,3.177,569,2.059,570,3.879,571,1.893,572,3.879,573,2.969,574,3.456,575,3.879,576,1.844,577,3.177,578,2.267,579,3.879,580,3.879,581,2.376,582,1.44,583,3.871,584,3.456,585,3.879,586,2.567,587,3.177,588,3.879,589,3.879,590,3.879,591,3.879,592,2.969,593,3.879,594,2.665,595,1.411,596,3.879,597,3.879,598,3.177,599,3.879,600,3.879,601,3.879,602,2.803,603,2.442,604,3.879,605,3.879,606,2.969,607,3.879,608,2.442,609,2.267,610,5.636,611,4.314]],["title/components/AssetgroupSelectComponent.html",[0,0.292,210,1.278]],["body/components/AssetgroupSelectComponent.html",[0,0.407,1,1.088,2,1.115,3,0.227,4,0.234,5,0.874,7,1.165,8,1.126,10,0.178,17,1.484,21,1.052,22,3.103,24,0.967,26,0.007,33,2.201,34,1.887,37,1.536,39,0.457,40,0.74,42,1.606,45,0.701,46,1.153,54,0.955,57,3.452,65,1.51,68,0.769,69,1.527,70,1.13,84,0.738,89,0.642,90,0.951,100,0.63,101,1.05,102,0.447,121,0.925,127,1.536,129,1.07,143,2.301,152,0.231,154,0.376,167,0.157,168,0.184,198,0.803,199,1.617,200,0.889,202,2.035,203,1.165,204,1.165,205,1.052,206,2.071,207,1.052,208,1.107,209,1,210,1.933,211,2.297,212,2.329,213,1.088,214,1.608,215,2.071,216,1.107,217,1.435,218,2.378,219,1.107,220,1.107,221,1.165,222,1.088,223,1.645,224,1.107,225,1.165,226,1.088,227,1.165,228,1.07,229,1.052,230,1.754,231,1.906,232,1.07,233,1.088,234,1.088,235,1.07,236,1.165,237,1.107,238,1.107,239,2.184,240,1.107,241,1.088,242,1.107,243,1.107,244,1.107,245,1.088,246,1.165,247,1.07,248,1.107,249,1.165,250,1.088,251,1.165,252,1.088,253,1.088,254,1.671,255,1.165,256,1.088,257,1.165,258,1.07,259,1.088,260,1.165,261,1.088,262,1.165,263,1,264,1.165,265,1.088,266,1.663,267,1.165,268,1.07,269,1.165,270,1.088,271,1.165,272,1.052,273,1.165,274,1.088,275,1.07,276,1.088,277,1.034,278,1.165,279,1.088,280,1.165,281,1.165,282,1.088,283,1.165,284,1.088,285,1.165,286,1.052,287,1.165,288,1.07,289,1.088,290,1.165,291,1.088,292,1.126,293,1.165,294,1.07,295,1.088,296,1.94,297,1.088,298,1.107,299,0.967,300,1.107,301,1.107,302,1.088,303,1.107,304,1.107,305,1.107,306,1.165,307,1.07,308,1.088,309,1.165,310,1.088,311,1.126,312,1.088,313,1.165,314,1.088,315,1.165,316,1.107,317,1.088,318,1.088,319,1.165,320,1.088,321,1.165,322,1.088,323,1.165,324,1.088,325,1.034,326,1.017,327,1.052,328,1.165,329,1.07,330,1.165,331,1.07,332,1.165,333,1.07,334,1.165,335,1.07,336,1.165,337,1.07,338,1.145,339,1.165,340,1.07,341,1.145,342,1.165,343,0.003,344,0.004,345,0.003,378,1.579,395,1.697,460,0.86,482,2.297,521,1.828,612,8.052,613,7.402,614,3.519,615,5.403,616,5.401,617,4.827,618,7.634,619,7.028,620,4.15,621,3.522,622,5.756,623,4.297,624,5.403,625,4.297,626,4.297,627,4.297,628,4.297,629,3.828,630,3.828,631,3.828,632,3.105,633,2.215,634,1.595,635,2.705,636,3.105,637,4.297,638,4.297,639,4.967,640,3.674]],["title/guards/AuthGuard.html",[641,3.862,642,3.862]],["body/guards/AuthGuard.html",[3,0.329,4,0.34,10,0.257,12,0.717,17,1.524,26,0.007,32,0.964,39,0.662,40,0.76,54,1.222,68,0.695,70,0.984,72,1.581,73,2.568,84,1.069,86,5.331,89,0.93,100,0.914,101,0.745,102,0.648,142,2.568,152,0.348,154,0.545,156,1.946,167,0.228,168,0.267,188,1.379,275,1.55,343,0.004,344,0.005,345,0.004,376,2.512,459,3.733,460,1.246,461,3.407,462,3.747,465,2.816,521,2.34,566,4.563,641,5.941,642,5.941,643,6.227,644,7.534,645,5.548,646,5.331,647,4.702,648,5.994,649,4.385,650,3.522,651,5.518,652,4.886,653,3.689,654,7.251,655,7.607,656,4.126,657,4.003,658,6.227,659,6.227,660,5.331,661,3.51,662,2.298,663,3.407,664,4.844,665,3.121,666,3.92,667,4.087,668,6.227,669,5.1,670,4.087,671,1.473,672,2.568,673,2.459,674,5.548,675,5.1,676,6.227,677,6.227,678,6.227,679,7.762,680,6.227,681,6.227,682,5.548,683,6.227,684,6.227,685,6.227]],["title/modules/AuthModule.html",[346,1.155,686,3.646]],["body/modules/AuthModule.html",[2,1.406,3,0.321,4,0.331,10,0.251,12,0.7,25,2.763,26,0.007,152,0.367,154,0.532,155,2.452,156,1.9,167,0.28,168,0.261,188,1.08,198,1.137,272,2.383,291,2.466,292,1.593,308,2.466,343,0.004,344,0.005,345,0.004,346,1.914,348,2.4,349,2.302,350,3.449,351,2.506,352,3.374,358,5.216,359,3.223,360,2.35,361,2.046,364,2.574,365,2.674,429,2.965,474,3.434,642,5.851,686,7.18,687,5.415,688,5.415,689,5.415,690,5.415,691,5.415,692,7.066,693,5.395,694,4.978,695,5.067,696,4.319,697,5.851,698,3.634,699,2.749,700,5.524,701,6.043,702,5.251,703,6.811,704,4.652,705,5.415,706,6.078,707,4.652,708,5.415,709,4.978,710,6.078,711,6.078,712,6.078,713,6.078,714,6.078]],["title/injectables/AuthService.html",[662,1.494,693,2.949]],["body/injectables/AuthService.html",[3,0.325,4,0.186,10,0.141,12,0.392,25,2.032,26,0.007,27,3.401,32,0.952,34,0.958,39,0.362,44,3.224,45,0.835,46,1.564,54,1.429,55,2.718,68,0.69,69,1.922,70,1.13,87,2.022,88,1.945,89,1.375,100,1.277,101,1.041,102,0.945,117,1.318,121,0.674,133,2.76,138,1.791,152,0.261,154,0.298,166,1.19,167,0.125,168,0.146,188,1.733,209,2.258,275,1.826,292,2.154,296,1.361,299,1.152,311,1.922,343,0.002,344,0.003,345,0.005,360,1.98,389,1.955,400,0.893,453,4.445,457,5.566,459,2.594,460,0.682,462,3.108,465,1.541,486,3.361,488,1.99,489,2.718,504,3.247,531,0.893,533,4.915,544,4.352,554,4.241,556,3.252,560,2.489,573,6.293,582,1.265,648,3.873,660,3.517,662,1.516,672,1.405,673,1.346,674,3.036,693,2.993,695,2.064,696,1.925,715,1.579,716,3.036,717,4.194,718,2.993,719,3.361,720,6.095,721,5.976,722,4.194,723,3.873,724,4.709,725,5.039,726,4.194,727,5.896,728,4.194,729,5.481,730,3.7,731,5.603,732,2.993,733,4.562,734,4.562,735,4.562,736,5.121,737,4.194,738,5.121,739,6.152,740,4.562,741,7.334,742,6.841,743,5.121,744,5.121,745,3.036,746,3.408,747,3.224,748,4.562,749,5.121,750,3.408,751,5.481,752,6.746,753,4.562,754,3.408,755,5.121,756,3.408,757,1.94,758,6.841,759,3.408,760,8.41,761,3.323,762,3.408,763,2.802,764,6.095,765,3.102,766,5.121,767,3.408,768,4.49,769,2.791,770,3.408,771,6.863,772,5.121,773,3.408,774,3.408,775,5.121,776,3.408,777,5.121,778,3.408,779,4.194,780,2.718,781,3.036,782,3.408,783,4.562,784,2.236,785,2.236,786,1.708,787,2.145,788,6.841,789,6.841,790,5.121,791,3.408,792,3.408,793,5.603,794,5.121,795,5.121,796,5.121,797,3.408,798,6.152,799,5.603,800,3.408,801,3.408,802,6.152,803,3.408,804,4.194,805,3.036,806,3.408,807,3.361,808,3.408,809,3.408,810,3.408,811,3.408,812,3.408,813,5.121,814,3.036,815,5.121,816,3.408,817,3.102,818,3.408,819,3.224,820,3.517,821,3.408,822,5.121,823,5.121,824,3.408,825,3.408,826,3.408,827,3.361,828,5.121,829,5.121,830,3.7,831,5.121,832,5.121,833,3.224,834,5.121,835,5.121,836,5.121,837,5.121,838,3.408,839,3.408,840,3.408,841,5.121,842,3.408,843,3.408,844,3.408,845,3.408,846,3.408,847,3.408,848,3.408,849,3.408,850,3.408,851,3.408,852,3.036,853,2.145,854,3.036,855,3.408]],["title/modules/CalendarModule.html",[346,1.155,856,3.312]],["body/modules/CalendarModule.html",[2,1.36,3,0.305,4,0.315,10,0.238,12,0.664,25,2.697,26,0.007,27,4.022,54,0.909,68,0.731,70,0.731,89,0.862,100,0.847,101,0.691,102,0.601,152,0.353,154,0.505,166,1.116,167,0.271,168,0.248,188,1.025,198,1.079,220,2.49,224,2.49,248,2.49,284,2.448,343,0.004,344,0.005,345,0.004,346,1.868,348,2.279,349,2.186,350,3.366,351,2.379,352,3.294,359,3.119,360,2.231,361,1.942,364,1.942,365,2.587,661,3.345,696,4.179,698,3.516,699,2.609,700,5.899,723,5.734,856,6.505,857,5.141,858,5.141,859,5.141,860,6.985,861,5.141,862,4.657,863,5.344,864,5.141,865,7.397,866,4.323,867,5.77,868,5.77,869,5.77,870,5.77,871,5.77,872,5.77,873,5.77,874,5.141,875,6.058,876,5.77,877,6.058,878,5.77,879,6.058,880,5.141,881,5.141,882,5.77,883,3.496,884,3.26,885,5.141,886,5.77,887,5.77,888,5.77]],["title/classes/Collection.html",[168,0.217,889,3.312]],["body/classes/Collection.html",[3,0.182,4,0.187,10,0.142,12,0.396,26,0.007,32,1.467,39,0.926,40,0.629,45,1.4,46,1.47,52,2.606,54,0.812,68,0.82,70,1.152,84,1.264,88,2.206,89,1.358,90,1.629,98,1.473,100,1.279,101,1.044,102,0.93,121,1.13,138,1.203,152,0.131,166,1.424,167,0.126,168,0.221,183,1.526,188,1.498,217,1.062,343,0.002,344,0.003,345,0.002,361,1.157,378,2.009,400,2.285,460,0.688,472,1.203,495,2.907,504,2.036,531,1.801,546,4.059,550,3.82,569,3.647,634,1.913,660,4.72,661,3.107,664,4.613,665,1.723,666,4.326,732,3.615,757,3.59,779,2.816,889,6.241,890,2.495,891,3.063,892,6.185,893,5.156,894,4.944,895,5.156,896,5.156,897,6.872,898,4.593,899,4.223,900,5.156,901,5.156,902,3.123,903,5.156,904,5.156,905,4.593,906,5.675,907,4.223,908,6.185,909,3.615,910,3.1,911,3.438,912,3.383,913,8.305,914,3.438,915,4.059,916,5.156,917,5.156,918,6.066,919,3.689,920,3.438,921,4.163,922,4.51,923,6.872,924,5.156,925,5.156,926,3.438,927,5.156,928,3.946,929,3.246,930,5.156,931,3.438,932,5.156,933,5.156,934,3.438,935,5.156,936,5.156,937,3.438,938,3.438,939,2.658,940,5.156,941,3.438,942,5.156,943,5.156,944,3.438,945,4.016,946,5.156,947,5.156,948,3.438,949,5.156,950,3.438,951,3.438,952,3.438,953,3.438,954,2.361,955,3.438,956,3.438,957,3.438,958,3.438,959,3.438,960,3.353,961,3.438,962,3.438,963,3.438,964,2.164,965,1.593,966,5.26,967,3.946,968,6.185,969,5.156,970,5.156,971,3.438,972,1.881,973,3.438,974,3.438,975,3.063,976,6.872,977,7.362,978,6.185,979,8.015,980,3.438,981,3.438,982,3.438,983,3.438,984,3.063,985,3.438,986,3.438,987,3.438,988,3.438]],["title/classes/Config.html",[168,0.217,389,1.442]],["body/classes/Config.html",[3,0.328,4,0.338,10,0.256,12,0.714,26,0.007,39,0.659,40,0.945,45,1.012,46,1.606,54,1.22,68,0.756,69,1.883,70,0.982,73,3.646,88,2.196,89,1.261,100,0.91,101,0.743,102,0.879,117,2.995,121,0.816,167,0.227,168,0.333,188,1.376,343,0.004,344,0.005,345,0.004,387,3.759,389,2.858,392,2.995,488,1.805,504,2.45,581,3.728,586,3.758,633,3.199,653,3.681,673,3.334,761,4.003,866,3.626,890,2.503,989,5.528,990,7.522,991,6.343,992,6.205,993,6.205,994,6.205,995,6.9,996,7.745,997,4.314,998,7.745,999,6.9,1000,7.745,1001,4.876,1002,6.9,1003,4.526,1004,5.082,1005,4.749,1006,6.205,1007,6.205,1008,6.205,1009,7.745,1010,8.443,1011,6.205]],["title/components/CrudComponent.html",[0,0.292,222,1.278]],["body/components/CrudComponent.html",[0,0.33,1,0.76,2,0.855,3,0.159,4,0.164,5,1.41,7,0.814,8,0.787,9,1.266,10,0.124,12,0.346,17,1.138,21,0.735,22,2.512,24,0.675,26,0.007,32,1.134,33,2.173,34,1.859,37,1.177,39,0.319,40,0.567,42,1.296,45,0.758,46,1.686,52,2.18,54,1.204,57,2.897,65,1.157,68,0.777,69,1.386,70,1.142,72,0.869,75,3.558,84,0.798,88,1.1,89,1.211,90,1.029,100,1.017,101,1.05,102,0.863,117,3.262,121,0.843,124,2.737,127,1.622,129,0.747,131,2.002,143,2.305,152,0.331,153,1.358,154,0.263,156,2.002,166,0.581,167,0.11,168,0.129,183,1.685,188,1.404,198,0.561,199,1.517,200,0.621,201,1.266,202,1.708,203,0.814,204,0.814,205,0.735,206,1.738,207,0.735,208,0.773,209,0.699,210,0.76,211,0.773,212,2.074,213,0.76,214,1.302,215,1.738,216,0.773,217,1.568,218,2.143,219,0.773,220,0.773,221,0.814,222,1.856,223,1.261,224,0.773,225,0.814,226,0.76,227,0.814,228,0.747,229,0.735,230,1.803,231,1.543,232,0.747,233,0.76,234,0.76,235,0.747,236,0.814,237,0.773,238,0.773,239,1.88,240,1.65,241,0.76,242,0.773,243,1.65,244,0.773,245,0.76,246,0.814,247,0.747,248,0.773,249,0.814,250,0.76,251,0.814,252,0.76,253,0.76,254,0.93,255,0.814,256,0.76,257,0.814,258,0.747,259,0.76,260,0.814,261,0.76,262,0.814,263,1.491,264,0.814,265,0.76,266,1.346,267,0.814,268,0.747,269,0.814,270,0.76,271,0.814,272,0.735,273,0.814,274,0.76,275,0.747,276,0.76,277,0.723,278,0.814,279,0.76,280,0.814,281,0.814,282,0.76,283,0.814,284,0.76,285,0.814,286,0.735,287,0.814,288,0.747,289,0.76,290,0.814,291,0.76,292,0.787,293,0.814,294,0.747,295,0.76,296,1.748,297,0.76,298,0.773,299,0.675,300,0.773,301,0.773,302,0.76,303,0.773,304,0.773,305,0.773,306,0.814,307,0.747,308,0.76,309,0.814,310,0.76,311,0.787,312,0.76,313,0.814,314,0.76,315,0.814,316,0.773,317,0.76,318,0.76,319,0.814,320,0.76,321,0.814,322,0.76,323,0.814,324,0.76,325,0.723,326,0.71,327,0.735,328,0.814,329,0.747,330,0.814,331,0.747,332,0.814,333,0.747,334,0.814,335,0.747,336,0.814,337,0.747,338,0.8,339,0.814,340,0.747,341,0.8,342,0.814,343,0.002,344,0.003,345,0.002,361,1.565,376,1.211,378,0.962,379,3.4,384,0.858,389,1.626,392,2.835,396,3.02,400,1.218,459,1.96,460,0.93,461,1.643,462,2.585,465,1.358,474,2.627,481,5.008,482,1.761,501,2.21,508,1.593,521,1.715,545,4.441,552,3.06,581,2.399,586,1.161,602,3.359,606,5.305,609,1.755,611,2.298,650,1.161,656,3.381,657,2.897,663,1.643,673,3.272,693,3.744,695,3.447,757,2.427,786,1.505,807,1.97,965,3.84,1012,2.675,1013,3.808,1014,3.193,1015,3.808,1016,3.808,1017,3.558,1018,4.649,1019,3.02,1020,3.447,1021,3.215,1022,4.142,1023,5.69,1024,5.02,1025,3.808,1026,4.649,1027,4.649,1028,4.649,1029,3.582,1030,3.447,1031,4.468,1032,3.582,1033,3.62,1034,3.215,1035,2.07,1036,2.477,1037,4.649,1038,4.05,1039,3.002,1040,3.808,1041,4.142,1042,2.627,1043,3.002,1044,4.649,1045,3.002,1046,3.002,1047,2.701,1048,5.611,1049,3.002,1050,2.397,1051,4.142,1052,3.002,1053,2.717,1054,4.649,1055,3.002,1056,3.359,1057,3.808,1058,4.649,1059,3.002,1060,3.211,1061,4.649,1062,3.002,1063,4.649,1064,3.002,1065,4.649,1066,3.002,1067,2.21,1068,3.045,1069,4.649,1070,3.002,1071,3.359,1072,3.002,1073,3.193,1074,2.933,1075,3.051,1076,3.002,1077,3.002,1078,1.643,1079,2.459,1080,2.675,1081,2.298,1082,1.97,1083,1.97,1084,3.002,1085,3.002,1086,3.002,1087,3.002,1088,2.169,1089,3.002,1090,2.675,1091,4.142,1092,2.298,1093,2.675,1094,3.002,1095,3.002,1096,3.002,1097,3.002,1098,3.002,1099,3.002,1100,3.002,1101,3.002,1102,3.002,1103,3.002,1104,3.002,1105,3.002,1106,3.002,1107,2.675,1108,3.002,1109,3.002,1110,2.817,1111,2.397,1112,4.111,1113,3.002,1114,2.062,1115,3.359,1116,3.002,1117,1.89,1118,1.89,1119,2.062,1120,2.062,1121,3.002,1122,1.97,1123,4.142]],["title/interfaces/CrudConfig.html",[369,1.369,1038,2.949]],["body/interfaces/CrudConfig.html",[0,0.465,3,0.201,4,0.208,10,0.272,12,0.439,20,2.198,26,0.007,32,1.496,34,1.041,39,0.405,40,0.679,48,1.563,54,1.338,66,4.26,68,0.87,69,1.862,72,1.646,73,2.295,87,2.198,102,1.038,121,0.732,152,0.251,156,1.192,167,0.139,183,1.648,211,1.434,214,1.273,217,1.459,230,1.837,254,1.761,263,1.681,286,1.769,299,1.949,325,1.739,343,0.003,344,0.004,345,0.003,369,1.034,371,1.645,378,2.055,383,3.124,384,1.09,390,3.581,392,2.152,481,5.798,483,4.223,489,4.259,493,4.021,495,3.169,508,2.954,511,3.653,531,1.458,550,2.579,552,3.543,566,3.725,571,2.715,576,2.645,582,3.152,620,4.137,640,3.372,653,2.645,656,3.915,757,2.911,764,7.15,780,2.954,817,4.378,819,4.138,820,4.514,866,3.253,894,2.869,939,2.869,965,2.579,1021,3.145,1038,4.223,1040,4.559,1067,4.288,1124,3.397,1125,2.4,1126,5.566,1127,5.566,1128,7.227,1129,7.227,1130,7.227,1131,7.227,1132,8.025,1133,7.227,1134,7.227,1135,5.221,1136,6.438,1137,7.227,1138,7.227,1139,6.438,1140,5.574,1141,7.227,1142,7.227,1143,7.227,1144,7.227,1145,6.438,1146,7.227,1147,7.227,1148,4.021,1149,4.959,1150,4.021,1151,5.566,1152,4.964,1153,5.531,1154,2.645,1155,1.985,1156,3.725,1157,5.267,1158,2.954,1159,4.26,1160,5.566,1161,4.959,1162,3.653,1163,4.083,1164,4.021,1165,4.959,1166,4.26,1167,3.045,1168,4.378,1169,4.959,1170,4.26,1171,3.504,1172,5.566,1173,4.26,1174,4.26,1175,4.559,1176,5.566,1177,2.869,1178,6.438,1179,6.438,1180,4.378,1181,7.227,1182,4.959,1183,5.566,1184,3.372,1185,2.715,1186,3.653,1187,3.372,1188,5.566,1189,4.559,1190,3.653,1191,4.559,1192,4.26,1193,5.566,1194,4.559,1195,3.653,1196,5.566,1197,4.959,1198,3.813]],["title/modules/DataModule.html",[346,1.155,1199,3.466]],["body/modules/DataModule.html",[3,0.223,4,0.23,10,0.174,25,2.499,26,0.007,27,2.64,54,0.663,70,0.534,89,0.629,100,0.618,101,0.504,102,0.439,117,2.312,152,0.373,154,0.369,155,1.699,156,1.316,166,0.815,167,0.219,168,0.181,188,0.749,198,0.788,207,2.135,217,1.299,222,2.328,228,2.172,229,2.135,230,1.854,237,2.405,238,2.368,240,2.368,241,2.364,242,2.405,243,2.368,244,2.405,331,2.289,333,2.289,343,0.003,344,0.004,345,0.003,346,0.964,348,1.663,349,1.595,350,2.866,351,1.737,352,2.804,358,5.194,359,2.521,360,1.629,361,1.418,363,3.378,364,2.013,365,2.091,443,3.043,460,0.843,609,2.462,663,2.305,686,6.642,698,2.842,699,1.905,700,5.022,702,4.107,704,3.224,721,5.701,723,3.764,724,3.224,725,3.45,730,4.32,786,2.997,863,4.32,1003,2.462,1033,4.69,1079,3.45,1081,4.576,1082,3.924,1083,2.764,1199,6.919,1200,3.753,1201,3.753,1202,3.753,1203,3.753,1204,3.753,1205,6.642,1206,6.314,1207,6.033,1208,5.701,1209,5.998,1210,5.029,1211,3.753,1212,3.753,1213,5.979,1214,4.212,1215,5.327,1216,5.327,1217,3.224,1218,3.043,1219,4.212,1220,4.212,1221,3.753,1222,4.212,1223,3.622,1224,3.622,1225,3.043,1226,3.45,1227,3.043,1228,5.327,1229,4.576,1230,4.212,1231,4.212,1232,3.043,1233,3.753,1234,4.212,1235,3.45,1236,3.753,1237,3.753,1238,3.753,1239,4.212]],["title/components/DatetimeComponent.html",[0,0.292,226,1.278]],["body/components/DatetimeComponent.html",[0,0.445,1,0.964,2,1.022,3,0.201,4,0.207,5,0.774,7,1.032,8,0.997,9,1.604,10,0.157,12,0.438,17,1.36,18,5.451,21,0.931,24,0.856,25,1.836,26,0.007,27,2.454,28,3.592,29,3.041,30,3.592,31,3.041,32,1.241,33,2.193,34,1.878,37,1.407,39,0.404,40,0.678,42,1.587,43,4.133,45,1.177,46,1.248,47,2.785,54,0.875,58,4.738,59,5.048,62,3.366,65,1.383,68,0.742,69,1.112,70,1.143,72,1.039,84,0.954,88,1.315,89,1.078,90,1.597,95,3.498,98,1.588,100,0.963,101,1.053,102,0.683,103,3.498,113,3.498,117,2.149,121,1.01,124,1.503,127,1.407,129,0.947,131,1.737,139,4.796,152,0.275,153,1.721,154,0.333,155,1.535,167,0.139,168,0.163,193,2.15,194,2.395,198,0.711,199,1.481,200,0.787,201,1.604,202,1.925,203,1.032,204,1.032,205,0.931,206,1.958,207,0.931,208,0.98,209,0.885,210,0.964,211,0.98,212,2.246,213,0.964,214,1.502,215,1.958,216,0.98,217,1.377,218,2.302,219,0.98,220,1.86,221,1.032,222,0.964,223,1.507,224,0.98,225,1.032,226,2.031,227,1.032,228,0.947,229,0.931,230,1.698,231,1.781,232,0.947,233,0.964,234,0.964,235,0.947,236,1.032,237,0.98,238,0.98,239,2.083,240,0.98,241,0.964,242,0.98,243,0.98,244,0.98,245,0.964,246,1.032,247,0.947,248,0.98,249,1.032,250,0.964,251,1.032,252,0.964,253,0.964,254,1.112,255,1.032,256,0.964,257,1.032,258,0.947,259,0.964,260,1.032,261,0.964,262,1.032,263,0.885,264,1.032,265,0.964,266,1.553,267,1.032,268,0.947,269,1.032,270,0.964,271,1.032,272,0.931,273,1.032,274,0.964,275,0.947,276,0.964,277,0.916,278,1.032,279,0.964,280,1.032,281,1.032,282,0.964,283,1.032,284,0.964,285,1.032,286,0.931,287,1.032,288,0.947,289,0.964,290,1.032,291,0.964,292,0.997,293,1.032,294,0.947,295,0.964,296,1.878,297,0.964,298,0.98,299,0.856,300,0.98,301,0.98,302,0.964,303,0.98,304,0.98,305,0.98,306,1.032,307,0.947,308,0.964,309,1.032,310,0.964,311,0.997,312,0.964,313,1.032,314,0.964,315,1.032,316,0.98,317,0.964,318,0.964,319,1.032,320,0.964,321,1.032,322,0.964,323,1.032,324,0.964,325,0.916,326,0.9,327,0.931,328,1.032,329,0.947,330,1.032,331,0.947,332,1.032,333,0.947,334,1.032,335,0.947,336,1.032,337,0.947,338,1.014,339,1.032,340,0.947,341,1.014,342,1.032,343,0.003,344,0.004,345,0.003,378,1.493,445,3.041,595,2.022,620,3.958,757,2.105,862,4.834,883,5.463,884,4.079,1050,2.865,1157,3.647,1240,3.39,1241,4.738,1242,4.951,1243,5.557,1244,3.837,1245,6.565,1246,4.552,1247,6.565,1248,4.951,1249,3.805,1250,4.219,1251,4.015,1252,3.805,1253,5.557,1254,3.805,1255,3.805,1256,5.557,1257,3.805,1258,6.432,1259,3.805,1260,4.552,1261,3.805,1262,4.552,1263,3.805,1264,5.557,1265,3.805,1266,3.805,1267,3.805,1268,4.951,1269,3.805,1270,4.951,1271,5.557,1272,3.498,1273,2.749,1274,2.15,1275,3.805,1276,2.613]],["title/pipes/DatetimePipe.html",[860,3.646,1277,2.678]],["body/pipes/DatetimePipe.html",[3,0.334,4,0.345,10,0.262,12,0.729,17,1.549,24,1.424,26,0.007,32,0.98,45,1.558,52,2.164,54,0.997,68,0.567,69,1.972,70,0.802,72,1.466,88,1.855,89,0.945,100,0.929,101,1.02,102,0.659,121,0.833,142,3.233,152,0.325,154,0.554,166,1.224,167,0.232,168,0.272,188,1.514,343,0.004,344,0.005,345,0.004,504,2.5,586,3.032,673,3.096,718,4.583,757,2.97,860,5.665,883,5.161,894,4.042,912,5.146,1035,2.303,1036,3.032,1241,5.146,1272,4.936,1273,4.574,1277,4.162,1278,4.574,1279,5.64,1280,5.386,1281,4.43,1282,5.386,1283,5.146,1284,6.33,1285,7.005,1286,8.154,1287,6.33,1288,7.841,1289,5.665,1290,4.574,1291,3.985,1292,6.33,1293,6.33,1294,5.64,1295,6.33,1296,6.33,1297,6.33,1298,6.33,1299,6.33,1300,6.33,1301,6.33]],["title/interfaces/Day.html",[369,1.369,1302,4.133]],["body/interfaces/Day.html",[0,0.299,3,0.181,4,0.187,10,0.142,12,0.395,17,0.84,22,2.274,23,2.329,26,0.007,32,1.275,33,0.747,34,0.642,37,0.87,39,0.912,40,0.628,42,1.63,46,1.306,57,1.553,68,0.826,69,1.803,73,2.124,84,1.263,87,2.441,88,1.828,89,0.769,90,1.628,98,1.766,102,0.715,138,3.002,143,2.218,152,0.281,154,0.301,166,1.423,167,0.188,168,0.332,183,1.525,186,3.098,188,1.627,284,0.87,299,1.159,343,0.002,344,0.003,345,0.002,369,1.676,371,1.481,378,1.847,400,1.35,451,2.253,495,2.906,521,1.863,531,1.35,546,4.056,550,1.591,569,2.734,594,2.358,595,1.874,664,4.026,665,1.721,757,1.951,761,2.222,862,3.242,880,3.059,881,5.506,883,5.547,885,7.866,890,1.385,929,2.162,960,3.015,965,1.591,1030,4.853,1035,1.249,1036,1.992,1047,1.448,1050,2.655,1068,3.264,1148,2.481,1155,1.837,1157,2.253,1185,1.675,1217,2.628,1242,4.589,1244,2.007,1248,7.765,1251,2.481,1270,7.765,1272,5.306,1273,2.481,1276,3.538,1290,2.481,1291,2.162,1302,7.855,1303,3.059,1304,7.358,1305,3.909,1306,6.883,1307,7.358,1308,5.503,1309,8.584,1310,4.219,1311,3.721,1312,6.555,1313,8.829,1314,6.181,1315,3.721,1316,2.812,1317,2.358,1318,2.253,1319,3.434,1320,2.812,1321,3.434,1322,5.506,1323,5.151,1324,6.026,1325,2.91,1326,5.151,1327,3.059,1328,2.628,1329,1.879,1330,3.434,1331,3.434,1332,3.434,1333,7.726,1334,2.628,1335,3.434,1336,3.434,1337,3.434,1338,2.812,1339,3.434,1340,2.628,1341,4.219,1342,1.77,1343,3.434,1344,3.434,1345,3.434,1346,3.434,1347,3.434,1348,3.434,1349,6.867,1350,3.434,1351,3.434,1352,3.434,1353,4.589,1354,3.434,1355,3.434,1356,3.434,1357,3.434,1358,3.434,1359,3.434,1360,3.434,1361,3.434,1362,7.726,1363,5.151,1364,6.181,1365,5.151,1366,6.181,1367,5.151,1368,3.434,1369,3.434,1370,3.434,1371,3.434,1372,3.434,1373,7.358,1374,3.434,1375,3.434,1376,3.434,1377,3.434,1378,3.434,1379,3.434,1380,6.867,1381,3.434,1382,5.151,1383,5.151,1384,5.062,1385,3.434,1386,3.434,1387,3.434,1388,3.434,1389,3.434,1390,5.151,1391,3.434,1392,3.434,1393,5.151,1394,2.481,1395,1.675,1396,3.434,1397,3.434,1398,3.434,1399,3.434,1400,3.434,1401,3.434,1402,3.434,1403,3.434,1404,5.151,1405,3.434,1406,3.434,1407,3.434,1408,5.062,1409,3.434,1410,3.434,1411,3.434,1412,3.434,1413,3.434,1414,3.434,1415,3.434,1416,3.434,1417,6.181,1418,6.181,1419,3.434,1420,6.181,1421,3.434,1422,3.434,1423,3.434,1424,3.434,1425,5.151,1426,3.434,1427,3.434,1428,3.434,1429,3.434,1430,3.059,1431,6.181,1432,3.434,1433,2.628,1434,3.059,1435,2.08,1436,3.434,1437,3.434,1438,3.434,1439,5.625,1440,5.151,1441,3.434,1442,3.434,1443,3.434,1444,3.434,1445,3.434,1446,3.721,1447,3.434,1448,3.434,1449,3.434,1450,2.481,1451,3.434,1452,3.434,1453,3.434,1454,3.434,1455,3.434,1456,3.434,1457,3.434,1458,3.434,1459,3.434,1460,2.08,1461,3.434,1462,2.628,1463,3.434,1464,3.434,1465,3.434,1466,3.434,1467,3.434,1468,3.434]],["title/components/DefaultEntryInputComponent.html",[0,0.292,228,1.256]],["body/components/DefaultEntryInputComponent.html",[0,0.455,1,1.021,2,1.065,3,0.213,4,0.22,5,1.38,7,1.093,8,1.056,10,0.167,12,0.464,20,2.288,21,2.252,24,0.907,26,0.007,32,0.624,33,2.196,34,1.881,37,1.467,39,0.428,40,0.707,42,1.667,45,0.945,46,1.818,47,3.4,48,2.367,49,3.648,50,4.883,51,2.995,52,2.047,53,5.66,54,0.913,63,3.718,64,4.11,68,0.808,70,1.166,72,1.084,84,0.692,89,0.866,90,1.282,100,0.85,101,1.051,102,0.603,118,2.769,119,4.661,120,3.086,121,1.135,122,3.086,127,1.467,129,1.004,131,1.811,139,2.278,140,3.086,141,3.086,142,1.662,143,1.747,144,3.086,145,2.278,146,4.435,147,2.442,148,3.086,149,3.086,150,2.769,151,4.622,152,0.259,154,0.353,156,1.26,167,0.147,168,0.173,198,0.754,199,1.545,200,0.834,202,1.977,203,1.093,204,1.093,205,0.987,206,2.012,207,0.987,208,1.038,209,0.938,210,1.021,211,1.038,212,2.286,213,1.021,214,1.552,215,2.012,216,1.038,217,1.405,218,2.339,219,1.038,220,1.038,221,1.093,222,1.021,223,1.572,224,1.038,225,1.093,226,1.021,227,1.093,228,1.847,229,0.987,230,1.867,231,1.84,232,1.004,233,1.021,234,1.021,235,1.004,236,1.093,237,1.038,238,1.038,239,2.131,240,1.038,241,1.021,242,1.038,243,1.038,244,1.038,245,1.021,246,1.093,247,1.004,248,1.038,249,1.093,250,1.021,251,1.093,252,1.021,253,1.021,254,1.159,255,1.093,256,1.021,257,1.093,258,1.004,259,1.021,260,1.093,261,1.021,262,1.093,263,0.938,264,1.093,265,1.021,266,1.605,267,1.093,268,1.004,269,1.093,270,1.021,271,1.093,272,0.987,273,1.093,274,1.021,275,1.004,276,1.021,277,0.97,278,1.093,279,1.021,280,1.093,281,1.093,282,1.021,283,1.093,284,1.021,285,1.093,286,0.987,287,1.093,288,1.004,289,1.021,290,1.093,291,1.021,292,1.056,293,1.093,294,1.004,295,1.021,296,1.908,297,1.021,298,1.038,299,0.907,300,1.038,301,1.038,302,1.021,303,1.038,304,1.038,305,1.038,306,1.093,307,1.004,308,1.021,309,1.093,310,1.021,311,1.056,312,1.021,313,1.093,314,1.021,315,1.093,316,1.038,317,1.021,318,1.021,319,1.093,320,1.021,321,1.093,322,1.021,323,1.093,324,1.021,325,0.97,326,0.954,327,0.987,328,1.093,329,1.004,330,1.093,331,1.004,332,1.093,333,1.004,334,1.093,335,1.004,336,1.093,337,1.004,338,1.075,339,1.093,340,1.004,341,1.075,342,1.093,343,0.003,344,0.004,345,0.003,395,1.592,442,5.677,444,2.913,445,3.171,446,3.648,447,2.987,458,4.435,459,3.127,460,0.806,461,2.206,462,3.17,465,1.823,467,3.302,468,3.302,469,4.746,470,4.746,471,3.51,1224,4.76,1310,4.746,1469,4.031,1470,6.784]],["title/components/DefaultEntryOutputComponent.html",[0,0.292,229,1.235]],["body/components/DefaultEntryOutputComponent.html",[0,0.506,1,1.159,2,1.165,3,0.242,4,0.25,5,0.931,7,1.241,8,1.199,10,0.189,12,0.527,21,1.12,24,1.03,26,0.006,33,2.205,34,1.891,37,1.605,39,0.486,40,0.773,42,0.856,48,2.501,52,2.458,68,0.568,70,0.803,101,1.046,121,1.172,127,1.605,129,1.139,152,0.242,154,0.401,167,0.167,168,0.196,198,0.856,199,1.689,200,0.947,202,2.092,203,1.241,204,1.241,205,1.12,206,2.128,207,1.12,208,1.179,209,1.065,210,1.159,211,1.179,212,2.37,213,1.159,214,1.663,215,2.128,216,1.179,217,1.464,218,2.416,219,1.179,220,1.179,221,1.241,222,1.159,223,1.719,224,1.179,225,1.241,226,1.159,227,1.241,228,1.139,229,1.921,230,1.902,231,1.972,232,1.139,233,1.159,234,1.159,235,1.139,236,1.241,237,1.179,238,1.179,239,2.235,240,1.179,241,1.159,242,1.179,243,1.179,244,1.179,245,1.159,246,1.241,247,1.139,248,1.179,249,1.241,250,1.159,251,1.241,252,1.159,253,1.159,254,1.268,255,1.241,256,1.159,257,1.241,258,1.139,259,1.159,260,1.241,261,1.159,262,1.241,263,1.065,264,1.241,265,1.159,266,1.72,267,1.241,268,1.139,269,1.241,270,1.159,271,1.241,272,1.12,273,1.241,274,1.159,275,1.139,276,1.159,277,1.101,278,1.241,279,1.159,280,1.241,281,1.241,282,1.159,283,1.241,284,1.159,285,1.241,286,1.12,287,1.241,288,1.139,289,1.159,290,1.241,291,1.159,292,1.199,293,1.241,294,1.139,295,1.159,296,1.971,297,1.159,298,1.179,299,1.03,300,1.179,301,1.179,302,1.159,303,1.179,304,1.179,305,1.179,306,1.241,307,1.139,308,1.159,309,1.241,310,1.159,311,1.199,312,1.159,313,1.241,314,1.159,315,1.241,316,1.179,317,1.159,318,1.159,319,1.241,320,1.159,321,1.241,322,1.159,323,1.241,324,1.159,325,1.101,326,1.083,327,1.12,328,1.241,329,1.139,330,1.241,331,1.139,332,1.241,333,1.139,334,1.241,335,1.139,336,1.241,337,1.139,338,1.22,339,1.241,340,1.139,341,1.22,342,1.241,343,0.003,344,0.004,345,0.003,384,1.308,442,5.252,445,3.467,446,3.989,447,3.266,468,3.748,469,5.19,470,5.19,471,3.839,521,2.76,787,3.989,1224,4.404,1310,5.19,1395,3.092,1471,3.748,1472,5.646,1473,4.077,1474,4.077,1475,5.19]],["title/components/DefaultInputComponent.html",[0,0.292,21,1.235]],["body/components/DefaultInputComponent.html",[0,0.448,1,0.982,2,1.036,3,0.205,4,0.211,5,0.789,7,1.051,8,1.016,10,0.16,12,0.446,17,1.379,21,1.783,23,1.753,24,0.872,26,0.007,32,0.872,33,2.193,34,1.878,37,1.426,39,0.412,40,0.687,42,1.557,45,0.919,46,1.785,47,3.878,48,2.542,49,4.177,50,4.617,51,3.416,52,2.355,53,5.077,54,0.887,63,4.277,64,4.412,68,0.764,70,1.12,72,1.362,84,0.967,89,0.841,90,1.246,100,0.827,101,1.041,102,0.586,118,3.869,121,1.062,127,1.426,129,0.965,131,2.276,139,3.749,142,2.323,143,2.332,145,3.183,147,4.02,150,3.869,151,4.371,152,0.308,154,0.34,155,1.564,167,0.142,168,0.166,198,0.725,199,1.502,200,0.802,202,1.942,203,1.051,204,1.051,205,0.949,206,1.975,207,0.949,208,0.999,209,0.902,210,0.982,211,0.999,212,2.259,213,0.982,214,1.518,215,1.975,216,0.999,217,1.386,218,2.314,219,0.999,220,0.999,221,1.051,222,0.982,223,1.528,224,0.999,225,1.051,226,0.982,227,1.051,228,0.965,229,0.949,230,1.707,231,1.8,232,0.965,233,0.982,234,0.982,235,0.965,236,1.051,237,0.999,238,0.999,239,2.098,240,0.999,241,0.982,242,0.999,243,0.999,244,0.999,245,0.982,246,1.051,247,0.965,248,0.999,249,1.051,250,0.982,251,1.051,252,0.982,253,0.982,254,1.127,255,1.051,256,0.982,257,1.051,258,0.965,259,0.982,260,1.051,261,0.982,262,1.051,263,0.902,264,1.051,265,0.982,266,1.57,267,1.051,268,0.965,269,1.051,270,0.982,271,1.051,272,0.949,273,1.051,274,0.982,275,0.965,276,0.982,277,0.933,278,1.051,279,0.982,280,1.051,281,1.051,282,0.982,283,1.051,284,0.982,285,1.051,286,0.949,287,1.051,288,0.965,289,0.982,290,1.051,291,0.982,292,1.016,293,1.051,294,0.965,295,0.982,296,1.888,297,0.982,298,0.999,299,0.872,300,0.999,301,0.999,302,0.982,303,0.999,304,0.999,305,0.999,306,1.051,307,0.965,308,0.982,309,1.051,310,0.982,311,1.016,312,0.982,313,1.051,314,0.982,315,1.051,316,0.999,317,0.982,318,0.982,319,1.051,320,0.982,321,1.051,322,0.982,323,1.051,324,0.982,325,0.933,326,0.917,327,0.949,328,1.051,329,0.965,330,1.051,331,0.965,332,1.051,333,0.965,334,1.051,335,0.965,336,1.051,337,0.965,338,1.033,339,1.051,340,0.965,341,1.033,342,1.051,343,0.003,344,0.004,345,0.003,384,1.108,395,1.531,437,2.348,444,2.801,445,3.082,446,3.546,447,2.904,458,4.311,460,0.775,464,3.454,485,2.823,697,4.311,765,3.412,1475,4.614,1476,7.332,1477,6.852,1478,5.019,1479,5.079,1480,3.877,1481,5.633,1482,3.877,1483,3.877,1484,3.877,1485,5.633,1486,3.877,1487,3.877,1488,3.877,1489,3.175,1490,3.877,1491,3.175,1492,3.877,1493,3.877,1494,3.877,1495,2.663,1496,5.633,1497,5.633,1498,7.283]],["title/components/DefaultOutputComponent.html",[0,0.292,232,1.256]],["body/components/DefaultOutputComponent.html",[0,0.42,1,1.15,2,1.159,3,0.24,4,0.248,5,0.924,7,1.232,8,1.19,10,0.188,12,0.523,21,1.112,24,1.022,26,0.006,33,2.205,34,1.89,37,1.596,39,0.483,40,0.769,42,1.354,48,2.567,52,2.523,68,0.565,70,0.799,101,1.044,121,1.119,127,1.596,129,1.131,150,4.329,152,0.24,154,0.398,167,0.166,168,0.195,198,0.849,199,1.68,200,0.939,202,2.085,203,1.232,204,1.232,205,1.112,206,2.121,207,1.112,208,1.17,209,1.057,210,1.15,211,1.17,212,2.365,213,1.15,214,1.656,215,2.121,216,1.17,217,1.46,218,2.411,219,1.17,220,1.17,221,1.232,222,1.15,223,1.71,224,1.17,225,1.232,226,1.15,227,1.232,228,1.131,229,1.112,230,1.778,231,1.964,232,1.947,233,1.15,234,1.15,235,1.131,236,1.232,237,1.17,238,1.17,239,2.228,240,1.17,241,1.15,242,1.17,243,1.17,244,1.17,245,1.15,246,1.232,247,1.131,248,1.17,249,1.232,250,1.15,251,1.232,252,1.15,253,1.15,254,1.261,255,1.232,256,1.15,257,1.232,258,1.131,259,1.15,260,1.232,261,1.15,262,1.232,263,1.057,264,1.232,265,1.15,266,1.713,267,1.232,268,1.131,269,1.232,270,1.15,271,1.232,272,1.112,273,1.232,274,1.15,275,1.131,276,1.15,277,1.093,278,1.232,279,1.15,280,1.232,281,1.232,282,1.15,283,1.232,284,1.15,285,1.232,286,1.112,287,1.232,288,1.131,289,1.15,290,1.232,291,1.15,292,1.19,293,1.232,294,1.131,295,1.15,296,1.967,297,1.15,298,1.17,299,1.022,300,1.17,301,1.17,302,1.15,303,1.17,304,1.17,305,1.17,306,1.232,307,1.131,308,1.15,309,1.232,310,1.15,311,1.19,312,1.15,313,1.232,314,1.15,315,1.232,316,1.17,317,1.15,318,1.15,319,1.232,320,1.15,321,1.232,322,1.15,323,1.232,324,1.15,325,1.093,326,1.075,327,1.112,328,1.232,329,1.131,330,1.232,331,1.131,332,1.232,333,1.131,334,1.232,335,1.131,336,1.232,337,1.131,338,1.211,339,1.232,340,1.131,341,1.211,342,1.232,343,0.003,344,0.004,345,0.003,384,1.298,390,2.658,445,3.449,446,3.968,521,2.357,780,3.345,787,3.968,1250,3.684,1471,3.719,1472,5.616,1473,4.046,1474,4.046,1475,7.881,1476,5.93,1499,5.541,1500,6.303,1501,4.541,1502,4.541,1503,7.821,1504,4.329]],["title/directives/DropzoneDirective.html",[200,1.044,329,1.256]],["body/directives/DropzoneDirective.html",[3,0.301,4,0.31,10,0.235,12,0.655,24,1.28,26,0.007,32,1.372,33,1.595,39,0.605,42,1.371,45,0.928,46,1.082,65,1.825,68,0.727,70,1.17,84,0.977,100,0.835,101,0.681,102,0.592,121,0.749,123,3.873,127,2.169,143,2.582,152,0.217,154,0.498,167,0.208,168,0.348,188,1.522,200,1.772,326,1.347,329,1.825,343,0.004,344,0.005,345,0.004,378,1.517,400,2.451,460,1.138,482,2.777,519,5.304,521,2.21,633,3.779,635,4.615,672,2.346,919,3.509,1047,3.612,1185,4.75,1218,6.557,1244,4.74,1276,5.57,1384,6.643,1505,5.07,1506,6.531,1507,7.331,1508,8.864,1509,5.611,1510,7.331,1511,5.035,1512,8.566,1513,9.075,1514,5.07,1515,5.691,1516,5.297,1517,5.691,1518,6.531,1519,7.331,1520,5.691,1521,8.566,1522,5.691,1523,7.331,1524,3.891,1525,5.57,1526,5.691,1527,5.691,1528,6.557,1529,5.691,1530,5.691,1531,5.691,1532,5.691,1533,4.111,1534,5.07,1535,5.07,1536,5.691,1537,5.691,1538,6.643,1539,7.897,1540,5.691,1541,5.691,1542,5.691,1543,5.691,1544,5.691,1545,5.691,1546,5.691]],["title/components/DynamicRackComponent.html",[0,0.292,233,1.278]],["body/components/DynamicRackComponent.html",[0,0.424,1,1.175,2,1.176,3,0.245,4,0.253,5,0.944,7,1.258,8,1.216,10,0.192,12,0.534,21,1.136,24,1.044,26,0.006,33,2.206,34,1.893,37,1.62,42,0.868,48,1.797,68,0.416,70,0.588,72,1.601,85,2.697,100,0.681,101,1.07,102,0.483,121,0.842,127,1.62,129,1.155,131,1.999,152,0.244,154,0.406,167,0.17,168,0.199,198,0.868,199,1.705,200,1.515,202,2.104,203,1.258,204,1.258,205,1.136,206,2.141,207,1.136,208,1.195,209,1.08,210,1.175,211,1.195,212,2.379,213,1.175,214,1.675,215,2.141,216,1.195,217,1.535,218,2.424,219,1.195,220,1.195,221,1.258,222,1.175,223,1.735,224,1.195,225,1.258,226,1.175,227,1.258,228,1.155,229,1.136,230,1.788,231,1.986,232,1.155,233,1.999,234,1.175,235,1.965,236,1.258,237,1.195,238,1.195,239,2.246,240,1.195,241,1.175,242,1.195,243,1.195,244,1.195,245,1.175,246,1.258,247,1.155,248,1.195,249,1.258,250,1.175,251,1.258,252,1.175,253,1.175,254,1.28,255,1.258,256,1.175,257,1.258,258,1.155,259,1.175,260,1.258,261,1.175,262,1.258,263,1.08,264,1.258,265,1.175,266,1.733,267,1.258,268,1.155,269,1.258,270,1.175,271,1.258,272,1.136,273,1.258,274,1.175,275,1.155,276,1.175,277,1.117,278,1.258,279,1.175,280,1.258,281,1.258,282,1.175,283,1.258,284,1.175,285,1.258,286,1.136,287,1.258,288,1.155,289,1.175,290,1.258,291,1.175,292,1.216,293,1.258,294,1.155,295,1.175,296,1.977,297,1.175,298,1.195,299,1.044,300,1.195,301,1.195,302,1.175,303,1.195,304,1.195,305,1.195,306,1.258,307,1.155,308,1.175,309,1.258,310,1.175,311,1.216,312,1.175,313,1.258,314,1.175,315,1.258,316,1.195,317,1.175,318,1.175,319,1.258,320,1.175,321,1.258,322,1.175,323,1.258,324,1.175,325,1.117,326,1.098,327,1.136,328,1.258,329,1.155,330,1.258,331,1.155,332,1.258,333,1.155,334,1.258,335,1.155,336,1.258,337,1.155,338,1.237,339,1.258,340,1.155,341,1.237,342,1.258,343,0.003,344,0.004,345,0.003,460,1.465,582,2.374,672,1.913,1068,3.041,1155,1.655,1395,3.121,1547,5.24,1548,5.24,1549,4.133,1550,5.24,1551,6.398,1552,4.133,1553,6.551,1554,4.64,1555,5.24,1556,5.24,1557,5.24,1558,5.7,1559,5.24,1560,4.64,1561,4.64,1562,4.64]],["title/components/DynamicSlotComponent.html",[0,0.292,234,1.278]],["body/components/DynamicSlotComponent.html",[0,0.481,1,1.066,2,1.391,3,0.222,4,0.229,5,0.856,7,1.142,8,1.103,10,0.174,12,0.485,21,1.03,24,0.947,26,0.007,33,2.2,34,1.888,37,1.513,39,0.447,40,0.729,42,0.787,45,0.686,46,1.136,48,2.33,52,1.649,54,0.941,68,0.781,70,0.959,72,1.631,85,2.52,87,2.36,88,1.414,89,0.629,100,0.877,101,1.062,102,0.622,121,1.051,124,1.662,127,1.513,129,1.048,131,1.868,138,2.09,152,0.228,153,1.903,154,0.369,166,1.344,167,0.154,168,0.181,188,0.748,198,0.787,199,1.593,200,1.437,202,2.016,203,1.142,204,1.142,205,1.03,206,2.051,207,1.03,208,1.084,209,0.979,210,1.066,211,1.084,212,2.315,213,1.066,214,1.59,215,2.051,216,1.084,217,1.498,218,2.366,219,1.084,220,1.084,221,1.142,222,1.066,223,1.621,224,1.084,225,1.142,226,1.066,227,1.142,228,1.048,229,1.03,230,1.745,231,1.885,232,1.048,233,1.066,234,1.915,235,1.989,236,1.142,237,1.084,238,1.084,239,2.167,240,1.084,241,1.066,242,1.084,243,1.084,244,1.084,245,1.066,246,1.142,247,1.048,248,1.084,249,1.142,250,1.066,251,1.142,252,1.066,253,1.066,254,1.195,255,1.142,256,1.066,257,1.142,258,1.048,259,1.066,260,1.142,261,1.066,262,1.142,263,0.979,264,1.142,265,1.066,266,1.644,267,1.142,268,1.048,269,1.142,270,1.066,271,1.142,272,1.03,273,1.142,274,1.066,275,1.048,276,1.066,277,1.013,278,1.142,279,1.066,280,1.142,281,1.142,282,1.066,283,1.142,284,1.066,285,1.142,286,1.03,287,1.142,288,1.048,289,1.066,290,1.142,291,1.066,292,1.103,293,1.142,294,1.048,295,1.066,296,1.93,297,1.066,298,1.084,299,0.947,300,1.084,301,1.084,302,1.066,303,1.084,304,1.084,305,1.084,306,1.142,307,1.048,308,1.066,309,1.142,310,1.066,311,1.103,312,1.066,313,1.142,314,1.066,315,1.142,316,1.084,317,1.066,318,1.066,319,1.142,320,1.066,321,1.142,322,1.066,323,1.142,324,1.066,325,1.013,326,0.996,327,1.03,328,1.142,329,1.048,330,1.142,331,1.048,332,1.142,333,1.048,334,1.142,335,1.048,336,1.142,337,1.048,338,1.122,339,1.142,340,1.883,341,1.122,342,1.142,343,0.003,344,0.004,345,0.003,395,1.662,460,1.39,474,3.376,582,2.218,761,2.997,1068,3.595,1155,2.131,1395,2.916,1547,6.543,1550,4.895,1552,3.75,1553,6.792,1555,4.895,1556,5.691,1557,4.895,1558,5.324,1559,4.895,1563,5.772,1564,3.75,1565,5.318,1566,4.895,1567,6.543,1568,4.895,1569,5.976,1570,4.895,1571,6.195,1572,4.209,1573,6.543,1574,4.209,1575,4.895,1576,4.895,1577,4.895,1578,3.75,1579,4.209,1580,4.209,1581,4.209,1582,4.209,1583,4.209,1584,4.209]],["title/directives/EntriesDirective.html",[200,1.044,331,1.256]],["body/directives/EntriesDirective.html",[0,0.251,3,0.229,4,0.236,5,0.881,9,1.826,10,0.179,12,0.499,17,1.493,23,3.192,24,0.975,26,0.007,32,1.25,33,1.327,34,0.81,39,0.46,40,0.744,42,1.566,45,1.151,46,1.699,54,0.96,55,2.299,56,3.55,65,1.518,68,0.811,69,1.22,70,1.217,72,1.32,88,1.813,89,1.352,90,1.695,100,0.895,101,0.73,102,0.635,117,3.454,121,0.929,133,3.258,138,2.68,152,0.335,154,0.379,156,1.906,166,0.838,167,0.158,168,0.186,183,1.283,188,1.529,200,1.262,201,1.826,217,1.212,263,1.642,326,1.025,331,1.518,343,0.003,344,0.004,345,0.003,376,1.748,378,1.585,389,1.743,400,1.85,459,3.23,460,1.22,461,2.37,462,3.091,465,1.959,472,1.515,474,4.328,478,4.709,480,5.1,483,4.895,485,3.057,489,3.237,493,4.406,506,4.002,508,3.237,525,3.315,528,3.315,529,3.13,533,2.531,536,6.275,552,3.565,578,5.135,602,6.913,633,2.233,650,1.675,657,3.651,671,1.443,673,3.399,894,4.529,967,5.402,1019,3.746,1034,4.562,1035,2.937,1036,3.122,1088,3.13,1107,3.859,1110,2.624,1122,4.632,1156,3.638,1158,4.805,1585,3.859,1586,5.433,1587,6.826,1588,6.826,1589,6.826,1590,6.826,1591,6.099,1592,6.288,1593,6.099,1594,4.332,1595,4.332,1596,4.406,1597,4.189,1598,5.433,1599,6.099,1600,4.332,1601,4.332,1602,4.332,1603,7.661,1604,4.332,1605,4.995,1606,4.332,1607,4.332,1608,4.332,1609,4.332,1610,4.332,1611,4.332,1612,6.099,1613,4.332,1614,4.332,1615,4.632,1616,4.332,1617,4.332,1618,4.189,1619,4.332,1620,3.859,1621,4.332,1622,2.843,1623,3.859,1624,4.332,1625,7.059,1626,6.099,1627,3.315,1628,4.332,1629,4.332,1630,4.332,1631,3.548,1632,3.859,1633,7.059,1634,2.727,1635,4.332,1636,6.288,1637,7.661,1638,7.059,1639,4.332,1640,4.332,1641,4.332,1642,4.332,1643,4.332,1644,4.332,1645,4.332,1646,4.332]],["title/directives/EntryDirective.html",[200,1.044,333,1.256]],["body/directives/EntryDirective.html",[3,0.267,4,0.275,5,1.735,9,2.13,10,0.209,12,0.582,17,1.659,23,3.459,24,1.136,26,0.007,32,1.049,33,1.475,34,0.945,39,0.537,40,0.827,42,1.642,46,1.67,54,1.067,56,3.789,65,1.688,68,0.843,69,1.636,70,1.209,72,1.431,84,0.867,89,1.012,90,1.117,100,0.741,101,0.605,102,0.526,117,3.468,133,3.441,138,2.371,143,2.465,152,0.325,154,0.442,156,2.118,167,0.185,168,0.217,188,1.453,200,1.583,201,2.13,230,1.963,263,1.78,326,1.195,333,1.688,343,0.003,344,0.004,345,0.003,374,4.283,376,2.038,378,1.402,400,1.324,459,3.447,460,1.356,461,2.764,462,3.299,465,2.284,471,4.953,472,1.767,474,4.619,478,4.908,480,5.528,481,6.162,482,2.567,483,5.574,485,3.398,488,1.972,489,3.598,493,4.898,495,2.677,498,3.961,501,3.222,502,3.065,503,6.039,506,4.449,508,3.598,510,4.5,511,3.315,521,2.043,525,3.866,528,3.866,529,3.65,533,2.952,536,5.552,552,3.765,650,1.953,657,3.856,673,1.995,1019,4.06,1034,4.818,1035,3.102,1036,3.298,1088,3.65,1110,3.06,1122,3.315,1586,6.039,1615,3.315,1622,3.315,1634,3.18,1636,4.5,1647,4.5,1648,7.651,1649,6.266,1650,6.779,1651,5.051,1652,5.051,1653,5.051,1654,5.051,1655,5.051,1656,5.051,1657,5.051,1658,5.051,1659,5.051,1660,5.051,1661,5.051,1662,5.051,1663,6.779,1664,5.051,1665,5.051,1666,4.5,1667,5.051,1668,5.051,1669,5.051]],["title/components/EntryListPopComponent.html",[0,0.292,241,1.278]],["body/components/EntryListPopComponent.html",[0,0.339,1,0.793,2,0.883,3,0.165,4,0.171,5,0.637,7,1.302,8,0.82,10,0.129,12,0.36,17,1.175,20,1.896,21,0.766,23,2.641,24,0.704,26,0.007,32,1.239,33,2.177,34,1.864,37,1.216,39,0.333,40,0.586,41,1.769,42,1.321,45,1.068,46,1.758,52,1.325,54,0.756,56,3.035,65,1.195,68,0.828,69,1.31,70,1.207,72,1.092,78,2.475,79,2.475,84,0.538,87,1.896,88,0.741,89,1.159,90,1.563,100,1.094,101,1.048,102,0.776,116,2.475,117,2.732,119,4.648,121,0.981,123,4.003,124,1.236,127,1.888,129,0.779,143,2.129,152,0.284,153,1.416,154,0.274,156,0.978,166,0.605,167,0.115,168,0.32,186,2.407,188,0.556,198,0.585,199,1.28,200,0.648,202,1.746,203,0.849,204,0.849,205,0.766,206,1.777,207,0.766,208,0.806,209,0.728,210,0.793,211,0.806,212,2.105,213,0.793,214,1.336,215,1.777,216,0.806,217,1.681,218,2.172,219,0.806,220,0.806,221,0.849,222,0.793,223,1.302,224,0.806,225,0.849,226,0.793,227,0.849,228,0.779,229,0.766,230,1.771,231,1.584,232,0.779,233,0.793,234,0.793,235,0.779,236,0.849,237,0.806,238,0.806,239,1.916,240,0.806,241,1.659,242,0.806,243,0.806,244,0.806,245,0.793,246,0.849,247,0.779,248,0.806,249,0.849,250,0.793,251,0.849,252,0.793,253,0.793,254,1.31,255,0.849,256,0.793,257,0.849,258,0.779,259,0.793,260,0.849,261,0.793,262,0.849,263,0.728,264,0.849,265,0.793,266,1.382,267,0.849,268,0.779,269,0.849,270,0.793,271,0.849,272,0.766,273,0.849,274,0.793,275,0.779,276,0.793,277,0.753,278,0.849,279,0.793,280,0.849,281,0.849,282,0.793,283,0.849,284,0.793,285,0.849,286,0.766,287,0.849,288,0.779,289,0.793,290,0.849,291,0.793,292,0.82,293,0.849,294,2.26,295,0.793,296,1.772,297,0.793,298,0.806,299,0.704,300,0.806,301,0.806,302,0.793,303,0.806,304,0.806,305,1.687,306,0.849,307,0.779,308,0.793,309,0.849,310,0.793,311,0.82,312,0.793,313,0.849,314,0.793,315,0.849,316,0.806,317,0.793,318,0.793,319,0.849,320,0.793,321,0.849,322,0.793,323,0.849,324,0.793,325,0.753,326,0.741,327,0.766,328,0.849,329,0.779,330,0.849,331,0.779,332,0.849,333,0.779,334,0.849,335,0.779,336,0.849,337,0.779,338,0.835,339,0.849,340,0.779,341,0.835,342,0.849,343,0.002,344,0.003,345,0.002,378,0.993,379,3.749,384,0.895,389,1.669,390,2.025,396,3.956,400,1.716,416,2.15,435,2.909,442,6.51,460,0.96,482,1.819,504,1.896,521,1.447,531,1.851,602,2.262,633,2.475,634,1.782,635,3.023,647,2.909,661,2.171,786,1.569,902,3.968,919,2.259,921,1.896,945,1.829,954,3.298,965,3.711,1003,1.829,1029,4.447,1032,4.123,1033,3.991,1038,3.414,1047,2.025,1053,1.829,1067,4.208,1078,1.713,1081,6.897,1083,2.054,1088,2.262,1111,3.376,1119,2.15,1120,2.15,1171,3.677,1185,3.786,1305,1.527,1509,3.675,1511,3.298,1524,3.1,1525,2.15,1533,2.262,1615,2.054,1622,2.054,1670,2.396,1671,3.675,1672,4.784,1673,4.898,1674,3.833,1675,3.469,1676,4.802,1677,3.469,1678,2.776,1679,3.469,1680,3.298,1681,4.22,1682,3.131,1683,4.278,1684,2.789,1685,2.789,1686,2.564,1687,2.396,1688,2.15,1689,2.396,1690,1.829,1691,2.262,1692,2.396,1693,2.262,1694,2.15,1695,2.396,1696,2.789,1697,2.396,1698,3.933,1699,4.012,1700,2.789,1701,2.262,1702,2.396,1703,2.054,1704,6.55,1705,3.131,1706,2.789,1707,3.675,1708,3.131,1709,4.278,1710,2.396,1711,3.469,1712,2.262,1713,2.396,1714,1.713,1715,1.971,1716,2.262,1717,2.262,1718,2.396,1719,2.548,1720,2.262,1721,2.396,1722,2.789,1723,2.564,1724,2.789,1725,2.789,1726,4.278,1727,2.564,1728,2.396,1729,2.262,1730,2.262,1731,2.396,1732,2.396,1733,2.262,1734,2.564,1735,2.396,1736,3.131,1737,3.131,1738,2.564,1739,2.262,1740,2.396,1741,2.789,1742,3.131,1743,3.131]],["title/injectables/EntryService.html",[662,1.494,1208,3.466]],["body/injectables/EntryService.html",[0,0.324,3,0.203,4,0.209,10,0.159,12,0.442,15,1.657,26,0.007,32,1.193,39,0.408,40,0.805,45,1.565,46,1.255,48,1.571,52,2.292,54,0.881,68,0.809,69,1.807,70,1.1,72,1.356,78,2.884,79,2.884,83,4.042,84,1.382,88,2.229,89,1.296,98,2.582,100,1.249,101,1.019,102,0.886,117,3.356,121,0.736,131,1.2,133,2.925,142,2.307,152,0.307,154,0.336,166,1.402,167,0.14,168,0.165,183,1.137,188,1.646,193,2.17,230,1.901,296,1.604,299,1.915,343,0.003,344,0.004,345,0.003,370,2.969,374,1.874,378,0.794,384,1.098,389,2.203,392,1.485,400,1.466,424,5.051,452,3.522,459,3.057,460,0.768,461,2.101,462,2.925,465,1.737,485,2.804,488,1.117,498,4.702,504,2.209,516,4.155,533,2.244,548,3.973,550,3.728,554,3.848,581,2.359,582,2.986,586,2.552,595,2.035,621,1.925,633,2.884,634,1.425,652,3.522,662,1.657,665,1.925,672,1.584,715,1.78,761,4.02,780,4.091,807,4.331,819,2.418,820,2.638,827,2.52,915,5.058,939,1.98,945,3.27,972,3.611,997,3.538,1021,3.161,1047,3.057,1154,2.659,1155,1.37,1158,4.091,1159,2.939,1180,2.326,1208,3.843,1460,4.393,1615,5.058,1622,2.52,1666,3.421,1714,3.061,1744,3.421,1745,2.73,1746,4.042,1747,4.042,1748,3.27,1749,2.73,1750,3.843,1751,3.843,1752,5.153,1753,5.939,1754,4.985,1755,4.985,1756,4.331,1757,3.84,1758,4.582,1759,3.84,1760,3.389,1761,4.582,1762,4.238,1763,7.251,1764,3.84,1765,3.27,1766,5.595,1767,3.84,1768,5.595,1769,3.84,1770,4.582,1771,4.582,1772,3.84,1773,3.389,1774,3.857,1775,5.595,1776,8.305,1777,3.84,1778,4.582,1779,4.042,1780,4.985,1781,4.042,1782,5.595,1783,6.6,1784,3.84,1785,3.84,1786,2.775,1787,5.595,1788,3.84,1789,3.84,1790,3.84,1791,3.146,1792,3.84,1793,2.775,1794,3.146,1795,3.84,1796,3.998,1797,3.84,1798,3.84,1799,3.84,1800,3.146,1801,3.84,1802,5.595,1803,3.84,1804,3.84,1805,3.84,1806,5.595,1807,6.6,1808,5.406,1809,3.146,1810,3.146,1811,3.146,1812,3.84,1813,3.84,1814,3.421,1815,5.595,1816,4.582,1817,3.84,1818,2.775,1819,3.84,1820,5.051,1821,6.6,1822,3.146,1823,3.146,1824,3.146,1825,3.146,1826,3.146,1827,6.313,1828,2.52,1829,2.638,1830,3.146,1831,3.84,1832,5.595,1833,3.84,1834,3.84,1835,3.84,1836,3.84,1837,3.84,1838,4.985,1839,3.421,1840,3.84]],["title/components/ErrorComponent.html",[0,0.292,245,1.278]],["body/components/ErrorComponent.html",[0,0.409,1,1.099,2,1.122,3,0.229,4,0.237,5,0.883,7,1.177,8,1.137,10,0.179,12,0.499,17,1.494,21,1.062,22,3.119,23,3.195,24,0.976,26,0.007,33,2.202,34,1.887,37,1.546,39,0.461,42,1.321,54,0.961,56,3.553,57,3.467,65,1.52,68,0.547,70,1.024,89,1.055,90,1.563,98,1.745,100,0.637,101,1.084,102,0.452,117,2.361,121,0.803,127,1.546,129,1.08,152,0.233,154,0.38,166,0.839,167,0.159,168,0.186,188,0.771,198,0.811,199,1.628,200,0.898,202,2.044,203,1.177,204,1.177,205,1.062,206,2.079,207,1.062,208,1.118,209,1.009,210,1.099,211,1.118,212,2.335,213,1.099,214,1.616,215,2.079,216,1.118,217,1.51,218,2.384,219,1.118,220,1.118,221,1.177,222,1.789,223,1.656,224,1.118,225,1.177,226,1.099,227,1.177,228,1.08,229,1.062,230,1.812,231,1.916,232,1.08,233,1.099,234,1.099,235,1.08,236,1.177,237,1.118,238,1.118,239,2.191,240,1.118,241,1.099,242,1.118,243,1.118,244,1.118,245,1.941,246,1.177,247,1.08,248,1.118,249,1.177,250,1.099,251,1.177,252,1.099,253,1.099,254,1.221,255,1.177,256,1.099,257,1.177,258,1.08,259,1.099,260,1.177,261,1.099,262,1.177,263,1.009,264,1.177,265,1.099,266,1.672,267,1.177,268,1.08,269,1.177,270,1.099,271,1.177,272,1.062,273,1.177,274,1.099,275,1.08,276,1.099,277,1.044,278,1.177,279,1.099,280,1.177,281,1.177,282,1.099,283,1.177,284,1.099,285,1.177,286,1.062,287,1.177,288,1.08,289,1.099,290,1.177,291,1.099,292,1.137,293,1.177,294,1.08,295,1.099,296,1.945,297,1.099,298,1.118,299,0.976,300,1.118,301,1.118,302,1.099,303,1.118,304,1.118,305,1.118,306,1.177,307,1.08,308,1.099,309,1.177,310,1.099,311,1.137,312,1.099,313,1.177,314,1.099,315,1.177,316,1.118,317,1.099,318,1.099,319,1.177,320,1.099,321,1.177,322,1.099,323,1.177,324,1.099,325,1.044,326,1.027,327,1.062,328,1.177,329,1.08,330,1.177,331,1.08,332,1.177,333,1.08,334,1.177,335,1.08,336,1.177,337,1.08,338,1.157,339,1.177,340,1.08,341,1.157,342,1.177,343,0.003,344,0.004,345,0.003,361,2.055,459,1.829,460,0.868,550,4.074,650,3.502,651,4.895,672,1.789,1013,5.001,1014,4.194,1015,5.001,1016,5.001,1017,4.673,1035,2.221,1036,2.965,1250,3.568,1291,2.731,1318,2.847,1460,3.699,1841,3.865,1842,6.106,1843,3.135,1844,6.106,1845,4.339,1846,4.339,1847,5.44,1848,4.339,1849,4.339,1850,5.44,1851,4.339,1852,4.339,1853,4.339,1854,4.339,1855,4.339,1856,4.339,1857,4.339,1858,4.339,1859,6.106,1860,4.339]],["title/classes/Field.html",[48,1.417,168,0.217]],["body/classes/Field.html",[0,0.46,2,0.616,3,0.177,4,0.183,10,0.138,17,1.237,26,0.007,32,1.32,39,0.356,40,0.617,42,1.565,45,1.476,48,2.679,51,2.232,52,1.68,54,1.146,55,2.683,65,1.689,68,0.863,69,1.923,70,1.223,72,1.139,73,3.002,84,0.575,88,1.811,89,1.352,100,0.893,101,1.021,102,1.025,121,0.892,131,2.745,152,0.128,166,0.978,167,0.123,168,0.366,188,1.412,217,1.437,254,1.011,343,0.002,344,0.003,345,0.002,373,2.181,374,3.552,378,1.911,389,2.477,390,3.745,392,1.955,400,2.082,427,2.029,429,3.734,460,0.67,472,1.172,488,1.471,489,3.6,495,1.996,501,1.592,502,1.515,504,1.996,514,3.472,521,2.044,531,1.325,548,2.606,560,2.215,571,1.634,576,1.592,581,1.412,586,3.435,587,4.141,620,4.096,636,3.653,719,3.318,761,2.181,780,4.341,890,1.352,906,3.183,939,2.606,997,2.467,1056,3.653,1060,3.4,1067,2.403,1148,3.653,1155,3.042,1163,2.856,1177,1.727,1187,3.063,1189,5.555,1190,3.996,1282,3.472,1324,2.744,1325,4.962,1329,2.766,1342,2.606,1395,3.734,1678,1.592,1715,3.183,1753,4.141,1756,3.318,1861,2.985,1862,5.214,1863,5.572,1864,4.987,1865,4.583,1866,4.661,1867,4.4,1868,4.813,1869,6.089,1870,6.089,1871,5,1872,5.425,1873,4.583,1874,5.572,1875,4.987,1876,6.783,1877,5.056,1878,6.783,1879,6.783,1880,5.056,1881,5.056,1882,3.35,1883,5.056,1884,5.056,1885,3.35,1886,3.35,1887,5.056,1888,3.35,1889,3.35,1890,3.35,1891,3.869,1892,3.318,1893,3.653,1894,3.35,1895,3.35,1896,4.141,1897,4.141,1898,4.27,1899,3.35,1900,4.504,1901,3.35,1902,3.35,1903,5.056,1904,3.869,1905,3.35,1906,3.653,1907,3.35,1908,3.35,1909,3.35,1910,5.056,1911,3.869,1912,3.318,1913,3.35,1914,3.35,1915,3.35,1916,6.819,1917,3.35,1918,3.472,1919,3.35,1920,3.35,1921,3.35,1922,2.955,1923,3.35,1924,3.35,1925,3.35,1926,4.504,1927,3.869,1928,3.183,1929,5.056,1930,3.35,1931,7.654,1932,3.35,1933,3.35,1934,5.056,1935,3.35,1936,2.985,1937,5.056,1938,3.35,1939,2.109,1940,3.35,1941,3.35,1942,2.985,1943,2.109,1944,2.564,1945,5.056,1946,3.35,1947,3.559,1948,3.996,1949,3.35,1950,2.744,1951,3.35,1952,3.35,1953,2.985,1954,2.985,1955,3.35,1956,2.198,1957,3.35,1958,3.35,1959,3.35,1960,5.056,1961,5.056,1962,2.744,1963,3.35,1964,5.056,1965,3.35,1966,3.35,1967,2.301,1968,3.35,1969,3.35,1970,2.42,1971,2.985,1972,3.35,1973,3.35,1974,2.744,1975,2.985,1976,2.301,1977,2.985,1978,2.985,1979,4.141,1980,3.35,1981,3.35,1982,2.985,1983,6.089,1984,4.504,1985,3.35,1986,2.301,1987,3.35,1988,5.056,1989,3.35]],["title/interfaces/FieldConfig.html",[369,1.369,1168,3.057]],["body/interfaces/FieldConfig.html",[3,0.386,4,0.398,10,0.302,12,0.841,26,0.007,48,2.545,69,1.71,70,0.926,131,2.672,152,0.279,167,0.267,217,1.468,343,0.005,344,0.006,345,0.005,369,1.982,371,3.152,389,2.088,392,3.306,997,4.171,1001,5.382,1056,6.177,1125,4.6,1168,5.179,1749,4.171,1862,6.248,1936,6.51,1978,6.51,1990,7.617,1991,7.307]],["title/interfaces/FileOptions.html",[369,1.369,1140,3.312]],["body/interfaces/FileOptions.html",[0,0.195,3,0.178,4,0.184,10,0.329,12,0.388,26,0.007,32,1.232,39,0.358,40,0.619,46,1.708,48,0.945,52,2.196,68,0.777,69,1.736,70,0.427,72,1.364,84,1.542,88,1.445,89,0.758,98,0.962,102,0.935,117,1.302,121,0.443,131,1.909,133,3.211,135,3.33,142,1.388,143,2.05,152,0.331,154,0.295,166,1.584,167,0.223,168,0.145,183,1.808,188,1.713,209,1.181,214,2.115,217,1.168,230,0.673,253,0.853,254,0.673,296,1.351,299,0.757,325,2.116,343,0.002,344,0.003,345,0.002,369,1.844,370,1.787,371,1.452,373,2.933,374,1.643,375,2.867,378,1.819,384,0.962,389,1.943,400,1.912,427,2.04,428,3.569,447,1.735,452,3.845,459,2.575,460,0.673,462,2.047,465,1.522,479,5.204,485,1.688,498,1.968,501,1.6,516,2.12,522,4.913,523,2.433,533,2.966,544,3.451,550,2.352,554,3.242,560,1.225,576,2.903,581,1.42,582,1.25,583,3.486,595,2.222,608,2.12,616,3.074,617,5.867,639,2.758,640,5.599,652,2.12,660,2.312,662,1.503,671,0.797,673,2.685,718,1.968,757,2.313,785,2.21,786,2.544,804,2.758,819,3.845,827,2.21,833,3.195,894,3.148,919,1.302,939,1.735,960,2.476,965,2.831,997,1.643,1003,4.264,1021,1.902,1075,3.33,1140,4.788,1150,2.433,1154,1.6,1155,2.425,1156,4.321,1158,2.693,1163,1.902,1170,2.577,1177,1.735,1187,2.04,1210,3.074,1232,2.433,1495,2.312,1597,2.312,1714,2.777,1745,1.643,1746,2.433,1747,2.433,1748,1.968,1749,1.643,1750,2.312,1751,2.312,1752,3.569,1760,3.7,1781,2.433,1786,2.433,1791,2.758,1796,4.645,1820,4.675,1922,2.966,1947,1.968,1992,2.758,1993,7.091,1994,6.832,1995,6.5,1996,6.5,1997,6.5,1998,6.5,1999,3.33,2000,4.521,2001,4.521,2002,4.521,2003,4.157,2004,4.157,2005,4.521,2006,4.521,2007,4.521,2008,3,2009,4.675,2010,2.577,2011,3,2012,3,2013,2.758,2014,5.003,2015,2.577,2016,3,2017,3,2018,2.577,2019,3,2020,3,2021,5.441,2022,3,2023,5.441,2024,3,2025,3,2026,3,2027,2.577,2028,3,2029,3,2030,3,2031,3,2032,2.758,2033,3,2034,5.204,2035,2.433,2036,3,2037,4.521,2038,3,2039,4.521,2040,4.521,2041,3,2042,3,2043,3,2044,3,2045,4.521,2046,3,2047,2.758,2048,3,2049,2.433,2050,3,2051,6.832,2052,3,2053,3,2054,3,2055,3,2056,3,2057,5.441,2058,2.758,2059,3,2060,3,2061,4.521,2062,3,2063,4.521,2064,4.521,2065,4.521,2066,4.521,2067,5.441,2068,4.521,2069,4.521,2070,4.521,2071,2.577,2072,2.758,2073,3,2074,3,2075,3,2076,4.521,2077,3,2078,3,2079,3,2080,3,2081,3,2082,3,2083,3,2084,3,2085,3,2086,2.433,2087,3,2088,5.441,2089,3,2090,3,2091,2.433,2092,4.521,2093,3,2094,3,2095,3,2096,2.758,2097,3,2098,1.902,2099,3,2100,3,2101,3,2102,3,2103,3,2104,3,2105,3,2106,3,2107,3,2108,3,2109,3,2110,3,2111,2.433,2112,3,2113,3,2114,3,2115,2.577,2116,3,2117,3,2118,3]],["title/modules/FilesModule.html",[346,1.155,1205,3.646]],["body/modules/FilesModule.html",[3,0.265,4,0.274,10,0.207,25,2.519,26,0.007,152,0.372,154,0.44,155,2.025,156,1.568,167,0.184,168,0.215,198,0.938,210,2.426,211,1.293,213,2.398,214,1.745,216,2.439,217,1.159,219,2.468,252,2.398,253,1.271,254,1.35,316,2.468,317,1.271,322,2.426,324,2.398,325,1.208,327,2.318,329,2.358,337,2.358,343,0.003,344,0.004,345,0.003,346,1.148,348,1.982,349,1.901,350,3.144,351,2.069,352,3.076,358,4.951,359,2.845,360,1.94,361,1.689,363,3.813,364,2.272,365,2.36,541,4.11,609,2.933,613,4.11,616,5.309,632,3.626,698,3.208,699,2.269,702,4.635,1082,4.429,1205,7.276,1206,6.019,1207,6.215,1229,6.241,1233,4.471,1235,4.11,2119,4.471,2120,4.471,2121,5.018,2122,4.471,2123,4.471,2124,5.018,2125,3.841,2126,3.626,2127,3.293,2128,4.471,2129,4.471,2130,4.471,2131,5.018,2132,5.018,2133,4.471,2134,4.11,2135,4.11,2136,4.471]],["title/interfaces/Focus.html",[63,2.529,369,1.369]],["body/interfaces/Focus.html",[3,0.393,4,0.406,10,0.307,26,0.006,39,0.79,40,1.054,49,5.916,54,1.36,63,4.33,64,5.692,68,0.666,70,0.943,89,1.111,143,2.832,152,0.284,154,0.652,167,0.272,343,0.005,344,0.006,345,0.005,369,2.018,371,3.209,2137,6.627,2138,7.439]],["title/directives/FocusDirective.html",[200,1.044,335,1.256]],["body/directives/FocusDirective.html",[3,0.354,4,0.365,10,0.277,17,1.986,22,3.855,24,1.506,26,0.007,33,1.9,39,0.711,42,1.633,54,1.278,57,4.105,64,5.499,65,2.02,68,0.782,70,1.178,89,1.212,90,1.795,100,0.982,101,0.801,102,0.697,123,4.105,127,2.055,143,2.632,152,0.255,154,0.586,167,0.245,168,0.287,200,1.679,326,1.584,335,2.02,343,0.004,344,0.005,345,0.004,378,1.806,460,1.339,578,3.912,672,2.76,919,2.589,1479,6.684,1863,6.684,2139,5.964,2140,7.616,2141,6.694,2142,8.115,2143,6.694,2144,6.694,2145,6.694,2146,5.483,2147,6.694,2148,6.694,2149,6.694,2150,6.694,2151,6.694,2152,6.694]],["title/interfaces/FormConfig.html",[369,1.369,2153,3.862]],["body/interfaces/FormConfig.html",[3,0.363,4,0.375,10,0.284,12,0.791,20,3.256,26,0.007,32,1.417,39,0.731,40,1.006,68,0.791,69,1.767,102,0.99,152,0.262,167,0.251,343,0.005,344,0.005,345,0.005,369,1.865,371,2.965,378,1.967,390,3.477,548,4.251,1060,4.133,1078,3.762,1125,4.328,1152,6.291,1190,5.412,1762,5.474,2153,7.01,2154,6.125,2155,6.754,2156,8.16,2157,9.16,2158,8.16,2159,6.311,2160,7.01,2161,6.311,2162,5.631]],["title/modules/FormModule.html",[346,1.155,2163,3.466]],["body/modules/FormModule.html",[3,0.271,4,0.28,10,0.212,21,2.24,25,2.549,26,0.007,27,3.407,50,4.683,121,0.902,152,0.372,154,0.45,155,2.073,166,0.994,167,0.251,168,0.221,198,0.961,226,2.407,232,2.278,247,2.366,320,2.407,343,0.003,344,0.005,345,0.003,346,1.176,348,2.029,349,1.946,350,3.182,351,2.119,352,3.113,359,2.891,360,1.987,361,1.73,363,3.874,364,2.308,365,1.797,698,3.259,699,2.324,701,5.575,723,4.858,856,5.79,875,4.209,877,4.209,879,4.209,1060,2.576,1223,3.113,1225,3.713,1227,3.713,1274,2.903,1477,3.933,1489,4.209,1499,3.933,2163,6.909,2164,4.578,2165,4.578,2166,4.578,2167,4.578,2168,4.578,2169,6.867,2170,6.867,2171,6.528,2172,6.238,2173,6.238,2174,5.345,2175,5.79,2176,5.79,2177,4.578,2178,4.209,2179,5.139,2180,4.578,2181,5.139,2182,5.139,2183,4.209,2184,3.713,2185,5.139,2186,5.139,2187,4.209,2188,4.209,2189,4.578,2190,5.139,2191,5.139,2192,5.139,2193,5.139]],["title/injectables/FormService.html",[50,2.678,662,1.494]],["body/injectables/FormService.html",[3,0.231,4,0.238,10,0.18,12,0.502,16,3.368,26,0.007,32,1.189,39,0.464,40,0.748,45,1.406,46,1.743,47,4.058,48,2.759,50,3.253,51,3.808,54,0.965,68,0.773,69,0.873,70,1.134,73,2.528,75,4.692,84,1.39,85,2.585,88,1.987,89,1.411,90,0.965,100,1.292,101,1.054,102,0.916,121,0.574,131,3.108,139,4.004,147,4.656,152,0.309,154,0.382,155,1.76,166,1.624,167,0.16,168,0.187,188,1.629,247,1.913,343,0.003,344,0.004,345,0.003,369,1.663,378,0.903,384,1.247,389,2.197,390,3.712,392,2.37,395,1.723,400,2.122,429,2.991,460,0.873,488,1.269,502,2.772,556,2.914,560,1.587,582,2.63,621,3.073,633,2.249,650,2.74,662,1.815,715,2.022,780,3.253,890,2.473,921,3.713,972,3.877,1035,2.796,1036,3.131,1114,5.561,1155,1.556,1244,2.55,1291,2.747,1394,4.429,1745,2.991,1748,3.582,1765,2.55,1843,3.153,1898,3.859,1922,3.582,1927,4.692,2194,3.887,2195,6.13,2196,3.253,2197,6.13,2198,6.13,2199,6.13,2200,6.13,2201,6.13,2202,6.13,2203,6.13,2204,4.363,2205,6.13,2206,4.363,2207,4.023,2208,6.13,2209,4.363,2210,6.13,2211,6.13,2212,4.363,2213,6.13,2214,4.363,2215,6.13,2216,7.329,2217,7.087,2218,6.13,2219,4.363,2220,6.13,2221,4.363,2222,5.021,2223,5.461,2224,6.13,2225,4.363,2226,7.686,2227,7.087,2228,4.363,2229,5.461,2230,3.887,2231,4.363,2232,7.087,2233,4.363,2234,4.363,2235,3.34,2236,4.363,2237,3.887,2238,4.363,2239,4.363,2240,6.13,2241,6.13,2242,4.363,2243,4.363,2244,4.363,2245,3.574,2246,3.887,2247,4.363,2248,4.363,2249,4.363,2250,4.363,2251,3.887,2252,4.363,2253,4.363,2254,4.363,2255,4.363,2256,4.363,2257,4.363,2258,3.887,2259,4.363,2260,4.363,2261,4.363,2262,6.13]],["title/injectables/GeocodeService.html",[662,1.494,2263,3.312]],["body/injectables/GeocodeService.html",[3,0.28,4,0.289,10,0.219,12,0.61,13,4.091,26,0.007,39,0.563,42,1.559,46,1.773,54,1.102,68,0.747,70,1.098,84,1.346,88,2.106,89,1.33,100,1.272,101,1.037,102,0.902,127,2.111,133,3.363,152,0.331,154,0.464,165,4.058,166,1.516,167,0.194,168,0.228,188,1.582,202,1.413,209,1.629,266,2.206,343,0.005,344,0.005,345,0.005,447,2.733,460,1.06,495,2.764,662,2.073,665,3.509,672,2.186,673,2.094,715,2.457,866,4.091,915,5.143,972,2.901,1186,5.47,1194,5.733,1317,3.641,1506,6.237,1516,5.058,1674,4.594,1765,3.098,2263,4.594,2264,4.723,2265,5.47,2266,7,2267,7,2268,7,2269,7,2270,7,2271,7,2272,5.302,2273,8.336,2274,8.087,2275,5.302,2276,7,2277,7,2278,5.302,2279,7.098,2280,7,2281,5.302,2282,5.733,2283,7.721,2284,5.733,2285,5.302,2286,7,2287,5.302,2288,7,2289,7,2290,5.302,2291,7,2292,7,2293,4.342,2294,5.302,2295,5.302,2296,5.302,2297,5.302,2298,5.302,2299,5.302,2300,5.302,2301,5.358,2302,5.302,2303,5.302,2304,7,2305,4.342,2306,6.237,2307,5.302,2308,6.237,2309,5.302,2310,5.302,2311,5.302,2312,5.302,2313,5.302,2314,4.342,2315,4.723,2316,5.302,2317,6.237,2318,5.302,2319,5.302,2320,5.302,2321,5.302,2322,5.302,2323,5.302,2324,5.302,2325,5.302,2326,5.302,2327,5.302]],["title/pipes/GroupPipe.html",[1277,2.678,1280,3.466]],["body/pipes/GroupPipe.html",[3,0.36,4,0.371,10,0.281,12,0.783,17,1.666,24,1.531,26,0.007,45,1.578,51,3.618,52,2.427,54,1.072,68,0.61,69,1.759,70,0.862,72,1.532,88,1.939,89,1.016,100,0.998,101,1.053,102,0.708,142,3.379,152,0.313,154,0.596,167,0.249,168,0.292,188,1.563,343,0.004,344,0.005,345,0.004,384,1.945,586,3.669,718,4.79,757,3.538,894,4.705,912,5.379,1277,4.35,1278,4.917,1280,6.27,1281,4.63,1282,5.629,1283,4.466,1289,5.921,2328,6.063,2329,8.196,2330,6.805,2331,6.805,2332,6.805]],["title/injectables/HistoryService.html",[662,1.494,1209,3.646]],["body/injectables/HistoryService.html",[3,0.237,4,0.392,10,0.185,12,0.517,26,0.007,39,0.477,40,0.763,45,1.334,46,1.768,54,0.985,68,0.839,69,1.773,70,1.156,84,0.771,88,2.057,89,1.075,90,0.993,98,2.224,100,1.142,101,0.931,102,0.81,121,1.076,133,1.811,138,2.187,152,0.344,154,0.393,156,1.403,166,1.391,167,0.164,168,0.193,186,3.134,188,1.454,296,2.057,299,1.619,343,0.003,344,0.004,345,0.003,373,3.356,376,1.811,391,3.532,400,1.638,450,7.119,460,1.251,466,3.676,483,3.654,508,3.318,534,3.082,535,3.998,550,3.606,554,5.032,581,1.892,649,2.536,650,2.417,657,3.699,662,1.851,663,2.456,715,2.08,718,4.547,730,5.622,819,2.825,820,3.082,853,2.825,866,3.654,902,4.358,919,2.417,954,4.294,997,4.536,1024,5.524,1031,5.329,1034,4.396,1110,2.719,1158,3.318,1185,3.05,1209,5.622,1460,5.132,1615,5.704,1622,2.945,1634,3.936,1752,5.329,1786,3.243,1820,4.785,2333,3.998,2334,5.57,2335,5.121,2336,5.57,2337,6.252,2338,8.181,2339,5.893,2340,6.252,2341,7.195,2342,3.998,2343,6.252,2344,6.252,2345,4.488,2346,5.57,2347,6.252,2348,8.472,2349,4.488,2350,8.692,2351,4.488,2352,5.121,2353,5.955,2354,6.373,2355,4.488,2356,4.488,2357,5.57,2358,5.121,2359,4.488,2360,4.488,2361,4.488,2362,6.252,2363,4.488,2364,4.488,2365,4.488,2366,3.998,2367,6.252,2368,4.488,2369,4.488,2370,8.692,2371,4.488,2372,4.488,2373,4.488,2374,6.252,2375,7.195,2376,4.488,2377,4.488,2378,4.488,2379,5.57,2380,6.252,2381,4.488,2382,6.252,2383,4.488,2384,6.252,2385,6.252,2386,4.488,2387,4.488]],["title/components/IconComponent.html",[0,0.292,250,1.278]],["body/components/IconComponent.html",[0,0.453,1,1.009,2,1.057,3,0.211,4,0.217,5,0.811,7,1.081,8,1.045,9,1.681,10,0.165,12,0.459,17,1.407,21,0.976,22,2.976,23,3.048,24,0.897,26,0.007,33,2.196,34,1.883,37,1.456,39,0.424,40,0.701,42,1.261,54,0.905,56,3.42,57,3.337,65,1.431,68,0.604,69,1.15,70,1.033,86,3.948,88,0.943,89,1.007,90,1.491,100,0.585,101,1.138,102,0.415,121,0.887,127,1.456,129,0.992,138,2.736,152,0.298,154,0.349,167,0.247,168,0.289,198,0.745,199,1.532,200,0.825,201,1.681,202,1.967,203,1.081,204,1.081,205,0.976,206,2.001,207,0.976,208,1.027,209,0.928,210,1.009,211,1.027,212,2.278,213,1.009,214,1.542,215,2.001,216,1.027,217,1.399,218,2.332,219,1.027,220,1.027,221,1.081,222,1.009,223,1.559,224,1.027,225,1.081,226,1.009,227,1.081,228,0.992,229,0.976,230,1.72,231,1.828,232,0.992,233,1.009,234,1.009,235,0.992,236,1.081,237,1.027,238,1.027,239,2.122,240,1.027,241,1.009,242,1.027,243,1.027,244,1.027,245,1.009,246,1.081,247,0.992,248,1.027,249,1.081,250,1.868,251,1.081,252,1.009,253,1.009,254,1.15,255,1.081,256,1.009,257,1.081,258,0.992,259,1.009,260,1.081,261,1.009,262,1.081,263,0.928,264,1.081,265,1.009,266,1.595,267,1.081,268,0.992,269,1.081,270,1.009,271,1.081,272,0.976,273,1.081,274,1.009,275,0.992,276,1.009,277,0.959,278,1.081,279,1.009,280,1.081,281,1.081,282,1.009,283,1.081,284,1.009,285,1.081,286,0.976,287,1.081,288,0.992,289,1.009,290,1.081,291,1.009,292,1.045,293,1.081,294,0.992,295,1.009,296,1.902,297,1.009,298,1.027,299,0.897,300,1.027,301,1.027,302,1.009,303,1.027,304,1.027,305,1.027,306,1.081,307,0.992,308,1.009,309,1.081,310,1.009,311,1.045,312,1.009,313,1.081,314,1.009,315,1.081,316,1.027,317,1.009,318,1.009,319,1.081,320,1.009,321,1.081,322,1.009,323,1.081,324,1.009,325,0.959,326,0.943,327,0.976,328,1.081,329,0.992,330,1.081,331,0.992,332,1.081,333,0.992,334,1.081,335,0.992,336,1.081,337,0.992,338,1.063,339,1.081,340,0.992,341,1.063,342,1.081,343,0.003,344,0.005,345,0.003,395,2.27,427,3.482,460,0.797,472,1.394,488,1.16,502,2.599,531,1.506,566,2.963,635,2.51,649,3.809,661,2.599,670,2.616,672,1.644,728,3.265,763,2.181,1035,2.452,1153,3.051,1318,4.424,1435,2.415,1871,6.668,1911,3.051,1947,4.762,2388,3.551,2389,7.042,2390,7.174,2391,4.842,2392,5.331,2393,5.121,2394,3.619,2395,3.619,2396,5.748,2397,3.986,2398,6.356,2399,5.748,2400,3.986,2401,3.986,2402,3.986,2403,3.986,2404,5.121,2405,5.748,2406,3.986,2407,3.051,2408,5.121,2409,5.748,2410,5.748,2411,3.986,2412,3.986,2413,5.748,2414,3.986,2415,2.51,2416,3.551,2417,3.551,2418,5.748,2419,3.986,2420,3.986,2421,3.986,2422,2.51,2423,3.986,2424,5.748,2425,5.748]],["title/modules/IconModule.html",[346,1.155,2174,3.057]],["body/modules/IconModule.html",[3,0.371,4,0.383,10,0.29,25,2.944,26,0.007,152,0.352,154,0.615,167,0.257,168,0.301,198,1.312,250,2.511,343,0.005,344,0.006,345,0.005,346,1.606,348,2.772,349,2.659,350,3.675,351,2.894,352,3.595,359,3.52,360,2.714,361,2.363,364,2.363,365,2.92,698,3.968,699,3.174,2174,5.932,2398,6.563,2416,6.254,2426,6.254,2427,6.254,2428,6.254,2429,6.254,2430,7.019,2431,7.019]],["title/injectables/IconService.html",[662,1.494,2398,3.466]],["body/injectables/IconService.html",[3,0.358,4,0.37,9,2.858,10,0.28,12,0.78,20,2.677,26,0.007,34,1.745,39,0.72,40,0.998,45,1.105,46,1.67,68,0.607,70,0.859,72,1.529,87,3.229,121,1.155,138,2.86,152,0.348,154,0.594,167,0.248,168,0.291,201,2.858,343,0.004,344,0.005,345,0.004,531,2.389,662,2.421,715,3.142,1035,3.194,1036,3.162,1291,4.268,1745,4.448,1871,6.262,1947,4.779,2389,7.976,2390,7.191,2393,7.285,2398,5.616,2417,6.04,2432,6.04,2433,6.258,2434,8.177,2435,8.177,2436,7.822,2437,6.779,2438,7.285]],["title/directives/ImageDirective.html",[200,1.044,337,1.256]],["body/directives/ImageDirective.html",[3,0.261,4,0.27,5,1.36,10,0.205,12,0.57,17,1.636,20,1.954,23,3.424,24,1.113,26,0.007,32,1.034,33,1.454,39,0.526,40,0.816,42,1.632,45,0.807,46,1.542,54,1.053,56,3.758,65,1.664,68,0.833,69,1.876,70,1.178,72,1.416,84,0.85,89,1.211,90,1.479,100,1.19,101,0.97,102,0.844,121,0.651,123,4.034,127,1.693,135,4.387,152,0.323,154,0.433,167,0.181,168,0.212,188,1.551,200,1.566,214,2.104,253,2.329,326,1.171,327,1.636,337,1.664,338,2.161,343,0.003,344,0.004,345,0.003,374,4.132,378,1.383,395,1.954,400,1.984,427,4.05,428,2.892,459,3.419,460,0.99,461,2.708,462,3.417,465,2.238,472,1.731,474,4.581,478,4.634,479,6.206,480,4.83,483,4.425,488,1.945,499,5.956,504,1.954,522,6.119,523,3.575,525,3.787,527,5.956,528,3.787,529,3.575,640,2.998,673,1.954,747,4.209,752,3.787,833,3.115,1167,5.132,1796,2.998,2009,6.829,2010,3.787,2098,4.785,2130,4.409,2439,4.409,2440,6.685,2441,5.956,2442,6.206,2443,9.196,2444,6.685,2445,8.469,2446,6.685,2447,4.949,2448,5.956,2449,4.949,2450,7.224,2451,4.949,2452,6.685,2453,4.949,2454,6.685,2455,5.476,2456,6.685,2457,4.949,2458,6.685,2459,6.685,2460,4.949,2461,6.685,2462,4.949,2463,4.949,2464,4.949,2465,4.949,2466,7.571,2467,4.949,2468,4.949,2469,4.949,2470,6.685,2471,4.949,2472,4.949,2473,5.476,2474,4.949,2475,6.685,2476,4.949,2477,4.949,2478,4.949,2479,6.685,2480,4.949]],["title/components/ImageSelectPopComponent.html",[0,0.292,252,1.278]],["body/components/ImageSelectPopComponent.html",[0,0.381,1,0.681,2,0.785,3,0.142,4,0.147,5,0.547,7,1.157,8,0.705,10,0.111,12,0.31,17,1.045,20,1.685,21,0.659,22,2.341,24,0.605,26,0.007,32,1.243,33,2.162,34,1.85,37,1.081,39,0.286,40,0.521,41,1.52,42,1.23,45,1.336,46,1.767,54,0.672,57,2.729,65,1.502,68,0.803,69,0.854,70,1.182,72,1.23,78,2.2,79,2.2,84,0.462,85,1.799,87,1.685,88,0.637,89,0.983,90,1.335,93,3.495,100,0.885,101,0.981,102,0.628,116,2.2,119,4.49,121,1.078,123,3.875,124,1.063,127,1.773,129,0.67,131,2.379,143,1.983,152,0.267,153,1.217,154,0.236,156,0.841,166,1.585,167,0.098,168,0.301,186,2.139,188,1.072,196,3.266,198,0.503,199,1.138,200,0.557,202,1.609,203,0.73,204,0.73,205,0.659,206,1.637,207,0.659,208,0.693,209,0.626,210,0.681,211,0.693,212,1.99,213,0.681,214,1.381,215,1.637,216,0.693,217,1.202,218,2.064,219,0.693,220,0.693,221,0.73,222,0.681,223,1.157,224,0.693,225,0.73,226,0.681,227,0.73,228,1.32,229,0.659,230,1.606,231,1.438,232,0.67,233,0.681,234,0.681,235,0.67,236,0.73,237,0.693,238,0.693,239,1.785,240,0.693,241,0.681,242,0.693,243,0.693,244,0.693,245,0.681,246,0.73,247,1.32,248,0.693,249,0.73,250,0.681,251,0.73,252,1.528,253,2.142,254,1.939,255,0.73,256,0.681,257,0.73,258,0.67,259,0.681,260,0.73,261,0.681,262,0.73,263,1.404,264,0.73,265,0.681,266,1.255,267,0.73,268,0.67,269,0.73,270,0.681,271,0.73,272,0.659,273,0.73,274,0.681,275,0.67,276,0.681,277,0.648,278,0.73,279,0.681,280,0.73,281,0.73,282,0.681,283,0.73,284,0.681,285,0.73,286,0.659,287,0.73,288,0.67,289,0.681,290,0.73,291,0.681,292,0.705,293,0.73,294,2.199,295,0.681,296,1.684,297,0.681,298,0.693,299,0.605,300,0.693,301,0.693,302,0.681,303,0.693,304,0.693,305,0.693,306,0.73,307,0.67,308,0.681,309,0.73,310,0.681,311,0.705,312,0.681,313,0.73,314,0.681,315,0.73,316,0.693,317,0.681,318,0.681,319,0.73,320,0.681,321,0.73,322,0.681,323,0.73,324,0.681,325,0.648,326,0.637,327,0.659,328,0.73,329,0.67,330,0.73,331,0.67,332,0.73,333,0.67,334,0.73,335,0.67,336,0.73,337,0.67,338,1.414,339,0.73,340,0.67,341,0.717,342,0.73,343,0.002,344,0.003,345,0.002,376,2.139,378,1.097,379,3.492,384,0.769,390,2.774,392,1.041,396,3.716,400,1.581,459,2.774,460,0.854,462,2.655,465,1.217,482,1.616,495,2.094,504,1.685,521,1.286,531,1.923,533,2.494,552,1.884,554,1.428,566,2.2,595,1.552,616,4.864,617,4.519,632,1.944,634,1.584,647,2.585,833,1.694,902,3.656,919,1.041,921,1.63,928,3.266,945,1.573,1030,2.585,1035,2.669,1036,2.544,1047,1.799,1050,3.782,1053,1.573,1067,4.073,1111,3.111,1167,2.335,1171,3.338,1185,3.579,1191,4.343,1223,1.63,1224,1.63,1305,1.313,1325,3.717,1435,2.585,1504,2.931,1509,3.266,1511,2.931,1524,2.814,1525,1.848,1533,1.944,1670,2.06,1671,3.266,1673,4.581,1675,3.083,1677,3.083,1678,2.52,1679,3.083,1680,2.931,1681,3.831,1686,2.204,1687,2.06,1688,1.848,1689,2.06,1690,1.573,1691,1.944,1692,2.06,1693,1.944,1694,1.848,1695,2.06,1697,2.06,1699,3.642,1700,2.398,1701,1.944,1702,2.06,1703,1.766,1706,2.398,1710,2.06,1711,3.083,1712,1.944,1713,2.06,1714,1.473,1715,1.694,1716,1.944,1717,1.944,1718,2.06,1719,2.265,1720,1.944,1721,2.06,1723,3.495,1724,2.398,1727,2.204,1728,2.06,1729,1.944,1730,1.944,1731,2.06,1732,2.06,1734,2.204,1735,2.06,1873,1.694,1928,2.687,2034,2.06,2071,2.06,2098,4.428,2135,7.099,2153,4.059,2158,2.398,2481,7.721,2482,4.268,2483,3.495,2484,8.194,2485,6.58,2486,5.303,2487,5.303,2488,2.204,2489,3.802,2490,4.268,2491,3.802,2492,3.495,2493,2.691,2494,2.691,2495,2.398,2496,2.398,2497,4.268,2498,2.691,2499,2.691,2500,2.691,2501,6.58,2502,2.398,2503,2.691,2504,6.58,2505,2.691,2506,2.204,2507,6.035,2508,2.691,2509,2.691,2510,2.691,2511,4.268,2512,4.268,2513,4.268,2514,3.495,2515,4.268,2516,4.268,2517,2.691,2518,2.691,2519,2.691,2520,2.691,2521,2.06,2522,2.204,2523,2.691,2524,2.691,2525,2.204,2526,2.691,2527,6.58,2528,2.691,2529,4.268,2530,2.691,2531,2.691,2532,2.691,2533,4.268,2534,2.691,2535,2.691,2536,2.691,2537,2.691,2538,2.691,2539,2.691,2540,2.691,2541,2.398,2542,2.691,2543,2.691,2544,2.06,2545,2.691,2546,1.944,2547,1.52,2548,2.691,2549,4.268,2550,4.268,2551,2.691,2552,2.691,2553,2.691,2554,4.268]],["title/components/InputComponent.html",[0,0.292,129,1.256]],["body/components/InputComponent.html",[0,0.521,1,0.69,2,0.983,3,0.144,4,0.149,5,1.088,7,0.739,8,0.714,10,0.113,12,0.314,15,1.859,17,1.055,18,3.366,20,1.702,21,1.309,23,2.418,24,0.613,25,1.424,26,0.007,27,1.903,28,2.926,29,2.359,30,2.926,31,2.359,32,1.183,33,2.164,34,1.853,37,1.092,39,0.29,40,0.526,42,1.763,43,3.366,44,3.366,45,1.401,46,0.82,47,3.945,48,2.523,49,3.826,51,3.375,52,2.308,54,0.679,55,3.226,56,1.998,58,2.829,59,3.826,62,2.611,63,3.528,65,1.073,68,0.823,69,0.862,70,1.184,72,1.472,84,1.266,85,2.791,87,1.076,88,0.645,89,1.176,90,1.691,95,2.714,97,3.299,98,1.737,99,3.114,100,1.033,101,1.06,102,0.733,103,2.714,113,2.714,115,2.961,116,2.222,117,1.667,118,2.961,119,2.838,121,1.06,124,1.076,127,1.092,129,1.903,131,2.686,138,1.87,139,2.435,143,2.372,145,2.435,147,4.264,152,0.269,154,0.239,155,1.1,162,3.53,166,0.834,167,0.1,168,0.117,181,2.829,188,0.766,191,2.086,193,1.54,194,2.714,198,0.51,199,1.149,200,1.106,202,1.62,203,0.739,204,0.739,205,0.667,206,1.648,207,0.667,208,0.702,209,0.634,210,0.69,211,0.702,212,2,213,0.69,214,1.223,215,1.648,216,0.702,217,1.313,218,2.073,219,0.702,220,0.702,221,0.739,222,0.69,223,1.169,224,0.702,225,0.739,226,0.69,227,0.739,228,0.679,229,0.667,230,1.529,231,1.45,232,0.679,233,0.69,234,1.867,235,1.513,236,0.739,237,0.702,238,0.702,239,1.796,240,0.702,241,0.69,242,0.702,243,0.702,244,0.702,245,0.69,246,0.739,247,0.679,248,0.702,249,0.739,250,0.69,251,0.739,252,0.69,253,0.69,254,0.862,255,0.739,256,0.69,257,0.739,258,0.679,259,0.69,260,0.739,261,0.69,262,0.739,263,0.634,264,0.739,265,0.69,266,1.265,267,0.739,268,0.679,269,0.739,270,0.69,271,0.739,272,0.667,273,0.739,274,0.69,275,0.679,276,0.69,277,0.656,278,0.739,279,0.69,280,0.739,281,0.739,282,0.69,283,0.739,284,0.69,285,0.739,286,0.667,287,0.739,288,0.679,289,0.69,290,0.739,291,0.69,292,0.714,293,0.739,294,0.679,295,0.69,296,1.691,297,0.69,298,0.702,299,0.613,300,0.702,301,0.702,302,0.69,303,0.702,304,0.702,305,0.702,306,0.739,307,0.679,308,0.69,309,0.739,310,0.69,311,0.714,312,0.69,313,0.739,314,0.69,315,0.739,316,0.702,317,0.69,318,0.69,319,0.739,320,0.69,321,0.739,322,0.69,323,0.739,324,0.69,325,0.656,326,0.645,327,0.667,328,0.739,329,0.679,330,0.739,331,0.679,332,0.739,333,0.679,334,0.739,335,0.679,336,0.739,337,0.679,338,0.727,339,0.739,340,1.073,341,0.727,342,0.739,343,0.002,344,0.003,345,0.002,373,1.859,378,0.892,384,0.779,389,2.012,428,1.593,429,1.33,435,3.239,445,2.359,474,1.54,482,1.633,483,3.869,502,1.949,504,1.076,521,1.612,531,1.129,571,2.103,586,2.851,592,3.299,595,1.945,621,2.16,653,2.049,761,1.859,884,2.435,919,1.667,960,2.103,972,1.491,1047,2.968,1050,3.801,1068,2.541,1155,0.972,1174,3.299,1223,1.651,1224,1.651,1244,3.125,1246,3.53,1260,3.53,1262,4.379,1276,2.961,1316,2.232,1317,1.872,1395,2.103,1477,2.086,1491,5.766,1550,3.53,1553,4.092,1563,3.863,1566,3.53,1567,4.379,1568,3.53,1570,2.232,1571,3.53,1573,3.53,1575,2.232,1576,2.232,1577,2.232,1765,1.593,1862,3.509,1873,2.714,1984,3.84,2229,4.764,2394,2.714,2395,2.714,2415,1.716,2473,2.232,2491,3.84,2555,2.428,2556,5.347,2557,6.078,2558,5.422,2559,4.379,2560,2.726,2561,3.84,2562,2.726,2563,3.299,2564,2.726,2565,6.272,2566,2.829,2567,2.726,2568,3.84,2569,2.726,2570,2.726,2571,2.726,2572,2.726,2573,3.84,2574,4.31,2575,2.726,2576,3.84,2577,2.726,2578,4.31,2579,2.726,2580,2.726,2581,2.726,2582,2.726,2583,2.726,2584,2.726,2585,2.726,2586,2.726,2587,2.726,2588,2.428,2589,2.726,2590,3.114,2591,4.31,2592,3.114,2593,4.31,2594,4.31,2595,2.829,2596,4.31,2597,4.31,2598,4.31,2599,2.726,2600,4.31,2601,2.726,2602,2.726,2603,2.726,2604,3.84,2605,3.53,2606,2.428,2607,2.428,2608,2.232,2609,2.428,2610,7.373,2611,2.726,2612,2.726,2613,2.726,2614,4.31,2615,3.84,2616,2.726,2617,2.726,2618,6.078,2619,6.621,2620,4.31,2621,2.726,2622,2.726,2623,2.726,2624,2.726,2625,2.726,2626,2.726,2627,4.31,2628,2.726,2629,2.726,2630,2.726,2631,2.726,2632,2.726,2633,2.726,2634,2.726,2635,2.428,2636,4.31,2637,2.726,2638,2.726,2639,2.726,2640,2.726,2641,2.726,2642,2.726,2643,2.726]],["title/components/InputErrorsComponent.html",[0,0.292,256,1.278]],["body/components/InputErrorsComponent.html",[0,0.466,1,1.082,2,1.11,3,0.226,4,0.233,5,1.425,7,1.159,8,1.12,10,0.177,12,0.492,21,1.046,24,0.961,26,0.007,33,2.201,34,1.886,37,1.53,39,0.454,40,0.737,42,1.603,46,1.528,47,4.463,54,0.951,65,1.504,68,0.628,70,0.965,72,1.129,89,0.638,100,0.627,101,1.048,102,0.445,121,0.795,127,1.53,129,1.064,131,2.606,139,3.958,142,2.491,152,0.267,154,0.374,155,1.724,163,5.381,167,0.156,168,0.183,188,1.073,198,0.799,199,1.61,200,0.884,202,2.03,203,1.159,204,1.159,205,1.046,206,2.065,207,1.046,208,1.101,209,0.994,210,1.082,211,1.101,212,2.325,213,1.082,214,1.603,215,2.065,216,1.101,217,1.432,218,2.375,219,1.101,220,1.101,221,1.159,222,1.082,223,1.638,224,1.101,225,1.159,226,1.082,227,1.159,228,1.064,229,1.046,230,1.752,231,1.9,232,1.064,233,1.082,234,1.082,235,1.064,236,1.159,237,1.101,238,1.101,239,2.179,240,1.101,241,1.082,242,1.101,243,1.101,244,1.101,245,1.082,246,1.159,247,1.064,248,1.101,249,1.159,250,1.082,251,1.159,252,1.082,253,1.082,254,1.208,255,1.159,256,1.928,257,1.159,258,1.064,259,1.082,260,1.159,261,1.082,262,1.159,263,0.994,264,1.159,265,1.082,266,1.658,267,1.159,268,1.064,269,1.159,270,1.082,271,1.159,272,1.046,273,1.159,274,1.082,275,1.064,276,1.082,277,1.028,278,1.159,279,1.082,280,1.159,281,1.159,282,1.082,283,1.159,284,1.082,285,1.159,286,1.046,287,1.159,288,1.064,289,1.082,290,1.159,291,1.082,292,1.12,293,1.159,294,1.064,295,1.082,296,1.937,297,1.082,298,1.101,299,0.961,300,1.101,301,1.101,302,1.082,303,1.101,304,1.101,305,1.101,306,1.159,307,1.064,308,1.082,309,1.159,310,1.082,311,1.12,312,1.082,313,1.159,314,1.082,315,1.159,316,1.101,317,1.082,318,1.082,319,1.159,320,1.082,321,1.159,322,1.082,323,1.159,324,1.082,325,1.028,326,1.011,327,1.046,328,1.159,329,1.064,330,1.159,331,1.064,332,1.159,333,1.064,334,1.159,335,1.064,336,1.159,337,1.064,338,1.139,339,1.159,340,1.064,341,1.139,342,1.159,343,0.003,344,0.004,345,0.003,395,1.687,460,0.855,581,2.547,650,2.709,651,4.613,997,3.919,1035,2.77,1036,3.107,1155,1.524,1291,2.69,1318,3.964,1843,3.087,1943,3.802,2334,5.381,2335,4.947,2644,7.157,2645,6.58,2646,3.807,2647,5.381,2648,4.874,2649,6.04,2650,6.04,2651,7.615,2652,6.04,2653,4.364,2654,6.04,2655,4.273,2656,5.381,2657,4.364,2658,3.802,2659,4.273,2660,4.273,2661,6.04,2662,4.273,2663,4.273,2664,4.273,2665,4.273,2666,6.04]],["title/modules/IoModule.html",[346,1.155,2171,3.466]],["body/modules/IoModule.html",[3,0.321,4,0.332,10,0.251,25,2.527,26,0.007,42,1.138,129,2.443,152,0.365,154,0.533,155,2.455,167,0.223,168,0.261,198,1.138,233,2.466,234,2.466,235,1.905,256,2.485,288,2.443,340,2.424,343,0.004,344,0.005,345,0.004,346,1.392,348,2.403,349,2.305,350,3.451,351,2.509,352,3.376,359,3.226,360,2.353,361,2.048,363,4.322,364,2.048,365,2.676,698,3.636,699,2.752,701,6.046,1548,4.984,1563,4.397,1565,4.658,1578,5.421,2171,6.859,2608,4.984,2645,4.984,2667,5.421,2668,5.421,2669,5.421,2670,6.085,2671,6.085,2672,6.085,2673,6.085,2674,6.085]],["title/interfaces/ItemConfig.html",[369,1.369,1762,2.949]],["body/interfaces/ItemConfig.html",[3,0.274,4,0.282,10,0.214,12,0.596,26,0.007,39,0.55,40,1.008,45,1.124,48,2.319,52,2.709,68,0.872,69,1.915,72,1.779,73,3.78,85,2.906,99,5.967,102,1.026,133,2.78,142,2.842,152,0.263,167,0.189,168,0.296,217,1.183,343,0.003,344,0.005,345,0.003,369,1.405,371,2.234,375,3.894,376,3.568,389,1.97,390,3.482,391,4.996,392,3.193,429,4.573,531,2.164,571,3.362,581,2.906,586,3.419,621,3.454,633,3.553,661,3.116,670,4.523,761,3.341,780,3.658,890,3.568,894,4.558,913,7.357,964,5.567,965,3.194,1004,5.645,1078,2.833,1125,3.26,1155,2.945,1168,5.003,1174,5.275,1197,6.14,1250,4.028,1285,5.275,1311,4.98,1329,3.771,1395,3.362,1674,4.523,1756,4.523,1762,4.826,1927,5.275,1947,5.168,1948,3.398,1977,4.613,2506,6.764,2576,6.14,2595,4.523,2675,4.613,2676,6.892,2677,6.14,2678,7.357,2679,8.258,2680,6.14,2681,6.892,2682,6.892,2683,7.747,2684,6.892,2685,7.357,2686,6.892,2687,6.892,2688,6.892,2689,6.892,2690,5.275,2691,6.892,2692,5.275]],["title/interfaces/KeyAction.html",[369,1.369,2693,3.862]],["body/interfaces/KeyAction.html",[3,0.394,4,0.319,10,0.242,12,0.996,26,0.007,32,1.271,39,0.621,40,0.91,45,1.216,46,1.112,52,1.613,63,2.93,65,1.455,68,0.801,69,1.881,90,1.293,102,0.777,151,3.303,152,0.313,154,0.512,166,1.131,167,0.273,168,0.251,186,4.714,188,1.46,343,0.004,344,0.005,345,0.004,369,1.586,370,4.592,371,2.522,376,2.358,378,1.209,390,3.463,395,2.309,400,2.152,429,4.221,586,2.261,651,3.541,655,7.087,657,3.714,662,2.208,663,3.199,997,4.361,1024,4.976,1156,4.234,1315,4.224,1516,4.224,2245,4.788,2693,6.841,2694,4.788,2695,5.208,2696,4.788,2697,5.208,2698,5.208,2699,5.208,2700,7.318,2701,5.208,2702,5.208,2703,5.208,2704,6.645,2705,5.208,2706,5.208,2707,5.208,2708,5.208,2709,4.474,2710,6.645,2711,5.208,2712,5.208,2713,5.208,2714,5.208,2715,5.208,2716,5.208,2717,5.208,2718,5.208,2719,5.208,2720,5.208,2721,5.208,2722,5.208,2723,5.208,2724,5.208,2725,5.208,2726,5.208,2727,5.208,2728,5.208,2729,5.208,2730,5.208,2731,5.208,2732,5.208,2733,5.208,2734,5.208,2735,5.208,2736,5.208,2737,5.208,2738,5.208]],["title/injectables/KeycommandsService.html",[151,2.851,662,1.494]],["body/injectables/KeycommandsService.html",[3,0.355,4,0.272,10,0.206,12,0.574,26,0.007,32,1.177,39,0.53,40,0.82,45,1.482,46,1.615,52,1.855,54,1.059,63,2.501,65,1.242,68,0.834,69,1.819,70,1.213,89,1.358,90,2.011,100,1.312,101,1.07,102,0.931,121,1.117,151,3.798,152,0.29,154,0.437,166,0.965,167,0.246,168,0.214,186,4.666,188,1.351,343,0.003,344,0.004,345,0.003,369,1.353,370,2.648,375,2.819,376,2.013,378,1.032,390,3.689,395,1.971,400,2.225,460,0.998,504,1.971,586,2.6,651,3.023,655,4.087,657,4.21,662,1.991,663,2.73,715,2.313,761,2.9,866,2.916,997,3.28,1024,5.58,1156,4.378,1167,2.73,1315,4.858,1516,3.605,2245,4.087,2433,5.146,2693,6.958,2694,4.087,2695,4.446,2696,6.228,2697,6.774,2698,6.774,2699,4.446,2700,6.774,2701,4.446,2702,4.446,2703,4.446,2704,5.99,2705,4.446,2706,4.446,2707,4.446,2708,4.446,2709,3.819,2710,5.99,2711,4.446,2712,4.446,2713,7.248,2714,7.248,2715,5.99,2716,4.446,2717,6.774,2718,5.99,2719,4.446,2720,4.446,2721,5.99,2722,4.446,2723,4.446,2724,4.446,2725,4.446,2726,4.446,2727,4.446,2728,4.446,2729,4.446,2730,4.446,2731,5.99,2732,4.446,2733,5.99,2734,4.446,2735,4.446,2736,5.99,2737,4.446,2738,4.446,2739,5.99,2740,6.723,2741,6.723,2742,5.146,2743,6.723,2744,4.087,2745,6.723,2746,4.99,2747,4.99,2748,4.99,2749,4.99,2750,4.99,2751,4.99,2752,4.99,2753,4.99,2754,4.99,2755,4.99,2756,6.723]],["title/components/ListComponent.html",[0,0.292,258,1.256]],["body/components/ListComponent.html",[0,0.309,1,0.689,2,0.982,3,0.144,4,0.148,5,1.086,7,0.738,8,0.713,9,1.147,10,0.112,12,0.313,17,1.053,21,0.666,23,2.415,24,0.612,26,0.007,32,1.14,33,2.164,34,1.849,37,0.689,39,0.812,40,0.525,42,1.586,45,1.282,46,1.258,51,1.201,52,2.421,54,0.678,55,2.834,56,1.994,63,2.157,65,1.071,68,0.799,70,1.183,72,1.315,76,2.228,84,1.312,85,2.251,88,1.437,89,1.175,90,1.63,98,1.23,100,1.032,101,1.068,102,0.767,121,0.87,127,1.09,129,0.677,138,2.123,143,2.428,145,3.43,152,0.268,154,0.238,167,0.099,168,0.117,183,1.581,188,1.25,196,5.062,198,0.509,199,1.147,200,0.563,201,1.814,202,1.618,203,0.738,204,0.738,205,0.666,206,1.647,207,0.666,208,0.701,209,0.633,210,0.689,211,0.701,212,1.998,213,0.689,214,1.222,215,1.647,216,0.701,217,1.661,218,2.072,219,0.701,220,0.701,221,0.738,222,0.689,223,1.167,224,0.701,225,0.738,226,0.689,227,0.738,228,0.677,229,0.666,230,1.528,231,1.448,232,0.677,233,0.689,234,0.689,235,0.677,236,0.738,237,0.701,238,0.701,239,1.794,240,0.701,241,0.689,242,0.701,243,0.701,244,0.701,245,0.689,246,0.738,247,0.677,248,0.701,249,0.738,250,0.689,251,0.738,252,0.689,253,0.689,254,0.861,255,0.738,256,0.689,257,0.738,258,1.751,259,0.689,260,0.738,261,0.689,262,0.738,263,0.633,264,0.738,265,0.689,266,1.264,267,0.738,268,0.677,269,0.738,270,0.689,271,0.738,272,0.666,273,0.738,274,0.689,275,0.677,276,0.689,277,0.655,278,0.738,279,0.689,280,0.738,281,0.738,282,0.689,283,0.738,284,0.689,285,0.738,286,0.666,287,0.738,288,0.677,289,0.689,290,0.738,291,0.689,292,0.713,293,0.738,294,0.677,295,0.689,296,1.69,297,0.689,298,0.701,299,1.201,300,0.701,301,0.701,302,0.689,303,0.701,304,0.701,305,0.701,306,0.738,307,0.677,308,0.689,309,0.738,310,0.689,311,0.713,312,0.689,313,0.738,314,0.689,315,0.738,316,0.701,317,0.689,318,0.689,319,0.738,320,0.689,321,0.738,322,0.689,323,0.738,324,0.689,325,0.655,326,0.644,327,0.666,328,0.738,329,0.677,330,0.738,331,0.677,332,0.738,333,0.677,334,0.738,335,0.677,336,0.738,337,0.677,338,0.725,339,0.738,340,0.677,341,0.725,342,0.738,343,0.002,344,0.003,345,0.002,373,1.173,378,0.89,379,3.51,383,3.829,384,1.23,389,2.248,390,2.251,392,1.052,395,1.074,396,3.51,400,1.733,416,4.543,433,4.386,435,3.235,460,0.544,472,0.951,482,1.63,495,2.109,504,1.699,508,1.444,521,1.83,543,3.834,548,2.218,555,4.087,569,1.444,576,2.538,577,3.525,578,3.865,582,1.009,584,3.834,586,1.052,592,3.294,594,4.17,595,0.989,603,4.164,609,1.59,757,2.023,786,1.363,889,5.486,894,4.236,919,2.347,960,1.327,965,4.134,967,2.082,1014,2.956,1029,3.362,1030,3.235,1047,1.814,1050,3.798,1060,3.043,1078,1.488,1092,4.087,1119,1.868,1120,1.868,1148,3.109,1155,1.535,1157,4.616,1190,2.824,1281,2.431,1305,2.605,1341,3.525,1342,2.218,1395,2.605,1478,2.423,1528,1.965,1690,2.515,1740,2.082,1765,1.59,1814,3.834,1912,2.824,1942,2.423,1943,1.712,2146,2.228,2223,3.834,2394,2.709,2395,2.709,2415,1.712,2692,2.082,2709,3.294,2757,2.423,2758,4.304,2759,4.304,2760,3.525,2761,3.525,2762,5.408,2763,4.757,2764,5.34,2765,3.834,2766,6.071,2767,6.071,2768,6.071,2769,4.304,2770,4.972,2771,5.34,2772,4.628,2773,5.519,2774,2.423,2775,4.304,2776,2.72,2777,2.72,2778,2.72,2779,2.72,2780,2.72,2781,2.72,2782,2.72,2783,2.72,2784,2.72,2785,2.72,2786,2.72,2787,3.834,2788,2.72,2789,4.304,2790,3.834,2791,4.304,2792,3.834,2793,3.834,2794,2.72,2795,2.72,2796,2.72,2797,2.72,2798,3.294,2799,4.304,2800,2.72,2801,2.72,2802,3.294,2803,4.304,2804,4.304,2805,4.304,2806,2.72,2807,2.72,2808,4.304,2809,2.72,2810,2.72,2811,2.72,2812,1.965,2813,2.423,2814,2.423,2815,2.72,2816,2.72,2817,2.72,2818,2.72,2819,6.614,2820,2.72,2821,2.228,2822,2.72,2823,2.72,2824,2.72,2825,4.304,2826,2.72,2827,4.304,2828,2.72,2829,2.228,2830,2.72,2831,2.423,2832,2.72,2833,2.72,2834,2.423,2835,2.72,2836,4.304,2837,2.72,2838,3.834,2839,2.72,2840,2.72,2841,2.423,2842,2.72,2843,2.423,2844,2.72,2845,2.72,2846,2.72,2847,6.266,2848,2.72,2849,3.834,2850,2.72,2851,2.72,2852,2.423,2853,2.423,2854,2.72,2855,2.72,2856,2.72,2857,2.72,2858,4.304,2859,2.72,2860,2.72,2861,2.72,2862,4.304,2863,4.304,2864,6.071,2865,2.72]],["title/interfaces/ListConfig.html",[369,1.369,383,2.399]],["body/interfaces/ListConfig.html",[3,0.21,4,0.217,10,0.164,12,0.457,20,2.264,26,0.007,32,1.486,34,1.072,39,0.422,40,0.899,42,1.072,48,1.61,52,1.856,68,0.875,69,1.893,73,2.364,88,1.357,98,1.638,101,0.686,102,1.039,121,0.969,138,2.005,152,0.257,167,0.145,217,1.632,254,1.819,343,0.003,344,0.004,345,0.003,369,1.077,371,1.713,376,3.284,378,2.047,383,2.725,389,2.105,400,1.502,429,2.797,478,3.137,480,5.322,489,3.909,495,3.719,521,1.728,531,2.251,548,4.767,555,6.229,566,4.58,571,2.797,586,2.848,595,2.085,671,2.033,757,2.171,780,3.043,817,3.473,866,4.305,890,2.313,894,4.638,939,2.955,965,2.657,997,3.971,1001,3.609,1029,3.609,1050,2.955,1060,3.692,1067,2.725,1073,5.059,1078,2.173,1125,2.5,1135,5.322,1136,6.562,1145,6.562,1161,5.107,1162,3.762,1163,3.239,1164,5.322,1175,4.695,1185,3.594,1190,4.834,1250,3.35,1312,5.107,1325,3.239,1328,4.388,1342,4.428,1395,3.594,1678,3.501,1690,3.35,1738,6.033,1739,5.322,1760,3.473,1762,3.931,1918,3.937,1928,4.637,1950,4.695,1962,6.033,1976,3.937,2098,4.598,2156,6.562,2162,4.695,2251,5.107,2690,4.388,2772,3.473,2821,4.695,2866,3.538,2867,7.366,2868,6.562,2869,5.322,2870,6.562,2871,7.366,2872,5.638,2873,7.366,2874,6.229,2875,6.666,2876,7.366,2877,7.366,2878,5.733,2879,4.695,2880,5.107,2881,5.107,2882,5.733,2883,5.733,2884,4.695,2885,5.107,2886,5.733,2887,6.033,2888,5.107,2889,4.695,2890,5.107,2891,5.733,2892,3.538]],["title/injectables/ListConfigService.html",[603,3.177,662,1.494]],["body/injectables/ListConfigService.html",[3,0.293,4,0.302,10,0.229,26,0.007,32,0.858,39,0.589,40,0.879,45,1.306,46,1.523,48,2.024,54,1.135,68,0.76,69,1.109,70,1.163,89,1.346,90,1.876,100,1.322,101,1.079,102,0.938,152,0.275,154,0.486,166,1.799,167,0.203,168,0.238,188,1.63,217,1.684,343,0.004,344,0.005,345,0.004,384,1.584,389,2.688,400,1.453,428,3.239,429,3.516,531,2.099,586,2.787,603,4.537,649,3.132,662,2.134,715,2.569,972,3.033,997,4.538,1111,2.857,1328,4.243,1779,5.787,2888,6.421,2890,4.938,2893,7.12,2894,4.243,2895,8.009,2896,7.208,2897,7.208,2898,7.208,2899,7.208,2900,7.208,2901,5.543,2902,7.208,2903,5.543,2904,7.208,2905,5.543,2906,7.208,2907,5.543,2908,7.208,2909,5.543,2910,7.208,2911,5.543,2912,5.543,2913,5.543,2914,5.543,2915,7.208,2916,4.938,2917,7.208,2918,5.543,2919,5.543,2920,5.543,2921,8.009,2922,5.543,2923,7.208,2924,5.543,2925,5.543,2926,7.208,2927,5.543,2928,5.543,2929,7.208,2930,5.543,2931,5.543,2932,5.543,2933,7.208,2934,5.543,2935,5.543,2936,5.543]],["title/components/ListHeaderComponent.html",[0,0.292,259,1.278]],["body/components/ListHeaderComponent.html",[0,0.398,1,0.745,2,0.842,3,0.155,4,0.16,5,0.599,7,0.798,8,0.771,10,0.122,12,0.339,17,1.12,21,0.72,23,2.541,24,0.662,26,0.007,32,1.125,33,2.171,34,1.858,37,1.159,39,0.313,40,0.559,42,1.541,44,1.853,45,1.186,46,1.596,47,3.177,48,2.54,54,0.885,56,2.121,65,1.14,68,0.764,70,1.16,72,0.55,85,2.673,88,1.5,89,1.231,90,1.783,100,1.183,101,1.082,102,0.874,121,0.602,124,1.162,127,1.159,129,1.578,131,1.981,138,1.965,152,0.277,153,1.331,154,0.258,166,0.885,167,0.108,168,0.126,188,1.432,198,0.55,199,1.22,200,0.609,202,1.69,203,0.798,204,0.798,205,0.72,206,1.719,207,0.72,208,0.758,209,0.685,210,0.745,211,0.758,212,2.058,213,0.745,214,1.285,215,1.719,216,0.758,217,1.637,218,2.129,219,0.758,220,0.758,221,0.798,222,0.745,223,1.242,224,0.758,225,0.798,226,0.745,227,0.798,228,0.733,229,0.72,230,1.57,231,1.524,232,0.733,233,0.745,234,0.745,235,0.733,236,0.798,237,0.758,238,0.758,239,1.862,240,0.758,241,0.745,242,0.758,243,0.758,244,0.758,245,0.745,246,0.798,247,1.578,248,0.758,249,0.798,250,0.745,251,0.798,252,0.745,253,0.745,254,0.916,255,0.798,256,0.745,257,0.798,258,0.733,259,1.605,260,0.798,261,0.745,262,0.798,263,0.685,264,0.798,265,0.745,266,1.329,267,0.798,268,0.733,269,0.798,270,0.745,271,0.798,272,0.72,273,0.798,274,0.745,275,0.733,276,0.745,277,0.708,278,0.798,279,0.745,280,0.798,281,0.798,282,0.745,283,0.798,284,0.745,285,0.798,286,0.72,287,0.798,288,0.733,289,0.745,290,0.798,291,0.745,292,0.771,293,0.798,294,1.578,295,0.745,296,1.736,297,0.745,298,0.758,299,1.264,300,0.758,301,0.758,302,0.745,303,0.758,304,0.758,305,0.758,306,0.798,307,0.733,308,0.745,309,0.798,310,0.745,311,0.771,312,0.745,313,0.798,314,0.745,315,0.798,316,0.758,317,0.745,318,0.745,319,0.798,320,0.745,321,0.798,322,0.745,323,0.798,324,0.745,325,0.708,326,0.696,327,0.72,328,0.798,329,0.733,330,0.798,331,0.733,332,0.798,333,0.733,334,0.798,335,0.733,336,0.798,337,0.733,338,0.784,339,0.798,340,0.733,341,0.784,342,0.798,343,0.002,344,0.003,345,0.002,378,0.609,379,3.644,383,3.607,384,0.841,389,1.308,392,2.655,395,1.162,396,3.644,400,1.472,433,4.059,437,1.783,460,0.589,472,1.029,478,1.61,501,1.399,504,1.162,531,0.771,548,3.912,566,2.896,582,1.092,586,2.451,592,3.504,595,1.665,603,4.323,621,1.475,649,1.663,670,1.931,765,1.783,786,1.475,954,3.144,965,3.637,1048,2.252,1060,2.294,1067,3.013,1169,4.078,1185,2.233,1190,3.004,1281,1.663,1308,3.144,1318,1.931,1325,1.663,1342,4.248,1433,3.504,1714,2.505,1773,1.783,1863,2.252,1865,3.537,1871,3.859,1873,1.853,1874,2.252,1891,4.3,1892,3.004,1897,2.41,1906,2.126,1916,2.622,1922,1.72,1928,1.853,1944,3.504,1970,2.126,2032,2.41,2115,2.252,2159,3.504,2230,2.622,2346,4.078,2389,2.41,2394,2.882,2395,2.882,2415,1.853,2558,2.41,2648,1.72,2774,2.622,2798,2.252,2814,2.622,2843,2.622,2849,5.005,2893,7.045,2937,7.539,2938,2.622,2939,3.504,2940,4.578,2941,5.618,2942,6.867,2943,5.618,2944,5.618,2945,5.618,2946,6.339,2947,4.578,2948,4.578,2949,4.578,2950,4.578,2951,6.339,2952,4.578,2953,4.578,2954,4.578,2955,4.578,2956,2.943,2957,2.943,2958,3.504,2959,3.749,2960,2.943,2961,4.578,2962,2.943,2963,3.749,2964,3.749,2965,4.578,2966,2.943,2967,4.578,2968,2.943,2969,4.578,2970,2.943,2971,2.943,2972,2.943,2973,4.578,2974,2.943,2975,4.578,2976,2.943,2977,4.578,2978,2.943,2979,4.578,2980,2.943,2981,2.943,2982,2.943,2983,4.578,2984,2.943,2985,2.943,2986,2.943,2987,2.41,2988,2.943,2989,2.41,2990,2.943,2991,4.578,2992,2.622,2993,2.943,2994,2.943,2995,5.618,2996,6.339,2997,2.943,2998,2.943,2999,2.943,3000,2.943,3001,2.943,3002,2.943,3003,5.618,3004,2.943,3005,2.943,3006,2.943,3007,2.943,3008,2.622,3009,2.943,3010,7.271,3011,2.943,3012,2.943,3013,4.578,3014,2.943,3015,2.943,3016,2.943,3017,2.943,3018,2.943,3019,2.943,3020,4.578,3021,2.943,3022,2.943,3023,2.943,3024,2.943,3025,2.943,3026,2.943,3027,2.943,3028,2.943,3029,2.943,3030,2.943,3031,2.943,3032,6.339,3033,7.271,3034,2.943]],["title/components/ListItemsComponent.html",[0,0.292,261,1.278]],["body/components/ListItemsComponent.html",[0,0.369,1,0.914,2,0.983,3,0.191,4,0.197,5,0.734,7,0.979,8,0.946,10,0.149,12,0.416,17,1.309,21,0.884,23,2.879,24,0.812,26,0.007,32,1.089,33,2.189,34,1.874,37,1.354,39,0.384,40,0.652,42,1.523,46,1.017,47,2.68,52,2.612,54,0.842,56,3.262,65,1.331,68,0.765,70,1.131,72,1,84,0.62,85,2.968,88,1.265,89,1.051,90,1.183,100,0.934,101,1.04,102,0.848,121,0.703,127,1.354,129,0.899,138,1.87,143,2.122,145,3.02,152,0.243,154,0.316,167,0.132,168,0.155,186,3.191,188,0.95,198,0.675,199,1.425,200,0.747,202,1.876,203,0.979,204,0.979,205,0.884,206,1.909,207,0.884,208,0.93,209,0.84,210,0.914,211,0.93,212,2.209,213,0.914,214,1.457,215,1.909,216,0.93,217,1.651,218,2.268,219,0.93,220,0.93,221,0.979,222,0.914,223,1.45,224,0.93,225,0.979,226,0.914,227,0.979,228,0.899,229,0.884,230,1.673,231,1.727,232,0.899,233,0.914,234,0.914,235,0.899,236,0.979,237,0.93,238,0.93,239,2.038,240,0.93,241,0.914,242,0.93,243,0.93,244,0.93,245,0.914,246,0.979,247,0.899,248,0.93,249,0.979,250,0.914,251,0.979,252,0.914,253,0.914,254,1.069,255,0.979,256,0.914,257,0.979,258,0.899,259,0.914,260,0.979,261,1.993,262,0.979,263,0.84,264,0.979,265,0.914,266,1.507,267,0.979,268,0.899,269,0.979,270,0.914,271,0.979,272,0.884,273,0.979,274,0.914,275,0.899,276,0.914,277,0.869,278,0.979,279,0.914,280,0.979,281,0.979,282,0.914,283,0.979,284,0.914,285,0.979,286,0.884,287,0.979,288,0.899,289,0.914,290,0.979,291,0.914,292,0.946,293,0.979,294,0.899,295,0.914,296,1.85,297,0.914,298,0.93,299,0.812,300,0.93,301,0.93,302,0.914,303,0.93,304,0.93,305,0.93,306,0.979,307,0.899,308,0.914,309,0.979,310,0.914,311,0.946,312,0.914,313,0.979,314,0.914,315,0.979,316,0.93,317,0.914,318,0.914,319,0.979,320,0.914,321,0.979,322,0.914,323,0.979,324,0.914,325,0.869,326,0.854,327,0.884,328,0.979,329,0.899,330,0.979,331,0.899,332,0.979,333,0.899,334,0.979,335,0.899,336,0.979,337,0.899,338,0.962,339,0.979,340,0.899,341,0.962,342,0.979,343,0.002,344,0.004,345,0.002,378,1.317,379,3.988,384,1.032,395,1.426,396,3.736,416,4.373,433,5.086,460,0.722,482,2.025,521,1.611,555,4.873,566,2.756,576,2.541,577,4.379,578,3.124,660,3.672,757,2.666,763,2.925,894,4.544,902,3.239,919,2.906,964,3.366,965,4.027,967,4.092,1029,4.008,1048,5.387,1060,2.68,1092,4.092,1119,3.672,1120,2.479,1177,2.756,1250,3.124,1318,3.509,1342,2.756,1524,3.736,1538,2.957,1714,2.925,1740,2.763,1893,3.863,2394,3.366,2395,3.366,2415,2.273,2709,4.092,2763,5.672,2765,4.763,2772,3.239,2787,4.763,2847,3.216,2852,4.763,2853,3.216,2893,6.9,2958,4.092,2959,4.379,3035,7.384,3036,3.216,3037,5.346,3038,5.346,3039,5.346,3040,5.346,3041,7.039,3042,3.61,3043,5.346,3044,3.61,3045,3.61,3046,5.346,3047,4.763,3048,5.346,3049,3.61,3050,3.61,3051,3.61,3052,3.61,3053,5.346,3054,5.346,3055,3.61,3056,5.346,3057,3.61,3058,3.61,3059,3.61,3060,3.216,3061,3.61,3062,3.61,3063,3.61,3064,3.61]],["title/modules/ListModule.html",[346,1.155,3065,3.466]],["body/modules/ListModule.html",[3,0.298,4,0.307,10,0.233,25,2.667,26,0.007,152,0.371,154,0.494,155,2.274,166,1.09,167,0.267,168,0.242,198,1.054,217,1.386,258,2.399,259,2.44,261,2.44,289,2.44,305,2.482,343,0.004,344,0.005,345,0.004,346,1.29,348,2.226,349,2.135,350,3.329,351,2.324,352,3.257,359,3.072,360,2.18,361,1.897,364,2.453,365,1.971,603,5.699,609,3.294,698,3.463,699,2.549,702,5.004,786,2.825,1280,6.618,2163,6.618,2173,5.941,2174,5.484,2176,5.941,2184,4.073,2187,4.617,2188,4.617,2937,4.617,3035,4.617,3065,6.902,3066,5.022,3067,5.022,3068,5.637,3069,5.022,3070,5.022,3071,5.022,3072,5.022,3073,5.637,3074,5.637,3075,5.637,3076,5.637,3077,5.637,3078,5.022,3079,5.637]],["title/components/LoaderComponent.html",[0,0.292,263,1.174]],["body/components/LoaderComponent.html",[0,0.363,1,0.89,2,1.277,3,0.186,4,0.192,5,1.274,7,0.953,8,0.92,9,1.481,10,0.145,12,0.404,21,0.86,24,0.79,26,0.007,32,0.544,33,2.187,34,1.874,37,1.327,39,0.373,40,0.639,42,0.657,45,0.854,54,0.825,68,0.561,70,1.023,72,1.457,76,4.291,78,2.7,79,2.7,84,0.9,88,1.758,89,0.936,90,1.159,100,0.769,101,1.015,102,0.545,116,3.58,121,0.977,123,3.141,127,1.759,129,0.875,133,3.618,135,3.438,138,1.832,142,2.864,152,0.239,154,0.308,156,1.098,166,0.679,167,0.192,168,0.225,188,0.624,198,0.657,199,1.397,200,0.727,201,1.481,202,1.851,203,0.953,204,0.953,205,0.86,206,1.884,207,0.86,208,0.905,209,0.817,210,0.89,211,0.905,212,2.189,213,0.89,214,1.433,215,1.884,216,0.905,217,1.338,218,2.25,219,0.905,220,0.905,221,0.953,222,0.89,223,1.421,224,0.905,225,0.953,226,0.89,227,0.953,228,0.875,229,0.86,230,1.66,231,1.699,232,0.875,233,0.89,234,0.89,235,0.875,236,0.953,237,0.905,238,0.905,239,2.015,240,0.905,241,0.89,242,0.905,243,0.905,244,0.905,245,0.89,246,0.953,247,0.875,248,0.905,249,0.953,250,0.89,251,0.953,252,0.89,253,0.89,254,1.048,255,0.953,256,0.89,257,0.953,258,0.875,259,0.89,260,0.953,261,0.89,262,0.953,263,1.878,264,0.953,265,0.89,266,1.482,267,0.953,268,0.875,269,0.953,270,0.89,271,0.953,272,0.86,273,0.953,274,0.89,275,0.875,276,0.89,277,0.845,278,0.953,279,0.89,280,0.953,281,0.953,282,0.89,283,0.953,284,0.89,285,0.953,286,0.86,287,0.953,288,0.875,289,0.89,290,0.953,291,0.89,292,0.92,293,0.953,294,0.875,295,0.89,296,1.835,297,0.89,298,0.905,299,0.79,300,0.905,301,0.905,302,0.89,303,0.905,304,0.905,305,0.905,306,0.953,307,0.875,308,0.89,309,0.953,310,0.89,311,0.92,312,0.89,313,0.953,314,0.89,315,0.953,316,0.905,317,0.89,318,0.89,319,0.953,320,0.89,321,0.953,322,0.89,323,0.953,324,0.89,325,0.845,326,0.831,327,0.86,328,0.953,329,0.875,330,0.953,331,0.875,332,0.953,333,0.875,334,0.953,335,0.875,336,0.953,337,0.875,338,0.936,339,0.953,340,0.875,341,0.936,342,0.953,343,0.002,344,0.003,345,0.002,361,1.182,370,1.864,378,0.727,384,1.004,388,5.434,400,1.642,427,2.128,460,0.703,472,1.229,478,2.867,485,2.626,488,1.822,501,1.67,508,4.284,531,1.373,552,4.209,560,1.278,568,5.689,581,2.928,634,1.304,649,1.985,650,2.026,671,0.831,672,2.16,673,3.603,752,2.689,884,3.54,889,4.876,890,1.417,922,3.438,1031,4.059,1053,2.053,1060,4.046,1111,4.016,1166,2.689,1177,1.811,1185,2.556,1187,3.174,1308,3.598,1524,4.403,1678,3.943,1719,2.78,1745,1.714,1749,2.556,1751,3.598,1868,2.128,1918,3.598,1939,2.211,1956,2.305,1974,2.877,2004,4.291,2086,3.785,2159,4.01,2207,2.305,2301,2.689,2314,5.131,2317,4.667,2339,6.085,2394,3.298,2395,3.298,2415,2.211,2483,2.877,2514,2.877,2802,2.689,2889,5.131,3080,3.13,3081,5.239,3082,5.239,3083,4.667,3084,4.01,3085,5.239,3086,5.239,3087,8.48,3088,3.513,3089,5.239,3090,3.513,3091,5.239,3092,3.513,3093,3.785,3094,4.667,3095,3.513,3096,5.239,3097,5.239,3098,5.239,3099,3.513,3100,3.513,3101,5.239,3102,3.513,3103,2.877,3104,3.513,3105,5.316,3106,3.513,3107,2.211,3108,5.239,3109,3.513,3110,3.513,3111,5.239,3112,3.513,3113,6.265,3114,3.513,3115,2.305,3116,5.239,3117,6.265,3118,6.265,3119,3.513,3120,3.513,3121,3.513,3122,2.877,3123,3.513,3124,3.513,3125,3.513,3126,2.877,3127,3.513,3128,2.877,3129,2.689,3130,3.513,3131,3.513,3132,3.513,3133,5.239,3134,3.513,3135,3.513,3136,3.513,3137,3.513,3138,3.13,3139,5.239,3140,3.513,3141,3.513]],["title/modules/LoaderModule.html",[346,1.155,2175,3.312]],["body/modules/LoaderModule.html",[3,0.371,4,0.383,10,0.29,25,2.944,26,0.007,152,0.352,154,0.615,167,0.257,168,0.301,198,1.312,263,2.307,343,0.005,344,0.006,345,0.005,346,1.606,348,2.772,349,2.659,350,3.675,351,2.894,352,3.595,359,3.52,360,2.714,361,2.363,364,2.363,365,2.92,698,3.968,699,3.174,1031,5.585,2175,6.426,3142,6.254,3143,6.254,3144,6.254,3145,6.254,3146,7.019,3147,5.749,3148,7.019]],["title/injectables/LoaderService.html",[662,1.494,1031,2.949]],["body/injectables/LoaderService.html",[3,0.332,4,0.343,10,0.26,12,0.724,26,0.007,39,0.669,40,0.953,45,1.026,54,1.23,68,0.761,70,1.077,72,1.661,87,3.085,88,2.234,89,1.167,90,1.392,97,5.98,100,1.146,101,0.935,102,0.813,121,0.828,133,3.849,152,0.298,154,0.551,167,0.23,168,0.27,188,1.388,263,2.238,343,0.004,344,0.005,345,0.004,449,6.96,488,2.273,531,2.047,552,4.435,568,7.627,662,2.313,715,2.916,1031,4.566,1122,5.576,1177,4.027,1627,4.816,1745,3.812,1918,5.366,2339,6.399,2353,5.98,2590,5.645,2802,4.816,3083,6.96,3094,6.96,3105,7.127,3147,5.154,3149,5.606,3150,7.813,3151,6.293,3152,6.293,3153,6.293,3154,6.293]],["title/components/LocationMapComponent.html",[0,0.292,265,1.278]],["body/components/LocationMapComponent.html",[0,0.453,1,1.009,2,1.056,3,0.21,4,0.217,5,0.81,6,2.18,7,1.08,8,1.044,10,0.165,12,0.459,21,0.975,24,0.896,26,0.007,32,1.141,33,2.196,34,1.881,35,3.77,37,1.455,39,0.423,42,1.607,45,1.497,54,0.905,65,1.43,68,0.752,70,1.064,84,0.684,87,2.269,89,0.858,90,1.271,98,1.138,100,0.843,101,1.048,102,0.598,121,0.886,127,1.455,129,0.992,131,1.795,143,2.223,152,0.152,154,0.349,166,0.77,167,0.146,168,0.171,181,2.614,188,1.197,196,4.397,198,0.745,199,1.532,200,0.824,202,1.966,203,1.08,204,1.08,205,0.975,206,2.001,207,0.975,208,1.026,209,0.927,210,1.009,211,1.026,212,2.278,213,1.009,214,1.542,215,2.001,216,1.026,217,1.399,218,2.332,219,1.026,220,1.026,221,1.08,222,1.009,223,1.558,224,1.026,225,1.08,226,1.009,227,1.08,228,0.992,229,0.975,230,1.72,231,1.828,232,0.992,233,1.009,234,1.009,235,0.992,236,1.08,237,1.026,238,1.026,239,2.121,240,1.026,241,1.009,242,1.026,243,1.026,244,1.026,245,1.009,246,1.08,247,0.992,248,1.026,249,1.08,250,1.009,251,1.08,252,1.009,253,1.009,254,1.149,255,1.08,256,1.009,257,1.08,258,0.992,259,1.009,260,1.08,261,1.009,262,1.08,263,0.927,264,1.08,265,1.868,266,2.104,267,1.08,268,0.992,269,1.08,270,1.009,271,1.08,272,0.975,273,1.08,274,1.009,275,0.992,276,1.009,277,0.959,278,1.08,279,1.009,280,1.08,281,1.08,282,1.009,283,1.08,284,1.009,285,1.08,286,0.975,287,1.08,288,0.992,289,1.009,290,1.08,291,1.009,292,1.044,293,1.08,294,0.992,295,1.009,296,1.902,297,1.009,298,1.026,299,0.896,300,1.026,301,1.026,302,1.009,303,1.026,304,1.026,305,1.026,306,1.08,307,0.992,308,1.009,309,1.08,310,1.009,311,1.044,312,1.009,313,1.08,314,1.009,315,1.08,316,1.026,317,1.009,318,1.009,319,1.08,320,1.009,321,1.08,322,1.009,323,1.08,324,1.009,325,0.959,326,0.943,327,0.975,328,1.08,329,0.992,330,1.08,331,0.992,332,1.08,333,0.992,334,1.08,335,0.992,336,1.08,337,0.992,338,1.062,339,1.08,340,0.992,341,1.062,342,1.08,343,0.003,344,0.004,345,0.003,378,1.526,482,2.176,495,2.269,521,1.732,531,1.505,595,2.683,621,3.377,866,3.357,1005,6.579,1047,2.422,1050,4.329,1186,3.77,1244,4.311,1276,3.946,1524,2.114,1627,3.049,1719,3.049,2115,3.049,2265,3.77,2305,5.519,2306,6.967,2308,6.967,3155,6.579,3156,3.549,3157,6.739,3158,5.745,3159,5.745,3160,5.118,3161,8.398,3162,5.745,3163,5.745,3164,3.983,3165,5.118,3166,3.983,3167,8.147,3168,5.745,3169,3.983,3170,5.745,3171,3.983,3172,3.983,3173,5.745,3174,3.983,3175,5.745,3176,5.118,3177,3.983,3178,5.745,3179,3.983,3180,3.983,3181,3.983,3182,3.983,3183,3.983,3184,3.983,3185,5.745,3186,3.983]],["title/modules/LocationModule.html",[346,1.155,3187,3.646]],["body/modules/LocationModule.html",[2,1.516,3,0.311,4,0.321,10,0.243,12,0.678,25,2.866,26,0.007,27,2.601,54,0.928,70,0.747,89,0.88,100,0.864,101,0.705,102,0.613,152,0.363,154,0.516,155,2.377,156,1.841,166,1.45,167,0.274,168,0.253,188,1.047,198,1.102,265,2.442,266,1.951,268,2.401,270,2.442,343,0.004,344,0.005,345,0.004,346,1.985,348,2.326,349,2.231,350,3.399,351,2.429,352,3.326,358,5.174,359,3.16,360,2.278,361,1.983,363,4.235,364,2.523,365,2.622,445,4.101,696,4.235,697,5.737,698,3.563,699,2.664,700,5.956,701,5.415,723,3.709,863,5.415,864,6.678,2263,6.01,2293,4.825,3122,4.825,3187,7.145,3188,5.248,3189,5.248,3190,5.891,3191,5.248,3192,5.248,3193,5.248,3194,7.495,3195,7.982,3196,5.891,3197,5.891,3198,5.891,3199,4.825,3200,5.248,3201,5.891,3202,5.248,3203,5.248,3204,5.891,3205,8.244,3206,5.891,3207,5.891,3208,5.891,3209,5.891,3210,5.891]],["title/components/LocationPickerComponent.html",[0,0.292,268,1.256]],["body/components/LocationPickerComponent.html",[0,0.45,1,0.792,2,0.882,3,0.165,4,0.17,5,0.636,6,1.711,7,0.848,8,0.819,10,0.129,12,0.36,15,2.069,17,1.602,18,4.445,20,1.894,21,2.143,24,0.703,25,1.585,26,0.007,27,2.118,28,3.194,29,2.625,30,3.194,31,2.625,32,1.2,33,2.177,34,1.862,35,3.148,37,1.215,39,0.332,40,0.585,42,1.708,43,3.674,45,1.457,46,1.766,47,3.539,48,1.983,49,3.02,50,4.647,51,2.577,52,1.806,53,5.253,54,0.755,58,3.148,59,4.121,62,2.906,63,3.281,64,3.536,65,1.194,68,0.818,69,0.96,70,1.203,72,0.897,84,0.537,87,1.894,89,1.196,90,1.771,95,3.02,98,1.871,100,1.093,101,1.048,102,0.776,103,3.02,113,3.02,115,3.295,116,2.473,117,1.855,118,2.148,119,4.356,120,2.393,121,0.98,122,2.393,124,1.894,127,1.215,129,1.63,131,2.329,139,4.383,140,2.393,141,2.393,142,1.289,143,1.446,144,2.393,145,1.767,146,3.672,147,1.894,148,2.393,149,2.393,150,2.148,151,4.21,152,0.284,153,1.414,154,0.274,155,1.261,156,0.977,166,0.605,167,0.114,168,0.134,188,0.556,193,1.767,194,1.968,198,0.585,199,1.279,200,0.647,202,1.745,203,0.848,204,0.848,205,0.765,206,1.775,207,0.765,208,0.805,209,0.728,210,0.792,211,0.805,212,2.104,213,0.792,214,1.335,215,1.775,216,0.805,217,1.28,218,2.171,219,0.805,220,0.805,221,0.848,222,0.792,223,1.301,224,0.805,225,0.848,226,0.792,227,0.848,228,0.778,229,0.765,230,1.601,231,1.583,232,0.778,233,0.792,234,0.792,235,0.778,236,0.848,237,0.805,238,0.805,239,1.915,240,0.805,241,0.792,242,0.805,243,0.805,244,0.805,245,0.792,246,0.848,247,0.778,248,0.805,249,0.848,250,0.792,251,0.848,252,0.792,253,0.792,254,0.96,255,0.848,256,0.792,257,0.848,258,0.778,259,0.792,260,0.848,261,0.792,262,0.848,263,0.728,264,0.848,265,1.887,266,2.162,267,0.848,268,1.855,269,0.848,270,1.887,271,0.848,272,0.765,273,0.848,274,0.792,275,0.778,276,0.792,277,0.752,278,0.848,279,0.792,280,0.848,281,0.848,282,0.792,283,0.848,284,0.792,285,0.848,286,0.765,287,0.848,288,0.778,289,0.792,290,0.848,291,0.792,292,0.819,293,0.848,294,0.778,295,0.792,296,1.771,297,0.792,298,0.805,299,0.703,300,0.805,301,0.805,302,0.792,303,0.805,304,0.805,305,0.805,306,0.848,307,0.778,308,0.792,309,0.848,310,0.792,311,0.819,312,0.792,313,0.848,314,0.792,315,0.848,316,0.805,317,0.792,318,0.792,319,0.848,320,0.792,321,0.848,322,0.792,323,0.848,324,0.792,325,0.752,326,0.74,327,0.765,328,0.848,329,0.778,330,0.848,331,0.778,332,0.848,333,0.778,334,0.848,335,0.778,336,0.848,337,0.778,338,0.834,339,0.848,340,0.778,341,0.834,342,0.848,343,0.002,344,0.003,345,0.002,378,1.461,445,2.625,460,0.96,467,2.561,504,1.235,620,3.64,621,2.405,787,3.02,1005,5.938,1060,2.405,1184,3.965,1244,3.411,1246,3.929,1260,3.929,1262,3.929,1276,2.148,1286,4.274,1460,2.906,1892,4.634,2263,5.387,2279,3.929,2282,3.929,2283,4.274,2284,3.929,2489,4.274,3155,7.034,3160,4.274,3176,4.274,3199,2.561,3200,2.786,3202,2.786,3211,2.786,3212,4.274,3213,5.837,3214,4.797,3215,6.546,3216,5.837,3217,2.786,3218,4.797,3219,3.127,3220,3.127,3221,3.127,3222,3.127,3223,3.127,3224,3.127,3225,6.546,3226,3.127,3227,3.929,3228,3.127,3229,4.797,3230,3.127,3231,3.127,3232,3.127,3233,3.127,3234,3.127,3235,4.797,3236,3.127,3237,3.127,3238,4.797,3239,3.127,3240,3.127,3241,4.797,3242,4.797,3243,3.127,3244,3.127,3245,5.837,3246,3.127,3247,3.127,3248,3.127,3249,4.797]],["title/components/LocationSearchComponent.html",[0,0.292,270,1.278]],["body/components/LocationSearchComponent.html",[0,0.4,1,1.053,2,1.09,3,0.22,4,0.227,5,0.846,7,1.128,8,1.09,10,0.172,12,0.479,17,1.451,21,1.018,24,0.936,26,0.007,32,0.917,33,2.199,34,1.885,37,1.501,39,0.442,40,0.723,42,1.715,45,1.126,54,0.933,64,4.558,65,1.873,68,0.618,70,1.078,72,1.108,84,0.714,89,0.885,90,1.311,100,0.61,101,1.041,102,0.433,121,0.908,123,3.122,124,1.643,127,1.905,129,1.036,143,2.268,152,0.263,153,1.881,154,0.364,167,0.152,168,0.179,198,0.778,199,1.58,200,0.861,202,2.006,203,1.128,204,1.128,205,1.018,206,2.041,207,1.018,208,1.072,209,0.968,210,1.053,211,1.072,212,2.307,213,1.053,214,1.579,215,2.041,216,1.072,217,1.42,218,2.359,219,1.072,220,1.072,221,1.128,222,1.053,223,1.607,224,1.072,225,1.128,226,1.053,227,1.128,228,1.036,229,1.018,230,1.739,231,1.872,232,1.036,233,1.053,234,1.053,235,1.036,236,1.128,237,1.072,238,1.072,239,2.157,240,1.072,241,1.053,242,1.072,243,1.072,244,1.072,245,1.053,246,1.128,247,1.036,248,1.072,249,1.128,250,1.053,251,1.128,252,1.053,253,1.053,254,1.185,255,1.128,256,1.053,257,1.128,258,1.036,259,1.053,260,1.128,261,1.053,262,1.128,263,0.968,264,1.128,265,1.053,266,2.149,267,1.128,268,1.036,269,1.128,270,1.905,271,1.128,272,1.018,273,1.128,274,1.053,275,1.036,276,1.053,277,1.001,278,1.128,279,1.053,280,1.128,281,1.128,282,1.053,283,1.128,284,1.053,285,1.128,286,1.018,287,1.128,288,1.036,289,1.053,290,1.128,291,1.053,292,1.09,293,1.128,294,1.036,295,1.053,296,1.924,297,1.053,298,1.072,299,0.936,300,1.072,301,1.072,302,1.053,303,1.072,304,1.072,305,1.072,306,1.128,307,1.036,308,1.053,309,1.128,310,1.053,311,1.09,312,1.053,313,1.128,314,1.053,315,1.128,316,1.072,317,1.053,318,1.053,319,1.128,320,1.053,321,1.128,322,1.053,323,1.128,324,1.053,325,1.001,326,0.984,327,1.018,328,1.128,329,1.036,330,1.128,331,1.036,332,1.128,333,1.036,334,1.128,335,1.036,336,1.128,337,1.036,338,1.109,339,1.128,340,1.036,341,1.109,342,1.128,343,0.003,344,0.004,345,0.003,460,0.832,482,2.245,502,2.68,521,1.786,595,2.156,598,4.854,620,4.099,672,1.715,673,1.643,1047,2.499,1050,4.099,1186,3.889,1244,4.035,1450,4.282,1479,5.284,1674,4.938,1760,3.59,1828,4.938,1892,5.425,2263,5.707,2265,3.889,2274,7.579,2279,4.854,2305,4.854,3155,6.656,3199,3.407,3217,3.706,3250,3.706,3251,5.926,3252,6.904,3253,5.926,3254,4.16,3255,4.16,3256,5.926,3257,4.16,3258,4.16,3259,5.926,3260,4.16,3261,3.706,3262,4.16,3263,4.16,3264,4.16,3265,4.16]],["title/components/LoginComponent.html",[0,0.292,272,1.235]],["body/components/LoginComponent.html",[0,0.38,1,0.962,2,1.021,3,0.201,4,0.207,5,0.773,7,1.031,8,0.996,9,1.602,10,0.157,12,0.437,17,1.359,21,0.93,24,0.855,26,0.007,32,0.588,33,2.193,34,1.878,37,1.406,39,0.404,40,0.677,42,1.227,45,0.62,46,1.646,54,0.874,65,1.382,68,0.775,70,1.115,72,1.038,84,0.953,85,2.341,89,0.568,90,0.841,100,0.815,101,1.036,102,0.578,121,0.863,124,1.5,127,1.406,129,0.946,142,2.289,143,2.495,152,0.293,153,1.718,154,0.333,156,1.187,166,0.735,167,0.139,168,0.163,198,0.71,199,1.48,200,0.786,201,1.602,202,1.923,203,1.031,204,1.031,205,0.93,206,1.957,207,0.93,208,0.979,209,1.679,210,0.962,211,0.979,212,2.245,213,0.962,214,1.501,215,1.957,216,0.979,217,1.376,218,2.302,219,0.979,220,0.979,221,1.031,222,0.962,223,1.506,224,0.979,225,1.031,226,0.962,227,1.031,228,0.946,229,0.93,230,1.697,231,1.779,232,0.946,233,0.962,234,0.962,235,0.946,236,1.031,237,0.979,238,0.979,239,2.081,240,0.979,241,0.962,242,0.979,243,0.979,244,0.979,245,0.962,246,1.031,247,0.946,248,0.979,249,1.031,250,0.962,251,1.031,252,0.962,253,0.962,254,1.11,255,1.031,256,0.962,257,1.031,258,0.946,259,0.962,260,1.031,261,0.962,262,1.031,263,1.292,264,1.031,265,0.962,266,1.552,267,1.031,268,0.946,269,1.031,270,0.962,271,1.031,272,1.766,273,1.031,274,1.661,275,2.302,276,0.962,277,0.914,278,1.031,279,0.962,280,1.031,281,1.031,282,0.962,283,1.031,284,0.962,285,1.031,286,0.93,287,1.031,288,0.946,289,0.962,290,1.031,291,0.962,292,1.719,293,1.031,294,0.946,295,0.962,296,1.877,297,0.962,298,0.979,299,0.855,300,0.979,301,0.979,302,0.962,303,0.979,304,0.979,305,0.979,306,1.031,307,0.946,308,0.962,309,1.031,310,0.962,311,0.996,312,0.962,313,1.031,314,0.962,315,1.031,316,0.979,317,0.962,318,0.962,319,1.031,320,0.962,321,1.031,322,0.962,323,1.031,324,0.962,325,0.914,326,0.899,327,0.93,328,1.031,329,0.946,330,1.031,331,0.946,332,1.031,333,0.946,334,1.031,335,0.946,336,1.031,337,0.946,338,1.013,339,1.031,340,0.946,341,1.013,342,1.031,343,0.003,344,0.004,345,0.003,376,2.24,460,1.11,482,2.103,486,5.036,489,2.946,521,1.977,524,2.494,532,2.908,552,3.655,650,3.447,653,2.639,656,4.223,657,3.47,664,4.643,666,4.542,669,4.547,670,3.643,671,1.314,693,5.058,695,4.37,707,2.908,763,3.038,768,3.643,769,3.112,1019,3.481,1020,3.974,1034,4.336,1035,2.792,1036,2.968,1071,4.011,1074,3.381,1110,3.363,1111,2.862,1112,4.739,1117,2.392,1118,2.392,1155,1.98,1634,2.392,1719,2.946,1911,4.249,2207,3.643,2222,4.547,3266,3.385,3267,4.946,3268,4.547,3269,5.342,3270,5.909,3271,5.551,3272,4.547,3273,3.385,3274,5.551,3275,3.8,3276,4.946,3277,4.946,3278,4.946,3279,3.8,3280,4.946,3281,4.946,3282,3.8,3283,3.8,3284,4.547,3285,3.8,3286,3.8,3287,3.8,3288,3.8,3289,3.112,3290,3.112,3291,3.112,3292,3.385,3293,3.8,3294,3.385,3295,3.8,3296,3.385,3297,3.112,3298,3.112]],["title/components/LoginFormComponent.html",[0,0.292,274,1.278]],["body/components/LoginFormComponent.html",[0,0.449,1,0.789,2,0.88,3,0.165,4,0.17,5,0.634,7,0.846,8,0.817,9,1.315,10,0.129,12,0.359,17,1.172,21,0.763,22,2.572,24,0.701,26,0.007,32,1.199,33,2.177,34,1.862,37,1.212,39,0.331,40,0.584,42,1.565,45,1.304,46,1.56,48,2.351,51,2.113,54,0.754,57,2.956,65,1.192,68,0.735,69,0.957,70,1.171,84,0.822,88,1.133,89,0.976,90,1.059,100,0.855,101,1.002,102,0.607,121,1.079,127,1.212,129,0.776,131,2.901,142,2.695,143,2.336,147,3.529,152,0.296,154,0.273,155,1.258,166,0.603,167,0.114,168,0.134,188,0.851,198,0.583,199,1.276,200,0.645,201,1.315,202,1.742,203,0.846,204,0.846,205,0.763,206,1.773,207,0.763,208,0.803,209,1.521,210,0.789,211,0.803,212,2.102,213,0.789,214,1.333,215,1.773,216,0.803,217,1.278,218,2.169,219,0.803,220,0.803,221,0.846,222,0.789,223,1.298,224,0.803,225,0.846,226,0.789,227,0.846,228,0.776,229,0.763,230,1.6,231,1.58,232,0.776,233,0.789,234,0.789,235,0.776,236,0.846,237,0.803,238,0.803,239,1.913,240,0.803,241,0.789,242,0.803,243,0.803,244,0.803,245,0.789,246,0.846,247,0.776,248,0.803,249,0.846,250,0.789,251,0.846,252,0.789,253,0.789,254,0.957,255,0.846,256,0.789,257,0.846,258,0.776,259,0.789,260,0.846,261,0.789,262,0.846,263,1.521,264,0.846,265,0.789,266,1.379,267,0.846,268,0.776,269,0.846,270,0.789,271,0.846,272,0.763,273,0.846,274,1.655,275,2.299,276,0.789,277,0.75,278,0.846,279,0.789,280,0.846,281,0.846,282,0.789,283,0.846,284,0.789,285,0.846,286,0.763,287,0.846,288,0.776,289,0.789,290,0.846,291,0.789,292,2.194,293,0.846,294,0.776,295,0.789,296,1.769,297,0.789,298,0.803,299,1.077,300,0.803,301,0.803,302,0.789,303,0.803,304,0.803,305,0.803,306,0.846,307,0.776,308,0.789,309,0.846,310,0.789,311,0.817,312,0.789,313,0.846,314,0.789,315,0.846,316,0.803,317,0.789,318,0.789,319,0.846,320,0.789,321,0.846,322,0.789,323,0.846,324,0.789,325,0.75,326,0.738,327,0.763,328,0.846,329,0.776,330,0.846,331,0.776,332,0.846,333,0.776,334,0.846,335,0.776,336,0.846,337,0.776,338,0.831,339,0.846,340,0.776,341,0.831,342,0.846,343,0.002,344,0.003,345,0.002,378,0.99,390,3.138,460,0.624,472,1.09,482,1.813,485,2.399,489,2.54,498,2.797,501,2.275,521,1.756,546,3.824,552,3.113,566,2.467,581,2.018,620,3.369,650,3.293,656,3.44,661,2.164,665,1.563,747,3.013,768,3.824,890,1.931,919,3.092,1019,3.092,1035,2.565,1036,2.727,1042,1.761,1047,3.138,1074,2.467,1115,2.253,1122,2.046,1152,4.489,1162,3.141,1163,2.704,1173,3.664,1291,1.963,1394,3.458,1450,3.458,1528,3.458,1596,3.458,1719,2.54,1906,3.458,1922,2.797,2160,5.696,2216,3.92,2653,3.458,3115,3.141,3269,4.439,3284,2.554,3298,2.554,3299,8.27,3300,7.104,3301,2.554,3302,5.823,3303,4.264,3304,4.264,3305,6.282,3306,6.904,3307,5.823,3308,5.823,3309,5.191,3310,6.282,3311,6.282,3312,5.191,3313,5.191,3314,5.191,3315,5.191,3316,3.118,3317,7.443,3318,4.787,3319,4.787,3320,3.118,3321,1.581,3322,4.264,3323,3.118,3324,4.264,3325,3.118,3326,5.353,3327,4.264,3328,3.118,3329,2.778,3330,4.264,3331,4.264,3332,3.118,3333,4.264,3334,3.118,3335,3.118,3336,3.118,3337,3.118,3338,4.264,3339,4.264,3340,3.118,3341,3.664,3342,4.264,3343,4.264,3344,3.118,3345,3.118,3346,4.264,3347,4.264,3348,3.118,3349,2.778,3350,2.778,3351,4.264,3352,3.664,3353,2.778,3354,3.118,3355,3.118,3356,2.778,3357,3.118,3358,2.778,3359,2.778,3360,2.554,3361,3.118,3362,2.778,3363,2.778,3364,2.778,3365,4.264,3366,2.778,3367,2.554,3368,4.264,3369,3.118,3370,3.118,3371,3.118,3372,3.118,3373,2.778,3374,2.778,3375,2.778,3376,2.778,3377,3.118,3378,2.778,3379,2.778,3380,3.92]],["title/pipes/MaxItemsPipe.html",[1277,2.678,2169,3.646]],["body/pipes/MaxItemsPipe.html",[3,0.37,4,0.382,10,0.289,12,0.806,17,1.714,24,1.575,26,0.007,45,1.142,52,2.3,54,1.102,68,0.627,70,0.887,89,1.046,100,1.027,101,1.065,102,0.729,121,0.921,152,0.267,154,0.613,167,0.256,168,0.301,188,1.244,343,0.005,344,0.006,345,0.005,495,3.771,757,3.617,960,4.067,1251,6.432,1277,4.891,1278,5.058,1283,4.594,1289,6.023,1872,8.508,2169,6.023,3381,7.427,3382,6.237,3383,7.427,3384,8.336,3385,8.336,3386,7.001,3387,7.001]],["title/components/MediumEditorComponent.html",[0,0.292,276,1.278]],["body/components/MediumEditorComponent.html",[0,0.434,1,0.906,2,0.977,3,0.189,4,0.195,5,0.728,6,1.958,7,0.971,8,0.938,9,1.509,10,0.148,12,0.412,13,3.104,15,3.976,17,1.3,18,3.988,21,0.876,22,2.797,24,0.805,25,1.755,26,0.007,27,2.345,28,3.466,29,2.906,30,3.466,31,2.906,32,0.822,33,2.188,34,1.874,35,3.486,37,1.345,39,0.38,40,0.648,41,4.23,42,1.4,43,3.988,44,4.714,45,1.435,46,1.205,54,0.836,57,3.169,58,3.486,59,4.412,62,3.218,65,1.322,68,0.763,69,1.062,70,1.151,84,0.912,85,2.24,89,1.118,90,1.735,93,4.35,95,3.344,98,2.003,100,0.779,101,1.02,102,0.553,103,3.344,113,3.344,115,3.648,116,2.738,117,3.14,121,0.922,123,2.864,124,1.413,125,4.065,127,1.775,129,0.891,131,1.66,133,2.828,138,1.858,143,2.113,145,3.001,152,0.267,153,1.618,154,0.313,155,1.444,167,0.131,168,0.154,173,2.931,175,2.739,176,3.188,181,3.486,184,2.931,193,2.022,194,2.253,198,0.669,199,1.416,200,0.74,201,1.509,202,1.868,203,0.971,204,0.971,205,0.876,206,1.901,207,0.876,208,0.922,209,0.833,210,0.906,211,0.922,212,2.203,213,0.906,214,1.449,215,1.901,216,0.922,217,1.347,218,2.262,219,0.922,220,0.922,221,0.971,222,0.906,223,1.441,224,0.922,225,0.971,226,0.906,227,0.971,228,0.891,229,0.876,230,1.669,231,1.718,232,0.891,233,0.906,234,0.906,235,0.891,236,0.971,237,0.922,238,0.922,239,2.031,240,0.922,241,0.906,242,0.922,243,0.922,244,0.922,245,0.906,246,0.971,247,0.891,248,0.922,249,0.971,250,0.906,251,0.971,252,0.906,253,0.906,254,1.062,255,0.971,256,0.906,257,0.971,258,0.891,259,0.906,260,0.971,261,0.906,262,0.971,263,0.833,264,0.971,265,0.906,266,1.499,267,0.971,268,0.891,269,0.971,270,0.906,271,0.971,272,0.876,273,0.971,274,0.906,275,0.891,276,1.986,277,2.143,278,0.971,279,0.906,280,0.971,281,0.971,282,0.906,283,0.971,284,0.906,285,0.971,286,0.876,287,0.971,288,0.891,289,0.906,290,0.971,291,0.906,292,0.938,293,0.971,294,0.891,295,0.906,296,1.845,297,0.906,298,0.922,299,0.805,300,0.922,301,0.922,302,0.906,303,0.922,304,0.922,305,0.922,306,0.971,307,0.891,308,0.906,309,0.971,310,0.906,311,0.938,312,0.906,313,0.971,314,0.906,315,0.971,316,0.922,317,0.906,318,0.906,319,0.971,320,0.906,321,0.971,322,0.906,323,0.971,324,0.906,325,0.861,326,0.847,327,0.876,328,0.971,329,0.891,330,0.971,331,0.891,332,0.971,333,0.891,334,0.971,335,0.891,336,0.971,337,0.891,338,0.954,339,0.971,340,0.891,341,0.954,342,0.971,343,0.002,344,0.004,345,0.002,373,2.291,482,2.012,521,1.601,620,3.86,673,2.501,939,2.738,1088,2.585,1156,3.86,1631,2.931,1982,3.188,2760,4.35,2761,4.35,2829,2.931,3388,7.498,3389,7.498,3390,3.188,3391,5.312,3392,5.312,3393,5.312,3394,5.643,3395,6.334,3396,5.312,3397,6.244,3398,6.334,3399,3.579,3400,3.579,3401,7.488,3402,3.579,3403,3.579,3404,3.579,3405,4.732,3406,3.579,3407,3.579,3408,3.579,3409,3.579,3410,3.579,3411,3.579,3412,3.579,3413,3.579,3414,3.579,3415,3.579,3416,3.579,3417,3.579,3418,3.579,3419,3.579,3420,3.579,3421,3.579,3422,3.579,3423,2.931,3424,3.579,3425,3.579,3426,3.579,3427,3.579]],["title/modules/MediumEditorModule.html",[346,1.155,3428,3.646]],["body/modules/MediumEditorModule.html",[3,0.354,4,0.365,10,0.277,25,2.681,26,0.007,27,3.855,28,4.778,29,4.778,30,4.778,31,5.088,32,1.439,152,0.333,154,0.586,166,1.295,167,0.297,168,0.287,198,1.252,276,2.536,277,1.611,343,0.004,344,0.005,345,0.004,346,1.532,348,2.644,349,2.536,350,3.601,351,2.76,352,3.523,359,3.421,360,2.589,361,2.253,364,2.253,365,2.341,698,3.857,699,3.027,3388,5.483,3389,5.483,3428,6.91,3429,5.964,3430,5.964,3431,5.964,3432,5.964,3433,5.964,3434,6.694,3435,5.964,3436,6.694]],["title/components/MenuComponent.html",[0,0.292,279,1.278]],["body/components/MenuComponent.html",[0,0.331,1,0.766,2,0.86,3,0.16,4,0.165,5,0.616,6,1.656,7,0.821,8,0.793,10,0.125,12,0.348,16,3.058,17,1.145,21,0.741,23,2.586,24,0.681,26,0.007,32,0.996,33,2.174,34,1.859,35,3.07,37,1.185,39,0.322,40,0.571,42,1.52,45,1.25,46,1.087,52,2.49,54,0.737,56,2.982,65,1.165,68,0.687,69,1.534,70,1.171,72,0.875,88,1.522,89,1.393,90,1.423,98,1.337,100,1.193,101,1.072,102,0.846,121,1.069,127,1.185,129,0.753,138,2.25,152,0.218,154,0.265,166,0.585,167,0.111,168,0.13,183,0.896,188,1.407,198,0.566,199,1.247,200,0.626,202,1.715,203,0.821,204,0.821,205,0.741,206,1.745,207,0.741,208,0.779,209,0.704,210,0.766,211,0.779,212,2.08,213,0.766,214,1.308,215,1.745,216,0.779,217,1.263,218,2.148,219,0.779,220,0.779,221,0.821,222,0.766,223,1.269,224,0.779,225,0.821,226,0.766,227,0.821,228,0.753,229,0.741,230,1.584,231,1.551,232,0.753,233,0.766,234,0.766,235,0.753,236,0.821,237,0.779,238,0.779,239,1.887,240,0.779,241,0.766,242,0.779,243,0.779,244,0.779,245,0.766,246,0.821,247,0.753,248,0.779,249,0.821,250,0.766,251,0.821,252,0.766,253,0.766,254,0.936,255,0.821,256,0.766,257,0.821,258,0.753,259,0.766,260,0.821,261,0.766,262,0.821,263,0.704,264,0.821,265,0.766,266,1.353,267,0.821,268,0.753,269,0.821,270,0.766,271,0.821,272,0.741,273,0.821,274,0.766,275,0.753,276,0.766,277,0.728,278,0.821,279,1.862,280,1.551,281,0.821,282,0.766,283,0.821,284,0.766,285,0.821,286,0.741,287,0.821,288,0.753,289,0.766,290,0.821,291,0.766,292,0.793,293,0.821,294,0.753,295,0.766,296,1.752,297,0.766,298,0.779,299,1.052,300,0.779,301,0.779,302,0.766,303,0.779,304,0.779,305,0.779,306,0.821,307,0.753,308,0.766,309,0.821,310,0.766,311,0.793,312,0.766,313,0.821,314,0.766,315,0.821,316,0.779,317,0.766,318,0.766,319,0.821,320,0.766,321,0.821,322,0.766,323,0.821,324,0.766,325,0.728,326,0.716,327,0.741,328,0.821,329,0.753,330,0.821,331,0.753,332,0.821,333,0.753,334,0.821,335,0.753,336,0.821,337,0.753,338,0.807,339,0.821,340,0.753,341,0.807,342,0.821,343,0.002,344,0.003,345,0.002,361,1.575,375,5.016,376,2.806,378,1.183,437,2.834,440,3.831,451,4.222,460,0.605,485,2.345,488,1.871,495,2.541,545,5.325,566,2.411,571,3.139,633,1.56,646,5.806,663,1.656,672,1.248,673,2.258,757,1.772,912,3.07,960,3.588,964,4.986,1005,3.58,1024,5.031,1030,2.834,1184,3.897,1185,3.139,1322,6.552,1327,5.094,1433,3.58,1460,2.834,1504,2.078,1847,2.696,1868,2.834,2744,2.478,3107,2.945,3437,2.696,3438,8.791,3439,3.831,3440,5.718,3441,4.678,3442,5.718,3443,8.129,3444,6.434,3445,4.678,3446,4.678,3447,4.678,3448,4.678,3449,4.678,3450,6.434,3451,4.168,3452,4.678,3453,6.956,3454,6.956,3455,4.678,3456,6.434,3457,4.678,3458,4.678,3459,4.678,3460,3.026,3461,4.678,3462,3.831,3463,3.026,3464,7.354,3465,4.678,3466,3.026,3467,3.026,3468,3.026,3469,3.026,3470,4.678,3471,3.026,3472,4.678,3473,3.026,3474,4.678,3475,4.678,3476,3.026,3477,7.667,3478,4.678,3479,3.026,3480,4.678,3481,3.026,3482,4.678,3483,4.678,3484,4.678,3485,3.026,3486,4.678,3487,4.678,3488,3.026,3489,4.168,3490,4.678,3491,3.026,3492,6.434,3493,3.026,3494,4.678,3495,3.026,3496,4.678,3497,3.026,3498,3.026,3499,3.026,3500,4.678,3501,3.831,3502,2.696,3503,4.678,3504,3.026,3505,4.678,3506,3.026,3507,3.026,3508,3.026,3509,3.026,3510,3.026,3511,5.718,3512,3.026,3513,5.718,3514,3.026,3515,4.678,3516,3.026,3517,3.026,3518,3.026,3519,3.026,3520,3.026,3521,6.434,3522,5.718,3523,3.026,3524,3.026,3525,3.026,3526,5.718,3527,3.026,3528,4.678,3529,4.678,3530,4.678,3531,3.026,3532,3.026,3533,3.026,3534,3.026]],["title/components/ModalComponent.html",[0,0.292,282,1.278]],["body/components/ModalComponent.html",[0,0.326,1,0.746,2,0.842,3,0.156,4,0.161,5,1.544,7,1.242,8,0.772,9,1.241,10,0.122,12,0.339,17,1.121,20,1.809,21,0.721,22,2.481,23,2.541,24,0.662,26,0.007,32,1.215,33,2.171,34,1.859,37,1.16,39,0.313,40,0.559,41,1.664,42,1.57,45,1.28,46,1.731,54,0.721,55,2.431,56,2.938,57,2.867,65,1.14,66,6.308,68,0.839,69,1.518,70,1.205,72,0.551,87,3.1,88,1.33,89,1.134,90,1.609,98,1.309,100,0.93,101,1.005,102,0.66,107,3.146,116,3.268,119,4.586,121,1.033,123,3.952,124,1.163,127,1.842,129,0.733,143,0.888,152,0.214,154,0.258,162,3.751,166,0.569,167,0.108,168,0.126,177,5.007,183,1.356,186,2.295,198,0.551,199,1.221,200,0.609,201,1.241,202,1.69,203,0.799,204,0.799,205,0.721,206,1.72,207,0.721,208,0.758,209,0.685,210,0.746,211,0.758,212,2.059,213,0.746,214,1.286,215,1.72,216,0.758,217,1.249,218,2.129,219,0.758,220,0.758,221,0.799,222,0.746,223,1.242,224,0.758,225,0.799,226,0.746,227,0.799,228,0.733,229,0.721,230,1.57,231,1.524,232,0.733,233,0.746,234,0.746,235,0.733,236,0.799,237,0.758,238,0.758,239,1.863,240,0.758,241,0.746,242,0.758,243,0.758,244,0.758,245,0.746,246,0.799,247,0.733,248,0.758,249,0.799,250,0.746,251,0.799,252,0.746,253,0.746,254,0.916,255,0.799,256,0.746,257,0.799,258,0.733,259,0.746,260,0.799,261,0.746,262,0.799,263,0.685,264,0.799,265,0.746,266,1.33,267,0.799,268,0.733,269,0.799,270,0.746,271,0.799,272,0.721,273,0.799,274,0.746,275,0.733,276,0.746,277,0.709,278,0.799,279,0.746,280,0.799,281,0.799,282,1.606,283,0.799,284,0.746,285,0.799,286,0.721,287,0.799,288,0.733,289,0.746,290,0.799,291,0.746,292,0.772,293,0.799,294,2.236,295,0.746,296,1.736,297,0.746,298,0.758,299,0.662,300,0.758,301,0.758,302,0.746,303,0.758,304,0.758,305,0.758,306,0.799,307,0.733,308,0.746,309,0.799,310,0.746,311,0.772,312,0.746,313,0.799,314,0.746,315,0.799,316,0.758,317,0.746,318,0.746,319,0.799,320,0.746,321,0.799,322,0.746,323,0.799,324,0.746,325,0.709,326,0.697,327,0.721,328,0.799,329,0.733,330,0.799,331,0.733,332,0.799,333,0.733,334,0.799,335,0.733,336,0.799,337,0.733,338,0.785,339,0.799,340,0.733,341,0.785,342,0.799,343,0.002,344,0.003,345,0.002,373,2.735,378,0.947,379,3.645,395,1.163,396,3.86,400,1.906,446,4.324,447,2.897,460,0.589,482,1.735,485,2.295,488,0.856,495,1.809,501,2.177,504,1.809,531,1.8,576,1.399,586,1.771,647,2.774,747,3.992,890,2.771,902,3.841,905,4.08,919,1.139,921,3.405,945,1.721,960,1.436,1053,1.721,1067,4.154,1111,3.268,1156,3.749,1163,2.587,1171,3.538,1180,1.784,1182,4.08,1185,3.704,1191,3.751,1305,2.742,1328,3.505,1329,2.506,1342,3.913,1511,3.146,1524,1.563,1525,2.022,1673,4.712,1675,3.309,1677,3.309,1678,2.671,1679,3.309,1680,3.146,1681,4.061,1687,2.254,1688,2.022,1689,2.254,1690,1.721,1691,2.127,1692,2.254,1693,2.127,1694,2.022,1695,2.254,1697,2.254,1698,3.751,1699,3.86,1701,2.127,1702,2.254,1703,1.932,1710,2.254,1711,3.309,1712,2.127,1713,2.254,1714,1.611,1715,1.854,1716,5.254,1717,2.127,1718,2.254,1719,2.431,1720,2.127,1721,2.254,1728,2.254,1729,2.127,1730,2.127,1731,2.254,1732,2.254,1735,2.254,1745,2.234,1868,2.774,1926,4.08,1928,3.538,1944,3.505,1948,4.982,1986,3.146,2155,3.751,2391,3.006,2404,4.08,2488,2.412,2492,5.193,2792,5.007,2963,3.751,2987,3.751,2992,2.623,3129,3.505,3321,1.513,3535,2.623,3536,6.425,3537,3.146,3538,3.309,3539,3.505,3540,4.58,3541,4.58,3542,4.08,3543,4.58,3544,4.58,3545,7.849,3546,5.62,3547,6.763,3548,4.58,3549,4.58,3550,3.006,3551,2.944,3552,4.58,3553,2.944,3554,4.58,3555,4.58,3556,8.063,3557,2.944,3558,2.944,3559,3.505,3560,2.944,3561,2.944,3562,2.944,3563,3.751,3564,4.58,3565,4.58,3566,4.58,3567,2.944,3568,4.08,3569,2.944,3570,2.944,3571,5.62,3572,4.58,3573,2.944,3574,4.58,3575,4.58,3576,4.58,3577,2.944,3578,4.58,3579,2.623,3580,2.944,3581,5.007,3582,2.944,3583,2.944,3584,2.944,3585,2.944,3586,2.127,3587,2.944,3588,2.944,3589,2.944,3590,2.944,3591,2.944,3592,2.944,3593,2.944,3594,2.944,3595,2.944,3596,2.944,3597,4.58]],["title/interfaces/ModelConfig.html",[369,1.369,1032,3.177]],["body/interfaces/ModelConfig.html",[3,0.382,4,0.395,10,0.299,12,0.833,26,0.007,39,0.769,40,1.037,48,2.387,68,0.648,87,3.357,102,0.885,152,0.276,167,0.265,343,0.005,344,0.006,345,0.005,369,2.448,371,3.122,384,2.068,392,3.602,757,3.22,1001,5.352,1032,5.352,1083,4.75,1125,4.556,1154,4.041,1168,5.643,1749,4.148,1862,5.579,1943,5.352,3598,4.971,3599,6.963,3600,4.652]],["title/injectables/ModelConfigService.html",[662,1.494,1033,2.851]],["body/injectables/ModelConfigService.html",[2,0.873,3,0.163,4,0.168,10,0.127,12,0.666,20,1.218,21,1.162,26,0.007,32,1.41,34,0.577,39,0.328,40,0.579,45,1.259,48,2.296,51,2.096,52,1.793,54,0.747,68,0.798,69,1.834,70,1.036,87,1.874,88,1.934,89,1.331,100,1.133,101,0.924,102,0.804,117,3.546,121,1.148,131,2.031,133,2.622,142,1.957,152,0.324,154,0.27,156,0.964,166,1.667,167,0.113,168,0.248,183,1.924,188,1.532,207,1.162,229,1.162,230,1.403,247,0.768,343,0.002,344,0.003,345,0.002,374,3.423,376,2.831,378,0.982,384,0.881,389,2.749,390,3.581,391,1.742,392,3.081,400,1.839,424,4.429,430,2.526,443,2.228,448,3.633,453,2.228,459,2.44,460,0.949,462,2.989,465,1.394,485,2.379,504,1.874,516,2.988,521,0.929,524,2.024,531,1.942,554,1.637,576,2.256,581,2.001,582,2.75,586,2.985,620,3.35,621,2.9,653,3.089,662,1.405,673,2.926,715,1.429,757,2.461,780,1.637,786,1.546,890,1.915,906,4.091,910,3.257,918,3.26,960,1.504,966,3.115,990,4.229,997,1.504,1002,5.789,1003,2.774,1032,2.988,1033,2.682,1035,2.105,1036,2.513,1038,4.878,1056,4.695,1078,1.687,1083,5.478,1114,2.118,1155,1.693,1158,2.519,1168,5.056,1208,5.473,1210,3.937,1221,2.747,1223,1.868,1224,1.868,1225,2.228,1241,2.024,1282,3.26,1285,2.36,1305,1.504,1325,3.964,1340,3.633,1395,3.17,1559,3.887,1615,2.024,1622,2.024,1672,2.526,1733,2.228,1760,2.875,1773,4.25,1774,2.774,1818,2.228,1838,4.229,1865,3.643,1866,3.633,1867,2.228,1873,2.988,1874,3.633,1922,3.382,1928,4.665,1939,2.988,1986,2.118,1999,3.115,2035,5.069,2047,2.526,2237,2.747,2352,3.887,2441,4.229,2506,2.526,2521,5.671,2541,4.229,2678,2.747,2812,3.429,2869,2.228,2894,2.36,3105,5.37,3128,3.887,3568,4.229,3598,5.733,3599,3.887,3600,3.556,3601,4.746,3602,3.887,3603,3.887,3604,3.633,3605,4.229,3606,5.786,3607,4.746,3608,6.498,3609,4.746,3610,4.746,3611,6.498,3612,3.084,3613,4.746,3614,4.746,3615,8.347,3616,3.084,3617,4.746,3618,4.229,3619,4.746,3620,4.229,3621,4.746,3622,4.229,3623,4.229,3624,3.887,3625,4.746,3626,4.746,3627,4.746,3628,3.084,3629,4.229,3630,3.084,3631,3.797,3632,4.746,3633,3.084,3634,4.229,3635,4.229,3636,4.746,3637,4.746,3638,4.746,3639,3.084,3640,4.746,3641,3.633,3642,4.746,3643,3.084,3644,3.084,3645,4.746,3646,3.084,3647,4.746,3648,3.084,3649,3.084,3650,3.084,3651,3.084,3652,3.633,3653,4.746,3654,4.746,3655,2.747,3656,3.084,3657,4.746,3658,3.084,3659,2.747,3660,3.084,3661,7.72,3662,7.41,3663,2.747,3664,3.084,3665,4.746,3666,4.746,3667,4.746,3668,4.746,3669,3.084,3670,3.084,3671,3.084,3672,3.084,3673,3.084,3674,3.084,3675,2.747,3676,3.084,3677,3.084,3678,6.498,3679,4.746,3680,3.084,3681,3.084,3682,3.084,3683,3.084,3684,3.084,3685,3.084,3686,3.084,3687,3.084,3688,4.746,3689,3.084,3690,3.084,3691,3.084,3692,3.084,3693,3.084,3694,3.084,3695,3.084,3696,4.229,3697,4.229,3698,3.084,3699,3.084,3700,3.084,3701,2.747,3702,4.746,3703,4.746,3704,3.084,3705,4.746,3706,3.084,3707,3.084,3708,3.084,3709,3.084,3710,3.084,3711,3.084,3712,3.084,3713,3.084,3714,3.084,3715,3.084,3716,2.526,3717,3.084,3718,3.084,3719,3.084,3720,3.084,3721,4.746,3722,3.084,3723,3.084,3724,4.746,3725,3.084,3726,3.084,3727,3.084,3728,3.084,3729,3.084,3730,2.747,3731,3.084,3732,3.084]],["title/interfaces/ModelConfiguration.html",[369,1.369,3733,4.133]],["body/interfaces/ModelConfiguration.html",[3,0.382,4,0.395,10,0.299,12,0.833,26,0.007,39,0.769,40,1.037,48,2.387,68,0.648,87,3.357,102,0.885,152,0.276,167,0.265,343,0.005,344,0.006,345,0.005,369,2.448,371,3.122,384,2.068,392,3.602,757,3.22,1001,5.352,1083,4.75,1154,4.041,1168,5.643,1749,4.148,1862,5.579,1943,5.352,3598,4.971,3599,6.963,3600,4.652,3733,6.963,3734,6.448]],["title/classes/Notification.html",[168,0.217,1074,2.601]],["body/classes/Notification.html",[3,0.414,4,0.289,10,0.219,12,0.902,26,0.007,32,1.082,34,1.308,39,0.563,40,0.854,45,1.141,68,0.877,69,1.78,70,1.217,72,1.308,87,2.763,88,2.106,100,0.777,101,0.634,102,1.026,142,2.885,152,0.202,167,0.194,168,0.227,286,2.121,343,0.003,344,0.005,345,0.003,376,3.661,378,1.447,451,4.591,460,1.567,495,2.763,504,2.763,531,2.414,566,3.606,576,3.325,647,5.048,648,4.404,650,3.784,651,5.248,653,3.325,656,4.342,757,3.156,884,4.426,890,2.137,1034,3.952,1060,3.506,1068,3.96,1074,5.081,1111,4.038,1117,4.931,1118,5.454,1185,3.413,1250,4.088,1311,5.054,1395,4.065,1524,4.598,1597,5.38,1868,4.238,1873,4.404,1976,4.805,1979,4.338,2568,6.232,2964,5.73,3269,4.404,3581,4.719,3641,5.354,3735,4.719,3736,6.996,3737,6.996,3738,6.996,3739,8.332,3740,5.296,3741,6.996,3742,5.296,3743,5.296,3744,6.996,3745,5.296,3746,5.296,3747,6.232,3748,4.805,3749,5.296,3750,6.232,3751,6.996,3752,5.296,3753,6.996,3754,5.296,3755,6.996,3756,5.296,3757,4.719,3758,4.719]],["title/components/NotificationsComponent.html",[0,0.292,286,1.235]],["body/components/NotificationsComponent.html",[0,0.47,1,0.9,2,0.971,3,0.188,4,0.194,5,1.075,7,1.711,8,0.931,9,1.498,10,0.147,12,0.409,17,0.869,21,0.869,24,0.799,26,0.007,32,0.55,33,2.188,34,1.874,37,1.338,39,0.377,40,0.645,42,1.179,45,0.579,46,1.005,65,1.315,68,0.701,70,0.799,73,1.465,84,1.083,85,1.498,88,1.25,100,0.521,101,0.996,102,0.37,121,1.029,127,1.338,129,0.884,138,1.848,152,0.266,154,0.311,164,2.91,167,0.255,168,0.32,188,1.121,198,0.664,199,1.408,200,0.735,201,1.498,202,1.862,203,0.963,204,0.963,205,0.869,206,1.894,207,0.869,208,0.915,209,0.827,210,0.9,211,0.915,212,2.197,213,0.9,214,1.443,215,1.894,216,0.915,217,1.343,218,2.258,219,0.915,220,0.915,221,0.963,222,0.9,223,1.433,224,0.915,225,0.963,226,0.9,227,0.963,228,0.884,229,0.869,230,1.665,231,1.711,232,0.884,233,0.9,234,0.9,235,0.884,236,0.963,237,0.915,238,0.915,239,2.025,240,0.915,241,0.9,242,0.915,243,0.915,244,0.915,245,0.9,246,0.963,247,0.884,248,0.915,249,0.963,250,0.9,251,0.963,252,0.9,253,0.9,254,1.057,255,0.963,256,0.9,257,0.963,258,0.884,259,0.9,260,0.963,261,0.9,262,0.963,263,0.827,264,0.963,265,0.9,266,1.492,267,0.963,268,0.884,269,0.963,270,0.9,271,0.963,272,0.869,273,0.963,274,0.9,275,0.884,276,0.9,277,0.855,278,0.963,279,0.9,280,0.963,281,0.963,282,0.9,283,0.963,284,0.9,285,0.963,286,1.827,287,0.963,288,0.884,289,0.9,290,0.963,291,0.9,292,0.931,293,0.963,294,0.884,295,0.9,296,1.842,297,0.9,298,0.915,299,0.799,300,0.915,301,0.915,302,0.9,303,0.915,304,0.915,305,0.915,306,0.963,307,0.884,308,0.9,309,0.963,310,0.9,311,0.931,312,0.9,313,0.963,314,0.9,315,0.963,316,0.915,317,0.9,318,0.9,319,0.963,320,0.9,321,0.963,322,0.9,323,0.963,324,0.9,325,0.855,326,0.841,327,0.869,328,0.963,329,0.884,330,0.963,331,0.884,332,0.963,333,0.884,334,0.963,335,0.884,336,0.963,337,0.884,338,0.947,339,0.963,340,0.884,341,0.947,342,0.963,343,0.002,344,0.003,345,0.002,346,0.813,369,0.963,376,3.156,384,1.015,388,3.326,437,2.152,460,1.057,472,1.242,488,1.835,495,2.086,531,1.956,560,1.292,576,1.688,586,1.374,650,2.886,651,3.2,653,2.511,656,4.569,657,3.764,672,2.601,675,5.166,757,1.346,761,1.532,765,2.152,807,2.331,817,2.152,884,4.577,889,4.899,890,1.433,906,2.236,922,2.331,960,1.733,1020,3.2,1034,4.217,1060,3.5,1068,2.511,1074,4.849,1110,3.2,1111,4.033,1112,4.557,1115,2.567,1117,3.97,1118,3.97,1154,1.688,1173,2.719,1177,1.831,1187,2.152,1258,3.165,1305,1.733,1318,3.467,1329,1.944,1395,1.733,1435,2.152,1446,3.817,1524,3.962,1597,2.44,1703,4.583,1715,3.326,1719,2.804,1745,1.733,1749,2.577,1793,2.567,1868,2.152,1956,4.139,2301,2.719,2342,3.165,2352,2.91,2563,2.719,2566,2.331,2605,2.91,2648,3.686,2653,2.567,2798,4.043,2841,3.165,2884,5.166,2885,3.165,3047,4.707,3103,4.327,3107,3.326,3115,2.331,3122,2.91,3269,3.326,3352,2.719,3501,2.91,3631,2.331,3659,4.707,3759,3.165,3760,5.283,3761,5.283,3762,5.283,3763,5.283,3764,3.552,3765,2.91,3766,3.552,3767,2.44,3768,5.283,3769,3.552,3770,6.307,3771,6.307,3772,5.283,3773,3.552,3774,3.552,3775,3.552,3776,3.552,3777,3.165,3778,2.719,3779,3.552,3780,3.552,3781,3.552,3782,5.283,3783,3.552,3784,3.552,3785,2.44,3786,2.719,3787,3.552,3788,3.552,3789,3.552,3790,3.552,3791,3.552,3792,5.283,3793,3.552,3794,3.552,3795,2.91,3796,3.552,3797,1.944,3798,3.552,3799,3.552,3800,3.552,3801,3.165,3802,6.307,3803,3.552,3804,3.552,3805,3.552,3806,3.552,3807,6.307,3808,5.619,3809,3.552,3810,3.552,3811,3.552,3812,3.552,3813,3.552,3814,5.283,3815,3.552,3816,3.165,3817,4.707,3818,3.165,3819,3.552]],["title/modules/NotificationsModule.html",[346,1.155,3820,3.646]],["body/modules/NotificationsModule.html",[3,0.345,4,0.356,10,0.27,25,2.854,26,0.007,27,2.883,152,0.363,154,0.572,167,0.239,168,0.28,198,1.221,245,2.489,286,2.406,343,0.004,344,0.005,345,0.004,346,1.494,348,2.579,349,2.474,350,3.562,351,2.693,352,3.485,359,3.37,360,2.525,361,2.198,364,2.691,365,2.796,400,1.711,657,4.249,698,3.799,699,2.953,723,4.111,2172,6.167,2174,5.692,2178,5.349,2184,4.719,3757,5.818,3801,5.818,3820,7.183,3821,5.818,3822,5.818,3823,6.531,3824,5.818,3825,5.818,3826,6.531,3827,6.531,3828,5.818]],["title/injectables/NotificationsService.html",[657,2.282,662,1.494]],["body/injectables/NotificationsService.html",[2,1.213,3,0.256,4,0.265,10,0.201,12,0.559,25,2.18,26,0.007,27,2.913,32,1.245,34,1.234,39,0.516,40,0.805,45,1.222,46,1.65,54,1.039,68,0.754,70,1.125,84,1.49,85,2.782,89,1.12,90,1.074,100,1.1,101,0.897,102,0.78,107,4.532,121,1.168,133,2.662,145,5.104,152,0.307,154,0.425,161,4.325,165,3.715,166,1.45,167,0.178,168,0.208,188,1.495,343,0.003,344,0.004,345,0.003,346,1.51,378,1.551,437,2.941,460,0.971,485,3.307,488,1.919,495,1.917,504,1.917,531,1.964,566,3.401,569,3.502,582,1.802,648,3.056,651,2.941,656,4.596,657,2.984,662,1.954,664,4.858,665,3.307,666,4.154,673,3.177,715,2.25,722,5.405,723,4.154,751,7.731,787,3.056,833,3.056,884,3.728,915,5.521,966,3.186,1047,3.392,1074,5.082,1117,3.056,1177,2.502,1290,3.507,1325,3.728,1446,4.768,1524,4.269,1678,3.823,1745,3.219,1793,4.768,1948,3.186,2027,5.051,2127,3.186,2812,4.768,2884,3.976,3586,3.507,3623,5.879,3758,4.325,3808,4.325,3816,4.325,3817,5.879,3818,4.325,3828,7.731,3829,4.325,3830,6.599,3831,5.051,3832,9.482,3833,6.599,3834,7.497,3835,6.599,3836,8.044,3837,4.854,3838,6.599,3839,6.599,3840,6.599,3841,4.854,3842,6.599,3843,7.167,3844,8.678,3845,6.599,3846,4.854,3847,6.599,3848,4.854,3849,6.599,3850,6.599,3851,4.854,3852,5.405,3853,6.599,3854,4.854,3855,6.14,3856,4.854,3857,4.854,3858,4.854,3859,4.854,3860,4.854,3861,4.854,3862,4.854,3863,4.854,3864,4.854,3865,4.854,3866,4.854,3867,4.854,3868,4.854,3869,4.854,3870,4.854,3871,4.854,3872,4.854,3873,4.854]],["title/components/OutputComponent.html",[0,0.292,288,1.256]],["body/components/OutputComponent.html",[0,0.538,1,1.03,2,1.254,3,0.215,4,0.222,5,1.387,7,1.103,8,1.066,10,0.168,12,0.468,17,1.428,20,2.303,21,0.996,23,3.083,24,0.915,26,0.007,33,2.198,34,1.883,37,1.477,39,0.432,40,0.712,42,1.474,45,0.663,46,1.109,48,2.654,52,2.562,54,0.919,56,3.452,65,1.452,68,0.81,70,1.071,72,1.275,85,2.459,87,1.606,88,1.866,89,0.871,90,0.9,100,0.597,101,1.035,102,0.424,119,3.619,121,1.079,124,1.606,127,1.477,129,1.013,138,1.423,152,0.284,154,0.356,167,0.149,168,0.175,198,0.761,199,1.555,200,0.842,202,1.985,203,1.103,204,1.103,205,0.996,206,2.02,207,0.996,208,1.048,209,0.947,210,1.03,211,1.048,212,2.292,213,1.03,214,1.56,215,2.02,216,1.048,217,1.409,218,2.345,219,1.048,220,1.048,221,1.103,222,1.03,223,1.582,224,1.048,225,1.103,226,1.03,227,1.103,228,1.013,229,0.996,230,1.729,231,1.849,232,1.963,233,1.03,234,2.14,235,1.854,236,1.103,237,1.048,238,1.048,239,2.139,240,1.048,241,1.03,242,1.048,243,1.048,244,1.048,245,1.03,246,1.103,247,1.013,248,1.048,249,1.103,250,1.03,251,1.103,252,1.03,253,1.03,254,1.167,255,1.103,256,1.03,257,1.103,258,1.013,259,1.03,260,1.103,261,1.03,262,1.103,263,0.947,264,1.103,265,1.03,266,1.613,267,1.103,268,1.013,269,1.103,270,1.03,271,1.103,272,0.996,273,1.103,274,1.03,275,1.013,276,1.03,277,0.979,278,1.103,279,1.03,280,1.103,281,1.103,282,1.03,283,1.103,284,1.03,285,1.103,286,0.996,287,1.103,288,1.854,289,1.03,290,1.103,291,1.03,292,1.066,293,1.103,294,1.013,295,1.03,296,1.913,297,1.03,298,1.048,299,0.915,300,1.048,301,1.048,302,1.03,303,1.048,304,1.048,305,1.048,306,1.103,307,1.013,308,1.03,309,1.103,310,1.03,311,1.066,312,1.03,313,1.103,314,1.03,315,1.103,316,1.048,317,1.03,318,1.03,319,1.103,320,1.03,321,1.103,322,1.03,323,1.103,324,1.03,325,0.979,326,0.963,327,0.996,328,1.103,329,1.013,330,1.103,331,1.013,332,1.103,333,1.013,334,1.103,335,1.013,336,1.103,337,1.013,338,1.084,339,1.103,340,1.452,341,1.084,342,1.103,343,0.003,344,0.004,345,0.003,384,1.163,471,3.533,474,2.298,482,2.209,506,3.828,521,2.245,531,1.528,586,2.255,761,2.516,1068,1.934,1155,1.451,1224,2.464,1225,2.939,1491,4.777,1499,3.114,1553,5.219,1563,4.927,1566,4.777,1567,5.585,1568,4.777,1570,3.332,1571,4.777,1573,3.332,1575,3.332,1576,3.332,1577,3.332,2161,4.464,2394,3.672,2395,3.672,2415,2.561,2561,5.196,2565,5.196,2588,3.624,2606,3.624,2607,3.624,2608,3.332,2615,5.196,3874,3.624,3875,5.833,3876,5.196,3877,4.068,3878,4.068,3879,4.068,3880,4.068,3881,5.833,3882,4.068,3883,4.068,3884,4.068]],["title/classes/Pagination.html",[168,0.217,2772,3.057]],["body/classes/Pagination.html",[3,0.179,4,0.185,10,0.14,12,0.391,26,0.007,32,1.235,39,0.361,40,0.623,45,1.001,46,1.463,47,2.559,52,0.937,54,0.804,55,2.71,68,0.779,70,1.19,72,1.148,84,1.321,85,2.153,87,2.016,88,1.82,89,1.414,90,1.97,98,2.347,100,1.171,101,0.955,102,0.875,121,0.963,138,2.994,152,0.195,166,0.657,167,0.124,168,0.264,183,2.637,188,1.565,254,1.021,343,0.002,344,0.003,345,0.002,373,2.203,378,1.591,383,3.993,389,2.612,400,1.338,435,2.056,451,3.351,452,3.215,460,0.679,472,1.187,474,4.64,478,3.359,495,3.856,498,2.984,504,2.424,508,3.258,529,5.766,531,0.89,534,2.332,546,5.514,571,1.656,576,3.245,578,4.799,595,1.858,650,2.64,653,2.427,664,4.006,665,1.701,666,3.215,671,2.325,673,2.424,757,3.293,761,2.203,830,3.689,890,1.37,894,4.114,906,2.137,915,4.805,960,1.656,1050,3.52,1078,1.857,1157,3.351,1177,1.75,1178,4.549,1185,2.491,1305,4.241,1308,6.049,1435,2.056,1460,3.093,1495,2.332,1588,6.083,1589,6.083,1590,6.083,1618,2.332,1748,3.99,1749,2.491,1912,3.351,1918,2.332,1956,2.228,2096,2.78,2098,4.911,2335,2.78,2656,4.549,2657,4.435,2772,5.573,2798,3.908,2834,5.469,2868,5.469,2892,3.024,2958,3.908,3129,5.226,3383,4.549,3451,4.549,3462,4.182,3600,2.794,3618,4.549,3629,6.083,3843,6.853,3885,3.024,3886,7.214,3887,9.139,3888,6.828,3889,6.828,3890,6.083,3891,6.828,3892,5.106,3893,4.549,3894,4.549,3895,5.106,3896,3.99,3897,3.395,3898,5.106,3899,5.106,3900,3.395,3901,3.395,3902,3.395,3903,3.689,3904,4.549,3905,3.395,3906,3.395,3907,3.395,3908,5.106,3909,3.395,3910,3.395,3911,3.395,3912,3.395,3913,5.106,3914,3.395,3915,3.395,3916,3.395,3917,5.106,3918,3.395,3919,5.106,3920,6.083,3921,3.395,3922,5.106,3923,3.395,3924,5.106,3925,6.138,3926,5.106,3927,3.395,3928,5.106,3929,5.106,3930,3.395,3931,3.024,3932,3.395,3933,3.395,3934,3.395,3935,3.395,3936,3.395,3937,3.395,3938,8.212,3939,3.395,3940,3.395,3941,3.395,3942,8.808,3943,6.828,3944,7.322,3945,3.395,3946,3.395,3947,6.828,3948,5.106,3949,3.395,3950,3.395,3951,3.395,3952,3.395,3953,5.106,3954,3.395,3955,3.395,3956,3.395]],["title/components/PaginationComponent.html",[0,0.292,289,1.278]],["body/components/PaginationComponent.html",[0,0.444,1,0.959,2,1.018,3,0.2,4,0.207,5,0.771,7,1.028,8,0.993,10,0.157,12,0.436,17,1.356,21,0.927,22,2.891,23,2.961,24,0.852,26,0.007,33,2.193,34,1.878,37,1.403,39,0.403,40,0.676,41,4.886,42,1.347,45,0.618,54,0.872,55,2.94,56,3.339,57,3.258,65,1.379,68,0.717,69,1.108,70,1.096,72,1.347,84,0.951,85,3.038,88,1.311,89,1.076,90,1.449,98,2.059,100,0.813,101,1.035,102,0.577,121,0.729,123,3.466,124,2.586,125,4.24,127,1.403,129,0.943,138,1.325,152,0.275,153,1.713,154,0.332,166,0.733,167,0.139,168,0.281,183,2.133,188,0.984,198,0.708,199,1.477,200,0.784,202,1.921,203,1.028,204,1.028,205,0.927,206,1.954,207,0.927,208,0.976,209,0.882,210,0.959,211,0.976,212,2.243,213,0.959,214,1.498,215,1.954,216,0.976,217,1.375,218,2.3,219,0.976,220,0.976,221,1.028,222,0.959,223,1.503,224,0.976,225,1.028,226,0.959,227,1.028,228,0.943,229,0.927,230,1.696,231,1.776,232,0.943,233,0.959,234,0.959,235,0.943,236,1.028,237,0.976,238,0.976,239,2.079,240,0.976,241,0.959,242,0.976,243,0.976,244,0.976,245,0.959,246,1.028,247,0.943,248,0.976,249,1.028,250,0.959,251,1.028,252,0.959,253,0.959,254,1.108,255,1.028,256,0.959,257,1.028,258,0.943,259,0.959,260,1.028,261,0.959,262,1.028,263,0.882,264,1.028,265,0.959,266,1.55,267,1.028,268,0.943,269,1.028,270,0.959,271,1.028,272,0.927,273,1.028,274,0.959,275,0.943,276,0.959,277,0.912,278,1.028,279,0.959,280,1.028,281,1.028,282,0.959,283,1.028,284,0.959,285,1.028,286,0.927,287,1.028,288,0.943,289,1.824,290,1.028,291,0.959,292,0.993,293,1.028,294,0.943,295,0.959,296,1.876,297,0.959,298,0.976,299,0.852,300,0.976,301,0.976,302,0.959,303,0.976,304,0.976,305,0.976,306,1.028,307,0.943,308,0.959,309,1.028,310,0.959,311,0.993,312,0.959,313,1.028,314,0.959,315,1.028,316,0.976,317,0.959,318,0.959,319,1.028,320,0.959,321,1.028,322,0.959,323,1.028,324,0.959,325,0.912,326,0.897,327,0.927,328,1.028,329,0.943,330,1.028,331,0.943,332,1.028,333,0.943,334,1.028,335,0.943,336,1.028,337,0.943,338,1.01,339,1.028,340,0.943,341,1.01,342,1.028,343,0.003,344,0.004,345,0.003,378,0.784,384,1.083,389,2.363,435,3.356,471,3.356,472,1.325,506,3.636,576,2.633,633,1.953,671,1.957,673,3.415,919,2.142,1035,3.278,1060,2.777,1078,2.073,1305,2.703,1311,4.003,1433,4.24,1750,3.805,2098,3.13,2772,5.696,2773,4.732,2838,3.375,3060,3.375,3886,6.558,3893,4.936,3957,3.375,3958,5.54,3959,6.549,3960,5.54,3961,3.789,3962,3.789,3963,5.54,3964,3.789,3965,3.789,3966,4.537,3967,3.789,3968,3.789,3969,3.789,3970,3.789,3971,5.54,3972,5.834,3973,5.54,3974,3.789,3975,5.54,3976,4.936,3977,5.54,3978,5.54,3979,5.54,3980,3.789,3981,5.54,3982,4.936,3983,3.789,3984,5.54,3985,3.789,3986,3.789,3987,5.54,3988,5.54,3989,5.54,3990,5.54,3991,5.54,3992,5.54,3993,5.54,3994,5.54,3995,5.54,3996,5.54,3997,5.54,3998,5.54,3999,5.54,4000,5.54]],["title/classes/PaginationConfig.html",[168,0.217,2773,3.646]],["body/classes/PaginationConfig.html",[0,0.457,3,0.338,4,0.349,10,0.264,12,0.737,26,0.007,39,0.68,40,0.963,45,1.043,68,0.801,70,1.133,100,0.939,101,0.766,102,0.666,121,0.842,138,2.761,152,0.244,167,0.234,168,0.275,183,2.337,343,0.004,344,0.005,345,0.004,378,1.849,389,2.554,460,1.712,489,4.189,495,3.38,571,3.851,671,1.868,890,2.581,909,5.223,910,3.956,1001,4.969,1036,2.474,1042,4.46,1060,3.956,1125,4.028,1171,5.627,1250,4.613,1291,4.028,1305,3.851,1308,5.421,1979,5.24,2235,6.041,2455,6.465,2772,4.782,2773,6.633,3886,7.839,3894,7.032,4001,8.179,4002,8.56,4003,8.56,4004,9.475,4005,7.893,4006,6.398,4007,6.465,4008,6.398,4009,4.319,4010,7.893,4011,7.893,4012,7.893]],["title/components/PasswordResetComponent.html",[0,0.292,291,1.278]],["body/components/PasswordResetComponent.html",[0,0.38,1,0.961,2,1.02,3,0.2,4,0.207,5,0.772,7,1.029,8,0.994,9,1.6,10,0.157,12,0.437,17,1.357,21,0.929,24,0.854,26,0.007,32,1.014,33,2.193,34,1.878,37,1.404,39,0.403,40,0.677,42,1.348,45,0.619,46,1.459,48,1.557,54,0.873,65,1.381,68,0.76,69,1.109,70,1.114,72,1.037,84,0.652,85,2.338,89,0.567,90,0.839,100,0.557,101,1.015,102,0.682,121,0.862,124,1.498,127,1.404,129,0.945,131,2.253,143,2.173,152,0.275,153,1.716,154,0.332,156,1.186,166,0.734,167,0.139,168,0.163,186,2.78,198,0.709,199,1.478,200,0.785,201,1.6,202,1.922,203,1.029,204,1.029,205,0.929,206,1.955,207,0.929,208,0.977,209,1.864,210,0.961,211,0.977,212,2.244,213,0.961,214,1.5,215,1.955,216,0.977,217,1.376,218,2.301,219,0.977,220,0.977,221,1.029,222,0.961,223,1.504,224,0.977,225,1.029,226,0.961,227,1.029,228,0.945,229,0.929,230,1.697,231,1.778,232,0.945,233,0.961,234,0.961,235,0.945,236,1.029,237,0.977,238,0.977,239,2.08,240,0.977,241,0.961,242,0.977,243,0.977,244,0.977,245,0.961,246,1.029,247,0.945,248,0.977,249,1.029,250,0.961,251,1.029,252,0.961,253,0.961,254,1.109,255,1.029,256,0.961,257,1.029,258,0.945,259,0.961,260,1.029,261,0.961,262,1.029,263,1.29,264,1.029,265,0.961,266,1.551,267,1.029,268,0.945,269,1.029,270,0.961,271,1.029,272,0.929,273,1.029,274,0.961,275,0.945,276,0.961,277,0.913,278,1.029,279,0.961,280,1.029,281,1.029,282,0.961,283,1.029,284,0.961,285,1.029,286,0.929,287,1.029,288,0.945,289,0.961,290,1.029,291,1.826,292,2.223,293,1.029,294,0.945,295,0.961,296,1.877,297,0.961,298,0.977,299,0.854,300,0.977,301,0.977,302,0.961,303,0.977,304,0.977,305,0.977,306,1.029,307,0.945,308,0.961,309,1.029,310,0.961,311,0.994,312,0.961,313,1.029,314,0.961,315,1.029,316,0.977,317,0.961,318,0.961,319,1.029,320,0.961,321,1.029,322,0.961,323,1.029,324,0.961,325,0.913,326,0.898,327,0.929,328,1.029,329,0.945,330,1.029,331,0.945,332,1.029,333,0.945,334,1.029,335,0.945,336,1.029,337,0.945,338,1.011,339,1.029,340,0.945,341,1.011,342,1.029,343,0.003,344,0.004,345,0.003,360,3.4,376,2.237,378,1.147,395,1.498,460,0.759,482,2.1,486,4.301,490,4.542,502,2.508,521,1.672,524,2.49,532,2.904,552,3.653,576,2.636,620,3.954,648,4.539,650,2.144,651,2.298,656,4.036,657,3.468,675,4.542,682,3.38,693,4.835,695,4.367,707,2.904,709,7.299,768,5.43,919,2.144,1019,3.478,1035,2.017,1071,4.007,1117,3.491,1155,1.978,1634,2.389,1719,2.943,2354,4.542,3269,4.539,3270,4.542,3273,3.38,3291,3.108,3297,3.108,3326,5.905,3380,3.108,3777,3.38,4013,7.939,4014,3.38,4015,5.546,4016,7.834,4017,5.546,4018,5.546,4019,5.546,4020,6.554,4021,5.546,4022,3.794,4023,5.546,4024,3.794,4025,3.794,4026,3.794,4027,7.21,4028,5.546,4029,3.794,4030,3.794,4031,4.941,4032,5.546,4033,4.941,4034,3.794,4035,3.794,4036,3.794,4037,3.794,4038,3.794,4039,3.794,4040,3.794,4041,3.794,4042,3.794,4043,3.794,4044,3.794,4045,3.794,4046,3.794,4047,3.794,4048,5.546]],["title/components/PopComponent.html",[0,0.292,294,1.256]],["body/components/PopComponent.html",[0,0.351,1,0.842,2,0.924,3,0.176,4,0.181,5,0.676,7,1.644,8,0.871,9,1.402,10,0.137,12,0.383,21,0.814,24,0.748,26,0.007,32,1.386,33,2.182,34,1.871,37,1.273,39,0.353,40,0.613,41,2.84,42,1.427,45,0.988,46,1.667,54,0.792,65,1.252,68,0.763,69,1.006,70,1.135,72,1.263,73,2.073,84,0.571,87,2.668,88,1.19,89,1.009,90,1.341,100,0.991,101,1.035,102,0.703,116,3.483,121,1.004,123,3.85,127,2.156,129,0.828,143,2.037,152,0.192,154,0.291,167,0.122,168,0.143,186,3.387,188,0.591,198,0.622,199,1.34,200,0.688,201,1.402,202,1.801,203,0.902,204,0.902,205,0.814,206,1.833,207,0.814,208,0.856,209,0.774,210,0.842,211,0.856,212,2.15,213,0.842,214,1.387,215,1.833,216,0.856,217,1.311,218,2.213,219,0.856,220,0.856,221,0.902,222,0.842,223,1.363,224,0.856,225,0.902,226,0.842,227,0.902,228,0.828,229,0.814,230,1.632,231,1.644,232,0.828,233,0.842,234,0.842,235,0.828,236,0.902,237,0.856,238,0.856,239,1.968,240,0.856,241,0.842,242,0.856,243,0.856,244,0.856,245,0.842,246,0.902,247,0.828,248,0.856,249,0.902,250,0.842,251,0.902,252,0.842,253,0.842,254,1.006,255,0.902,256,0.842,257,0.902,258,0.828,259,0.842,260,0.902,261,0.842,262,0.902,263,0.774,264,0.902,265,0.842,266,1.434,267,0.902,268,0.828,269,0.902,270,0.842,271,0.902,272,0.814,273,0.902,274,0.842,275,0.828,276,0.842,277,0.8,278,0.902,279,0.842,280,0.902,281,0.902,282,0.842,283,0.902,284,0.842,285,0.902,286,0.814,287,0.902,288,0.828,289,0.842,290,0.902,291,0.842,292,0.871,293,0.902,294,1.682,295,0.842,296,1.805,297,0.842,298,0.856,299,0.748,300,0.856,301,0.856,302,0.842,303,0.856,304,0.856,305,0.856,306,0.902,307,0.828,308,0.842,309,0.902,310,0.842,311,0.871,312,0.842,313,0.902,314,0.842,315,0.902,316,0.856,317,0.842,318,0.842,319,0.902,320,0.842,321,0.902,322,0.842,323,0.902,324,0.842,325,0.8,326,0.787,327,0.814,328,0.902,329,0.828,330,0.902,331,0.828,332,0.902,333,0.828,334,0.902,335,0.828,336,0.902,337,0.828,338,0.886,339,0.902,340,0.828,341,0.886,342,0.902,343,0.002,344,0.003,345,0.002,378,1.501,379,3.586,396,3.217,400,2.231,460,0.665,472,1.163,482,1.904,488,0.967,493,2.402,504,1.985,521,1.515,531,2,546,2.182,578,1.943,581,1.402,647,3.672,671,0.787,890,1.341,902,4.093,919,2.806,921,3.045,945,2.938,1053,2.938,1067,4.555,1092,3.848,1111,4.085,1154,1.58,1162,2.182,1171,4.805,1185,4.409,1192,2.545,1195,2.182,1305,2.453,1446,2.402,1511,3.453,1524,2.668,1525,2.284,1533,2.402,1534,2.962,1535,2.962,1539,6.464,1671,3.848,1673,4.46,1675,4.38,1677,3.632,1678,3.767,1679,4.882,1680,4.163,1681,4.882,1688,3.453,1690,3.542,1691,3.632,1693,3.632,1694,4.163,1699,3.453,1701,2.402,1703,3.299,1711,4.882,1712,3.632,1714,2.751,1715,3.165,1716,3.632,1717,3.632,1719,3.586,1720,3.632,1729,3.632,1730,3.632,1900,2.962,1948,2.182,1956,2.182,2146,2.723,2159,3.848,2391,3.978,2394,3.165,2395,3.165,2415,2.093,2488,2.723,2492,5.534,2514,4.118,2566,2.182,2692,2.545,2831,2.962,3107,2.093,3362,2.962,3536,2.545,3537,2.284,3539,2.545,3547,2.962,3778,2.545,4031,2.962,4049,2.962,4050,5.027,4051,5.027,4052,5.027,4053,5.027,4054,5.027,4055,3.325,4056,3.325,4057,3.325,4058,3.325,4059,3.325,4060,3.325,4061,3.325,4062,3.325,4063,3.325,4064,3.325,4065,3.325,4066,3.325,4067,3.325,4068,3.325,4069,3.325,4070,3.325,4071,3.325,4072,2.962,4073,3.325,4074,3.325,4075,3.325,4076,3.325,4077,5.027,4078,6.062,4079,3.325,4080,3.325,4081,3.325,4082,3.325,4083,3.325,4084,3.325,4085,5.027,4086,3.325,4087,3.325,4088,5.027,4089,3.325]],["title/modules/PopModule.html",[346,1.155,2172,3.312]],["body/modules/PopModule.html",[3,0.352,4,0.363,10,0.275,25,2.878,26,0.007,152,0.36,154,0.583,166,1.288,167,0.296,168,0.286,198,1.245,282,2.495,294,2.453,343,0.004,344,0.005,345,0.004,346,1.524,348,2.63,349,2.523,350,3.593,351,2.747,352,3.515,359,3.411,360,2.576,361,2.242,364,2.723,365,2.33,698,3.845,699,3.012,1082,4.371,1673,5.517,2172,6.506,2174,5.719,2184,4.813,4072,5.934,4090,5.934,4091,5.934,4092,6.661,4093,5.934,4094,5.934,4095,5.934,4096,6.661,4097,5.934,4098,6.661]],["title/injectables/PopService.html",[662,1.494,1673,2.949]],["body/injectables/PopService.html",[3,0.336,4,0.347,10,0.263,12,0.732,26,0.007,39,0.676,40,0.96,45,1.454,68,0.705,70,1.082,84,1.35,121,1.173,138,2.751,152,0.326,154,0.557,166,1.23,167,0.233,168,0.273,183,1.883,294,1.583,343,0.004,344,0.005,345,0.004,384,1.818,388,6.067,445,4.303,460,1.708,495,2.512,662,2.329,715,2.948,889,6.015,919,2.459,945,4.596,1067,4.544,1082,4.174,1149,7.946,1153,6.019,1171,4.951,1192,6.826,1673,4.596,1694,5.402,1703,5.853,1928,4.951,2049,5.682,2696,6.441,4099,5.666,4100,9.165,4101,7.864,4102,7.864,4103,8.919,4104,8.538,4105,7.864,4106,6.36,4107,6.36,4108,6.36,4109,5.209,4110,6.36,4111,6.36,4112,6.36,4113,6.36,4114,6.36,4115,6.36]],["title/interfaces/ResourceActionbarState.html",[369,1.369,4116,4.133]],["body/interfaces/ResourceActionbarState.html",[0,0.359,3,0.234,4,0.242,5,0.902,10,0.183,17,1.086,20,1.752,22,2.738,26,0.007,32,0.686,33,0.965,34,0.829,39,0.76,40,0.757,42,1.16,46,1.549,52,2.136,57,2.006,68,0.73,69,1.733,84,1.228,102,0.806,107,3.047,123,3.233,133,1.79,143,2.456,152,0.337,154,0.389,156,1.938,166,1.76,167,0.227,168,0.19,188,1.54,205,2.066,209,2.159,254,1.43,258,1.544,295,1.123,296,1.582,343,0.003,344,0.004,345,0.003,369,1.203,370,5.143,371,1.913,373,2.675,374,3.974,375,4.603,376,3.67,377,6.46,378,0.918,379,3.291,381,4.746,384,1.268,385,6.249,388,3.904,390,3.014,391,3.503,393,6.913,396,3.291,397,3.633,400,2.029,406,3.633,435,2.687,459,1.87,460,0.887,462,2.502,465,2.006,478,2.427,508,3.794,514,3.047,521,2.155,533,2.592,544,4.039,551,5.079,554,5.05,556,3.872,578,3.624,582,1.646,634,2.653,650,2.398,657,2.804,671,1.692,761,3.084,784,2.911,785,2.911,786,2.223,814,3.952,960,2.164,972,2.427,1034,2.506,1110,2.687,1156,4.557,1282,3.047,1623,3.952,1632,3.952,1634,2.792,1748,4.761,2874,6.235,3138,3.952,3730,3.952,4116,6.341,4117,3.047,4118,3.633,4119,3.952,4120,7.742,4121,4.436,4122,4.436,4123,4.436,4124,4.436,4125,6.201,4126,4.436,4127,4.436,4128,4.436,4129,4.436,4130,4.436,4131,4.436,4132,4.436,4133,4.436,4134,4.436,4135,4.436,4136,4.436,4137,4.436,4138,4.436,4139,3.633,4140,8.146,4141,4.436,4142,4.436,4143,4.436,4144,7.15,4145,4.436,4146,4.436,4147,4.436,4148,4.436,4149,4.436,4150,4.436,4151,3.633,4152,4.436,4153,4.436,4154,4.436,4155,4.436,4156,4.436,4157,4.436,4158,4.436,4159,4.436,4160,4.436,4161,4.436,4162,4.436,4163,4.436,4164,4.436,4165,4.436,4166,4.436,4167,4.436,4168,4.436,4169,4.436,4170,4.436]],["title/components/ResourceCrudComponent.html",[0,0.292,297,1.278]],["body/components/ResourceCrudComponent.html",[0,0.338,1,0.789,2,0.88,3,0.165,4,0.17,5,1.434,7,0.846,8,0.817,10,0.129,12,0.359,17,1.172,21,0.763,22,2.572,24,0.701,26,0.007,32,0.741,33,2.177,34,1.862,37,1.212,39,0.331,40,0.584,42,1.392,45,0.508,46,1.56,52,1.321,54,1.22,57,2.956,65,1.192,68,0.792,69,1.41,70,1.157,72,1.222,84,1,88,1.547,89,1.158,90,1.446,100,0.855,101,1.059,102,0.833,121,0.928,124,2.785,127,1.655,129,0.776,143,2.523,152,0.334,153,1.41,154,0.273,156,2.043,167,0.114,168,0.134,183,0.923,188,1.161,198,0.583,199,1.553,200,0.645,202,1.742,203,0.846,204,0.846,205,0.763,206,1.773,207,0.763,208,0.803,209,1.908,210,0.789,211,0.803,212,2.102,213,0.789,214,1.333,215,1.773,216,0.803,217,1.558,218,2.169,219,0.803,220,0.803,221,0.846,222,0.789,223,1.298,224,0.803,225,0.846,226,0.789,227,0.846,228,0.776,229,0.763,230,1.6,231,1.58,232,0.776,233,0.789,234,0.789,235,0.776,236,0.846,237,0.803,238,0.803,239,1.913,240,0.803,241,0.789,242,0.803,243,0.803,244,0.803,245,0.789,246,0.846,247,0.776,248,0.803,249,0.846,250,0.789,251,0.846,252,0.789,253,0.789,254,1.307,255,0.846,256,0.789,257,0.846,258,0.776,259,0.789,260,0.846,261,0.789,262,0.846,263,1.521,264,0.846,265,0.789,266,1.379,267,0.846,268,0.776,269,0.846,270,0.789,271,0.846,272,0.763,273,0.846,274,0.789,275,0.776,276,0.789,277,0.75,278,0.846,279,0.789,280,0.846,281,0.846,282,0.789,283,0.846,284,0.789,285,0.846,286,0.763,287,0.846,288,0.776,289,0.789,290,0.846,291,0.789,292,0.817,293,0.846,294,0.776,295,0.789,296,2.063,297,1.885,298,0.803,299,0.701,300,0.803,301,1.917,302,0.789,303,1.684,304,0.803,305,0.803,306,0.846,307,0.776,308,0.789,309,0.846,310,0.789,311,0.817,312,0.789,313,0.846,314,0.789,315,0.846,316,0.803,317,0.789,318,0.789,319,0.846,320,0.789,321,0.846,322,0.789,323,0.846,324,0.789,325,0.75,326,0.738,327,0.763,328,0.846,329,0.776,330,0.846,331,0.776,332,0.846,333,0.776,334,0.846,335,0.776,336,0.846,337,0.776,338,0.831,339,0.846,340,0.776,341,0.831,342,0.846,343,0.002,344,0.003,345,0.002,361,1.611,378,0.645,384,0.891,389,1.665,459,2.456,460,0.957,461,1.706,462,2.637,465,1.41,482,1.813,501,2.275,508,2.54,521,2.243,545,4.272,551,3.92,552,3.113,554,3.742,556,2.769,558,5.191,559,4.264,560,1.741,561,4.264,562,4.264,573,3.664,574,4.264,581,2.973,582,2.968,606,5.397,608,1.963,609,1.822,633,1.607,657,2.956,663,1.706,666,3.013,667,2.046,673,2.581,693,3.82,695,3.529,757,2.476,784,2.046,965,3.88,1013,3.92,1014,3.288,1015,3.92,1016,3.92,1017,3.664,1019,3.092,1021,2.704,1022,4.264,1024,5.071,1025,3.92,1029,4.439,1030,3.529,1031,4.529,1034,3.292,1038,4.121,1040,3.92,1041,4.264,1042,2.704,1047,2.756,1048,3.664,1050,2.467,1051,4.264,1053,2.797,1067,3.684,1068,3.107,1071,3.458,1073,3.288,1078,1.706,1080,2.778,1082,2.046,1090,2.778,1091,4.264,1093,2.778,1119,2.141,1120,2.141,1123,4.264,1152,4.489,1707,3.664,1733,2.253,2685,4.264,3600,2.619,3748,2.141,4117,6.31,4171,7.524,4172,2.778,4173,6.536,4174,5.826,4175,4.787,4176,3.118,4177,3.118,4178,3.118,4179,3.118,4180,3.118,4181,6.536,4182,3.118,4183,3.118,4184,4.264,4185,3.118,4186,3.118,4187,3.118,4188,3.118,4189,4.787,4190,3.118,4191,3.118,4192,4.787,4193,3.118,4194,3.118,4195,3.118,4196,2.386,4197,3.118,4198,2.778,4199,3.118,4200,3.118,4201,3.118,4202,3.118,4203,3.118,4204,3.118,4205,3.118,4206,3.118]],["title/components/ResourceListPopComponent.html",[0,0.292,302,1.278]],["body/components/ResourceListPopComponent.html",[0,0.341,1,0.8,2,0.889,3,0.167,4,0.172,5,0.643,7,1.312,8,0.828,10,0.131,17,1.184,20,1.91,21,0.773,23,2.657,24,0.711,26,0.007,32,1.243,33,2.178,34,1.865,37,1.225,39,0.336,40,0.59,41,1.785,42,1.399,45,1.073,46,1.76,52,1.335,54,0.762,56,3.05,65,1.204,68,0.837,69,1.175,70,1.211,72,1.099,78,2.493,79,2.493,84,0.831,87,1.91,88,0.748,89,1.118,90,1.569,100,1.041,101,1.037,102,0.739,116,2.493,119,4.657,121,0.984,123,4.011,124,1.248,127,1.895,129,0.787,143,2.421,152,0.285,153,1.429,154,0.277,156,0.988,167,0.116,168,0.321,186,2.424,198,0.591,199,1.289,200,0.654,202,1.755,203,0.857,204,0.857,205,0.773,206,1.785,207,0.773,208,0.814,209,1.532,210,0.8,211,0.814,212,2.112,213,0.8,214,1.344,215,1.785,216,0.814,217,1.682,218,2.178,219,0.814,220,0.814,221,0.857,222,0.8,223,1.312,224,0.814,225,0.857,226,0.8,227,0.857,228,0.787,229,0.773,230,1.607,231,1.594,232,0.787,233,0.8,234,0.8,235,0.787,236,0.857,237,0.814,238,0.814,239,1.924,240,0.814,241,0.8,242,0.814,243,0.814,244,0.814,245,0.8,246,0.857,247,0.787,248,0.814,249,0.857,250,0.8,251,0.857,252,0.8,253,0.8,254,1.317,255,0.857,256,0.8,257,0.857,258,0.787,259,0.8,260,0.857,261,0.8,262,0.857,263,0.735,264,0.857,265,0.8,266,1.39,267,0.857,268,0.787,269,0.857,270,0.8,271,0.857,272,0.773,273,0.857,274,0.8,275,0.787,276,0.8,277,0.76,278,0.857,279,0.8,280,0.857,281,0.857,282,0.8,283,0.857,284,0.8,285,0.857,286,0.773,287,0.857,288,0.787,289,0.8,290,0.857,291,0.8,292,0.828,293,0.857,294,2.264,295,0.8,296,1.962,297,0.8,298,0.814,299,0.711,300,0.814,301,0.814,302,1.667,303,0.814,304,0.814,305,1.695,306,0.857,307,0.787,308,0.8,309,0.857,310,0.8,311,0.828,312,0.8,313,0.857,314,0.8,315,0.857,316,0.814,317,0.8,318,0.8,319,0.857,320,0.8,321,0.857,322,0.8,323,0.857,324,0.8,325,0.76,326,0.748,327,0.773,328,0.857,329,0.787,330,0.857,331,0.787,332,0.857,333,0.787,334,0.857,335,0.787,336,0.857,337,0.787,338,0.842,339,0.857,340,0.787,341,0.842,342,0.857,343,0.002,344,0.003,345,0.002,378,1,379,3.765,383,2.793,384,0.903,389,1.679,396,3.971,400,1.725,416,2.17,435,4.298,460,0.967,482,1.832,504,1.91,521,1.771,531,1.859,544,4.652,554,3.118,556,2.793,647,2.93,745,2.815,784,2.074,785,2.074,786,1.584,902,3.987,919,2.272,921,1.914,945,1.847,954,3.322,965,3.722,1003,2.826,1029,4.466,1047,2.039,1053,1.847,1067,4.12,1111,3.393,1119,2.17,1120,2.17,1171,3.699,1185,3.799,1305,1.542,1509,3.702,1511,3.322,1524,3.118,1525,2.17,1533,2.283,1670,2.419,1671,3.702,1672,4.812,1673,4.91,1674,3.856,1675,3.494,1677,3.494,1678,2.793,1679,3.494,1680,3.322,1681,4.245,1683,2.815,1684,2.815,1685,2.815,1686,2.588,1687,2.419,1688,2.17,1689,2.419,1690,1.847,1691,2.283,1692,2.419,1693,2.283,1694,2.17,1695,2.419,1696,2.815,1697,2.419,1698,3.961,1699,4.035,1701,2.283,1702,2.419,1703,2.074,1707,3.702,1709,4.309,1710,2.419,1711,3.494,1712,2.283,1713,2.419,1714,1.729,1715,1.989,1716,2.283,1717,2.283,1718,2.419,1719,2.567,1720,2.283,1721,2.419,1722,2.815,1723,2.588,1725,2.815,1726,4.309,1727,2.588,1728,2.419,1729,2.283,1730,2.283,1731,2.419,1732,2.419,1734,2.588,1735,2.419,1738,2.588,1739,2.283,1740,2.419,1741,2.815,2495,2.815,2496,4.309,4117,6.245,4196,6.959,4198,2.815,4207,5.875,4208,3.16,4209,3.16,4210,3.16,4211,3.16,4212,2.588,4213,3.16]],["title/modules/ResourceModule.html",[346,1.155,1206,3.466]],["body/modules/ResourceModule.html",[3,0.274,4,0.282,10,0.214,25,2.559,26,0.007,152,0.371,154,0.454,155,2.089,156,1.618,167,0.189,168,0.222,198,0.968,208,2.451,217,1.183,295,2.41,296,2.091,297,2.41,298,2.451,299,1.551,300,2.451,301,2.478,302,2.41,303,2.451,304,2.451,343,0.003,344,0.005,345,0.003,346,1.185,348,2.045,349,1.961,350,3.194,351,2.135,352,3.125,358,5.376,359,2.906,360,2.002,361,1.743,363,3.894,364,2.32,365,2.411,544,4.996,608,3.26,609,3.026,698,3.276,699,2.342,702,4.734,785,3.398,786,2.596,1082,5.084,1206,6.908,1207,6.245,1227,3.741,1229,3.963,1235,4.241,1237,6.14,1752,5.168,1786,3.741,2125,3.963,2126,3.741,2127,3.398,4118,4.241,4171,4.241,4196,5.929,4214,4.613,4215,4.613,4216,5.178,4217,4.613,4218,4.613,4219,5.178,4220,4.613,4221,5.178,4222,4.613,4223,4.613]],["title/injectables/ResourceService.html",[662,1.494,1752,2.949]],["body/injectables/ResourceService.html",[0,0.302,3,0.184,4,0.19,10,0.144,12,0.401,26,0.007,32,1.353,39,0.37,40,0.761,45,1.548,46,1.477,48,1.462,52,2.043,54,0.82,68,0.822,69,1.823,70,1.108,72,1.293,73,1.436,83,3.761,84,1.382,88,2.22,89,1.287,98,2.559,100,1.241,101,1.013,102,0.881,121,0.685,131,1.089,133,3.133,142,2.147,143,1.05,152,0.323,154,0.305,166,1.206,167,0.19,168,0.15,183,1.031,188,1.651,193,1.968,209,1.926,217,1.07,296,2.17,299,1.862,343,0.002,344,0.003,345,0.002,369,0.945,370,2.763,374,1.699,378,1.431,384,0.995,389,2.116,391,2.941,400,1.812,452,3.924,459,2.916,460,0.697,461,1.906,462,2.79,465,1.575,485,2.609,488,1.013,498,4.539,504,1.375,516,3.924,544,4.182,548,4.565,550,4.367,554,4.796,556,3.826,582,2.883,583,3.575,586,2.674,595,3.01,608,2.193,611,2.666,652,3.277,662,1.541,664,4.05,665,1.746,672,1.436,715,1.614,718,2.035,721,2.392,761,3.959,780,4.272,784,2.286,786,1.746,807,4.091,819,3.277,820,3.575,827,2.286,915,4.858,919,2.013,939,1.795,945,3.042,972,3.784,997,3.611,1021,2.941,1047,2.916,1057,2.853,1075,4.091,1154,2.474,1158,3.671,1180,2.11,1281,1.968,1317,2.392,1460,4.19,1649,2.853,1714,2.848,1745,2.54,1746,3.761,1747,3.761,1748,3.042,1749,2.54,1750,3.575,1751,3.575,1752,3.643,1753,4.264,1754,4.638,1755,4.638,1756,4.539,1758,4.264,1760,3.776,1761,4.264,1765,3.042,1770,4.264,1771,4.264,1773,3.154,1774,3.643,1778,4.264,1779,3.761,1781,5.348,1796,3.154,1808,5.105,1809,2.853,1810,2.853,1811,2.853,1816,4.264,1818,2.516,1822,2.853,1823,2.853,1824,2.853,1825,2.853,1826,2.853,1827,6.063,1828,2.286,1829,2.392,1830,2.853,1904,2.666,2015,2.666,2018,3.984,3602,2.853,4117,6.083,4212,2.853,4224,2.853,4225,5.206,4226,5.206,4227,3.483,4228,6.162,4229,6.162,4230,3.483,4231,5.553,4232,3.483,4233,4.638,4234,3.483,4235,3.483,4236,4.638,4237,3.483,4238,4.638,4239,4.638,4240,4.638,4241,3.483,4242,4.638,4243,4.638,4244,3.483,4245,3.483,4246,3.103,4247,3.103,4248,3.103,4249,3.103,4250,3.103,4251,3.103,4252,4.264,4253,3.103,4254,6.162,4255,3.103,4256,3.103,4257,3.103,4258,3.103,4259,3.103,4260,3.103,4261,3.103,4262,3.103,4263,3.103,4264,3.103,4265,3.103,4266,3.103,4267,3.103,4268,4.638,4269,5.553,4270,3.103,4271,4.638,4272,3.103,4273,3.103]],["title/interfaces/SdkField.html",[369,1.369,4274,4.133]],["body/interfaces/SdkField.html",[3,0.455,4,0.314,10,0.238,12,1.066,26,0.007,32,1.409,39,0.612,40,0.901,45,1.529,48,2.797,68,0.886,69,1.957,72,1.381,121,1.198,167,0.211,230,1.478,343,0.004,344,0.005,345,0.004,369,1.562,371,2.484,373,2.484,376,3.673,378,2.024,389,2.646,447,2.968,516,4.65,560,2.095,621,4.312,732,3.365,761,3.518,918,6.44,1050,3.808,1156,3.808,1158,3.92,1749,3.604,1774,5.028,1796,4.475,1839,6.581,1873,5.731,1893,5.337,1918,5.073,1922,5.32,1928,4.65,3598,3.955,3620,5.13,3635,5.13,3696,7.665,3697,7.665,3748,5.073,4274,6.05,4275,5.13,4276,5.13,4277,5.758,4278,7.387,4279,7.387,4280,7.387,4281,7.387,4282,5.654,4283,6.05]],["title/modules/SdkModule.html",[346,1.155,1207,3.312]],["body/modules/SdkModule.html",[3,0.38,4,0.393,10,0.297,25,2.975,26,0.007,152,0.344,154,0.631,167,0.263,168,0.309,198,1.346,343,0.005,344,0.006,345,0.005,346,1.647,348,2.843,349,2.727,350,3.494,351,2.968,352,3.419,359,3.573,360,2.784,361,2.423,363,4.067,364,2.423,365,2.964,462,3.877,1207,6.307,2125,5.51,2126,5.201,2127,4.724,4284,6.413,4285,6.413,4286,7.199,4287,7.199]],["title/injectables/SdkService.html",[462,2.036,662,1.494]],["body/injectables/SdkService.html",[3,0.321,4,0.182,10,0.138,12,0.384,25,1.664,26,0.007,27,2.987,32,1.227,39,0.354,40,0.615,44,4.573,45,1.332,46,1.835,54,0.793,55,4.757,68,0.795,69,1.453,70,1.182,72,0.942,83,3.639,84,1.402,85,3.592,86,3.459,87,2.672,88,1.601,89,1.293,90,0.737,100,1.164,101,0.949,102,0.924,117,2.809,121,1.074,124,1.316,133,3.437,136,2.73,138,3.135,152,0.319,154,0.292,167,0.122,168,0.143,175,3.855,188,1.593,191,2.551,209,2.241,214,1.152,343,0.002,344,0.003,345,0.002,374,2.962,378,1.042,387,4.4,400,2.002,427,3.051,450,2.73,453,4.386,459,2.124,460,0.667,462,2.729,466,2.73,471,3.051,486,5.36,488,1.968,501,2.394,502,2.278,506,3.305,524,2.188,531,2.002,534,3.459,556,3.216,560,2.461,571,3.301,581,2.124,595,1.832,648,5.141,650,1.948,661,2.278,662,1.491,664,3.975,665,1.671,673,2.397,695,3.051,696,2.846,715,1.545,717,4.125,718,4.464,719,3.305,720,6.027,721,6.583,722,4.125,723,3.171,724,5.56,725,4.125,726,4.125,727,5.178,728,4.125,729,4.487,730,3.639,731,5.541,732,2.943,733,4.487,734,4.487,735,4.487,737,4.125,740,2.97,747,3.171,748,4.487,752,3.855,753,4.487,761,1.438,763,2.756,765,3.051,783,7.276,784,2.188,787,2.098,793,4.972,805,2.97,833,2.098,853,5.523,866,1.948,972,1.824,995,4.487,1047,2.124,1290,2.408,1311,3.639,1329,2.756,1528,3.639,1618,4.17,1634,2.098,1976,4.647,2366,2.97,2547,2.846,2989,4.125,3084,3.855,3129,3.855,3289,4.972,3290,2.73,3604,5.178,3716,4.125,3795,4.125,4016,2.97,4288,2.97,4289,5.037,4290,5.037,4291,5.037,4292,5.037,4293,5.037,4294,6.071,4295,5.409,4296,5.409,4297,6.071,4298,8.167,4299,5.037,4300,5.037,4301,6.071,4302,5.037,4303,3.333,4304,5.037,4305,5.037,4306,3.333,4307,6.071,4308,5.037,4309,3.333,4310,5.037,4311,8.359,4312,5.037,4313,3.333,4314,7.639,4315,5.037,4316,3.333,4317,5.037,4318,3.333,4319,3.333,4320,3.333,4321,3.333,4322,4.487,4323,3.333,4324,5.409,4325,3.333,4326,3.333,4327,3.333,4328,5.037,4329,3.333,4330,4.487,4331,3.333,4332,5.037,4333,5.037,4334,3.333,4335,3.333,4336,3.333,4337,3.333,4338,3.333,4339,3.333,4340,3.333,4341,3.333,4342,3.333,4343,3.333,4344,6.071,4345,3.333,4346,3.333,4347,5.037,4348,3.333,4349,3.333,4350,3.333,4351,6.071,4352,3.333,4353,3.333,4354,3.333,4355,3.333,4356,3.333,4357,3.333,4358,5.037,4359,3.333,4360,3.333,4361,3.333,4362,3.333,4363,3.333,4364,5.037,4365,3.333,4366,3.333,4367,3.333,4368,3.333,4369,3.333,4370,3.333,4371,6.765,4372,3.333,4373,5.037,4374,3.333,4375,3.333,4376,3.333,4377,3.333,4378,5.037,4379,3.333]],["title/modules/SelectModule.html",[346,1.155,4380,3.646]],["body/modules/SelectModule.html",[3,0.328,4,0.338,10,0.256,25,2.558,26,0.007,27,3.728,28,4.62,29,4.62,30,4.62,31,4.979,32,1.408,152,0.359,154,0.544,166,1.2,167,0.283,168,0.266,198,1.16,205,2.39,307,2.478,343,0.004,344,0.005,345,0.004,346,1.42,348,2.45,349,2.35,350,3.481,351,2.559,352,3.406,359,3.265,360,2.399,361,2.089,364,2.607,365,2.17,698,3.681,699,2.806,704,4.749,1216,7.522,1217,4.749,1218,4.483,1229,4.749,2175,6.09,2183,5.082,3065,6.706,4380,7.129,4381,5.528,4382,5.528,4383,5.528,4384,6.205,4385,5.528,4386,5.528,4387,5.528,4388,6.205,4389,5.528,4390,6.205]],["title/components/SignupComponent.html",[0,0.292,308,1.278]],["body/components/SignupComponent.html",[0,0.369,1,0.913,2,0.982,3,0.19,4,0.197,5,0.733,7,0.978,8,0.945,9,1.52,10,0.149,12,0.415,17,1.307,20,2.109,21,0.882,24,0.811,26,0.007,32,0.558,33,2.189,34,1.874,37,1.352,39,0.383,40,0.652,42,1.315,45,1.037,46,1.496,48,1.5,54,0.841,65,1.33,68,0.789,70,1.162,72,1.19,84,0.619,85,2.682,89,0.798,90,1.182,100,0.784,101,1.022,102,0.556,119,4.532,121,0.988,124,2.109,127,1.352,129,0.897,131,1.669,142,2.623,143,2.371,152,0.287,153,1.63,154,0.316,156,1.127,166,0.697,167,0.132,168,0.155,198,0.674,199,1.424,200,0.746,201,1.52,202,1.875,203,0.978,204,0.978,205,0.882,206,1.908,207,0.882,208,0.929,209,1.83,210,0.913,211,0.929,212,2.208,213,0.913,214,1.456,215,1.908,216,0.929,217,1.351,218,2.267,219,0.929,220,0.929,221,0.978,222,0.913,223,1.449,224,0.929,225,0.978,226,0.913,227,0.978,228,0.897,229,0.882,230,1.672,231,1.725,232,0.897,233,0.913,234,0.913,235,0.897,236,0.978,237,0.929,238,0.929,239,2.037,240,0.929,241,0.913,242,0.929,243,0.929,244,0.929,245,0.913,246,0.978,247,0.897,248,0.929,249,0.978,250,0.913,251,0.978,252,0.913,253,0.913,254,1.068,255,0.978,256,0.913,257,0.978,258,0.897,259,0.913,260,0.978,261,0.913,262,0.978,263,1.243,264,0.978,265,0.913,266,1.505,267,0.978,268,0.897,269,0.978,270,0.913,271,0.978,272,2.206,273,0.978,274,1.611,275,2.163,276,0.913,277,0.868,278,0.978,279,0.913,280,0.978,281,0.978,282,0.913,283,0.978,284,0.913,285,0.978,286,0.882,287,0.978,288,0.897,289,0.913,290,0.978,291,0.913,292,1.667,293,0.978,294,0.897,295,0.913,296,1.849,297,0.913,298,0.929,299,0.811,300,0.929,301,0.929,302,0.913,303,0.929,304,0.929,305,0.929,306,0.978,307,0.897,308,1.781,309,0.978,310,0.913,311,2.191,312,0.913,313,0.978,314,0.913,315,0.978,316,0.929,317,0.913,318,0.913,319,0.978,320,0.913,321,0.978,322,0.913,323,0.978,324,0.913,325,0.868,326,0.853,327,0.882,328,0.978,329,0.897,330,0.978,331,0.897,332,0.978,333,0.897,334,0.978,335,0.897,336,0.978,337,0.897,338,0.961,339,0.978,340,0.897,341,0.961,342,0.978,343,0.002,344,0.004,345,0.002,376,2.155,482,2.023,486,5.342,488,1.554,489,3.376,521,1.61,524,2.366,531,1.399,532,2.759,552,3.891,650,3.302,653,2.538,656,4.397,657,1.63,664,4.672,666,4.428,669,5.211,670,4.175,671,1.505,693,4.597,695,3.235,708,3.212,763,2.922,768,3.505,769,2.953,781,3.212,799,6.993,1019,3.376,1020,3.854,1034,3.017,1035,1.943,1036,1.394,1071,4.597,1074,3.626,1110,3.235,1111,2.753,1112,4.597,1117,2.269,1118,2.269,1155,1.286,1634,2.269,1719,2.835,1868,3.235,1911,4.869,2207,4.175,2222,5.211,3267,4.758,3268,4.374,3269,5.548,3270,6.152,3276,5.668,3277,5.668,3278,5.668,3280,3.212,3281,3.212,3284,5.211,3289,2.953,3290,2.953,3291,2.953,3292,3.212,3294,3.212,3296,3.212,3297,2.953,4391,3.212,4392,5.341,4393,5.341,4394,3.605,4395,3.605,4396,4.088,4397,3.605,4398,3.605,4399,3.605,4400,3.605,4401,3.605,4402,3.605,4403,3.605,4404,3.605,4405,3.605,4406,3.605,4407,3.605,4408,3.605,4409,3.605,4410,3.605,4411,3.605,4412,3.605,4413,3.605]],["title/components/SignupFormComponent.html",[0,0.292,310,1.278]],["body/components/SignupFormComponent.html",[0,0.416,1,0.822,2,0.908,3,0.172,4,0.177,5,0.66,7,0.88,8,0.851,9,1.369,10,0.134,12,0.374,17,1.208,20,1.949,21,0.795,22,2.637,24,0.73,26,0.007,32,1.033,33,2.18,34,1.866,37,1.25,39,0.345,40,0.602,42,1.343,45,1.422,46,1.438,48,2.33,51,1.433,54,0.777,57,3.554,65,1.229,68,0.726,69,0.649,70,1.201,72,0.923,88,1.414,89,1.174,90,1.477,100,0.877,101,1.013,102,0.622,119,4.906,121,1.147,127,1.25,129,0.808,131,2.872,142,2.752,143,1.488,147,1.967,152,0.274,154,0.284,155,1.31,166,0.628,167,0.119,168,0.139,188,0.877,198,0.607,199,1.316,200,0.672,201,1.369,202,1.779,203,0.88,204,0.88,205,0.795,206,1.81,207,0.795,208,0.836,209,1.553,210,0.822,211,0.836,212,2.132,213,0.822,214,1.367,215,1.81,216,0.836,217,1.299,218,2.197,219,0.836,220,0.836,221,0.88,222,0.822,223,1.339,224,0.836,225,0.88,226,0.822,227,0.88,228,0.808,229,0.795,230,1.62,231,1.62,232,0.808,233,0.822,234,0.822,235,0.808,236,0.88,237,0.836,238,0.836,239,1.947,240,0.836,241,0.822,242,0.836,243,0.836,244,0.836,245,0.822,246,0.88,247,0.808,248,0.836,249,0.88,250,0.822,251,0.88,252,0.822,253,0.822,254,0.988,255,0.88,256,0.822,257,0.88,258,0.808,259,0.822,260,0.88,261,0.822,262,0.88,263,1.149,264,0.88,265,0.822,266,1.414,267,0.88,268,0.808,269,0.88,270,0.822,271,0.88,272,0.795,273,0.88,274,2.383,275,2.24,276,0.822,277,0.781,278,0.88,279,0.822,280,0.88,281,0.88,282,0.822,283,0.88,284,0.822,285,0.88,286,0.795,287,0.88,288,0.808,289,0.822,290,0.88,291,0.822,292,1.981,293,0.88,294,0.808,295,0.822,296,1.792,297,0.822,298,0.836,299,1.111,300,0.836,301,0.836,302,0.822,303,0.836,304,0.836,305,0.836,306,0.88,307,0.808,308,0.822,309,0.88,310,1.69,311,2.174,312,0.822,313,0.88,314,0.822,315,0.88,316,0.836,317,0.822,318,0.822,319,0.88,320,0.822,321,0.88,322,0.822,323,0.88,324,0.822,325,0.781,326,0.768,327,0.795,328,0.88,329,0.808,330,0.88,331,0.808,332,0.88,333,0.808,334,0.88,335,0.808,336,0.88,337,0.808,338,0.865,339,0.88,340,0.808,341,0.865,342,0.88,343,0.002,344,0.003,345,0.002,378,0.672,390,3.027,482,1.87,489,3.17,498,2.885,501,2.839,531,1.294,546,3.24,552,2.637,566,1.673,581,2.519,620,3.441,650,2.924,656,2.914,661,1.468,747,3.761,768,3.24,799,6.635,890,1.31,919,2.776,1019,3.17,1035,1.796,1036,1.255,1047,2.519,1074,1.673,1115,2.346,1122,2.13,1152,4.584,1162,2.13,1163,1.834,1173,4.572,1227,2.346,1394,4.316,1450,2.346,1528,2.346,1596,2.346,1719,1.723,1868,2.991,1906,2.346,1922,2.885,2160,5.788,2216,4.043,2653,2.346,3115,2.13,3269,4.202,3298,2.659,3300,2.485,3301,2.659,3302,5.322,3303,4.398,3304,4.398,3305,5.946,3306,6.737,3307,7.003,3308,5.322,3309,4.398,3310,7.003,3311,5.946,3312,4.398,3313,4.398,3314,4.398,3315,4.398,3321,1.072,3322,2.892,3324,2.892,3326,5.467,3327,2.892,3329,2.892,3330,2.892,3331,2.892,3333,2.892,3338,2.892,3339,2.892,3341,4.572,3342,5.322,3343,5.322,3346,5.322,3347,2.892,3349,2.892,3350,2.892,3351,2.892,3352,2.485,3353,2.892,3358,2.892,3359,2.892,3360,2.659,3363,2.892,3364,2.892,3365,5.322,3366,2.892,3367,2.659,3368,2.892,3373,2.892,3374,2.892,3375,2.892,3376,2.892,3378,2.892,3379,2.892,3380,4.043,4396,3.778,4414,7.003,4415,6.438,4416,5.974,4417,4.937,4418,3.246,4419,4.937,4420,3.246,4421,3.246,4422,3.246,4423,3.246,4424,3.246,4425,3.246,4426,3.246,4427,3.246,4428,3.246,4429,3.246,4430,3.246,4431,4.937,4432,3.246,4433,3.246,4434,3.246,4435,3.246,4436,3.246,4437,3.246,4438,3.246,4439,3.246,4440,3.246,4441,3.246,4442,3.246,4443,3.246,4444,3.246]],["title/directives/SlotHostDirective.html",[200,1.044,340,1.256]],["body/directives/SlotHostDirective.html",[0,0.477,2,1.682,3,0.362,4,0.374,10,0.283,12,0.789,24,1.543,26,0.007,33,1.791,39,0.729,40,1.005,41,4.652,46,1.566,48,2.312,68,0.738,70,1.043,72,1.54,100,1.006,101,0.821,102,0.714,116,4.244,152,0.262,154,0.601,167,0.251,168,0.294,200,1.703,326,1.623,340,2.05,341,2.195,343,0.005,344,0.005,345,0.005,395,2.708,460,1.765,478,5.008,552,3.635,560,2.995,717,6.744,1068,3.913,1325,4.652,1524,4.37,1556,7.991,1605,6.744,4445,7.861,4446,6.109,4447,8.234,4448,6.857,4449,6.857,4450,8.234,4451,6.857]],["title/classes/Sorter.html",[168,0.217,4452,4.133]],["body/classes/Sorter.html",[3,0.261,4,0.269,10,0.204,12,0.768,26,0.007,32,1.033,39,0.803,40,0.814,45,1.233,52,2.235,54,1.275,68,0.726,69,1.814,70,0.958,72,0.923,84,0.847,88,2.11,89,1.21,100,0.979,101,0.799,102,0.928,121,0.649,152,0.188,166,1.462,167,0.296,168,0.286,183,2.239,188,1.666,343,0.005,344,0.004,345,0.003,378,1.75,428,2.884,429,3.951,447,4.495,452,3.107,472,1.726,495,3.198,504,2.986,560,1.795,569,3.541,586,3.756,649,2.788,661,3.419,673,2.986,757,3.62,761,2.878,830,6.442,863,6.712,890,1.991,894,4.789,906,3.107,907,4.042,975,4.397,984,4.397,1004,4.042,1053,2.884,1187,2.989,1194,5.465,1329,4.137,1518,4.397,1605,4.042,1627,5.786,1765,2.884,1829,4.583,1943,4.201,1944,3.777,1947,3.9,1956,3.239,1962,7.609,2162,4.042,2207,4.379,2282,5.465,2391,4.379,2690,3.777,2870,7.538,2879,7.302,2880,5.945,3931,5.945,4452,7.142,4453,4.042,4454,6.673,4455,6.673,4456,7.56,4457,6.673,4458,5.465,4459,5.465,4460,5.465,4461,4.935,4462,6.673,4463,4.935,4464,8.461,4465,6.673,4466,4.935,4467,6.476,4468,4.042,4469,4.935,4470,4.397,4471,4.935,4472,4.935,4473,4.935,4474,4.397,4475,4.397,4476,4.397,4477,4.935,4478,4.397,4479,4.397,4480,4.397,4481,6.673,4482,4.935,4483,4.935,4484,4.935,4485,4.935,4486,4.935,4487,6.673,4488,4.935,4489,8.099,4490,4.935,4491,4.935,4492,4.935,4493,4.935,4494,4.935,4495,4.935,4496,4.935,4497,4.935]],["title/interfaces/Symbol.html",[369,1.369,1035,1.836]],["body/interfaces/Symbol.html",[3,0.373,4,0.385,10,0.292,12,0.813,26,0.007,39,0.751,40,1.023,68,0.751,69,1.934,73,3.456,101,1.173,102,0.93,107,4.853,167,0.258,343,0.005,344,0.006,345,0.005,369,1.916,371,3.048,531,2.196,918,4.853,1035,3.517,1165,7.467,1340,6.415,1504,5.757,2358,6.865,2391,6.345,2392,6.056,4498,6.295,4499,7.467,4500,8.382,4501,8.382]],["title/modules/SymbolModule.html",[346,1.155,2176,3.312]],["body/modules/SymbolModule.html",[0,0.454,2,1.441,3,0.334,4,0.427,5,1.286,10,0.261,12,0.728,25,2.813,26,0.007,37,1.601,121,0.832,152,0.349,154,0.554,167,0.287,168,0.336,198,1.182,343,0.004,344,0.005,345,0.004,346,1.447,348,2.497,349,2.395,350,3.511,351,2.607,352,3.435,359,3.304,360,2.445,361,2.128,364,2.128,365,2.741,387,3.83,391,3.572,446,3.98,472,2.211,488,1.839,502,2.859,511,4.149,653,3.005,672,2.607,696,4.427,697,5.997,698,3.724,699,2.859,757,2.395,883,3.83,918,4.343,1035,2.85,1036,3.693,1154,3.005,1277,3.356,1999,4.149,2111,4.568,2176,6.318,2196,3.356,2392,4.568,2422,3.98,2566,4.149,3107,3.98,3126,5.178,3778,4.839,3966,5.178,4330,6.981,4502,5.633,4503,5.633,4504,5.633,4505,5.633,4506,7.072,4507,6.323,4508,7.003,4509,3.695,4510,6.152,4511,5.178,4512,5.178,4513,6.736,4514,5.633,4515,5.633,4516,5.633,4517,5.633,4518,5.633,4519,5.633,4520,5.633,4521,5.633,4522,5.633,4523,5.633,4524,6.418,4525,4.568,4526,5.633,4527,6.323]],["title/injectables/SymbolPipe.html",[662,1.494,4506,3.646]],["body/injectables/SymbolPipe.html",[3,0.458,4,0.359,10,0.272,12,0.757,17,1.61,26,0.007,39,0.699,54,1.264,68,0.589,69,1.851,70,0.834,88,1.9,89,0.983,100,0.965,101,1.127,102,0.685,152,0.331,154,0.576,167,0.241,168,0.282,188,1.427,199,1.754,343,0.004,344,0.005,345,0.004,460,1.316,560,2.921,662,2.377,672,2.713,715,3.049,732,4.693,747,5.055,761,2.838,1035,3.525,1036,3.578,1277,4.79,1283,5.27,1289,5.801,1999,5.27,2391,5.27,4283,5.389,4506,5.801,4513,5.801,4526,5.861,4528,5.861,4529,8.03,4530,8.03,4531,8.03,4532,6.579,4533,8.03,4534,5.861,4535,6.579]],["title/injectables/SymbolService.html",[662,1.494,1036,1.951]],["body/injectables/SymbolService.html",[3,0.224,4,0.232,9,1.792,10,0.176,12,0.489,26,0.007,39,0.742,40,0.734,45,1.396,46,1.663,54,0.947,68,0.838,69,1.93,70,1.176,72,1.125,84,0.73,87,3.287,88,2.069,89,1.306,90,1.68,100,1.283,101,1.147,102,0.91,107,5.217,121,1.17,135,3.948,138,2.912,152,0.29,154,0.372,166,1.351,167,0.155,168,0.182,183,1.258,188,1.425,201,1.792,343,0.003,344,0.004,345,0.003,460,1.397,488,1.75,531,2.49,534,2.918,662,1.781,715,1.969,763,4.784,779,4.928,863,6.797,866,3.516,972,2.325,997,4.176,1035,3.612,1036,2.326,1745,3.706,1829,4.132,1947,4.865,2003,6.221,2390,8.054,2391,3.948,2433,4.605,2438,5.36,3563,6.221,3605,6.767,3750,6.767,4508,4.605,4510,6.015,4513,6.653,4525,6.318,4534,3.786,4536,3.786,4537,6.016,4538,6.016,4539,4.249,4540,7.596,4541,4.249,4542,7.596,4543,8.325,4544,4.249,4545,7.596,4546,4.249,4547,4.249,4548,7.596,4549,4.249,4550,7.596,4551,4.249,4552,6.016,4553,4.249,4554,6.016,4555,4.249,4556,6.016,4557,6.016,4558,4.249,4559,4.249,4560,4.249,4561,4.249,4562,4.249,4563,4.249,4564,4.249,4565,4.249,4566,4.249,4567,6.016,4568,4.249,4569,4.249,4570,4.249,4571,4.249,4572,4.249,4573,8.017,4574,4.249,4575,4.249,4576,4.249,4577,4.249,4578,3.786,4579,4.249,4580,4.249,4581,4.249]],["title/components/TabComponent.html",[0,0.292,312,1.278]],["body/components/TabComponent.html",[0,0.394,1,1.025,2,1.069,3,0.214,4,0.221,5,0.824,7,1.098,8,1.061,10,0.167,12,0.466,21,0.991,24,0.911,26,0.007,32,1.052,33,2.197,34,1.883,37,1.472,39,0.43,40,0.709,42,1.472,46,1.106,54,0.916,65,1.447,68,0.774,69,1.487,70,1.131,84,0.998,88,1.376,89,0.868,90,1.286,100,0.594,101,1.033,102,0.422,121,0.765,123,3.559,127,1.472,129,1.008,142,2.397,143,2.544,152,0.222,154,0.355,167,0.148,168,0.174,198,0.757,199,1.55,200,0.838,202,1.981,203,1.098,204,1.098,205,0.991,206,2.016,207,0.991,208,1.043,209,0.942,210,1.025,211,1.043,212,2.289,213,1.025,214,1.556,215,2.016,216,1.043,217,1.407,218,2.342,219,1.043,220,1.043,221,1.098,222,1.025,223,1.577,224,1.043,225,1.098,226,1.025,227,1.098,228,1.008,229,0.991,230,1.727,231,1.845,232,1.008,233,1.025,234,1.025,235,1.008,236,1.098,237,1.043,238,1.043,239,2.135,240,1.043,241,1.025,242,1.043,243,1.043,244,1.043,245,1.025,246,1.098,247,1.008,248,1.043,249,1.098,250,1.025,251,1.098,252,1.025,253,1.025,254,1.163,255,1.098,256,1.025,257,1.098,258,1.008,259,1.025,260,1.098,261,1.025,262,1.098,263,0.942,264,1.098,265,1.025,266,1.609,267,1.098,268,1.008,269,1.098,270,1.025,271,1.098,272,0.991,273,1.098,274,1.025,275,1.008,276,1.025,277,0.975,278,1.098,279,1.025,280,1.098,281,1.098,282,1.025,283,1.098,284,1.025,285,1.098,286,0.991,287,1.098,288,1.008,289,1.025,290,1.098,291,1.025,292,1.061,293,1.098,294,1.008,295,1.025,296,1.91,297,1.025,298,1.043,299,0.911,300,1.043,301,1.043,302,1.025,303,1.043,304,1.043,305,1.043,306,1.098,307,1.008,308,1.025,309,1.098,310,1.025,311,1.061,312,1.882,313,1.098,314,2.26,315,1.098,316,1.043,317,1.025,318,1.025,319,1.098,320,1.025,321,1.098,322,1.025,323,1.098,324,1.025,325,0.975,326,0.958,327,0.991,328,1.098,329,1.008,330,1.098,331,1.008,332,1.098,333,1.008,334,1.098,335,1.008,336,1.098,337,1.008,338,1.08,339,1.098,340,1.008,341,1.08,342,1.098,343,0.003,344,0.004,345,0.003,378,1.203,390,3.319,395,1.599,400,1.061,460,1.36,482,2.202,521,2.544,531,1.948,545,4.768,647,5.326,921,3.522,964,5.313,1030,5.113,1047,3.134,1068,2.763,1157,3.815,1185,2.836,1251,4.2,1439,4.762,1462,4.45,1514,3.608,1516,5.37,1715,3.66,2739,6.622,3268,6.088,4582,3.608,4583,7.77,4584,5.18,4585,5.814,4586,7.433,4587,7.871,4588,5.814,4589,4.05,4590,5.814,4591,4.05,4592,4.05,4593,4.05,4594,4.05,4595,4.05,4596,4.05,4597,5.814,4598,4.05,4599,3.608,4600,4.05,4601,4.05]],["title/components/TabsComponent.html",[0,0.292,314,1.278]],["body/components/TabsComponent.html",[0,0.449,1,0.987,2,1.04,3,0.206,4,0.213,5,0.793,7,1.058,8,1.022,9,1.644,10,0.161,12,0.449,17,1.385,21,0.954,24,0.877,26,0.007,32,0.603,33,2.195,34,1.88,37,1.433,39,0.414,40,0.69,42,1.245,45,0.636,54,0.891,65,1.408,68,0.695,69,1.332,70,1.057,73,2.333,84,0.67,86,3.885,88,1.728,89,1.091,90,1.616,100,0.977,101,1.059,102,0.693,121,0.876,124,1.54,127,1.433,129,0.971,152,0.254,154,0.342,166,1.094,167,0.143,168,0.167,183,1.155,188,0.693,198,0.729,199,1.508,200,0.807,201,1.644,202,1.947,203,1.058,204,1.058,205,0.954,206,1.981,207,0.954,208,1.004,209,0.907,210,0.987,211,1.004,212,2.263,213,0.987,214,1.523,215,1.981,216,1.004,217,1.389,218,2.318,219,1.004,220,1.004,221,1.058,222,0.987,223,1.534,224,1.004,225,1.058,226,0.987,227,1.058,228,0.971,229,0.954,230,1.71,231,1.806,232,0.971,233,0.987,234,0.987,235,0.971,236,1.058,237,1.004,238,1.004,239,2.103,240,1.004,241,0.987,242,1.004,243,1.004,244,1.004,245,0.987,246,1.058,247,0.971,248,1.004,249,1.058,250,0.987,251,1.058,252,0.987,253,0.987,254,1.461,255,1.058,256,0.987,257,1.058,258,0.971,259,0.987,260,1.058,261,0.987,262,1.058,263,0.907,264,1.058,265,0.987,266,1.575,267,1.058,268,0.971,269,1.058,270,0.987,271,1.058,272,0.954,273,1.058,274,0.987,275,0.971,276,0.987,277,0.938,278,1.058,279,0.987,280,1.058,281,1.058,282,0.987,283,1.058,284,0.987,285,1.058,286,0.954,287,1.058,288,0.971,289,0.987,290,1.058,291,0.987,292,1.022,293,1.058,294,0.971,295,0.987,296,1.891,297,0.987,298,1.004,299,0.877,300,1.004,301,1.004,302,0.987,303,1.004,304,1.004,305,1.004,306,1.058,307,0.971,308,0.987,309,1.058,310,0.987,311,1.022,312,2.27,313,1.058,314,2.048,315,1.058,316,1.004,317,0.987,318,0.987,319,1.058,320,0.987,321,1.058,322,0.987,323,1.058,324,0.987,325,0.938,326,0.923,327,0.954,328,1.058,329,0.971,330,1.058,331,0.971,332,1.058,333,0.971,334,1.058,335,0.971,336,1.058,337,0.971,338,1.039,339,1.058,340,0.971,341,1.039,342,1.058,343,0.003,344,0.004,345,0.003,400,1.482,445,3.095,460,0.78,472,1.364,488,1.134,531,1.482,545,4.697,606,5.59,633,2.01,653,2.689,663,2.134,672,1.608,673,1.54,718,3.306,919,1.508,972,2.134,1024,4.899,1030,4.697,1157,4.793,1167,3.996,1184,3.427,1342,2.01,1439,4.633,1565,2.984,1688,2.678,1760,3.427,1904,4.33,2473,3.194,2744,3.194,3115,3.713,3502,3.474,3579,3.474,3972,5.931,4151,3.194,4583,7.135,4602,3.474,4603,5.657,4604,5.657,4605,6.657,4606,7.761,4607,5.657,4608,7.303,4609,7.303,4610,5.657,4611,5.657,4612,5.657,4613,5.04,4614,3.899,4615,3.899,4616,5.657,4617,7.303,4618,3.899,4619,5.657,4620,3.899,4621,5.657,4622,3.899,4623,3.899,4624,5.657,4625,3.474,4626,3.899,4627,3.899,4628,3.899,4629,3.899,4630,3.899,4631,3.899,4632,3.899,4633,3.899,4634,3.899,4635,3.899,4636,3.899,4637,3.899,4638,3.899,4639,3.899,4640,3.899,4641,3.899,4642,3.899,4643,5.657,4644,3.899,4645,3.899,4646,5.657]],["title/components/TinymceComponent.html",[0,0.292,318,1.278]],["body/components/TinymceComponent.html",[0,0.328,1,0.753,2,0.848,3,0.157,4,0.162,5,0.605,6,1.627,7,0.807,8,0.779,9,1.254,10,0.123,12,0.342,13,2.697,15,4.029,17,1.13,18,3.561,21,0.728,24,0.669,25,1.525,26,0.007,27,2.038,28,3.095,29,2.525,30,3.095,31,2.525,32,0.986,33,2.172,34,1.858,35,3.029,37,1.169,39,0.316,40,0.563,41,3.899,42,1.425,43,3.561,44,3.561,45,1.495,46,1.389,47,2.313,54,0.727,55,4.18,58,3.029,59,4.013,62,2.796,64,3.862,65,1.149,68,0.754,69,1.461,70,1.162,72,0.863,84,1.185,85,2.688,89,1.176,90,1.742,95,2.905,98,2.087,100,0.935,101,1.007,102,0.664,103,2.905,113,2.905,115,3.17,116,2.379,117,1.785,121,1.139,123,2.558,124,1.174,125,3.532,127,1.169,129,0.74,133,2.572,135,3.029,136,3.78,138,2.23,143,2.297,152,0.35,153,1.345,154,0.26,155,1.2,166,0.575,167,0.109,168,0.128,173,5.981,175,2.276,181,3.029,184,2.436,186,1.491,188,0.82,191,2.276,193,1.68,194,1.872,198,0.556,199,1.23,200,0.615,201,1.254,202,1.699,203,0.807,204,0.807,205,0.728,206,1.729,207,0.728,208,0.766,209,0.692,210,0.753,211,0.766,212,2.066,213,0.753,214,1.294,215,1.729,216,0.766,217,1.254,218,2.136,219,0.766,220,0.766,221,0.807,222,0.753,223,1.252,224,0.766,225,0.807,226,0.753,227,0.807,228,0.74,229,0.728,230,1.575,231,1.534,232,0.74,233,0.753,234,0.753,235,0.74,236,0.807,237,0.766,238,0.766,239,1.872,240,0.766,241,0.753,242,0.766,243,0.766,244,0.766,245,0.753,246,0.807,247,0.74,248,0.766,249,0.807,250,0.753,251,0.807,252,0.753,253,1.432,254,0.923,255,0.807,256,0.753,257,0.807,258,0.74,259,0.753,260,0.807,261,0.753,262,0.807,263,0.692,264,0.807,265,0.753,266,1.338,267,0.807,268,0.74,269,0.807,270,0.753,271,0.807,272,0.728,273,0.807,274,0.753,275,0.74,276,0.753,277,0.716,278,0.807,279,0.753,280,0.807,281,0.807,282,0.753,283,0.807,284,0.753,285,0.807,286,0.728,287,0.807,288,0.74,289,0.753,290,0.807,291,0.753,292,0.779,293,0.807,294,0.74,295,0.753,296,1.742,297,0.753,298,0.766,299,1.038,300,0.766,301,0.766,302,0.753,303,0.766,304,0.766,305,0.766,306,0.807,307,0.74,308,0.753,309,0.807,310,0.753,311,0.779,312,0.753,313,0.807,314,0.753,315,0.807,316,0.766,317,0.753,318,1.849,319,0.807,320,0.753,321,0.807,322,0.753,323,0.807,324,0.753,325,0.716,326,0.704,327,0.728,328,0.807,329,0.74,330,0.807,331,0.74,332,0.807,333,0.74,334,0.807,335,0.74,336,0.807,337,0.74,338,1.23,339,0.807,340,0.74,341,0.793,342,0.807,343,0.002,344,0.003,345,0.002,400,1.482,437,1.802,460,0.595,482,1.748,495,1.823,502,2.087,521,2.297,550,2.621,595,1.679,598,3.78,648,2.905,664,4.169,665,1.491,666,2.905,672,1.226,747,4.013,827,1.952,854,7.205,884,2.608,921,2.796,1003,1.738,1047,1.946,1050,3.557,1068,2.194,1075,3.029,1155,1.646,1162,3.029,1167,3.095,1192,3.532,1316,2.436,1317,2.043,1353,2.649,1394,3.335,1479,4.329,1596,3.335,1850,2.649,2098,3.195,2161,3.532,2235,3.532,2314,2.436,2315,2.649,2448,5.679,2558,5.652,2559,4.632,2609,2.649,2760,3.78,2761,3.78,2829,2.436,3128,2.436,3227,3.78,3394,6.148,3397,5.679,3405,4.112,3423,2.436,3767,3.17,3795,3.78,3903,3.335,4509,4.267,4606,4.112,4647,2.649,4648,5.203,4649,4.615,4650,5.656,4651,4.615,4652,4.615,4653,7.302,4654,2.974,4655,6.375,4656,4.615,4657,4.112,4658,4.615,4659,3.532,4660,2.974,4661,4.615,4662,2.974,4663,4.615,4664,4.615,4665,2.974,4666,4.112,4667,2.974,4668,2.974,4669,4.615,4670,4.615,4671,4.615,4672,4.615,4673,5.656,4674,2.974,4675,2.974,4676,2.974,4677,2.974,4678,2.974,4679,2.974,4680,2.974,4681,2.974,4682,2.974,4683,2.974,4684,2.974,4685,2.974,4686,2.974,4687,2.974,4688,2.974,4689,2.974,4690,2.974,4691,2.974,4692,2.974,4693,2.974,4694,2.974,4695,2.974,4696,2.974,4697,2.974,4698,2.974,4699,2.974,4700,2.974,4701,2.974,4702,4.112,4703,2.974,4704,2.974,4705,2.974,4706,2.974,4707,2.974,4708,2.974,4709,2.974,4710,4.615,4711,2.974,4712,2.974,4713,2.974,4714,2.974,4715,2.974,4716,2.974,4717,2.974,4718,4.615,4719,2.974,4720,2.974,4721,2.974,4722,2.974,4723,2.974,4724,2.974,4725,2.974,4726,2.974]],["title/modules/TinymceModule.html",[346,1.155,4727,3.646]],["body/modules/TinymceModule.html",[3,0.378,4,0.39,10,0.296,25,2.362,26,0.007,152,0.322,154,0.626,166,1.383,167,0.309,168,0.307,198,1.337,318,2.529,343,0.005,344,0.006,345,0.005,346,1.636,348,2.824,349,2.708,350,3.703,351,2.948,352,3.624,359,3.559,360,2.765,361,2.407,363,4.769,365,2.501,4727,7.002,4728,6.371,4729,6.371,4730,6.371,4731,6.371,4732,7.151,4733,6.371,4734,7.151]],["title/components/ToggleComponent.html",[0,0.292,320,1.278]],["body/components/ToggleComponent.html",[0,0.459,1,1.044,2,1.082,3,0.218,4,0.225,5,1.397,7,1.118,8,1.08,10,0.17,12,0.474,17,1.441,18,4.324,21,1.009,24,0.927,25,1.945,26,0.007,27,2.599,28,3.758,29,3.221,30,3.758,31,3.221,32,0.911,33,2.199,34,1.884,37,1.491,39,0.438,40,0.718,42,1.482,43,4.324,45,1.493,54,0.927,58,3.864,59,4.717,62,3.566,65,1.466,68,0.615,69,1.178,70,1.075,72,1.101,89,1.119,90,1.658,95,3.706,97,4.506,98,1.963,99,4.254,100,0.864,101,1.057,102,0.613,103,3.706,113,3.706,115,4.044,121,1.116,127,1.491,129,1.026,138,2.059,152,0.225,154,0.361,155,1.663,167,0.151,168,0.177,181,4.507,193,2.329,194,2.595,198,0.771,199,1.569,200,0.853,202,1.997,203,1.118,204,1.118,205,1.009,206,2.032,207,1.009,208,1.062,209,0.959,210,1.044,211,1.062,212,2.301,213,1.044,214,1.571,215,2.032,216,1.062,217,1.415,218,2.353,219,1.062,220,1.062,221,1.118,222,1.044,223,1.597,224,1.062,225,1.118,226,1.044,227,1.118,228,1.026,229,1.009,230,1.735,231,1.863,232,1.026,233,1.044,234,1.044,235,1.026,236,1.118,237,1.062,238,1.062,239,2.149,240,1.062,241,1.044,242,1.062,243,1.062,244,1.062,245,1.044,246,1.118,247,1.026,248,1.062,249,1.118,250,1.044,251,1.118,252,1.044,253,1.044,254,1.178,255,1.118,256,1.044,257,1.118,258,1.026,259,1.044,260,1.118,261,1.044,262,1.118,263,0.959,264,1.118,265,1.044,266,1.625,267,1.118,268,1.026,269,1.118,270,1.044,271,1.118,272,1.009,273,1.118,274,1.044,275,1.026,276,1.044,277,0.992,278,1.118,279,1.044,280,1.118,281,1.118,282,1.044,283,1.118,284,1.044,285,1.118,286,1.009,287,1.118,288,1.026,289,1.044,290,1.118,291,1.044,292,1.08,293,1.118,294,1.026,295,1.044,296,1.919,297,1.044,298,1.062,299,0.927,300,1.062,301,1.062,302,1.044,303,1.062,304,1.062,305,1.062,306,1.118,307,1.026,308,1.044,309,1.118,310,1.044,311,1.08,312,1.044,313,1.118,314,1.044,315,1.118,316,1.062,317,1.044,318,1.044,319,1.118,320,2.087,321,1.118,322,1.044,323,1.118,324,1.044,325,0.992,326,0.975,327,1.009,328,1.118,329,1.026,330,1.118,331,1.026,332,1.118,333,1.026,334,1.118,335,1.026,336,1.118,337,1.026,338,1.099,339,1.118,340,1.026,341,1.099,342,1.118,343,0.003,344,0.004,345,0.003,378,1.755,451,3.864,488,1.712,620,4.085,902,5.426,954,5.146,1325,3.326,2433,4.506,2483,4.822,2959,4.822,3227,3.376,3423,3.376,3537,4.044,4735,3.672,4736,5.887,4737,5.887,4738,4.122,4739,4.122,4740,4.122,4741,5.887,4742,4.122,4743,4.122,4744,5.887,4745,4.122,4746,4.122]],["title/injectables/TypeConfigService.html",[662,1.494,1210,3.057]],["body/injectables/TypeConfigService.html",[3,0.148,4,0.152,5,0.894,10,0.116,12,0.322,21,1.076,26,0.007,32,1.483,34,1.574,39,0.297,40,0.537,42,1.708,45,1.597,48,1.235,51,1.941,54,0.971,68,0.818,69,1.624,70,1.005,73,1.813,84,0.755,88,1.458,89,1.317,90,0.618,98,1.257,100,0.904,101,0.972,102,0.642,121,0.979,152,0.303,154,0.245,156,0.874,166,0.85,167,0.102,168,0.12,188,1.471,207,1.64,214,1.628,217,0.755,228,2.215,229,1.942,230,1.88,232,1.772,254,1.764,266,1.041,317,1.113,343,0.002,344,0.003,345,0.002,374,2.145,378,0.91,384,0.799,385,4.233,389,2.406,390,1.854,400,1.152,429,3.472,443,2.02,445,2.406,447,2.802,453,4.453,454,3.918,460,0.559,481,3.177,495,2.434,514,3.02,521,2.573,531,1.152,586,3.342,620,2.267,633,1.441,640,4.311,662,1.302,667,1.834,672,1.153,673,2.81,715,1.295,763,2.406,768,2.886,787,3.88,875,3.602,877,3.602,879,3.602,883,4.672,884,4.02,909,2.57,991,2.289,1001,2.768,1021,2.484,1035,2.242,1036,2.383,1038,3.177,1073,3.02,1078,1.529,1158,4.093,1167,2.406,1168,4.06,1184,2.664,1189,3.602,1210,2.664,1223,2.664,1224,2.664,1225,2.02,1232,5.867,1241,2.886,1250,2.57,1272,2.768,1273,2.02,1282,5.781,1294,2.49,1306,2.49,1325,5.405,1395,4.555,1495,5.297,1504,3.02,1615,1.834,1622,1.834,1733,2.02,1749,3.007,1779,2.02,1843,2.02,1862,4.67,1865,5.779,1866,6.86,1867,6.599,1874,6.215,1875,3.602,1939,2.768,1967,3.02,2035,3.177,2071,5.446,2098,2.484,2353,3.365,2455,3.602,2521,6.442,2544,6.215,2563,2.139,2677,3.918,2894,2.139,2916,3.918,3008,6.633,3563,2.289,3598,5.577,3600,2.406,3675,7.499,4474,5.491,4513,3.177,4747,4.397,4748,4.397,4749,6.163,4750,4.397,4751,6.163,4752,6.163,4753,2.795,4754,2.795,4755,4.397,4756,2.795,4757,4.397,4758,4.397,4759,2.795,4760,2.795,4761,2.795,4762,4.397,4763,4.397,4764,4.397,4765,2.795,4766,2.795,4767,4.397,4768,4.397,4769,4.397,4770,6.163,4771,7.712,4772,6.163,4773,7.116,4774,7.116,4775,7.116,4776,4.397,4777,4.397,4778,4.397,4779,4.397,4780,4.397,4781,4.397,4782,4.397,4783,4.397,4784,4.397,4785,6.702,4786,6.163,4787,4.397,4788,4.397,4789,4.397,4790,4.397,4791,4.397,4792,2.795,4793,2.289,4794,4.397,4795,2.795,4796,2.795,4797,2.795,4798,2.795,4799,2.795,4800,2.49,4801,2.795,4802,2.795,4803,2.795,4804,2.795,4805,2.795,4806,2.795]],["title/modules/UiModule.html",[346,1.155,358,2.851]],["body/modules/UiModule.html",[3,0.309,4,0.318,10,0.241,25,1.929,26,0.007,152,0.365,154,0.511,166,1.129,167,0.273,168,0.251,198,1.092,343,0.004,344,0.005,345,0.004,346,1.336,348,2.306,349,2.212,350,2.408,351,2.408,352,3.312,358,5.68,359,3.143,360,2.258,361,1.966,364,2.509,365,2.042,2163,6.651,2172,6.355,2173,6.355,2174,5.866,2175,6.355,2176,6.355,2178,4.783,2183,4.783,2184,4.219,2187,4.783,2188,4.783,3065,6.651,3072,5.203,3820,6.997,4380,6.997,4387,5.203,4807,5.203,4808,5.84,4809,5.203,4810,5.203,4811,5.84,4812,5.84,4813,5.203,4814,5.84]],["title/interfaces/Update.html",[369,1.369,550,2.339]],["body/interfaces/Update.html",[0,0.236,3,0.215,4,0.222,10,0.168,12,0.468,26,0.007,32,1.338,39,0.432,40,0.832,45,1.474,46,1.109,48,1.142,52,1.61,68,0.837,69,1.843,72,1.091,73,2.405,83,2.939,84,1.279,88,2.114,89,0.608,98,2.253,102,0.93,131,1.271,133,2.751,142,1.677,143,1.758,152,0.336,154,0.356,166,1.319,167,0.213,168,0.175,183,1.205,188,1.687,193,2.298,209,1.733,217,1.451,296,2.171,299,1.945,343,0.003,344,0.004,345,0.003,369,1.103,370,2.159,371,1.755,374,1.985,378,1.541,384,1.163,389,1.163,391,4.636,400,1.952,452,4.293,459,2.459,462,2.353,465,1.84,485,2.039,488,1.697,498,3.985,516,3.672,544,3.295,548,4.356,550,4.356,554,4.848,556,3.241,582,2.165,583,5.116,586,2.255,595,2.868,608,2.561,611,3.114,652,2.561,662,1.727,664,3.731,665,2.039,672,1.677,718,3.409,721,2.794,761,3.539,780,4.185,784,2.67,786,2.039,807,4.475,819,4.689,820,5.116,827,2.67,915,4.475,919,1.573,939,2.097,945,2.377,972,3.731,997,3.327,1021,2.298,1047,2.459,1057,4.777,1075,4.475,1154,1.934,1158,3.096,1180,2.464,1281,3.295,1317,2.794,1460,3.533,1649,4.777,1714,2.226,1745,1.985,1746,2.939,1747,2.939,1748,2.377,1749,1.985,1750,2.794,1751,2.794,1752,3.985,1756,3.828,1758,3.332,1760,3.533,1761,3.332,1765,2.377,1770,3.332,1771,3.332,1773,2.464,1774,3.409,1778,3.332,1779,2.939,1781,5.381,1796,3.533,1808,5.585,1809,3.332,1810,3.332,1811,3.332,1816,4.777,1818,2.939,1822,3.332,1823,3.332,1824,3.332,1825,3.332,1826,3.332,1827,6.458,1828,2.67,1829,2.794,1830,3.332,1904,4.464,2015,4.464,2018,3.114,3602,4.777,4117,2.794,4212,3.332,4224,3.332,4228,5.196,4229,5.196,4231,5.196,4233,3.624,4236,3.624,4238,3.624,4239,3.624,4240,3.624,4242,3.624,4243,3.624,4246,3.624,4247,5.196,4248,5.196,4249,5.196,4250,5.196,4251,5.196,4252,6.458,4253,3.624,4254,6.636,4255,3.624,4256,3.624,4257,3.624,4258,3.624,4259,3.624,4260,3.624,4261,3.624,4262,3.624,4263,3.624,4264,3.624,4265,3.624,4266,3.624,4267,3.624,4268,5.196,4269,6.075,4270,3.624,4271,5.196,4272,3.624,4273,3.624]],["title/interfaces/Upload.html",[325,1.214,369,1.369]],["body/interfaces/Upload.html",[0,0.197,3,0.18,4,0.185,10,0.303,12,0.391,26,0.007,32,1.236,39,0.361,40,0.624,46,1.711,48,0.954,52,2.483,68,0.767,69,1.597,70,0.431,72,1.278,84,1.53,88,1.454,89,0.763,98,0.971,102,0.905,117,1.314,121,0.447,131,1.597,133,3.221,135,3.354,142,1.402,143,2.208,152,0.332,154,0.298,166,1.589,167,0.225,168,0.146,183,1.819,188,1.714,209,1.189,214,2.173,217,1.411,230,0.68,253,0.861,254,0.68,296,1.359,299,0.765,325,2.12,343,0.002,344,0.003,345,0.002,369,1.666,370,1.804,371,1.466,373,2.947,374,1.658,375,1.92,378,1.413,384,0.971,389,1.953,400,1.92,427,2.059,428,3.59,447,1.752,452,4.612,459,2.59,460,0.68,462,2.062,465,1.537,479,4.702,485,1.704,498,1.986,501,1.616,516,2.14,522,5.936,523,2.456,533,2.987,544,3.471,550,2.847,554,3.26,560,1.236,576,2.92,581,1.433,582,1.261,583,4.693,595,2.485,608,2.14,616,3.721,617,5.881,639,2.784,640,5.637,652,2.14,660,2.334,662,1.513,671,0.804,673,2.698,718,2.987,757,2.775,785,2.231,786,2.562,804,2.784,819,3.867,827,2.231,833,3.218,894,3.967,919,1.314,939,1.752,960,2.494,965,2.847,997,1.658,1003,4.281,1021,1.92,1075,4.031,1140,4.484,1150,2.456,1154,1.616,1155,1.823,1156,4.235,1158,2.713,1163,1.92,1170,2.601,1177,1.752,1187,3.096,1210,3.096,1232,2.456,1495,2.334,1597,2.334,1714,2.797,1745,1.658,1746,2.456,1747,2.456,1748,1.986,1749,1.658,1750,2.334,1751,2.334,1752,3.59,1760,3.721,1781,2.456,1786,2.456,1791,2.784,1796,4.662,1820,4.702,1922,2.987,1947,1.986,1992,2.784,1993,5.473,1994,4.554,1995,4.554,1996,4.554,1997,4.554,1998,4.554,1999,2.231,2000,3.028,2001,3.028,2002,3.028,2003,2.784,2004,2.784,2005,3.028,2006,3.028,2007,4.554,2008,3.028,2009,4.702,2010,2.601,2011,3.028,2012,3.028,2013,4.186,2014,6,2015,3.912,2016,3.028,2017,3.028,2018,2.601,2019,3.028,2020,3.028,2021,5.473,2022,3.028,2023,5.473,2024,3.028,2025,3.028,2026,3.028,2027,2.601,2028,3.028,2029,3.028,2030,3.028,2031,3.028,2032,2.784,2033,3.028,2034,5.229,2035,2.456,2036,3.028,2037,4.554,2038,3.028,2039,4.554,2040,4.554,2041,3.028,2042,3.028,2043,3.028,2044,3.028,2045,4.554,2046,3.028,2047,2.784,2048,3.028,2049,2.456,2050,3.028,2051,6.856,2052,3.028,2053,3.028,2054,3.028,2055,3.028,2056,3.028,2057,5.473,2058,2.784,2059,3.028,2060,3.028,2061,4.554,2062,3.028,2063,4.554,2064,4.554,2065,4.554,2066,4.554,2067,5.473,2068,4.554,2069,4.554,2070,4.554,2071,2.601,2072,2.784,2073,3.028,2074,3.028,2075,3.028,2076,4.554,2077,3.028,2078,3.028,2079,3.028,2080,3.028,2081,3.028,2082,3.028,2083,3.028,2084,3.028,2085,3.028,2086,2.456,2087,3.028,2088,5.473,2089,3.028,2090,3.028,2091,2.456,2092,4.554,2093,3.028,2094,3.028,2095,3.028,2096,2.784,2097,3.028,2098,1.92,2099,3.028,2100,3.028,2101,3.028,2102,3.028,2103,3.028,2104,3.028,2105,3.028,2106,3.028,2107,3.028,2108,3.028,2109,3.028,2110,3.028,2111,2.456,2112,3.028,2113,3.028,2114,3.028,2115,2.601,2116,3.028,2117,3.028,2118,3.028]],["title/components/UploadComponent.html",[0,0.292,322,1.278]],["body/components/UploadComponent.html",[0,0.398,1,0.744,2,0.84,3,0.155,4,0.16,5,0.597,7,0.796,8,0.769,10,0.283,12,0.338,17,1.119,21,0.719,24,0.661,26,0.007,32,0.868,33,2.171,34,1.857,37,1.157,39,0.312,40,0.558,42,1.711,45,1.119,46,1.067,48,1.283,51,3.462,54,0.72,65,1.138,68,0.798,69,1.372,70,1.177,72,1.184,84,1.087,87,1.805,89,1.085,90,1.241,98,1.603,100,1.066,101,1.046,102,0.756,121,0.998,123,2.537,124,1.805,127,1.737,129,0.731,133,1.844,138,1.598,143,2.286,152,0.262,153,1.328,154,0.257,156,0.918,167,0.107,168,0.126,186,3.931,188,1.394,198,0.549,199,1.218,200,0.607,202,1.688,203,0.796,204,0.796,205,0.719,206,1.717,207,0.719,208,0.756,209,2.104,210,0.744,211,0.756,212,2.057,213,0.744,214,1.843,215,1.717,216,0.756,217,1.247,218,2.127,219,0.756,220,0.756,221,0.796,222,0.744,223,1.239,224,0.756,225,0.796,226,0.744,227,0.796,228,0.731,229,0.719,230,1.569,231,1.522,232,0.731,233,0.744,234,0.744,235,0.731,236,0.796,237,0.756,238,0.756,239,1.861,240,0.756,241,0.744,242,0.756,243,0.756,244,0.756,245,0.744,246,0.796,247,0.731,248,0.756,249,0.796,250,0.744,251,0.796,252,0.744,253,0.744,254,0.914,255,0.796,256,0.744,257,0.796,258,0.731,259,0.744,260,0.796,261,0.744,262,0.796,263,1.473,264,0.796,265,0.744,266,1.328,267,0.796,268,0.731,269,0.796,270,0.744,271,0.796,272,0.719,273,0.796,274,0.744,275,0.731,276,0.744,277,0.707,278,0.796,279,0.744,280,0.796,281,0.796,282,0.744,283,0.796,284,0.744,285,0.796,286,0.719,287,0.796,288,0.731,289,0.744,290,0.796,291,0.744,292,0.769,293,0.796,294,1.576,295,0.744,296,1.735,297,0.744,298,0.756,299,1.262,300,0.756,301,0.756,302,0.744,303,0.756,304,0.756,305,0.756,306,0.796,307,0.731,308,0.744,309,0.796,310,0.744,311,0.769,312,0.744,313,0.796,314,0.744,315,0.796,316,0.756,317,0.744,318,0.744,319,0.796,320,0.744,321,0.796,322,1.603,323,0.796,324,0.744,325,2.268,326,0.695,327,0.719,328,0.796,329,0.731,330,0.796,331,0.731,332,0.796,333,0.731,334,0.796,335,0.731,336,0.796,337,0.731,338,0.783,339,0.796,340,0.731,341,0.783,342,0.796,343,0.002,344,0.003,345,0.002,376,1.844,378,0.945,428,1.716,459,1.927,460,0.914,461,1.607,462,2.554,465,1.328,482,1.731,486,3.682,488,1.329,489,2.425,490,3.743,519,5.105,521,1.691,524,1.927,531,1.197,533,4.245,552,3.348,571,2.23,616,4.594,617,3.853,620,3.536,622,4.595,632,2.122,633,2.356,635,2.877,640,2.768,649,1.659,650,2.169,656,3.7,657,2.863,673,2.709,807,1.927,833,1.849,853,2.877,912,1.927,919,2.653,1003,2.671,1014,3.139,1019,2.978,1020,3.399,1030,2.768,1031,4.432,1034,3.17,1035,3.141,1036,2.448,1047,2.669,1067,3.829,1074,2.892,1110,2.768,1111,2.356,1112,4.054,1115,2.122,1117,1.849,1122,1.927,1140,3.682,1155,2.001,1156,3.909,1167,2.501,1170,3.498,1384,2.405,1450,3.302,1538,2.405,1597,2.017,1631,2.405,1774,2.671,1796,2.768,1828,4.502,1897,3.743,2013,5.185,2058,2.405,2072,3.743,2207,2.999,2502,2.616,2522,5.185,2590,3.302,2692,3.498,2790,4.071,2802,4.846,2963,3.743,3269,3.986,3489,4.071,3624,3.743,3855,3.743,4800,2.616,4815,2.616,4816,4.57,4817,5.61,4818,5.61,4819,5.61,4820,4.071,4821,4.57,4822,4.57,4823,2.936,4824,2.936,4825,2.936,4826,4.57,4827,2.936,4828,4.071,4829,2.936,4830,2.936,4831,2.936,4832,2.936,4833,4.071,4834,4.57,4835,2.936,4836,2.936,4837,4.071,4838,2.936,4839,4.57,4840,2.936,4841,4.57,4842,4.57,4843,2.936,4844,2.936,4845,2.936,4846,4.57,4847,2.936,4848,4.57,4849,2.936,4850,4.57,4851,2.936,4852,2.936,4853,4.57,4854,2.936,4855,2.936,4856,2.616,4857,2.936,4858,2.936,4859,2.936,4860,2.936,4861,2.936,4862,2.936,4863,2.936,4864,2.936,4865,2.936,4866,2.936,4867,2.936,4868,2.936,4869,5.61,4870,2.936,4871,2.936,4872,2.936,4873,2.936,4874,2.936,4875,2.936,4876,2.936,4877,2.936,4878,2.936,4879,2.936,4880,2.936,4881,2.936,4882,4.57,4883,4.57,4884,4.57,4885,4.57,4886,4.57,4887,4.57]],["title/components/UploadSelectComponent.html",[0,0.292,324,1.278]],["body/components/UploadSelectComponent.html",[0,0.422,1,0.85,2,0.931,3,0.177,4,0.183,5,0.683,7,0.91,8,0.879,10,0.139,17,1.239,21,0.822,22,2.691,24,0.755,26,0.007,33,2.183,34,1.868,37,1.282,39,0.357,40,0.618,42,1.662,45,1.107,46,1.556,49,3.838,51,3.382,54,0.797,57,3.07,65,1.26,68,0.817,69,1.219,70,1.193,84,1.251,87,1.999,89,1.088,90,1.612,100,0.996,101,1.038,102,0.707,121,1.008,124,1.325,127,1.282,129,0.836,143,2.705,152,0.312,153,1.518,154,0.294,156,1.582,167,0.123,168,0.144,186,3.403,198,0.628,199,1.35,200,0.694,202,1.81,203,0.91,204,0.91,205,0.822,206,1.841,207,0.822,208,0.865,209,0.781,210,0.85,211,0.865,212,2.156,213,0.85,214,1.667,215,1.841,216,0.865,217,1.315,218,2.22,219,0.865,220,0.865,221,0.91,222,0.85,223,1.373,224,0.865,225,0.91,226,0.85,227,0.91,228,0.836,229,0.822,230,1.637,231,1.653,232,0.836,233,0.85,234,0.85,235,0.836,236,0.91,237,0.865,238,0.865,239,1.976,240,0.865,241,0.85,242,0.865,243,0.865,244,0.865,245,0.85,246,0.91,247,0.836,248,0.865,249,0.91,250,0.85,251,0.91,252,0.85,253,0.85,254,1.358,255,0.91,256,0.85,257,0.91,258,0.836,259,0.85,260,0.91,261,0.85,262,0.91,263,1.58,264,0.91,265,0.85,266,1.443,267,0.91,268,0.836,269,0.91,270,0.85,271,0.91,272,0.822,273,0.91,274,0.85,275,0.836,276,0.85,277,0.808,278,0.91,279,0.85,280,0.91,281,0.91,282,0.85,283,0.91,284,0.85,285,0.91,286,0.822,287,0.91,288,0.836,289,0.85,290,0.91,291,0.85,292,0.879,293,0.91,294,0.836,295,0.85,296,1.811,297,0.85,298,0.865,299,0.755,300,0.865,301,0.865,302,0.85,303,0.865,304,0.865,305,0.865,306,0.91,307,0.836,308,0.85,309,0.91,310,0.85,311,0.879,312,0.85,313,0.91,314,0.85,315,0.91,316,0.865,317,0.85,318,0.85,319,0.91,320,0.85,321,0.91,322,1.719,323,0.91,324,1.719,325,2.223,326,0.794,327,0.822,328,0.91,329,0.836,330,0.91,331,0.836,332,0.91,333,0.836,334,0.91,335,0.836,336,0.91,337,0.836,338,0.895,339,0.91,340,0.836,341,0.895,342,0.91,343,0.002,344,0.003,345,0.002,378,1.584,389,1.742,395,1.325,400,1.597,437,2.033,460,0.671,482,1.918,521,2.046,522,2.425,523,2.425,531,1.327,552,2.691,614,2.749,615,4.511,616,5.17,617,4.187,621,3.056,622,4.993,624,2.99,629,2.99,630,2.99,631,2.99,632,2.425,919,1.958,1003,2.959,1035,3.318,1036,2.817,1038,3.563,1047,2.862,1060,2.538,1067,2.406,1078,1.836,1140,4.001,1155,2.174,1156,3.142,1167,4.191,1184,3.067,1218,3.658,1733,2.425,1843,2.425,1896,4.147,2009,2.569,2010,2.569,2014,4.993,2133,2.99,2134,7.74,2522,2.749,4820,4.511,4828,4.511,4833,4.511,4837,4.511,4856,2.99,4888,8.419,4889,6.096,4890,6.096,4891,6.096,4892,6.789,4893,5.063,4894,5.063,4895,6.096,4896,5.431,4897,5.063,4898,3.356,4899,3.356,4900,3.356,4901,3.356,4902,3.356,4903,3.356,4904,3.356,4905,3.356,4906,3.356,4907,5.063,4908,3.356,4909,5.063,4910,3.356,4911,3.356,4912,5.063,4913,5.063,4914,3.356,4915,5.063,4916,3.356,4917,3.356,4918,6.096,4919,3.356,4920,3.356,4921,3.356,4922,3.356,4923,3.356,4924,5.063,4925,6.789,4926,5.063,4927,5.063,4928,5.063]],["title/modules/UtilityModule.html",[346,1.155,2173,3.312]],["body/modules/UtilityModule.html",[3,0.309,4,0.319,10,0.242,25,2.713,26,0.007,151,5.164,152,0.37,154,0.512,155,2.358,166,1.131,167,0.273,168,0.251,198,1.093,274,2.453,275,1.455,279,2.453,310,2.453,311,1.532,312,2.453,314,2.453,335,2.411,343,0.004,344,0.005,345,0.004,346,1.338,348,2.309,349,2.214,350,3.387,351,2.411,352,3.314,359,3.145,360,2.261,361,1.968,363,3.303,364,2.511,365,2.045,663,3.199,698,3.545,699,2.643,701,5.935,702,5.642,1215,7.318,1227,5.389,2171,6.38,2173,6.567,2180,5.208,3300,4.474,4415,4.788,4599,5.208,4625,5.208,4929,5.208,4930,5.208,4931,5.846,4932,5.208,4933,5.208,4934,5.208,4935,5.846,4936,5.846,4937,5.846,4938,5.208,4939,5.846]],["title/pipes/VisibleFieldsPipe.html",[1277,2.678,2170,3.646]],["body/pipes/VisibleFieldsPipe.html",[3,0.352,4,0.364,10,0.276,12,0.768,17,1.632,24,1.5,26,0.007,40,0.814,46,1.268,48,1.873,50,4.93,54,1.05,68,0.725,70,1.026,89,0.996,100,0.979,101,1.043,102,0.694,131,3.079,152,0.333,154,0.584,167,0.244,168,0.286,188,1.185,343,0.004,344,0.005,345,0.004,361,2.725,384,1.906,392,3.592,395,2.634,400,2.122,531,2.122,757,3.518,1180,4.905,1250,4.732,1277,4.297,1278,4.819,1281,5.122,1283,4.377,1289,5.85,1489,5.462,2170,6.551,4940,7.767,4941,5.942,4942,8.097,4943,8.097,4944,8.097,4945,8.097,4946,6.669,4947,8.097,4948,6.669,4949,6.669,4950,6.669,4951,6.669]],["title/interfaces/WithLoader.html",[369,1.369,1019,2.678]],["body/interfaces/WithLoader.html",[0,0.494,3,0.384,4,0.397,10,0.301,12,0.838,26,0.007,39,0.773,40,1.041,68,0.652,72,1.595,152,0.278,167,0.266,263,2.171,343,0.005,344,0.006,345,0.005,369,2.454,371,3.139,508,4.526,552,4.323,763,4.667,1019,4.526,3103,6.985,3147,5.96,4952,6.483,4953,6.483,4954,8.529,4955,8.529]],["title/interfaces/WithNotifications.html",[369,1.369,1020,3.057]],["body/interfaces/WithNotifications.html",[0,0.482,3,0.369,4,0.381,10,0.289,12,0.804,26,0.007,32,1.288,39,0.742,40,1.015,68,0.746,72,1.556,73,3.432,102,0.959,152,0.266,167,0.255,343,0.005,344,0.005,345,0.005,369,2.412,371,3.012,378,1.839,656,4.744,763,4.554,1020,5.042,1074,4.972,1075,5.462,1557,7.541,1868,5.042,2357,8.202,2379,7.415,2595,5.462,2648,4.864,3920,8.202,4956,6.221,4957,6.221]],["title/changelog.html",[4958,3.086,4959,2.933,4960,1.761]],["body/changelog.html",[15,3.315,26,0.006,98,2.196,156,2.402,343,0.005,344,0.006,345,0.005,384,2.196,1274,4.342,1749,3.749,3797,4.205,4960,3.169,4961,2.971,4962,4.655,4963,4.838,4964,5.043,4965,5.043,4966,4.838,4967,5.043]],["title/coverage.html",[4968,6.035]],["body/coverage.html",[0,0.574,1,0.694,10,0.113,11,3.859,14,1.661,21,0.671,26,0.007,48,0.77,50,1.455,52,0.757,63,1.374,68,0.246,84,0.471,129,0.683,131,0.857,151,1.549,168,0.369,200,1.529,205,0.671,207,0.671,208,0.706,210,0.694,213,0.694,216,0.706,217,1.354,219,0.706,220,0.706,222,0.694,224,0.706,226,0.694,228,0.683,229,0.671,230,1.074,232,0.683,233,0.694,234,0.694,237,0.706,238,0.706,240,0.706,241,0.694,242,0.706,243,0.706,244,0.706,245,0.694,247,0.683,248,0.706,250,0.694,252,0.694,254,0.866,256,0.694,258,0.683,259,0.694,261,0.694,263,0.638,265,0.694,268,0.683,270,0.694,272,0.671,274,0.694,276,0.694,279,0.694,282,0.694,284,0.694,286,0.671,288,0.683,289,0.694,291,0.694,294,0.683,295,0.694,297,0.694,298,0.706,299,0.974,300,0.706,301,0.706,302,0.694,303,0.706,304,0.706,305,0.706,307,0.683,308,0.694,310,0.694,312,0.694,314,0.694,316,0.706,318,0.694,320,0.694,322,0.694,324,0.694,325,0.66,327,0.671,329,0.683,331,0.683,333,0.683,335,0.683,337,0.683,340,0.683,343,0.002,344,0.003,345,0.002,362,2.443,367,2.443,369,2.47,370,1.455,372,4.109,381,2.099,383,1.303,386,2.099,389,1.238,391,1.549,429,2.975,442,5.951,443,1.981,444,3.879,448,5.864,462,1.106,473,2.443,540,2.443,541,2.246,542,4.783,544,1.549,550,1.271,583,1.883,602,1.981,603,1.726,608,2.727,612,2.443,613,2.246,614,6.053,616,1.661,641,2.099,642,2.099,644,2.443,645,2.443,657,1.24,662,2.663,692,2.099,693,1.603,694,2.246,709,2.246,716,2.443,785,1.8,860,1.981,861,2.443,874,2.443,889,1.8,891,2.443,960,4.735,965,1.271,989,2.443,1012,2.443,1019,1.455,1020,1.661,1031,1.603,1032,1.726,1033,1.549,1035,0.998,1036,1.06,1038,1.603,1074,1.414,1079,3.548,1081,3.315,1083,3.523,1124,2.443,1125,4.653,1140,1.8,1168,1.661,1208,1.883,1209,1.981,1210,1.661,1211,2.443,1224,2.624,1226,2.246,1228,3.859,1232,1.981,1236,2.443,1238,2.443,1240,2.443,1277,3.524,1279,2.443,1280,1.883,1302,2.246,1303,3.859,1320,2.246,1434,2.443,1471,3.548,1476,3.548,1477,2.099,1495,6.737,1499,2.099,1505,2.443,1547,3.548,1548,2.246,1549,2.443,1563,1.981,1564,2.443,1585,2.443,1647,2.443,1670,5.656,1673,1.603,1744,2.443,1752,1.603,1762,1.603,1841,2.443,1861,2.443,1862,1.8,1990,3.859,1992,4.397,2049,1.981,2128,2.443,2129,2.443,2134,2.246,2135,2.246,2136,2.443,2137,2.443,2139,2.443,2153,2.099,2154,2.443,2169,1.981,2170,1.981,2177,2.443,2189,2.443,2194,2.443,2263,1.8,2264,3.859,2265,1.8,2328,2.443,2333,2.443,2388,2.443,2398,1.883,2408,2.443,2432,2.443,2436,2.443,2439,2.443,2481,2.443,2555,2.443,2644,2.443,2645,2.246,2646,2.443,2648,1.603,2675,2.443,2693,2.099,2694,3.548,2757,2.443,2762,2.443,2772,1.661,2773,1.981,2866,2.443,2893,4.109,2894,4.668,2937,2.246,2938,2.443,3035,2.246,3036,2.443,3071,2.443,3078,2.443,3080,2.443,3149,2.443,3155,4.109,3156,2.443,3193,3.859,3195,2.443,3203,2.443,3211,2.443,3250,2.443,3266,2.443,3299,2.443,3300,2.099,3301,4.995,3360,2.246,3367,2.246,3381,2.443,3382,2.443,3388,4.995,3389,3.548,3390,2.443,3433,2.443,3435,2.443,3437,2.443,3535,2.443,3598,4.561,3733,2.246,3734,2.443,3735,2.443,3759,2.443,3829,3.859,3855,2.246,3874,2.443,3885,2.443,3957,2.443,4001,2.443,4013,2.443,4014,2.443,4049,2.443,4095,2.443,4097,2.443,4099,2.443,4116,2.246,4117,5.977,4118,3.548,4119,5.433,4171,2.246,4172,2.443,4196,4.109,4220,3.859,4222,2.443,4223,2.443,4224,3.548,4274,2.246,4275,2.443,4276,2.443,4288,2.443,4386,2.443,4389,2.443,4391,2.443,4414,2.443,4415,2.246,4445,2.443,4446,2.443,4452,2.246,4453,5.439,4458,2.246,4459,2.246,4460,2.246,4470,2.443,4498,2.443,4506,3.129,4510,1.981,4525,1.981,4528,3.859,4536,2.443,4582,2.443,4602,2.443,4613,8.669,4647,2.443,4702,2.443,4731,2.443,4733,2.443,4735,2.443,4810,2.443,4813,2.443,4815,2.443,4888,2.443,4934,2.443,4938,2.443,4940,2.443,4941,2.443,4952,2.443,4953,2.443,4956,2.443,4957,2.443,4968,2.443,4969,2.246,4970,2.742,4971,4.331,4972,2.742,4973,9.198,4974,9.549,4975,4.331,4976,6.825,4977,2.742,4978,4.331,4979,2.742,4980,2.443,4981,2.742,4982,4.331,4983,2.742,4984,6.098,4985,2.742,4986,2.742,4987,2.742,4988,4.331,4989,2.742,4990,6.64,4991,2.742,4992,2.742,4993,4.331,4994,2.742,4995,6.64,4996,2.742,4997,2.742,4998,2.742,4999,5.368,5000,2.742,5001,6.098,5002,2.742,5003,2.742,5004,2.742,5005,5.368,5006,2.742,5007,2.742,5008,2.742,5009,2.742,5010,2.742,5011,4.331,5012,5.368,5013,2.742,5014,2.742,5015,2.742,5016,2.742,5017,2.742,5018,2.742,5019,4.331,5020,2.742,5021,5.368,5022,5.368,5023,4.331,5024,2.742,5025,2.742,5026,2.742,5027,2.742,5028,5.368,5029,2.742,5030,5.368,5031,2.742,5032,2.742,5033,4.331,5034,2.742,5035,2.742,5036,6.64,5037,2.742,5038,2.742,5039,2.742,5040,2.742,5041,2.742,5042,4.331,5043,4.331,5044,2.742,5045,4.331,5046,2.742,5047,2.742,5048,5.368,5049,2.742,5050,5.368,5051,4.331,5052,2.742,5053,2.742,5054,5.368,5055,2.742,5056,4.331,5057,4.331,5058,2.742,5059,6.098,5060,6.098,5061,4.331,5062,4.331,5063,4.331,5064,2.742,5065,2.742,5066,2.742,5067,2.742,5068,2.742,5069,2.742,5070,2.742,5071,2.742,5072,2.742,5073,2.742,5074,6.64,5075,2.742,5076,2.742,5077,4.331,5078,2.742,5079,2.742,5080,4.331,5081,2.742,5082,2.742,5083,2.742,5084,2.742,5085,2.742,5086,2.742,5087,2.742,5088,2.742,5089,2.742,5090,2.742,5091,4.331,5092,2.742,5093,2.742,5094,2.742,5095,4.331,5096,4.331,5097,4.331,5098,5.368,5099,4.331,5100,2.742,5101,4.331,5102,6.64,5103,2.742,5104,4.331,5105,2.742,5106,2.742,5107,2.742,5108,4.331,5109,2.742,5110,2.742,5111,2.742,5112,2.742,5113,2.742,5114,2.742,5115,2.742,5116,2.742,5117,2.742,5118,4.331,5119,2.742,5120,2.742,5121,4.331,5122,2.742,5123,4.331,5124,4.331,5125,2.742,5126,2.742,5127,2.742,5128,2.742,5129,2.742,5130,4.331,5131,2.742,5132,2.742,5133,2.742,5134,2.742,5135,2.742,5136,2.742,5137,2.742,5138,2.742,5139,2.742,5140,2.742,5141,2.742,5142,2.742,5143,2.742,5144,2.742,5145,2.742,5146,2.742,5147,2.742,5148,2.742,5149,2.742,5150,2.742,5151,2.742,5152,2.742,5153,2.742,5154,2.742,5155,2.742,5156,4.331,5157,2.742]],["title/dependencies.html",[349,2.287,4961,1.651]],["body/dependencies.html",[14,4.101,15,3.524,26,0.007,154,0.593,155,2.732,156,2.116,235,1.686,277,1.629,343,0.004,344,0.005,345,0.004,349,2.564,384,1.935,556,3.218,663,3.705,665,3.394,699,3.062,704,6.254,705,6.032,719,4.443,1217,5.182,1218,4.892,1272,4.262,1273,4.892,1274,3.825,2126,5.903,2127,5.362,2293,5.545,3261,6.032,3538,4.892,4648,4.262,4962,4.101,4963,4.262,4964,4.443,4965,4.443,4966,4.262,4967,4.443,5158,8.171,5159,6.771,5160,6.032,5161,9.67,5162,6.032,5163,6.771,5164,5.182,5165,6.771,5166,6.771,5167,6.771,5168,6.032,5169,6.771,5170,5.545,5171,6.771,5172,6.771,5173,6.771,5174,6.771,5175,6.771,5176,6.771,5177,6.771,5178,6.771,5179,6.771,5180,6.771]],["title/miscellaneous/functions.html",[5181,3.269,5182,5.38]],["body/miscellaneous/functions.html",[26,0.006,39,0.776,89,1.091,100,1.33,101,1.085,102,0.944,343,0.005,344,0.006,345,0.005,474,4.128,692,6.936,694,5.985,700,5.279,703,6.51,830,6.967,907,5.985,1829,5.019,4453,5.985,4458,7.002,4459,7.002,4460,7.002,4467,6.936,4475,6.51,4476,6.51,4478,6.51,4479,6.51,4480,6.51,5181,5.592,5182,6.51,5183,7.307,5184,9.063]],["title/index.html",[39,0.454,4958,3.086,4959,2.933]],["body/index.html",[0,0.463,2,1.655,3,0.292,4,0.301,6,3.024,13,4.95,14,3.348,15,3.654,16,4.175,26,0.006,72,1.345,73,2.279,78,3.708,79,3.708,84,1.508,98,1.579,101,0.661,102,0.575,121,0.727,156,1.727,254,1.105,277,1.33,343,0.004,344,0.005,345,0.004,349,2.093,361,1.86,373,3.654,384,1.579,388,3.479,457,3.993,472,2.516,488,2.464,502,3.253,519,3.229,550,2.561,556,4.026,560,2.01,569,2.933,571,2.696,634,2.051,635,4.528,653,3.419,661,4.071,667,3.627,719,3.627,732,4.204,763,3.024,817,3.348,853,4.528,862,3.479,884,3.122,890,2.229,966,3.627,1042,4.786,1068,2.627,1154,2.627,1186,3.627,1272,3.479,1274,3.122,1305,2.696,1338,6.938,1408,4.526,1800,4.526,1939,3.479,1976,3.795,2196,2.933,2265,3.627,2658,5.035,2742,4.229,2812,5.197,3538,3.993,3603,4.526,3748,3.795,3765,4.526,3767,3.795,4139,4.526,4282,5.505,4396,5.505,4467,4.229,4468,6.938,4509,4.674,4648,3.479,4958,3.993,4959,3.795,4961,3.275,4962,3.348,4963,3.479,4964,3.627,4965,3.627,4966,3.479,4967,3.627,4969,5.891,5164,4.229,5170,6.55,5185,4.008,5186,4.923,5187,6.408,5188,4.923,5189,6.408,5190,5.559,5191,4.923,5192,4.923,5193,4.923,5194,6.408,5195,4.923,5196,4.923,5197,4.526,5198,4.229,5199,4.923,5200,4.923,5201,6.483,5202,6.408,5203,4.923,5204,4.923,5205,4.923,5206,4.923,5207,5.891,5208,4.923,5209,7.125,5210,4.923,5211,4.366,5212,3.795,5213,6.938,5214,4.923,5215,4.923,5216,6.268,5217,3.122,5218,4.496,5219,4.923,5220,4.526,5221,4.526,5222,4.923,5223,3.122,5224,4.229,5225,4.923,5226,6.408,5227,4.923,5228,3.122,5229,3.122,5230,4.923,5231,4.923,5232,6.121,5233,2.933,5234,4.526,5235,4.923,5236,5.891,5237,6.297,5238,3.993,5239,4.923,5240,4.923,5241,4.923,5242,6.032,5243,4.923,5244,4.923,5245,4.526,5246,4.526,5247,4.526,5248,6.408,5249,3.122,5250,6.408,5251,4.923,5252,4.923,5253,4.923,5254,7.125,5255,4.229,5256,4.923,5257,4.923]],["title/modules.html",[348,2.675]],["body/modules.html",[26,0.005,343,0.004,344,0.005,345,0.004,347,4.91,348,2.684,358,3.84,686,4.91,856,4.46,1199,4.668,1205,4.91,1206,4.668,1207,4.46,2127,6.598,2163,4.668,2171,4.668,2172,4.46,2173,4.46,2174,4.117,2175,4.46,2176,4.46,3065,4.668,3187,4.91,3428,4.91,3586,7.264,3820,4.91,4380,4.91,4727,4.91,4896,8.957,5258,10.054]],["title/overview.html",[5259,3.827]],["body/overview.html",[1,2.098,2,0.43,21,1.181,25,0.772,26,0.007,27,3.299,28,4.089,29,4.089,30,4.089,31,4.593,32,1.299,50,2.561,129,1.725,151,2.726,183,0.692,198,0.437,205,1.696,207,1.181,208,1.785,210,1.755,213,1.755,216,1.785,219,1.785,220,1.785,222,1.755,224,1.785,226,1.755,228,1.201,229,1.181,232,1.201,233,1.755,234,1.755,237,1.785,238,1.785,240,1.785,241,1.755,242,1.785,243,1.785,244,1.785,245,1.755,247,1.725,248,1.785,250,1.755,252,1.755,256,1.755,258,1.725,259,1.755,261,1.755,263,1.612,265,1.755,268,1.725,270,1.755,272,1.696,274,1.755,276,2.098,279,1.755,282,1.755,284,1.755,286,1.696,288,1.725,289,1.755,291,1.755,294,1.725,295,1.755,297,1.755,298,1.785,300,1.785,301,1.785,302,1.755,303,1.785,304,1.785,305,1.785,307,2.063,308,1.755,310,1.755,312,1.755,314,1.755,316,1.785,318,1.755,320,1.755,322,1.755,324,1.755,326,0.553,327,1.696,329,1.725,331,1.725,333,1.725,335,1.725,337,1.725,340,1.725,343,0.002,344,0.003,345,0.002,346,0.535,347,5.007,348,0.923,349,0.886,350,0.964,351,0.964,352,0.943,353,2.083,354,2.083,355,2.083,356,2.083,357,2.083,358,5.373,359,1.607,360,0.904,361,0.787,371,1.009,462,1.946,544,2.726,603,3.037,616,2.923,641,1.79,657,2.182,686,6.445,687,2.083,688,2.083,689,2.083,690,2.083,691,2.083,692,3.693,693,2.82,715,1.084,856,5.685,857,2.083,858,2.083,859,2.083,860,5.007,890,0.943,929,1.472,1031,2.82,1033,2.726,1036,1.866,1199,6.701,1200,2.083,1201,2.083,1202,2.083,1203,2.083,1204,2.083,1205,6.959,1206,6.577,1207,5.509,1208,3.314,1209,3.486,1210,2.923,1278,1.69,1280,4.76,1673,2.82,1752,2.82,1967,1.606,2119,2.083,2120,2.083,2122,2.083,2123,2.083,2163,6.606,2164,2.083,2165,2.083,2166,2.083,2167,2.083,2168,2.083,2169,5.007,2170,5.007,2171,6.256,2172,5.817,2173,6.128,2174,5.145,2175,5.437,2176,5.437,2263,3.166,2398,3.314,2426,2.083,2427,2.083,2428,2.083,2429,2.083,2667,2.083,2668,2.083,2669,2.083,3065,6.507,3066,2.083,3067,2.083,3069,2.083,3070,2.083,3142,2.083,3143,2.083,3144,2.083,3145,2.083,3187,6.065,3188,2.083,3189,2.083,3191,2.083,3192,2.083,3428,4.427,3429,2.083,3430,2.083,3431,2.083,3432,2.083,3820,6.311,3821,2.083,3822,2.083,3824,2.083,3825,2.083,4090,2.083,4091,2.083,4093,2.083,4094,2.083,4214,2.083,4215,2.083,4217,2.083,4218,2.083,4284,2.083,4285,2.083,4380,6.258,4381,2.083,4382,2.083,4383,2.083,4385,2.083,4502,2.083,4503,2.083,4504,2.083,4505,2.083,4506,5.007,4727,4.427,4728,2.083,4729,2.083,4730,2.083,4807,2.083,4809,2.083,4929,2.083,4930,2.083,4932,2.083,4933,2.083,4980,2.083,5259,1.321,5260,2.227,5261,2.338,5262,1.915]],["title/miscellaneous/typealiases.html",[5181,3.269,5263,6.038]],["body/miscellaneous/typealiases.html",[26,0.006,39,0.824,68,0.694,343,0.005,344,0.006,345,0.005,372,5.933,377,6.77,429,3.782,5181,5.933,5264,7.751,5265,7.751]],["title/additional-documentation/angular-7-upgrade-guide.html",[16,1.389,671,0.692,929,1.84,3321,0.966,5198,2.237,5266,2.923]],["body/additional-documentation/angular-7-upgrade-guide.html",[2,1.059,3,0.304,10,0.238,16,4.651,26,0.006,42,1.077,72,1.381,78,3.808,79,2.968,84,0.989,98,2.111,152,0.347,166,1.114,183,1.705,343,0.004,344,0.005,345,0.004,346,1.866,364,1.938,375,4.173,387,3.488,389,1.646,488,2.503,506,3.779,519,3.365,550,3.78,582,2.137,586,2.226,595,3.13,634,2.137,649,4.861,650,3.52,667,3.779,732,4.317,765,3.488,817,3.488,883,3.488,909,3.365,929,5.416,939,4.435,1118,4.65,1155,2.909,1156,2.968,1195,5.352,1226,4.716,1241,3.779,1274,3.253,1277,3.056,1341,4.716,1430,5.13,1756,3.779,1796,4.475,1892,4.848,1947,4.766,1974,4.716,2196,3.056,2246,5.13,2422,5.601,2442,4.407,2546,4.16,2547,3.253,2573,5.13,2648,3.365,3107,3.625,3352,4.407,3428,4.16,3550,3.779,3786,4.407,4296,5.13,4958,4.16,4961,2.226,4962,3.488,4966,3.625,5190,3.779,5198,6.242,5216,3.779,5218,3.056,5224,6.242,5234,4.716,5236,6.05,5238,4.16,5242,5.073,5245,4.716,5255,4.407,5267,5.758,5268,7.387,5269,5.758,5270,5.758,5271,5.758,5272,5.758,5273,5.758,5274,5.758,5275,5.758,5276,5.758,5277,5.758,5278,5.758,5279,4.716,5280,5.758,5281,7.387,5282,5.758,5283,5.758,5284,5.758,5285,5.13,5286,5.758,5287,5.13,5288,5.758,5289,5.758,5290,5.758,5291,5.758,5292,5.758,5293,5.758,5294,5.13,5295,5.758,5296,5.758,5297,5.13,5298,5.758,5299,7.387,5300,8.604,5301,7.387,5302,7.387,5303,6.581,5304,5.758,5305,5.758,5306,5.758,5307,5.758,5308,5.758,5309,8.156,5310,5.758,5311,5.758,5312,8.156,5313,8.156,5314,7.387,5315,5.758,5316,5.758,5317,5.758,5318,4.716,5319,5.758,5320,8.156,5321,5.758,5322,7.387,5323,5.758,5324,5.758,5325,5.758,5326,5.758,5327,5.758,5328,5.758,5329,5.758,5330,5.758,5331,5.758,5332,5.758,5333,5.13,5334,5.758]],["title/additional-documentation/project-setup-tutorial.html",[671,0.773,3321,1.079,4509,1.909,5185,1.637,5335,2.36]],["body/additional-documentation/project-setup-tutorial.html",[0,0.403,2,0.966,3,0.278,6,4.269,16,2.498,25,1.736,26,0.007,32,1.077,34,1.616,72,1.301,73,2.167,77,4.304,79,2.709,84,1.484,99,3.797,101,0.629,116,2.709,117,2.032,121,0.691,152,0.355,154,0.46,155,2.12,166,1.346,167,0.285,168,0.226,183,1.556,235,1.308,343,0.003,344,0.005,345,0.003,348,2.075,350,2.167,351,2.167,364,2.343,365,1.838,373,3.002,400,1.377,457,5.028,488,2.024,502,2.376,519,3.071,531,1.377,556,2.498,569,3.693,581,2.934,634,3.488,656,2.564,661,2.376,663,2.875,696,2.969,699,2.376,721,6.588,724,5.326,726,4.304,727,6.358,730,5.638,731,5.7,732,4.56,852,6.952,853,4.912,909,3.071,910,2.634,928,4.022,929,3.308,966,3.448,1035,1.912,1042,3.932,1068,2.498,1074,2.709,1114,3.609,1118,3.308,1154,3.308,1156,2.709,1167,2.875,1199,5.705,1212,4.681,1251,5.028,1329,2.875,1395,2.564,1678,2.498,1745,2.564,1756,3.448,1794,5.7,1912,3.448,1948,3.448,1975,4.681,2049,3.797,2125,4.022,2126,5.028,2127,4.567,2196,3.693,2284,4.304,2354,4.304,2422,4.381,2547,2.969,2653,3.797,2658,3.308,2742,4.022,2813,4.681,2821,4.304,2958,4.022,3093,3.797,3105,4.022,3107,4.381,3439,5.7,3537,4.78,3550,3.448,3622,4.681,3631,3.448,3641,4.022,3716,5.7,3767,3.609,4033,4.681,4283,4.304,4509,3.071,4512,5.7,4961,2.691,4962,4.727,4963,3.308,5160,4.681,5162,6.2,5185,4.61,5190,3.448,5197,4.304,5201,5.326,5211,2.709,5213,6.803,5216,5.121,5217,4.693,5218,3.693,5220,4.304,5224,5.326,5232,5.326,5233,2.789,5237,5.705,5238,3.797,5242,3.609,5246,6.391,5247,6.391,5255,4.022,5279,4.304,5287,4.681,5303,4.681,5335,5.638,5336,5.255,5337,5.255,5338,4.681,5339,5.255,5340,6.959,5341,6.959,5342,9.474,5343,5.255,5344,5.255,5345,5.255,5346,5.255,5347,5.255,5348,5.255,5349,4.681,5350,5.255,5351,5.255,5352,5.255,5353,5.255,5354,5.255,5355,5.255,5356,5.255,5357,5.255,5358,5.255,5359,5.255,5360,6.2,5361,5.255,5362,6.959,5363,5.255,5364,5.255,5365,5.255,5366,5.255,5367,5.255,5368,5.255,5369,5.255,5370,4.067,5371,5.255,5372,6.959,5373,5.255,5374,4.022,5375,5.255,5376,5.255,5377,5.255,5378,5.255,5379,5.255,5380,5.255,5381,5.255,5382,5.255,5383,5.255]],["title/additional-documentation/project-setup-tutorial/routes.html",[646,2.933,671,1.011,3321,1.411]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.539,2,1.322,5,1.462,26,0.007,84,1.454,152,0.274,166,1.39,183,2.129,343,0.005,344,0.006,345,0.005,375,4.784,501,3.417,545,5.453,582,3.143,634,2.668,646,6.384,909,4.201,910,3.603,1021,4.062,2422,4.526,2547,4.062,2595,4.718,2658,5.667,2989,5.888,3631,4.718,5212,4.938,5216,4.718,5237,4.938,5335,5.194,5384,7.189,5385,7.189,5386,7.189,5387,5.888,5388,7.189,5389,7.189,5390,7.189,5391,7.189,5392,7.544,5393,7.189,5394,7.189,5395,6.405,5396,7.189]],["title/additional-documentation/project-setup-tutorial/authorization.html",[671,1.011,3321,1.411,5374,3.269]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.424,5,1.74,26,0.006,78,3.772,79,3.772,84,1.256,183,2.166,272,1.791,275,2.258,343,0.005,344,0.006,345,0.005,395,2.889,488,2.128,501,3.478,531,1.917,545,5.493,582,3.175,634,3.175,646,5.025,654,7.008,909,4.276,910,3.667,1024,5.183,1154,3.478,1678,3.478,2196,3.883,3272,5.993,4509,4.276,5185,3.667,5211,3.772,5335,6.552,5374,6.549,5387,5.993,5397,5.993,5398,6.519,5399,6.519,5400,6.519,5401,6.519]],["title/additional-documentation/project-setup-tutorial/localization.html",[671,1.011,3321,1.411,4508,3.269]],["body/additional-documentation/project-setup-tutorial/localization.html",[0,0.488,4,0.389,5,1.451,26,0.006,37,1.806,121,0.938,152,0.272,167,0.261,168,0.306,343,0.005,344,0.006,345,0.005,387,4.32,391,4.029,446,4.49,488,2.074,502,3.225,511,4.68,653,3.39,672,2.941,757,2.701,883,4.32,918,4.898,1035,3.066,1036,3.259,1154,3.39,1277,3.785,1999,4.68,2111,5.153,2196,3.785,2392,5.153,2422,4.49,2566,4.68,3107,4.49,3126,5.841,3778,5.458,3966,5.841,4508,6.867,4509,4.168,4510,6.482,4511,5.841,4512,5.841,4513,6.929,4514,6.354,4515,6.354,4516,6.354,4517,6.354,4518,6.354,4519,6.354,4520,6.354,4521,6.354,4522,6.354,4523,6.354,4524,6.903,4525,5.153]],["title/additional-documentation/project-setup-tutorial/custom-fields-config.html",[389,0.934,392,1.263,671,0.773,1155,1.165,3321,1.079]],["body/additional-documentation/project-setup-tutorial/custom-fields-config.html",[0,0.354,26,0.007,32,0.945,34,1.142,40,0.935,45,1.595,48,2.543,51,3.881,52,1.685,68,0.547,72,1.142,73,2.518,84,1.049,101,1.003,117,2.361,121,1.009,131,2.83,167,0.223,168,0.262,188,1.642,217,1.317,230,1.221,343,0.004,344,0.005,345,0.004,383,2.902,389,2.395,390,3.818,392,2.361,400,1.6,428,3.568,429,2.979,495,2.411,521,1.841,531,2.009,560,2.789,566,3.148,636,6.056,672,2.518,696,4.332,780,4.069,906,3.844,964,4.827,991,6.28,1001,3.844,1021,3.45,1032,3.844,1033,4.332,1068,3.644,1073,4.194,1111,3.148,1155,2.178,1163,4.735,1174,4.673,1177,3.148,1184,3.699,1272,3.844,1283,4.007,1315,4.412,1320,5.001,1342,3.148,1395,2.979,1678,2.902,1762,3.568,1774,3.568,1873,4.827,1875,5.001,1898,3.844,1912,5.5,1967,4.194,1970,4.412,2336,5.44,2595,4.007,2657,4.412,2881,5.44,2887,5.001,3462,6.28,3600,3.341,3631,4.007,3663,5.44,3786,4.673,4499,5.44,5216,4.007,5392,5.44,5402,6.106,5403,6.106,5404,6.106,5405,5.001,5406,6.106,5407,6.106,5408,6.106,5409,6.106,5410,6.106,5411,6.106,5412,5.44,5413,5.44,5414,6.106,5415,6.106,5416,7.667,5417,6.106,5418,6.106,5419,6.106,5420,6.106]],["title/additional-documentation/project-setup-tutorial/custom-entry-list.html",[217,0.561,230,0.653,671,0.773,1155,1.165,3321,1.079]],["body/additional-documentation/project-setup-tutorial/custom-entry-list.html",[0,0.464,2,0.883,5,0.977,20,1.896,26,0.007,33,1.045,34,1.225,40,1.023,42,0.898,45,1.367,48,2.249,51,3.536,52,2.387,54,1.174,68,0.668,70,0.609,72,1.394,88,1.136,98,2.131,117,2.533,121,1.138,131,1.501,167,0.176,168,0.206,183,1.422,188,1.601,217,1.439,230,1.491,288,1.631,343,0.004,344,0.004,345,0.003,361,1.616,373,2.071,383,2.282,389,2.666,390,2.025,392,3.423,400,1.258,447,2.475,448,5.013,451,3.151,478,3.584,483,2.806,488,2.329,501,2.282,502,2.171,521,2.668,531,1.953,548,4.128,552,2.12,560,2.383,576,2.282,581,2.762,582,1.782,586,3.241,587,3.933,609,2.806,621,3.283,636,4.733,649,2.713,650,1.857,652,3.023,653,3.806,656,2.343,661,2.171,696,2.713,761,2.071,780,3.957,894,2.475,912,3.151,929,4.124,960,2.343,964,3.023,999,4.278,1029,4.124,1033,2.713,1050,2.475,1067,3.113,1068,3.113,1073,4.499,1153,3.675,1155,3.296,1158,2.549,1163,2.713,1175,3.933,1179,4.278,1180,2.909,1187,3.968,1190,4.299,1195,3.151,1281,3.701,1283,5.255,1315,5.386,1324,6.106,1329,2.627,1342,3.376,1395,4.458,1618,3.298,1678,3.543,1690,2.806,1707,3.675,1749,2.343,1762,2.806,1818,3.469,1865,5.041,1866,5.013,1871,4.499,1891,5.706,1892,4.299,1893,3.469,1898,4.124,1912,3.151,1939,3.023,1947,4.898,1948,4.299,1950,3.933,1954,4.278,1956,3.151,1970,3.469,2027,3.675,2111,3.469,2353,5.013,2422,3.023,2525,3.933,2547,3.701,2592,6.055,2595,3.151,2657,3.469,2658,3.023,2772,2.909,2879,3.933,2887,5.365,2987,3.933,3115,3.151,3165,4.278,3539,5.706,3586,3.469,3600,2.627,3604,3.675,3631,3.151,3767,3.298,3890,4.278,3904,4.278,4007,5.365,4009,4.079,4578,4.278,4659,3.675,5360,4.278,5395,7.135,5405,7.085,5412,7.706,5421,4.802,5422,4.802,5423,4.802,5424,4.802,5425,6.55,5426,4.802,5427,4.802,5428,4.278,5429,4.802,5430,4.802,5431,4.802,5432,4.802,5433,6.55,5434,9.011,5435,6.55,5436,4.802,5437,4.802,5438,4.802,5439,4.802,5440,4.802,5441,4.802,5442,4.802,5443,7.455,5444,4.278,5445,4.802,5446,4.802,5447,4.802,5448,4.802,5449,5.013,5450,6.55,5451,4.802,5452,4.802,5453,4.802,5454,4.802,5455,4.802,5456,4.802,5457,4.802,5458,4.802,5459,4.802,5460,4.802,5461,4.802,5462,4.802,5463,4.802]],["title/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[230,0.653,671,0.773,1155,1.165,1898,2.057,3321,1.079]],["body/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[0,0.535,2,1.084,5,1.613,16,1.963,17,1.011,18,4.993,20,2.329,22,1.824,25,1.365,26,0.007,27,2.604,28,3.227,29,2.26,30,3.227,31,2.26,32,0.639,33,1.496,34,1.752,35,3.87,37,1.741,40,0.719,41,2.334,42,1.798,43,4.329,45,1.415,47,2.071,48,2.438,52,1.14,59,2.601,62,3.572,65,1.468,66,3.162,68,0.616,72,0.772,73,1.703,75,3.162,78,3.545,79,4.088,84,1.013,86,2.837,88,0.978,95,2.601,98,1.685,101,0.494,103,2.601,113,2.601,116,2.129,117,2.28,121,0.987,129,2.161,131,2.909,138,1.445,139,3.332,152,0.331,154,0.602,155,2.379,156,2.149,164,4.83,165,3.162,167,0.252,168,0.295,181,3.87,183,1.223,193,2.334,194,3.712,230,1.587,235,1.468,317,1.046,343,0.003,344,0.004,345,0.003,346,0.945,361,1.391,363,3.332,365,1.445,374,2.015,376,2.379,383,1.963,387,2.502,389,2.592,390,3.162,392,3.067,444,2.985,455,3.68,458,4.513,471,2.502,483,2.414,488,2.525,495,1.631,511,3.87,521,2.073,552,2.604,560,2.502,569,3.13,573,3.162,581,1.742,582,3.061,586,2.659,594,2.837,595,2.145,634,3.061,636,4.261,650,1.597,652,3.712,653,2.803,656,2.877,661,1.868,670,3.87,696,2.334,732,4.019,765,2.502,817,2.502,899,3.383,909,2.414,910,2.071,939,3.04,960,2.015,964,2.601,1014,4.05,1017,3.162,1032,2.601,1033,2.334,1056,4.261,1114,5.151,1148,2.985,1152,2.837,1155,3.406,1158,2.192,1162,2.711,1163,3.885,1166,4.513,1167,3.227,1177,3.04,1195,3.87,1223,2.502,1285,3.162,1325,4.237,1340,3.162,1504,2.837,1598,5.254,1618,4.723,1620,3.68,1678,1.963,1690,2.414,1699,2.837,1762,2.414,1780,3.68,1793,4.261,1893,2.985,1898,4.722,1906,2.985,1922,2.414,1927,4.513,1967,2.837,1970,4.261,1971,5.254,2160,5.263,2161,3.162,2207,3.87,2235,4.513,2258,3.68,2301,3.162,2392,2.985,2547,4.796,2563,3.162,2566,3.87,2592,4.261,2595,3.87,2604,3.68,2605,3.383,2647,3.68,2648,3.446,2657,4.261,2658,2.601,2680,3.68,2889,3.383,3084,3.162,3501,5.633,3539,6.312,3550,2.711,3586,2.985,3600,2.26,3604,3.162,3624,3.383,3631,2.711,3641,4.513,3701,3.68,3747,3.68,3748,2.837,3785,4.05,3786,3.162,3831,3.162,3852,3.383,3876,3.68,3976,5.254,3982,3.68,4009,3.763,4184,6.127,4282,3.162,4524,3.383,4584,3.68,4657,3.68,4659,4.513,4666,3.68,4976,3.68,5212,2.837,5237,2.837,5238,2.985,5333,3.68,5338,3.68,5370,2.414,5405,3.383,5413,5.254,5428,3.68,5464,3.68,5465,4.131,5466,4.131,5467,4.131,5468,4.131,5469,4.131,5470,3.68,5471,4.131,5472,4.131,5473,4.131,5474,5.897,5475,4.131,5476,4.131,5477,5.897,5478,5.897,5479,4.131,5480,4.131,5481,4.131,5482,3.162,5483,4.131,5484,5.897,5485,4.131,5486,4.131,5487,4.131,5488,4.131,5489,4.131,5490,4.131,5491,4.131,5492,4.131,5493,4.131,5494,5.897,5495,4.131,5496,4.131,5497,8.248,5498,4.131,5499,5.897,5500,4.131,5501,4.131,5502,4.131,5503,4.131,5504,4.131,5505,5.897,5506,4.131,5507,4.131,5508,4.131,5509,4.131,5510,4.131,5511,4.131,5512,4.131,5513,4.131,5514,5.897,5515,4.131,5516,4.131,5517,4.131,5518,4.131,5519,4.131,5520,4.131,5521,4.131,5522,4.131,5523,4.131,5524,4.131,5525,4.131,5526,4.131,5527,4.131,5528,4.131]],["title/additional-documentation/readme.html",[472,1.494,671,1.011,3321,1.411]],["body/additional-documentation/readme.html",[0,0.463,2,1.655,3,0.292,4,0.301,6,3.024,13,4.95,14,3.348,15,3.654,16,4.175,26,0.006,72,1.345,73,2.279,78,3.708,79,3.708,84,1.508,98,1.579,101,0.661,102,0.575,121,0.727,156,1.727,254,1.105,277,1.33,343,0.004,344,0.005,345,0.004,349,2.093,361,1.86,373,3.654,384,1.579,388,3.479,457,3.993,472,2.516,488,2.464,502,3.253,519,3.229,550,2.561,556,4.026,560,2.01,569,2.933,571,2.696,634,2.051,635,4.528,653,3.419,661,4.071,667,3.627,719,3.627,732,4.204,763,3.024,817,3.348,853,4.528,862,3.479,884,3.122,890,2.229,966,3.627,1042,4.786,1068,2.627,1154,2.627,1186,3.627,1272,3.479,1274,3.122,1305,2.696,1338,6.938,1408,4.526,1800,4.526,1939,3.479,1976,3.795,2196,2.933,2265,3.627,2658,5.035,2742,4.229,2812,5.197,3538,3.993,3603,4.526,3748,3.795,3765,4.526,3767,3.795,4139,4.526,4282,5.505,4396,5.505,4467,4.229,4468,6.938,4509,4.674,4648,3.479,4958,3.993,4959,3.795,4961,3.275,4962,3.348,4963,3.479,4964,3.627,4965,3.627,4966,3.479,4967,3.627,4969,5.891,5164,4.229,5170,6.55,5185,4.008,5186,4.923,5187,6.408,5188,4.923,5189,6.408,5190,5.559,5191,4.923,5192,4.923,5193,4.923,5194,6.408,5195,4.923,5196,4.923,5197,4.526,5198,4.229,5199,4.923,5200,4.923,5201,6.483,5202,6.408,5203,4.923,5204,4.923,5205,4.923,5206,4.923,5207,5.891,5208,4.923,5209,7.125,5210,4.923,5211,4.366,5212,3.795,5213,6.938,5214,4.923,5215,4.923,5216,6.268,5217,3.122,5218,4.496,5219,4.923,5220,4.526,5221,4.526,5222,4.923,5223,3.122,5224,4.229,5225,4.923,5226,6.408,5227,4.923,5228,3.122,5229,3.122,5230,4.923,5231,4.923,5232,6.121,5233,2.933,5234,4.526,5235,4.923,5236,5.891,5237,6.297,5238,3.993,5239,4.923,5240,4.923,5241,4.923,5242,6.032,5243,4.923,5244,4.923,5245,4.526,5246,4.526,5247,4.526,5248,6.408,5249,3.122,5250,6.408,5251,4.923,5252,4.923,5253,4.923,5254,7.125,5255,4.229,5256,4.923,5257,4.923]],["title/additional-documentation/readme/data-readme.html",[373,1.597,472,1.295,671,0.876,3321,1.223]],["body/additional-documentation/readme/data-readme.html",[2,1.564,8,1.899,20,2.862,26,0.006,72,1.355,152,0.276,167,0.265,168,0.311,183,2.146,343,0.005,344,0.006,345,0.005,346,2.066,364,2.44,365,2.535,556,3.445,582,2.69,634,2.69,661,3.277,671,1.715,696,4.095,853,4.563,890,3.433,1199,5.844,1896,5.936,1939,4.563,3903,5.236,4960,2.988,4961,3.29,4962,5.472,5217,4.807,5218,3.846,5259,4.807,5370,4.235,5449,5.547,5482,5.547,5529,5.936,5530,5.936,5531,6.969,5532,7.248,5533,7.248,5534,4.39,5535,4.756]],["title/additional-documentation/readme/ui-readme.html",[472,1.295,671,0.876,1042,2.092,3321,1.223]],["body/additional-documentation/readme/ui-readme.html",[2,1.341,8,1.912,16,3.468,26,0.007,152,0.278,156,2.831,167,0.267,168,0.313,183,2.16,343,0.005,344,0.006,345,0.005,346,1.954,358,4.826,364,2.456,365,2.552,384,2.085,634,2.708,661,3.3,671,1.727,890,2.944,3634,6.501,3831,5.585,3903,5.272,4793,5.976,4960,3.009,4961,3.502,5217,4.826,5218,3.873,5259,4.826,5370,4.264,5449,5.585,5482,5.585,5529,5.976,5530,5.976,5531,6.997,5534,4.42,5535,4.789,5536,6.501,5537,7.297]],["title/additional-documentation/readme/core-readme.html",[472,1.295,556,1.76,671,0.876,3321,1.223]],["body/additional-documentation/readme/core-readme.html",[16,3.555,26,0.006,52,2.064,84,1.285,166,1.447,343,0.005,344,0.006,345,0.005,384,2.477,556,3.555,661,3.919,817,4.532,890,3.497,966,4.909,2690,5.725,3831,5.725,4960,3.084,4961,2.893,5218,3.97,5259,4.226,5449,5.725,5482,5.725,5529,6.127,5530,6.127,5531,6.127,5534,4.532,5536,6.664,5538,7.481,5539,7.481,5540,7.481,5541,7.481,5542,7.481]],["title/additional-documentation/readme/style-readme.html",[472,1.295,671,0.876,3321,1.223,3537,2.543]],["body/additional-documentation/readme/style-readme.html",[6,5.308,26,0.006,152,0.355,183,2.129,343,0.005,344,0.006,345,0.005,389,2.42,472,2.514,488,2.463,502,3.251,581,3.57,634,3.341,649,4.062,661,3.251,830,5.194,910,3.603,1155,2.564,1177,3.706,2196,3.815,2407,5.502,2592,6.118,3538,6.716,4509,4.201,4960,2.964,4961,3.274,4963,5.331,5190,4.718,5217,5.086,5218,3.815,5242,4.938,5259,4.062,5294,8.281,5349,6.405,5534,4.355,5543,7.189,5544,8.468,5545,7.189,5546,7.189,5547,7.189,5548,7.189]],["title/additional-documentation/readme/calendar-readme.html",[472,1.295,671,0.876,862,2.331,3321,1.223]],["body/additional-documentation/readme/calendar-readme.html",[2,1.364,26,0.006,152,0.283,167,0.271,168,0.318,183,2.196,343,0.005,344,0.006,345,0.005,346,1.973,364,2.497,365,2.595,488,2.158,634,2.753,671,1.755,856,5.66,862,4.67,883,4.494,910,3.718,1053,4.335,1274,5.152,1555,6.076,2196,3.937,4960,3.059,4961,3.335,5217,4.873,5218,3.937,5259,4.873,5370,4.335,5534,4.494,5535,4.868]],["title/additional-documentation/readme/location-readme.html",[266,0.876,472,1.295,671,0.876,3321,1.223]],["body/additional-documentation/readme/location-readme.html",[13,4.258,16,3.463,26,0.007,42,1.596,121,0.959,152,0.278,167,0.267,168,0.313,183,2.158,266,1.724,268,1.814,343,0.005,344,0.006,345,0.005,346,1.953,364,2.453,365,2.549,392,2.818,488,2.12,634,2.704,671,1.724,672,3.005,910,3.652,1186,4.782,1210,4.414,1898,4.587,1953,6.492,2035,5.265,2265,4.782,3187,6.167,4960,3.005,4961,3.3,4965,5.941,5217,4.822,5218,3.867,5259,4.822,5370,4.258,5534,4.414,5535,4.782,5549,7.287]],["title/additional-documentation/readme/ace-readme.html",[14,2.243,472,1.295,671,0.876,3321,1.223]],["body/additional-documentation/readme/ace-readme.html",[0,0.418,13,4.213,14,5.459,15,3.109,16,3.426,26,0.006,77,5.904,152,0.355,157,6.422,167,0.264,168,0.309,183,2.134,343,0.005,344,0.006,345,0.005,346,1.94,347,6.128,364,2.426,365,2.521,488,2.467,634,3.345,671,1.706,910,3.613,1195,4.731,2407,5.517,2442,5.517,2592,5.208,3550,4.731,4659,5.517,4960,2.972,4961,3.28,4964,5.914,5164,5.517,5217,4.792,5218,3.826,5259,4.792,5370,4.213,5534,4.367,5535,4.731,5550,8.482,5551,7.208,5552,7.208,5553,7.208]],["title/additional-documentation/readme/medium-editor-readme.html",[15,1.409,277,0.786,472,1.143,671,0.773,3321,1.079]],["body/additional-documentation/readme/medium-editor-readme.html",[13,4.323,15,4.046,16,3.516,26,0.006,152,0.282,167,0.271,168,0.318,183,2.19,200,1.53,277,1.78,343,0.005,344,0.006,345,0.005,346,1.97,364,2.49,365,2.587,488,2.152,634,2.746,671,1.751,910,3.708,4960,3.05,4961,3.33,4966,5.734,5217,4.865,5218,3.926,5259,4.865,5297,7.672,5370,4.323,5534,4.481,5535,4.855]],["title/additional-documentation/readme/tinymce-readme.html",[472,1.295,671,0.876,3321,1.223,4648,2.331]],["body/additional-documentation/readme/tinymce-readme.html",[0,0.425,6,4.689,13,4.288,15,3.165,16,3.487,26,0.007,152,0.28,167,0.268,168,0.315,183,2.172,343,0.005,344,0.006,345,0.005,346,1.961,364,2.47,365,2.566,488,2.134,519,4.288,634,3.181,671,1.736,910,3.677,3550,4.815,4648,4.619,4727,6.192,4960,3.025,4961,3.314,4967,5.958,5217,4.842,5218,3.894,5259,4.842,5318,6.009,5370,4.288,5534,4.445,5535,4.815,5554,7.337,5555,7.337]],["title/additional-documentation/changelog.html",[671,1.011,3321,1.411,4960,1.761]],["body/additional-documentation/changelog.html",[15,3.315,26,0.006,98,2.196,156,2.402,343,0.005,344,0.006,345,0.005,384,2.196,1274,4.342,1749,3.749,3797,4.205,4960,3.169,4961,2.971,4962,4.655,4963,4.838,4964,5.043,4965,5.043,4966,4.838,4967,5.043]],["title/additional-documentation/changelog/data-changelog.html",[373,1.597,671,0.876,3321,1.223,4960,1.527]],["body/additional-documentation/changelog/data-changelog.html",[0,0.187,2,0.904,5,0.657,10,0.133,15,3.488,26,0.006,32,0.761,34,0.919,39,0.343,42,1.113,45,0.526,46,0.614,48,1.381,50,2.609,51,2.629,52,1.357,63,3.336,65,1.224,84,0.554,98,0.923,108,2.644,117,1.901,121,0.647,131,1.536,188,0.574,211,0.832,214,1.85,217,1.475,230,1.763,254,1.857,266,1.409,296,1.988,317,1.245,325,0.777,343,0.002,344,0.003,345,0.002,352,1.303,364,1.087,373,1.393,375,1.824,378,0.668,383,1.535,385,2.218,389,2.519,392,1.901,447,2.534,459,2.806,478,1.767,502,2.692,514,2.218,519,1.887,521,0.973,531,1.744,534,2.218,548,3.692,550,2.278,560,1.175,571,1.575,576,1.535,578,1.887,581,1.361,582,1.825,594,3.377,595,1.175,609,2.873,621,2.984,634,2.21,635,2.033,640,1.956,647,1.956,648,2.033,650,1.901,667,2.119,671,0.764,695,1.956,707,2.471,727,3.763,737,2.644,757,1.223,765,1.956,787,3.748,793,2.644,899,4.027,912,2.119,919,1.248,922,3.907,939,1.664,965,1.496,1025,2.644,1033,1.824,1038,2.873,1067,3.587,1114,3.377,1135,2.333,1139,2.876,1150,3.552,1155,1.753,1159,3.763,1164,2.333,1166,2.471,1167,1.767,1177,2.534,1180,1.956,1184,1.956,1187,1.956,1223,1.956,1244,1.887,1268,2.876,1281,1.824,1305,1.575,1308,2.218,1329,1.767,1334,2.471,1342,2.534,1435,1.956,1462,2.471,1587,2.876,1592,2.876,1596,2.333,1674,4.701,1678,2.337,1690,2.873,1739,3.552,1745,1.575,1748,1.887,1762,1.887,1765,1.887,1773,1.956,1774,1.887,1793,2.333,1828,2.119,1864,2.644,1865,2.033,1867,2.333,1892,2.119,1898,2.033,1943,2.033,1986,2.218,2034,2.471,2086,3.552,2091,2.333,2098,1.824,2140,2.644,2450,2.876,2544,2.471,2546,3.552,2547,4.921,2566,3.226,2590,3.552,2770,2.644,2869,2.333,2874,2.471,2875,2.644,2939,2.471,3093,2.333,3341,2.471,3536,2.471,3559,5.094,3600,1.767,3652,3.763,3785,5.554,3797,2.69,3852,2.644,3896,4.41,4009,5.165,4109,2.644,4252,4.027,4295,2.876,4322,2.876,4324,4.38,4793,2.644,4959,2.218,4961,3.65,4962,5.718,5185,1.618,5211,1.664,5223,1.824,5228,1.824,5229,1.824,5233,5.01,5249,1.824,5260,3.89,5262,2.644,5397,2.644,5444,2.876,5464,2.876,5470,2.876,5556,1.956,5557,1.956,5558,2.978,5559,1.956,5560,3.229,5561,6.03,5562,5.445,5563,5.718,5564,3.229,5565,5.775,5566,2.876,5567,3.229,5568,3.229,5569,3.229,5570,5.882,5571,5.862,5572,2.876,5573,4.027,5574,2.644,5575,3.229,5576,3.229,5577,3.229,5578,3.229,5579,5.489,5580,4.916,5581,3.229,5582,3.229,5583,3.229,5584,3.229,5585,3.229,5586,3.229,5587,2.876,5588,2.644,5589,2.644,5590,3.229,5591,3.763,5592,2.644,5593,2.876,5594,3.229,5595,3.229,5596,3.229,5597,3.229,5598,3.229,5599,5.899,5600,5.094,5601,3.229,5602,3.229,5603,4.916,5604,3.229,5605,3.229,5606,3.229,5607,3.229,5608,3.229,5609,3.229,5610,3.229,5611,2.644,5612,2.644,5613,3.229,5614,3.229,5615,4.876,5616,3.229,5617,3.229,5618,3.229,5619,2.644,5620,2.644,5621,3.229,5622,2.644,5623,2.644,5624,3.229,5625,3.229,5626,3.229,5627,5.624,5628,3.229,5629,4.753,5630,3.229,5631,3.229,5632,2.876,5633,4.916,5634,4.38,5635,4.38,5636,1.956,5637,1.956,5638,4.38,5639,3.229,5640,3.229,5641,2.644,5642,3.229,5643,3.229,5644,2.644,5645,2.644,5646,2.471,5647,3.229,5648,3.229,5649,3.229,5650,3.229,5651,2.644,5652,3.229,5653,3.229,5654,4.027,5655,3.229,5656,3.229,5657,2.876,5658,3.229,5659,3.229,5660,3.229,5661,3.229,5662,3.229,5663,2.876,5664,2.876,5665,2.876,5666,3.229,5667,3.229,5668,3.229,5669,3.229,5670,3.229,5671,5.489,5672,3.229,5673,2.644,5674,2.644,5675,3.229,5676,4.339,5677,3.229,5678,3.229,5679,3.229,5680,2.876,5681,3.229,5682,3.229,5683,2.876,5684,2.644,5685,3.229,5686,3.229,5687,2.876,5688,2.876,5689,2.876,5690,3.229,5691,3.229,5692,3.229,5693,3.229,5694,3.229,5695,3.229,5696,3.229,5697,3.229,5698,3.229,5699,3.229,5700,3.229,5701,2.876,5702,2.644,5703,2.876,5704,4.916,5705,3.229,5706,2.876,5707,2.876,5708,3.229,5709,2.876,5710,3.229,5711,3.229,5712,3.229,5713,4.339,5714,3.229,5715,3.229,5716,3.229,5717,3.229,5718,2.876,5719,3.229,5720,2.876,5721,3.229,5722,3.229,5723,3.229,5724,3.229,5725,3.229,5726,2.876,5727,2.876,5728,3.229,5729,2.876,5730,3.229,5731,2.876,5732,3.229,5733,3.229,5734,3.229,5735,3.229,5736,3.229,5737,3.229,5738,3.229,5739,3.229,5740,2.876,5741,2.876,5742,2.876,5743,3.229,5744,3.229,5745,3.229,5746,3.229,5747,3.229,5748,3.229,5749,2.876,5750,2.876,5751,2.876,5752,3.229,5753,3.229,5754,2.644,5755,3.229,5756,3.229,5757,2.876,5758,2.876,5759,3.229,5760,3.229,5761,3.229,5762,2.876,5763,2.876,5764,3.229,5765,3.229,5766,3.229,5767,3.229,5768,3.229,5769,3.229,5770,3.229,5771,3.229,5772,2.876,5773,2.876,5774,2.644,5775,2.644,5776,2.876,5777,2.876,5778,2.876,5779,3.229,5780,3.229,5781,2.876]],["title/additional-documentation/changelog/ui-changelog.html",[671,0.876,1042,2.092,3321,1.223,4960,1.527]],["body/additional-documentation/changelog/ui-changelog.html",[0,0.387,2,0.722,5,0.798,10,0.162,15,3.354,26,0.006,32,1.034,34,1.063,42,1.632,44,2.471,46,0.746,47,2.849,48,2.057,51,2.51,53,2.576,55,2.083,63,2.849,65,1.664,78,2.023,84,0.976,98,1.122,101,0.47,108,3.215,121,0.748,131,1.776,139,2.217,145,2.217,152,0.217,156,2.805,167,0.144,214,1.779,217,1.522,230,1.337,235,0.977,254,1.745,296,0.868,343,0.003,344,0.004,345,0.003,352,1.583,364,1.321,378,0.812,383,1.866,385,2.696,389,2.094,392,1.518,400,1.028,447,2.023,531,1.751,548,4.008,560,1.428,569,2.083,582,1.457,594,3.904,595,1.428,621,3.349,634,2.48,640,2.378,650,2.198,665,1.967,761,1.693,765,3.443,919,1.518,922,4.808,939,2.023,965,1.819,1042,2.217,1067,3.482,1135,2.836,1150,4.107,1159,3.004,1164,4.828,1180,2.378,1184,2.378,1223,3.443,1241,2.576,1244,3.322,1281,2.217,1290,2.836,1305,1.915,1329,2.148,1334,3.004,1342,4.178,1435,2.378,1565,3.004,1618,2.696,1674,4.808,1678,3.176,1680,2.696,1739,4.107,1745,1.915,1748,3.322,1765,2.294,1773,3.443,1774,2.294,1828,2.576,1863,3.004,1865,2.471,1867,2.836,1871,3.904,1891,3.004,1986,2.696,1999,2.576,2086,2.836,2091,2.836,2098,2.217,2140,3.215,2521,3.004,2525,3.215,2547,4.723,2559,3.215,2635,3.497,2648,3.322,2770,3.215,2869,2.836,2872,3.004,2874,3.004,2875,3.215,2939,3.004,3093,2.836,3115,2.576,3341,3.004,3356,3.497,3439,3.215,3536,3.004,3559,4.35,3600,3.11,3652,3.004,3655,3.497,3785,5.993,3797,2.148,3896,4.281,3903,2.836,4009,4.911,4109,3.215,4510,2.836,4525,2.836,4583,4.655,4959,2.696,4961,3.508,5185,1.967,5211,2.023,5223,2.217,5228,2.217,5229,2.217,5233,4.763,5249,2.217,5260,4.281,5262,3.215,5556,2.378,5557,2.378,5558,2.378,5559,2.378,5561,6.018,5562,5.437,5563,5.437,5565,5.951,5566,3.497,5570,5.898,5571,5.886,5572,3.497,5573,4.655,5574,3.215,5579,5.496,5588,3.215,5589,3.215,5591,6.399,5592,5.473,5593,3.497,5599,5.487,5600,3.004,5611,3.215,5612,3.215,5615,4.655,5619,3.215,5620,3.215,5622,3.215,5623,3.215,5627,5.696,5629,4.91,5632,3.497,5636,2.378,5637,2.378,5638,5.064,5644,3.215,5645,3.215,5646,3.004,5651,3.215,5654,3.215,5663,3.497,5664,3.497,5665,3.497,5671,5.065,5673,4.655,5674,3.215,5676,4.048,5680,3.497,5683,3.497,5684,3.215,5701,3.497,5702,3.215,5703,3.497,5706,3.497,5707,3.497,5709,3.497,5713,4.71,5718,3.497,5720,3.497,5726,3.497,5727,3.497,5731,3.497,5740,3.497,5741,3.497,5742,3.497,5749,3.497,5750,3.497,5751,3.497,5754,3.215,5757,3.497,5758,3.497,5762,3.497,5763,3.497,5772,3.497,5773,3.497,5774,3.215,5775,3.215,5778,3.497,5781,3.497,5782,3.925,5783,3.925,5784,3.925,5785,3.925,5786,3.925,5787,3.925,5788,3.925,5789,3.925,5790,3.925,5791,3.925,5792,3.925,5793,3.925,5794,3.925,5795,3.925,5796,3.925,5797,3.925,5798,3.925,5799,3.925,5800,3.925,5801,3.925,5802,3.925,5803,3.925,5804,3.925,5805,3.925,5806,3.925,5807,3.925,5808,3.925,5809,3.925,5810,5.684,5811,5.684,5812,5.684,5813,5.684,5814,3.925,5815,3.925,5816,3.925,5817,3.925,5818,3.925,5819,3.925,5820,3.925,5821,3.925,5822,3.925,5823,3.925,5824,3.925,5825,3.925,5826,3.925,5827,3.497,5828,3.497,5829,3.497,5830,3.925,5831,3.925,5832,3.497,5833,3.497,5834,3.497,5835,3.497,5836,3.497,5837,3.497,5838,3.497,5839,3.925,5840,3.925,5841,3.925,5842,3.925,5843,3.925,5844,3.925,5845,3.925,5846,3.925,5847,3.925,5848,3.925,5849,3.925,5850,3.215,5851,3.925,5852,3.925,5853,3.925,5854,3.925,5855,3.925,5856,3.925,5857,3.925,5858,3.925,5859,3.925,5860,3.925,5861,3.925,5862,3.925,5863,3.925,5864,3.925,5865,3.925,5866,3.925,5867,3.925,5868,3.925,5869,3.925,5870,3.925,5871,3.925,5872,3.925,5873,3.925,5874,3.925,5875,3.925,5876,3.925,5877,3.925,5878,3.925,5879,3.497,5880,3.925,5881,3.497,5882,3.925,5883,3.925,5884,3.925]],["title/additional-documentation/changelog/core-changelog.html",[556,1.76,671,0.876,3321,1.223,4960,1.527]],["body/additional-documentation/changelog/core-changelog.html",[2,1.05,10,0.236,15,2.462,26,0.006,34,1.067,45,0.931,65,1.421,98,2.099,131,1.784,188,1.014,217,1.261,230,1.142,254,1.142,343,0.004,344,0.005,345,0.004,383,3.492,384,2.725,392,2.841,502,2.581,531,1.496,548,2.943,560,2.077,569,3.03,571,2.785,576,2.713,578,3.336,595,2.077,634,2.119,922,3.746,965,2.646,1135,4.125,1281,3.225,1329,3.124,1334,4.369,1342,3.787,1435,3.458,1446,4.125,1773,3.458,1774,3.336,1864,4.676,1865,3.594,1943,3.594,1986,3.921,2091,4.125,2544,4.369,2547,4.589,2590,4.125,2648,3.336,2793,5.086,2869,5.308,2872,4.369,3093,5.308,3542,5.086,3559,4.369,3652,4.369,3785,6.346,3797,3.124,3896,3.336,4009,5.217,4961,3.686,5185,2.861,5211,2.943,5223,3.225,5228,3.225,5229,3.225,5233,5.06,5249,3.225,5260,4.747,5556,3.458,5557,3.458,5558,3.458,5559,3.458,5561,6.01,5562,4.921,5563,5.775,5570,5.375,5571,5.375,5579,5.375,5587,5.086,5588,4.676,5589,4.676,5599,5.628,5611,4.676,5612,4.676,5619,4.676,5620,4.676,5622,4.676,5623,4.676,5627,5.728,5629,4.921,5636,3.458,5637,3.458,5646,4.369,5651,4.676,5654,4.676,5671,5.375,5673,4.676,5674,4.676,5676,4.921,5684,4.676,5713,5.195,5729,5.086,5754,4.676,5774,4.676,5775,4.676,5776,5.086,5777,5.086,5827,5.086,5828,5.086,5829,5.086,5850,4.676,5881,5.086,5885,5.709,5886,5.709,5887,5.709,5888,5.709,5889,5.709,5890,5.709,5891,5.709,5892,5.709,5893,5.709,5894,5.709,5895,5.086,5896,5.086,5897,5.709,5898,5.709,5899,5.709,5900,5.709,5901,5.709,5902,5.709,5903,5.709,5904,5.709,5905,5.709,5906,5.709,5907,5.709,5908,5.709,5909,5.709]],["title/additional-documentation/changelog/style-changelog.html",[671,0.876,3321,1.223,3537,2.543,4960,1.527]],["body/additional-documentation/changelog/style-changelog.html",[10,0.259,26,0.006,34,1.458,42,1.173,63,3.143,98,1.792,102,0.653,131,1.96,217,1.077,254,1.697,296,1.725,343,0.004,344,0.005,345,0.004,389,2.228,514,4.307,521,1.89,548,3.232,560,2.281,569,3.328,595,2.281,922,4.115,1164,4.531,1342,3.232,1435,3.799,1773,3.799,2155,5.136,2547,3.543,2872,4.799,3600,3.431,3785,4.307,3797,3.431,3896,3.665,4009,5.26,4961,3.718,4963,6.052,5168,5.587,5185,3.143,5211,3.232,5223,3.543,5228,3.543,5229,3.543,5233,5.102,5249,3.543,5260,4.556,5556,3.799,5557,3.799,5558,3.799,5559,3.799,5561,5.984,5562,3.799,5563,5.824,5570,5.529,5571,5.529,5579,5.376,5599,4.115,5627,5.863,5629,5.139,5636,3.799,5637,3.799,5644,5.136,5645,5.136,5646,4.799,5671,5.139,5676,3.799,5687,5.587,5688,5.587,5689,5.587,5702,5.136,5713,5.376,5850,5.136,5895,5.587,5896,5.587,5910,6.271,5911,6.271,5912,6.271,5913,6.271,5914,6.271,5915,6.271,5916,6.271,5917,6.271,5918,6.271,5919,6.271,5920,6.271,5921,6.271,5922,6.271,5923,6.271]],["title/additional-documentation/changelog/calendar-changelog.html",[671,0.876,862,2.331,3321,1.223,4960,1.527]],["body/additional-documentation/changelog/calendar-changelog.html",[10,0.262,15,2.734,26,0.005,98,1.811,343,0.004,344,0.005,345,0.004,560,2.305,595,2.305,621,3.177,1241,4.159,1274,5.507,2939,4.851,3797,3.468,3896,3.704,4009,5.333,4961,3.769,5185,3.177,5211,3.267,5223,3.581,5228,3.581,5229,3.581,5233,5.173,5249,3.581,5260,4.981,5556,3.839,5557,3.839,5558,3.839,5559,3.839,5561,6.005,5562,4.754,5563,5.904,5565,4.851,5570,5.396,5571,5.396,5573,5.191,5574,5.191,5579,5.396,5591,6.006,5599,4.159,5615,6.427,5627,5.787,5629,4.754,5636,3.839,5637,3.839,5671,4.754,5676,4.754,5713,5.396,5832,5.646,5833,5.646,5834,5.646,5835,5.646,5836,5.646,5837,5.646,5838,5.646,5924,6.338,5925,6.338,5926,6.338,5927,6.338,5928,6.338,5929,7.847,5930,6.338,5931,6.338,5932,6.338,5933,6.338,5934,6.338,5935,6.338,5936,6.338,5937,6.338,5938,6.338,5939,5.646,5940,6.338,5941,6.338,5942,6.338]],["title/additional-documentation/changelog/location-changelog.html",[266,0.876,671,0.876,3321,1.223,4960,1.527]],["body/additional-documentation/changelog/location-changelog.html",[10,0.265,26,0.005,50,4.195,53,4.209,98,1.833,266,1.871,343,0.004,344,0.005,345,0.004,560,2.333,595,2.333,3212,7.043,3797,3.509,3896,4.62,4009,5.314,4961,3.755,4965,6.374,5185,3.215,5211,3.306,5223,3.623,5228,3.623,5229,3.623,5233,5.154,5249,3.623,5260,4.62,5556,3.885,5557,3.885,5558,3.885,5559,3.885,5561,5.998,5562,4.789,5563,5.883,5565,4.909,5570,5.419,5571,5.419,5579,5.191,5591,4.909,5592,5.253,5599,4.209,5600,4.909,5627,5.743,5629,4.789,5634,7.043,5635,7.043,5636,3.885,5637,3.885,5657,5.714,5671,5.191,5676,4.789,5713,5.419,5943,6.414,5944,6.414,5945,6.414,5946,6.414,5947,6.414,5948,6.414,5949,6.414,5950,6.414,5951,7.905,5952,6.414,5953,6.414,5954,6.414,5955,6.414,5956,6.414,5957,6.414,5958,6.414,5959,6.414,5960,6.414]],["title/additional-documentation/changelog/ace-changelog.html",[14,2.243,671,0.876,3321,1.223,4960,1.527]],["body/additional-documentation/changelog/ace-changelog.html",[10,0.273,14,4.871,26,0.005,98,1.885,343,0.004,344,0.005,345,0.004,560,2.399,595,2.399,1042,3.726,3797,3.609,3896,3.854,4009,5.336,4961,3.771,4964,6.4,5185,3.306,5211,3.4,5223,3.726,5228,3.726,5229,3.726,5233,5.176,5249,4.543,5260,4.7,5556,3.995,5557,3.995,5558,3.995,5559,3.995,5561,5.981,5562,3.995,5563,5.908,5570,4.871,5571,4.871,5579,5.256,5599,4.328,5600,5.048,5627,5.776,5629,4.871,5636,3.995,5637,3.995,5641,5.402,5671,4.871,5676,4.871,5713,5.471,5961,6.595,5962,6.595,5963,6.595,5964,8.042,5965,6.595,5966,6.595,5967,6.595,5968,6.595,5969,6.595,5970,6.595,5971,6.595,5972,6.595,5973,6.595,5974,6.595]],["title/additional-documentation/changelog/medium-editor-changelog.html",[15,1.409,277,0.786,671,0.773,3321,1.079,4960,1.347]],["body/additional-documentation/changelog/medium-editor-changelog.html",[10,0.274,15,4.209,26,0.005,98,1.892,343,0.004,344,0.005,345,0.004,560,2.408,595,2.408,3797,3.622,3896,3.869,4009,5.339,4961,3.773,4966,6.143,5185,3.318,5211,3.412,5223,3.74,5228,3.74,5229,3.74,5233,5.179,5249,3.74,5260,4.71,5556,4.01,5557,4.01,5558,4.01,5559,4.01,5561,5.964,5562,4.01,5563,5.911,5570,4.01,5571,4.01,5579,5.264,5627,5.781,5629,4.882,5636,4.01,5637,4.01,5671,4.882,5676,4.882,5713,5.478,5975,6.62,5976,8.06,5977,6.62,5978,6.62,5979,6.62,5980,6.62,5981,6.62,5982,6.62,5983,6.62,5984,6.62,5985,6.62]],["title/additional-documentation/changelog/tinymce-changelog.html",[671,0.876,3321,1.223,4648,2.331,4960,1.527]],["body/additional-documentation/changelog/tinymce-changelog.html",[0,0.377,10,0.269,16,3.089,26,0.005,55,3.449,62,3.937,98,1.857,133,2.622,343,0.004,344,0.005,345,0.004,560,2.364,571,3.171,595,2.364,650,2.513,2546,4.696,3797,3.556,3896,4.658,4009,5.325,4648,5.017,4961,3.763,4967,6.386,5185,3.258,5211,3.35,5223,3.672,5228,3.672,5229,3.672,5233,5.191,5249,3.672,5260,4.658,5556,3.937,5557,3.937,5558,3.937,5559,3.937,5561,5.971,5562,3.937,5563,5.895,5570,5.222,5571,5.222,5579,5.222,5627,5.815,5629,4.828,5636,3.937,5637,3.937,5671,4.828,5676,4.828,5713,5.444,5986,6.499,5987,7.97,5988,6.499,5989,6.499,5990,6.499,5991,6.499,5992,6.499,5993,6.499,5994,6.499,5995,6.499,5996,6.499,5997,6.499,5998,6.499,5999,6.499,6000,6.499,6001,6.499,6002,6.499,6003,6.499]],["title/additional-documentation/adding-new-packages.html",[84,0.561,671,0.773,3321,1.079,5190,2.144,5212,2.244]],["body/additional-documentation/adding-new-packages.html",[26,0.007,45,1.042,73,2.635,78,3.294,79,3.294,84,1.576,98,1.826,101,0.944,152,0.35,183,1.892,343,0.004,344,0.005,345,0.004,349,2.421,364,2.655,373,3.854,387,5.183,519,3.735,560,2.325,582,2.372,634,3.406,664,4.316,665,3.203,671,1.512,719,4.194,771,5.693,898,5.693,906,4.023,909,3.735,910,3.203,928,4.891,929,4.023,1020,4.778,1074,4.066,1118,4.966,1195,4.194,1462,4.891,1794,6.46,1912,5.176,1967,4.389,2196,4.186,2358,5.234,2422,4.023,2442,4.891,2546,6.182,2648,3.735,2658,5.386,2964,6.46,3084,4.891,3550,4.194,4007,6.46,4151,5.234,4960,2.635,4961,3.455,5190,4.194,5201,4.891,5207,5.234,5212,4.389,5216,4.194,5221,5.234,5232,4.891,5233,3.392,5237,5.876,5242,5.417,5279,7.007,5285,5.693,5318,5.234,5641,5.234,5879,5.693,6004,6.391,6005,7.888,6006,6.391,6007,8.556,6008,6.391,6009,6.391,6010,6.391,6011,6.391,6012,6.391,6013,6.391,6014,6.391,6015,6.391,6016,6.391,6017,6.391,6018,6.391,6019,6.391,6020,7.888,6021,7.888,6022,6.391,6023,6.391,6024,6.391,6025,6.391,6026,6.391,6027,6.391,6028,6.391,6029,6.391,6030,6.391,6031,7.888,6032,7.888,6033,6.391]],["title/additional-documentation/stackblitz.html",[671,1.011,3321,1.411,6034,3.805]],["body/additional-documentation/stackblitz.html",[2,1.356,6,4.037,16,3.506,26,0.007,152,0.347,167,0.27,168,0.317,343,0.005,344,0.006,345,0.005,346,1.688,364,2.483,365,2.58,488,2.146,582,2.738,634,2.738,856,5.642,1274,4.857,2196,3.915,2407,5.646,4511,6.042,5370,4.311,5939,6.573,6034,7.659,6035,7.377,6036,7.377,6037,7.377,6038,7.377]],["title/additional-documentation/publishing.html",[671,1.011,3321,1.411,6039,4.271]],["body/additional-documentation/publishing.html",[0,0.424,5,1.74,26,0.006,78,3.772,79,3.772,84,1.256,183,2.166,272,1.791,275,2.258,343,0.005,344,0.006,345,0.005,395,2.889,488,2.128,501,3.478,531,1.917,545,5.493,582,3.175,634,3.175,646,5.025,654,7.008,909,4.276,910,3.667,1024,5.183,1154,3.478,1678,3.478,2196,3.883,3272,5.993,4509,4.276,5185,3.667,5211,3.772,5335,6.552,5374,6.549,5387,5.993,5397,5.993,5398,6.519,5399,6.519,5400,6.519,5401,6.519]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["0",{"_index":960,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["0.12.3\",in",{"_index":5317,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["0.18.10",{"_index":5954,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.11",{"_index":5953,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.12",{"_index":5952,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.13",{"_index":5951,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.14",{"_index":5946,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.15",{"_index":5945,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.16",{"_index":5943,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.3",{"_index":5960,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.4",{"_index":5959,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.5",{"_index":5958,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.6",{"_index":5957,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.7",{"_index":5657,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.8",{"_index":5956,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.9",{"_index":5955,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.19.10",{"_index":5902,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.11",{"_index":5901,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.12",{"_index":5900,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.6",{"_index":5906,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.7",{"_index":5905,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.8",{"_index":5904,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.9",{"_index":5903,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.2.10",{"_index":5935,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.11",{"_index":5934,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.12",{"_index":5933,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.13",{"_index":5930,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.14",{"_index":5929,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.15",{"_index":5926,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.16",{"_index":5925,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.17",{"_index":5924,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.3",{"_index":5942,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.4",{"_index":5941,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.5",{"_index":5940,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.6",{"_index":5939,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["0.2.7",{"_index":5938,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.8",{"_index":5937,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.9",{"_index":5936,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.20.0",{"_index":5899,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.1",{"_index":5898,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.2",{"_index":5897,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.21.0",{"_index":5896,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.1",{"_index":5921,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.2",{"_index":5920,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.3",{"_index":5919,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.4",{"_index":5168,"title":{},"body":{"dependencies.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.5",{"_index":5918,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.6",{"_index":5917,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.0",{"_index":5895,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.1",{"_index":5916,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.2",{"_index":5915,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.3",{"_index":5914,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.4",{"_index":5913,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.5",{"_index":5912,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.6",{"_index":5911,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.7",{"_index":5910,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.0",{"_index":5894,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.0",{"_index":5892,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.1",{"_index":5891,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.2",{"_index":5890,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.3",{"_index":5889,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.0",{"_index":5888,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.1",{"_index":5887,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.25.2",{"_index":5886,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.26.0",{"_index":5885,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.36.10",{"_index":5857,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.11",{"_index":5856,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.12",{"_index":5855,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.13",{"_index":5854,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.14",{"_index":5853,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.15",{"_index":5852,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.4",{"_index":5868,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.5",{"_index":5867,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.6",{"_index":5866,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.7",{"_index":5865,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.8",{"_index":5862,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.9",{"_index":5858,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.0",{"_index":5849,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.1",{"_index":5847,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.2",{"_index":5846,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.3",{"_index":5845,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.4",{"_index":5844,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.38.0",{"_index":5843,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.0",{"_index":5842,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.1",{"_index":5839,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.2",{"_index":5831,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.3",{"_index":5830,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.4.10",{"_index":5978,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.11",{"_index":5977,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.12",{"_index":5976,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.13",{"_index":5975,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.3",{"_index":5985,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.4",{"_index":5984,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.5",{"_index":5983,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.6",{"_index":5982,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.7",{"_index":5981,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.8",{"_index":5980,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.9",{"_index":5979,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.40.0",{"_index":5822,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.0",{"_index":5814,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.1",{"_index":5810,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.2",{"_index":5809,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.3",{"_index":5806,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.4",{"_index":5803,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.5",{"_index":5802,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.6",{"_index":5800,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.0",{"_index":5798,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.1",{"_index":5797,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.10",{"_index":5721,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.11",{"_index":5719,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.12",{"_index":5717,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.13",{"_index":5716,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.14",{"_index":5715,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.15",{"_index":5714,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.16",{"_index":5712,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.2",{"_index":5796,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.3",{"_index":5795,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.4",{"_index":5727,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.5",{"_index":5726,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.6",{"_index":5725,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.7",{"_index":5724,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.8",{"_index":5723,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.9",{"_index":5722,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.0",{"_index":5709,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.1",{"_index":5707,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.10",{"_index":5685,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.2",{"_index":5706,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.3",{"_index":5703,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.4",{"_index":5701,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.43.5",{"_index":5697,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.6",{"_index":5695,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.7",{"_index":5693,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.8",{"_index":5690,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.9",{"_index":5686,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.0",{"_index":5683,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.44.1",{"_index":5680,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["0.44.2",{"_index":5675,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.0",{"_index":5672,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.1",{"_index":5670,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.2",{"_index":5667,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.3",{"_index":5666,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.4",{"_index":5662,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.5",{"_index":5659,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.6",{"_index":5653,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.0",{"_index":5643,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.1",{"_index":5639,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.2",{"_index":5633,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.3",{"_index":5631,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.4",{"_index":5630,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.5",{"_index":5628,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.6",{"_index":5626,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.7",{"_index":5625,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.8",{"_index":5624,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.0",{"_index":5621,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.1",{"_index":5618,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.2",{"_index":5616,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.3",{"_index":5614,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.4",{"_index":5609,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.5",{"_index":5608,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.6",{"_index":5605,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.7",{"_index":5602,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.8",{"_index":5598,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.47.9",{"_index":5590,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.0",{"_index":5585,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.1",{"_index":5583,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.2",{"_index":5578,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.3",{"_index":5575,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.4",{"_index":5569,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.5",{"_index":5568,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.48.6",{"_index":5567,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.49.0",{"_index":5564,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.49.1",{"_index":5560,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.5.10",{"_index":5990,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.11",{"_index":5989,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.12",{"_index":5988,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.13",{"_index":5987,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.14",{"_index":5986,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.3",{"_index":6001,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.4",{"_index":6000,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.5",{"_index":5999,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.6",{"_index":5998,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.7",{"_index":5993,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.8",{"_index":5992,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.9",{"_index":5991,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.6.10",{"_index":5967,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.11",{"_index":5966,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.12",{"_index":5964,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.13",{"_index":5962,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.14",{"_index":5961,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.3",{"_index":5974,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.4",{"_index":5973,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.5",{"_index":5972,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.6",{"_index":5971,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.7",{"_index":5970,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.8",{"_index":5969,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.9",{"_index":5968,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.8.29",{"_index":5180,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4974,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5058,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":5144,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":5075,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5143,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":5076,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5145,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5077,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5111,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5125,"title":{},"body":{"coverage.html":{}}}],["00a2e2e",{"_index":6002,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["00dbf0",{"_index":3457,"title":{},"body":{"components/MenuComponent.html":{}}}],["01",{"_index":5627,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["01d1130",{"_index":5584,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["02",{"_index":5671,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["020e689",{"_index":5753,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0256008",{"_index":5652,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["03",{"_index":5579,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["04",{"_index":5599,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["041cd83",{"_index":5817,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["04fffbd",{"_index":5758,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["05",{"_index":5562,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["06b615c",{"_index":5739,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0777809",{"_index":5838,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["08",{"_index":5615,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["0b433be",{"_index":5736,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0dbce91",{"_index":5805,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0dd22f6",{"_index":5620,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["1",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["1&&!pagination?.isfirst",{"_index":3987,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1&&!pagination?.islast",{"_index":3991,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1)[0",{"_index":988,"title":{},"body":{"classes/Collection.html":{}}}],["1.0.0",{"_index":5158,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":5174,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":5169,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":5341,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1.4.3",{"_index":5165,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":5178,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4973,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1912,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["10/10",{"_index":4982,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":5149,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":5128,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1495,"title":{},"body":{"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["10004",{"_index":1502,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["10m",{"_index":2827,"title":{},"body":{"components/ListComponent.html":{}}}],["11",{"_index":6031,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["11/12",{"_index":5079,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":5016,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":5136,"title":{},"body":{"coverage.html":{}}}],["11/18",{"_index":5013,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1986,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["12/12",{"_index":4999,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":5057,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":5049,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":5103,"title":{},"body":{"coverage.html":{}}}],["12/20",{"_index":5031,"title":{},"body":{"coverage.html":{}}}],["12/30",{"_index":5087,"title":{},"body":{"coverage.html":{}}}],["121566c",{"_index":5771,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["13/16",{"_index":5026,"title":{},"body":{"coverage.html":{}}}],["13/29",{"_index":5039,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":5262,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["14/18",{"_index":5029,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":5081,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":5676,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["15/25",{"_index":5041,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":4989,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":5062,"title":{},"body":{"coverage.html":{}}}],["16/28",{"_index":5100,"title":{},"body":{"coverage.html":{}}}],["17/22",{"_index":5073,"title":{},"body":{"coverage.html":{}}}],["18/21",{"_index":5107,"title":{},"body":{"coverage.html":{}}}],["18/28",{"_index":5065,"title":{},"body":{"coverage.html":{}}}],["187",{"_index":5743,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["19",{"_index":5261,"title":{},"body":{"overview.html":{}}}],["1].id",{"_index":420,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["1].indexof(tab.route",{"_index":4633,"title":{},"body":{"components/TabsComponent.html":{}}}],["1].property",{"_index":3031,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["1c382d1",{"_index":5763,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1cb8b1c",{"_index":5880,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["1cfc328",{"_index":5731,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1d9e231",{"_index":5872,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2",{"_index":909,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["2.0.1",{"_index":5173,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":5345,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.6.5",{"_index":5167,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":5517,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["2/2",{"_index":5074,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5124,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2823,"title":{},"body":{"components/ListComponent.html":{}}}],["20/21",{"_index":5146,"title":{},"body":{"coverage.html":{}}}],["20/23",{"_index":5044,"title":{},"body":{"coverage.html":{}}}],["20/26",{"_index":4972,"title":{},"body":{"coverage.html":{}}}],["20/28",{"_index":5122,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2448,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":3118,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2019",{"_index":5561,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["21",{"_index":5260,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["21/22",{"_index":5147,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":5654,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["22/22",{"_index":5007,"title":{},"body":{"coverage.html":{}}}],["22/24",{"_index":5002,"title":{},"body":{"coverage.html":{}}}],["22/28",{"_index":5131,"title":{},"body":{"coverage.html":{}}}],["22/36",{"_index":5082,"title":{},"body":{"coverage.html":{}}}],["229",{"_index":5927,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["232",{"_index":5832,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["237",{"_index":5664,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["24",{"_index":5565,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["24868b9",{"_index":5751,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["25",{"_index":3896,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["25/26",{"_index":5148,"title":{},"body":{"coverage.html":{}}}],["25/31",{"_index":5135,"title":{},"body":{"coverage.html":{}}}],["25/36",{"_index":4981,"title":{},"body":{"coverage.html":{}}}],["25/42",{"_index":5053,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":5931,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["259",{"_index":5592,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["25a36aa",{"_index":5851,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["26",{"_index":5600,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["26/26",{"_index":5003,"title":{},"body":{"coverage.html":{}}}],["26/38",{"_index":4985,"title":{},"body":{"coverage.html":{}}}],["261",{"_index":5791,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["263",{"_index":1813,"title":{},"body":{"injectables/EntryService.html":{}}}],["267",{"_index":5793,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["27",{"_index":4109,"title":{},"body":{"injectables/PopService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["27/27",{"_index":5027,"title":{},"body":{"coverage.html":{}}}],["276",{"_index":5782,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["277",{"_index":5663,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["28",{"_index":5713,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["2826ac4",{"_index":5768,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["289",{"_index":5823,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["29",{"_index":5629,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["29/31",{"_index":4998,"title":{},"body":{"coverage.html":{}}}],["29/37",{"_index":5134,"title":{},"body":{"coverage.html":{}}}],["29/40",{"_index":5090,"title":{},"body":{"coverage.html":{}}}],["293",{"_index":5603,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["29a9e1",{"_index":3456,"title":{},"body":{"components/MenuComponent.html":{}}}],["2b0b354",{"_index":5669,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["2d2e536",{"_index":5589,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["2e0756e",{"_index":5790,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2e97a10",{"_index":5649,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["3",{"_index":910,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["3.13.1",{"_index":5171,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":4990,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":5032,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5014,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":5071,"title":{},"body":{"coverage.html":{}}}],["30/31",{"_index":4994,"title":{},"body":{"coverage.html":{}}}],["30/35",{"_index":5086,"title":{},"body":{"coverage.html":{}}}],["30/42",{"_index":5046,"title":{},"body":{"coverage.html":{}}}],["30/44",{"_index":4987,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":3185,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["32/35",{"_index":5115,"title":{},"body":{"coverage.html":{}}}],["32/47",{"_index":5040,"title":{},"body":{"coverage.html":{}}}],["330",{"_index":5611,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["336ba95",{"_index":5595,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["34/44",{"_index":5088,"title":{},"body":{"coverage.html":{}}}],["343",{"_index":5596,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["348",{"_index":5594,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["35/66",{"_index":5110,"title":{},"body":{"coverage.html":{}}}],["35022a6",{"_index":5645,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["36/53",{"_index":5139,"title":{},"body":{"coverage.html":{}}}],["363",{"_index":5786,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["364",{"_index":5576,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["364482b",{"_index":5767,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["373bebf",{"_index":5923,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["38",{"_index":5126,"title":{},"body":{"coverage.html":{}}}],["388924d",{"_index":5586,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["39;muffin",{"_index":3650,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["3fb8f47",{"_index":5878,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["3fe4aaf",{"_index":5582,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4",{"_index":3550,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["4.3.6",{"_index":5342,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.4",{"_index":5994,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["4.9.3",{"_index":5176,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4995,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":5121,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":5120,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5033,"title":{},"body":{"coverage.html":{}}}],["40/44",{"_index":5037,"title":{},"body":{"coverage.html":{}}}],["40/46",{"_index":5083,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2490,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["42",{"_index":1434,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["42/44",{"_index":5006,"title":{},"body":{"coverage.html":{}}}],["42301aa",{"_index":5696,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43/43",{"_index":4992,"title":{},"body":{"coverage.html":{}}}],["431e3fd",{"_index":5747,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43c7da5",{"_index":5733,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["44",{"_index":5038,"title":{},"body":{"coverage.html":{}}}],["44/58",{"_index":4979,"title":{},"body":{"coverage.html":{}}}],["45b12e4",{"_index":5617,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4650da9",{"_index":5682,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["46d4a1f",{"_index":5848,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["47/50",{"_index":5010,"title":{},"body":{"coverage.html":{}}}],["47a7930",{"_index":5773,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["48.8093253",{"_index":3162,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4920dd4",{"_index":5702,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["4a14246",{"_index":5738,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4a5ea9",{"_index":3458,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1967,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["5.0.0",{"_index":2247,"title":{},"body":{"injectables/FormService.html":{}}}],["5.23.2",{"_index":5172,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":5132,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5097,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":5151,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3462,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["500",{"_index":3470,"title":{},"body":{"components/MenuComponent.html":{}}}],["5000",{"_index":3850,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["500px",{"_index":197,"title":{},"body":{"components/AceComponent.html":{}}}],["50e2d98",{"_index":5874,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["52dc850",{"_index":5574,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["53",{"_index":5109,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":5093,"title":{},"body":{"coverage.html":{}}}],["54/84",{"_index":5055,"title":{},"body":{"coverage.html":{}}}],["56/61",{"_index":5089,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":5099,"title":{},"body":{"coverage.html":{}}}],["57/95",{"_index":5070,"title":{},"body":{"coverage.html":{}}}],["58/86",{"_index":5092,"title":{},"body":{"coverage.html":{}}}],["5892365",{"_index":5752,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["59",{"_index":5052,"title":{},"body":{"coverage.html":{}}}],["5af4631",{"_index":5623,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["5see",{"_index":3935,"title":{},"body":{"classes/Pagination.html":{}}}],["5the",{"_index":1969,"title":{},"body":{"classes/Field.html":{}}}],["6",{"_index":928,"title":{},"body":{"classes/Collection.html":{},"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["6.3.3",{"_index":5175,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":5094,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":5035,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":5034,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":5064,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":5030,"title":{},"body":{"coverage.html":{}}}],["600d7ac",{"_index":5950,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["61",{"_index":5012,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":5150,"title":{},"body":{"coverage.html":{}}}],["62162b7",{"_index":5577,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["624aecf",{"_index":5674,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["63",{"_index":5021,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":5054,"title":{},"body":{"coverage.html":{}}}],["64/94",{"_index":5047,"title":{},"body":{"coverage.html":{}}}],["651f1de",{"_index":5692,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["65fa558",{"_index":5948,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["66",{"_index":5123,"title":{},"body":{"coverage.html":{}}}],["6603aea",{"_index":5944,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["67",{"_index":5091,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":4984,"title":{},"body":{"coverage.html":{}}}],["68f12f5",{"_index":5694,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["69",{"_index":4980,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["6e961b8",{"_index":5720,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["6f53065",{"_index":5646,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["7",{"_index":929,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["7.2.0",{"_index":5316,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["7.2.1",{"_index":5234,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["7.2.7",{"_index":5161,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":5022,"title":{},"body":{"coverage.html":{}}}],["7/23",{"_index":5072,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5063,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":5060,"title":{},"body":{"coverage.html":{}}}],["70d5e24",{"_index":5881,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["71",{"_index":5045,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":5023,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":5080,"title":{},"body":{"coverage.html":{}}}],["7430c70",{"_index":5850,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["75",{"_index":4978,"title":{},"body":{"coverage.html":{}}}],["7580583",{"_index":5769,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["76",{"_index":4971,"title":{},"body":{"coverage.html":{}}}],["7664cb2",{"_index":5807,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77",{"_index":5028,"title":{},"body":{"coverage.html":{}}}],["7733151",{"_index":5861,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77a8486",{"_index":5801,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["78",{"_index":5130,"title":{},"body":{"coverage.html":{}}}],["786d09b",{"_index":5566,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["789e7ca",{"_index":5735,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["79c1a6d",{"_index":5708,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7a88da8",{"_index":5883,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7d50c5f",{"_index":5819,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7dcaf42",{"_index":5597,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7f99383",{"_index":5650,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8",{"_index":2821,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["8/10",{"_index":5116,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":5024,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":5078,"title":{},"body":{"coverage.html":{}}}],["8/21",{"_index":5127,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":5098,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":5102,"title":{},"body":{"coverage.html":{}}}],["80b8030",{"_index":5799,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["80eecab",{"_index":5787,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["81",{"_index":5025,"title":{},"body":{"coverage.html":{}}}],["8236caf",{"_index":5781,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["83",{"_index":5096,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":5015,"title":{},"body":{"coverage.html":{}}}],["846039a",{"_index":5587,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["85",{"_index":5048,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":5043,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":5059,"title":{},"body":{"coverage.html":{}}}],["878e9df",{"_index":5841,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["88",{"_index":5061,"title":{},"body":{"coverage.html":{}}}],["8ab4791",{"_index":5808,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["8abc48b",{"_index":5705,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8f56fb2",{"_index":5829,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["8fab72f",{"_index":6003,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["9",{"_index":2049,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/PopService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["9.1.3",{"_index":5163,"title":{},"body":{"dependencies.html":{}}}],["9.159388100000001",{"_index":3163,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/10",{"_index":5050,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":5142,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":5036,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":5001,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":5056,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":4997,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":5009,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":5005,"title":{},"body":{"coverage.html":{}}}],["95f8cc1",{"_index":5963,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["96",{"_index":4993,"title":{},"body":{"coverage.html":{}}}],["96a29d70d11b",{"_index":3543,"title":{},"body":{"components/ModalComponent.html":{}}}],["9776",{"_index":3034,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["98ae3d0",{"_index":5684,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9915311",{"_index":5824,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["9a",{"_index":3713,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["9bf067d",{"_index":5775,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9e23457",{"_index":5700,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["9e671b9",{"_index":5750,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["9ea65ad",{"_index":5638,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["_",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["_'@ec.components/$1'_",{"_index":5293,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_'@ec.components/(\\w+).*'_",{"_index":5292,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_]{22}$/.test(id",{"_index":2050,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":3715,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_api",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["_api.login(email",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":842,"title":{},"body":{"injectables/AuthService.html":{}}}],["_blank",{"_index":2735,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["_created",{"_index":3663,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["_creator",{"_index":3671,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entry",{"_index":1807,"title":{},"body":{"injectables/EntryService.html":{}}}],["_entrytitle",{"_index":3717,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item.id",{"_index":1642,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items",{"_index":4484,"title":{},"body":{"classes/Sorter.html":{}}}],["_items.indexof(item",{"_index":4485,"title":{},"body":{"classes/Sorter.html":{}}}],["_methods",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter((x",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modified",{"_index":3669,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1448,"title":{},"body":{"interfaces/Day.html":{}}}],["_resource",{"_index":4269,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["_toggle",{"_index":4074,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":4877,"title":{},"body":{"components/UploadComponent.html":{}}}],["a.path",{"_index":4154,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["a.then((r",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{}}}],["a08a9d6",{"_index":5761,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a2b4ace",{"_index":5607,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a542c43",{"_index":5656,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a581ce2",{"_index":5783,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["a992381",{"_index":5742,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ab86f41",{"_index":5635,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["above",{"_index":1970,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["abstract",{"_index":1004,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{}}}],["abstractcontrol",{"_index":2229,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["abstraction",{"_index":5482,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ac3bb86",{"_index":5658,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ac4aec3",{"_index":5932,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["ac83326",{"_index":5572,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["accepts",{"_index":3865,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["access",{"_index":2595,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["access=public",{"_index":5227,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["accessed",{"_index":5490,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["accessible",{"_index":1165,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Symbol.html":{}}}],["accessors",{"_index":4302,"title":{},"body":{"injectables/SdkService.html":{}}}],["according",{"_index":3928,"title":{},"body":{"classes/Pagination.html":{}}}],["account",{"_index":453,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["accountresource",{"_index":3289,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["accounts",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environment",{"_index":4360,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace",{"_index":14,"title":{"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ace'},{'name",{"_index":204,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ace.component",{"_index":366,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":38,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":36,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeelement",{"_index":174,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mode",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/theme",{"_index":112,"title":{},"body":{"components/AceComponent.html":{}}}],["acecomponent",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodule",{"_index":347,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["acemoduleconfig",{"_index":367,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["act",{"_index":4522,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["action",{"_index":370,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["action(item.getbody().data",{"_index":4126,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar",{"_index":385,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["actionbar'},{'name",{"_index":206,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["actionbar.component",{"_index":1237,"title":{},"body":{"modules/DataModule.html":{},"modules/ResourceModule.html":{}}}],["actionbar.component.ts",{"_index":4119,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["actionbar.dropdownloader",{"_index":4147,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.dropdownloader.wait(loading",{"_index":4148,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.loadactions(actions",{"_index":4145,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar/actionbar.component",{"_index":4388,"title":{},"body":{"modules/SelectModule.html":{}}}],["actionbar/api",{"_index":4223,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbar/entry",{"_index":1236,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["actionbar/resource",{"_index":4118,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbarcomponent",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actionbarconfig",{"_index":386,"title":{"interfaces/ActionbarConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{}}}],["actionfunction",{"_index":377,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":393,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["actions.length",{"_index":4163,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actions.push",{"_index":4129,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionsbefore",{"_index":411,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionstack",{"_index":394,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["activate",{"_index":2739,"title":{},"body":{"injectables/KeycommandsService.html":{},"components/TabComponent.html":{}}}],["activate(keyconfig",{"_index":2718,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["activated",{"_index":647,"title":{},"body":{"guards/AuthGuard.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["activatedroute",{"_index":606,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active",{"_index":1185,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["active>a",{"_index":3532,"title":{},"body":{"components/MenuComponent.html":{}}}],["activies",{"_index":3131,"title":{},"body":{"components/LoaderComponent.html":{}}}],["activity",{"_index":3104,"title":{},"body":{"components/LoaderComponent.html":{}}}],["acts",{"_index":1518,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{}}}],["actual",{"_index":3037,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_component",{"_index":342,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ad58c68",{"_index":5780,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["add",{"_index":634,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["add(item",{"_index":917,"title":{},"body":{"classes/Collection.html":{}}}],["add3ee6",{"_index":5813,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["addall",{"_index":895,"title":{},"body":{"classes/Collection.html":{}}}],["addall(items",{"_index":925,"title":{},"body":{"classes/Collection.html":{}}}],["added",{"_index":922,"title":{},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["addfield",{"_index":2197,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":2205,"title":{},"body":{"injectables/FormService.html":{}}}],["addimagebyurl",{"_index":4652,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addimagebyurl(url",{"_index":4672,"title":{},"body":{"components/TinymceComponent.html":{}}}],["adding",{"_index":5212,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["additional",{"_index":3321,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{}}}],["address",{"_index":2283,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["adds",{"_index":921,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{}}}],["addtostack",{"_index":426,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["admin",{"_index":457,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["adminentryinputcomponent",{"_index":207,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adresse",{"_index":4023,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["advanced",{"_index":3779,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["advantage",{"_index":3121,"title":{},"body":{"components/LoaderComponent.html":{}}}],["af10188",{"_index":5792,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["affect",{"_index":5442,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["aftercontentinit",{"_index":4605,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":1479,"title":{},"body":{"components/DefaultInputComponent.html":{},"directives/FocusDirective.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["afterwards",{"_index":3566,"title":{},"body":{"components/ModalComponent.html":{}}}],["agm",{"_index":3186,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["agm/core",{"_index":2293,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodule",{"_index":3198,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":3204,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnostic",{"_index":5531,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["aizasyadgeue1yxo1f",{"_index":3206,"title":{},"body":{"modules/LocationModule.html":{}}}],["algorithm",{"_index":4464,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolve",{"_index":4493,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(property",{"_index":4495,"title":{},"body":{"classes/Sorter.html":{}}}],["aliases",{"_index":5264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["allows",{"_index":1126,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["along",{"_index":5371,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["already",{"_index":3843,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["als",{"_index":5416,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["alt",{"_index":2507,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["alter(value",{"_index":1463,"title":{},"body":{"interfaces/Day.html":{}}}],["altered",{"_index":4281,"title":{},"body":{"interfaces/SdkField.html":{}}}],["alternative",{"_index":2483,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ToggleComponent.html":{}}}],["alternatively",{"_index":5468,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["always",{"_index":1148,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["alwaysloadentry",{"_index":1128,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowheader",{"_index":2867,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amazement",{"_index":5413,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["amazement_factor",{"_index":5412,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazement_factor>=5",{"_index":5463,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazing",{"_index":5434,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amount",{"_index":3753,"title":{},"body":{"classes/Notification.html":{}}}],["angezeigt",{"_index":680,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":16,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["angular.json",{"_index":5318,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["angular/animations",{"_index":5160,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":5340,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clithe",{"_index":5339,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":699,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compiler",{"_index":5162,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/core",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/core/src/metadata/lifecycle_hooks",{"_index":3060,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/datamanager",{"_index":5191,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["angular/forms",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/http",{"_index":5343,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/language",{"_index":5344,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":2126,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/router",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular7",{"_index":5267,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["animate",{"_index":3552,"title":{},"body":{"components/ModalComponent.html":{}}}],["animation",{"_index":3546,"title":{},"body":{"components/ModalComponent.html":{}}}],["another",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["anweisungen",{"_index":4041,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anything",{"_index":5284,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["anywhere",{"_index":1900,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{}}}],["api",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["api(api",{"_index":4349,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid).then((asset",{"_index":537,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permission",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.getschema(model",{"_index":4375,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":843,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.resourcelist",{"_index":574,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.signup(email",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiactionbarcomponent",{"_index":208,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apikey",{"_index":3205,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolved",{"_index":4294,"title":{},"body":{"injectables/SdkService.html":{}}}],["apis",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["app",{"_index":3767,"title":{},"body":{"components/NotificationsComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["app.component",{"_index":5383,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.component.html",{"_index":4511,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/stackblitz.html":{}}}],["app.module",{"_index":5551,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["appcomponent",{"_index":4512,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["appear",{"_index":1897,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/UploadComponent.html":{}}}],["appears",{"_index":4070,"title":{},"body":{"components/PopComponent.html":{}}}],["append",{"_index":1597,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["appended",{"_index":3741,"title":{},"body":{"classes/Notification.html":{}}}],["appletree",{"_index":2818,"title":{},"body":{"components/ListComponent.html":{}}}],["application",{"_index":4657,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["applicationref",{"_index":4655,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applications",{"_index":5187,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["apply",{"_index":1328,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ModalComponent.html":{}}}],["applyconfig",{"_index":2896,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyconfig(list",{"_index":2900,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["appmodule",{"_index":5370,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["approutingmodule",{"_index":5368,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrary",{"_index":3931,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["architect",{"_index":5319,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["area",{"_index":4050,"title":{},"body":{"components/PopComponent.html":{}}}],["argument",{"_index":1814,"title":{},"body":{"injectables/EntryService.html":{},"components/ListComponent.html":{}}}],["arguments",{"_index":1525,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["around",{"_index":3982,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["array",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["array(42",{"_index":1412,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.total",{"_index":3949,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from",{"_index":3937,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":2043,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1299,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.slice(start",{"_index":3387,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["artifacts",{"_index":5243,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["asking",{"_index":3842,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asks",{"_index":3849,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobservable",{"_index":1353,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["asset",{"_index":214,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["asset(value.img",{"_index":2510,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.assetid",{"_index":2046,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.file.resolution",{"_index":2532,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getfilevariant(this.size",{"_index":2474,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.size",{"_index":2476,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(size",{"_index":2512,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getimageurl(this.size",{"_index":2477,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getoriginalfile",{"_index":2526,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.id",{"_index":2472,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduce",{"_index":2044,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.title",{"_index":2529,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.type",{"_index":2470,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset/asset.directive",{"_index":2130,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirective",{"_index":327,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":211,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["assetgroupid",{"_index":617,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["assetgroupids",{"_index":2025,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist",{"_index":2016,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":2106,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromise",{"_index":2017,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgroups",{"_index":618,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["assetgroupselectcomponent",{"_index":210,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetid",{"_index":479,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["assetids",{"_index":2079,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlist.getallitems",{"_index":2064,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlistcomponent",{"_index":213,"title":{"components/AssetListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetlistpopcomponent",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets",{"_index":640,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["assets.map((asset",{"_index":2067,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((ids",{"_index":2089,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets/asset",{"_index":475,"title":{},"body":{"directives/AssetDirective.html":{}}}],["assets[0",{"_index":2065,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetselectcomponent",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1818,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["assigning",{"_index":1884,"title":{},"body":{"classes/Field.html":{}}}],["assigns",{"_index":2455,"title":{},"body":{"directives/ImageDirective.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{}}}],["associated",{"_index":1904,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["assumes",{"_index":5378,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["async",{"_index":424,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["attempt",{"_index":3799,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["attributes",{"_index":1571,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["audio",{"_index":2030,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["auth",{"_index":695,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth.service",{"_index":707,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth/auth.module",{"_index":1219,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.service",{"_index":1080,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authentication",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":642,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":686,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":5374,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["authservice",{"_index":693,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":2441,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{}}}],["autocomplete",{"_index":2279,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_changed",{"_index":2299,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplace",{"_index":2302,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":2268,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":2277,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocus",{"_index":1863,"title":{},"body":{"classes/Field.html":{},"directives/FocusDirective.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["autofocused",{"_index":2988,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["autofocusfirst",{"_index":2771,"title":{},"body":{"components/ListComponent.html":{}}}],["autoload",{"_index":480,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{}}}],["autoload=false",{"_index":503,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automatic",{"_index":5422,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["automatically",{"_index":1976,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Notification.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["availabe",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["available",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["available.validator.ts",{"_index":5018,"title":{},"body":{"coverage.html":{}}}],["availablesizes",{"_index":2868,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avatar",{"_index":4770,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["avatars",{"_index":4772,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["await",{"_index":430,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/ModelConfigService.html":{}}}],["b",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{},"additional-documentation/readme/style-readme.html":{}}}],["b(r",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolve",{"_index":4494,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(property",{"_index":4496,"title":{},"body":{"classes/Sorter.html":{}}}],["b0c6065",{"_index":5794,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b2cf446",{"_index":5679,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b365847",{"_index":5997,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["b3e8115",{"_index":5909,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["b461540",{"_index":5601,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b4d03eb",{"_index":5755,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b5a578d",{"_index":5665,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["b603867",{"_index":5928,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["b6ec56b",{"_index":5784,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b7460e6",{"_index":5871,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b760780",{"_index":5884,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b7d33e2",{"_index":5661,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b900b38",{"_index":5604,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ba52443",{"_index":5711,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["back",{"_index":1180,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["backdrop",{"_index":1716,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["backend",{"_index":5449,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["backenderrorcodes",{"_index":5020,"title":{},"body":{"coverage.html":{}}}],["background",{"_index":1330,"title":{},"body":{"interfaces/Day.html":{}}}],["bake",{"_index":3789,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baken",{"_index":3791,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bakery:bakeryservice",{"_index":3788,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baking",{"_index":3794,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["ball",{"_index":3780,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bar",{"_index":4125,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["barrel",{"_index":5863,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["base",{"_index":4474,"title":{},"body":{"classes/Sorter.html":{},"injectables/TypeConfigService.html":{}}}],["based",{"_index":1927,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["basic",{"_index":1478,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{}}}],["basis",{"_index":1452,"title":{},"body":{"interfaces/Day.html":{}}}],["bbe7ba3",{"_index":5785,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bc9bb53",{"_index":5660,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bcbbc51",{"_index":5815,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bcbefd1",{"_index":5748,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bd766bf",{"_index":5610,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["before",{"_index":571,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["beforehand",{"_index":5439,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["beforesave",{"_index":1864,"title":{},"body":{"classes/Field.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["begin",{"_index":1407,"title":{},"body":{"interfaces/Day.html":{}}}],["begin.clone().add(index",{"_index":1415,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":3600,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["beim",{"_index":4045,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["being",{"_index":3903,"title":{},"body":{"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["belonging",{"_index":2565,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":3747,"title":{},"body":{"classes/Notification.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beneath",{"_index":2649,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["beschreibung",{"_index":3774,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["beta.5",{"_index":5159,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":3130,"title":{},"body":{"components/LoaderComponent.html":{}}}],["between",{"_index":2195,"title":{},"body":{"injectables/FormService.html":{}}}],["bilder",{"_index":5407,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["bind",{"_index":5332,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["binding",{"_index":5869,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["birch",{"_index":2822,"title":{},"body":{"components/ListComponent.html":{}}}],["blur",{"_index":2245,"title":{},"body":{"injectables/FormService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["bobby",{"_index":1964,"title":{},"body":{"classes/Field.html":{}}}],["body",{"_index":1948,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor",{"_index":5441,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor*body.flavour/body.price",{"_index":5446,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.value.name",{"_index":1958,"title":{},"body":{"classes/Field.html":{}}}],["boolean",{"_index":378,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["booleans",{"_index":4479,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":351,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["both",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/adding-new-packages.html":{}}}],["bound",{"_index":1523,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["box",{"_index":1017,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["breaking",{"_index":5268,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["breaks",{"_index":4664,"title":{},"body":{"components/TinymceComponent.html":{}}}],["broadcast",{"_index":4252,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["broken",{"_index":5770,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["browse",{"_index":4896,"title":{},"body":{"components/UploadSelectComponent.html":{},"modules.html":{}}}],["browser",{"_index":2127,"title":{},"body":{"modules/FilesModule.html":{},"injectables/NotificationsService.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodule",{"_index":2125,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["btn._clear",{"_index":5922,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["bubbling",{"_index":5772,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["buchstaben",{"_index":1961,"title":{},"body":{"classes/Field.html":{}}}],["bug",{"_index":5570,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["bugged",{"_index":5734,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bugs",{"_index":5634,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["build",{"_index":5242,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["builder",{"_index":5320,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders",{"_index":5311,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/custom",{"_index":5312,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/dev",{"_index":5313,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builds",{"_index":5164,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/blob/master/src/ext",{"_index":170,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":157,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/webpack",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["built",{"_index":5192,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["bump",{"_index":5563,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["button",{"_index":1152,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["buttonclasses",{"_index":3309,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["buttonlabel",{"_index":3310,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["c",{"_index":5492,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["c0c7f17",{"_index":5818,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c483625",{"_index":5689,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["c89591a",{"_index":5777,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["c950461",{"_index":5864,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c9c8d4",{"_index":3459,"title":{},"body":{"components/MenuComponent.html":{}}}],["cache",{"_index":5648,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["caches",{"_index":4310,"title":{},"body":{"injectables/SdkService.html":{}}}],["calculcates",{"_index":3924,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":862,"title":{"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/calendar-changelog.html":{}},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["calendar'},{'name",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["calendar/calendar.component",{"_index":870,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar/month.component",{"_index":873,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendarcomponent",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1319,"title":{},"body":{"interfaces/Day.html":{}}}],["calendarmodule",{"_index":856,"title":{"modules/CalendarModule.html":{}},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["calendarmoduleconfig",{"_index":874,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["calendars",{"_index":1430,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["call",{"_index":1618,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["callback",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["called",{"_index":501,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/publishing.html":{}}}],["calling",{"_index":1596,"title":{},"body":{"directives/EntriesDirective.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["calls",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{}}}],["can't",{"_index":5300,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["canactivate",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["canalter(value",{"_index":1455,"title":{},"body":{"interfaces/Day.html":{}}}],["cancels",{"_index":3474,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":3444,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":3178,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["caption",{"_index":4673,"title":{},"body":{"components/TinymceComponent.html":{}}}],["case",{"_index":2605,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["catch",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{}}}],["catch((error",{"_index":1634,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["catch(error",{"_index":3793,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["catched",{"_index":3098,"title":{},"body":{"components/LoaderComponent.html":{}}}],["caution",{"_index":4251,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cb43986",{"_index":5593,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["cbe9627",{"_index":5637,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ccc",{"_index":1336,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":5348,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["cd90ef7",{"_index":5965,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["cdn",{"_index":5550,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["cdr",{"_index":396,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["cea52fc",{"_index":5826,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["cell",{"_index":1315,"title":{},"body":{"interfaces/Day.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cells",{"_index":1324,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["center",{"_index":3161,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["certain",{"_index":2677,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chaned",{"_index":3168,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["change",{"_index":98,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["change(e",{"_index":4834,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filter",{"_index":1758,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.value",{"_index":3998,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.broadcast",{"_index":4255,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change.colors",{"_index":1402,"title":{},"body":{"interfaces/Day.html":{}}}],["change.date",{"_index":1399,"title":{},"body":{"interfaces/Day.html":{}}}],["change.heatmap",{"_index":1403,"title":{},"body":{"interfaces/Day.html":{}}}],["change.selected",{"_index":1397,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1401,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":4257,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changed",{"_index":1050,"title":{},"body":{"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["changedetection",{"_index":2394,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy",{"_index":2415,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2395,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectorref",{"_index":379,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["changelog",{"_index":4960,"title":{"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"changelog.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["changelog.md",{"_index":6032,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["changelogging",{"_index":5231,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["changes",{"_index":595,"title":{},"body":{"components/AssetListComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["changes.field",{"_index":2611,"title":{},"body":{"components/InputComponent.html":{}}}],["changes.list",{"_index":3001,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["changesenvironment",{"_index":4295,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["changespan",{"_index":1346,"title":{},"body":{"interfaces/Day.html":{}}}],["changing",{"_index":594,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["check",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["checkbox",{"_index":2959,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{}}}],["checkboxes",{"_index":2883,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["checkpermission",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permission",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["checks",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"interfaces/Upload.html":{}}}],["child",{"_index":3489,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["child.data?.title",{"_index":3529,"title":{},"body":{"components/MenuComponent.html":{}}}],["child.path",{"_index":3530,"title":{},"body":{"components/MenuComponent.html":{}}}],["children",{"_index":5394,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["circular",{"_index":5640,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["class",{"_index":168,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/Sorter.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["class.is",{"_index":1510,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":3999,"title":{},"body":{"components/PaginationComponent.html":{}}}],["classes",{"_index":890,"title":{},"body":{"classes/Collection.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["clean",{"_index":1753,"title":{},"body":{"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/ResourceService.html":{}}}],["clean(value",{"_index":1761,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cleanreadonly",{"_index":1763,"title":{},"body":{"injectables/EntryService.html":{}}}],["clear",{"_index":1828,"title":{},"body":{"injectables/EntryService.html":{},"components/LocationSearchComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["cleared",{"_index":2991,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clearer",{"_index":5436,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clearfilter",{"_index":2946,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clears",{"_index":1450,"title":{},"body":{"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["clearselection",{"_index":1451,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":3524,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":5232,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["cli/issues/11041",{"_index":5996,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["click",{"_index":1690,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clickeable",{"_index":2986,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clicked",{"_index":1048,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["clickedoutside($event",{"_index":4076,"title":{},"body":{"components/PopComponent.html":{}}}],["clickevent",{"_index":1675,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["clicking",{"_index":2987,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clicks",{"_index":5428,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["client",{"_index":852,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clipboard",{"_index":2730,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["clone",{"_index":1408,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["close",{"_index":1694,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["closed",{"_index":2990,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["closes",{"_index":2346,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{}}}],["clubapp",{"_index":5495,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clunky",{"_index":5459,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cluster_acemodule",{"_index":353,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_providers",{"_index":355,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declarations",{"_index":354,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_exports",{"_index":357,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_imports",{"_index":356,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":687,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":688,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":690,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":689,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":691,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_calendarmodule",{"_index":857,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_declarations",{"_index":858,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_exports",{"_index":859,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":1200,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declarations",{"_index":1201,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_exports",{"_index":1203,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_imports",{"_index":1202,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_providers",{"_index":1204,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2119,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declarations",{"_index":2120,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":2122,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2121,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2123,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2164,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":2165,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":2167,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":2166,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2168,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodule",{"_index":2426,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declarations",{"_index":2427,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_exports",{"_index":2428,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_providers",{"_index":2429,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodule",{"_index":2667,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declarations",{"_index":2668,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_exports",{"_index":2669,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodule",{"_index":3066,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declarations",{"_index":3067,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_exports",{"_index":3069,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_imports",{"_index":3068,"title":{},"body":{"modules/ListModule.html":{}}}],["cluster_listmodule_providers",{"_index":3070,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodule",{"_index":3142,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declarations",{"_index":3143,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_exports",{"_index":3144,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_providers",{"_index":3145,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":3188,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declarations",{"_index":3189,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_exports",{"_index":3191,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":3190,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_providers",{"_index":3192,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule",{"_index":3429,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_declarations",{"_index":3430,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_exports",{"_index":3432,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_mediumeditorcomponent_providers",{"_index":3431,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":3821,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declarations",{"_index":3822,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_exports",{"_index":3824,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_imports",{"_index":3823,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_providers",{"_index":3825,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodule",{"_index":4090,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declarations",{"_index":4091,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_exports",{"_index":4093,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_imports",{"_index":4092,"title":{},"body":{"modules/PopModule.html":{}}}],["cluster_popmodule_providers",{"_index":4094,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodule",{"_index":4214,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declarations",{"_index":4215,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_exports",{"_index":4217,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_imports",{"_index":4216,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_providers",{"_index":4218,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodule",{"_index":4284,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_providers",{"_index":4285,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodule",{"_index":4381,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declarations",{"_index":4382,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_exports",{"_index":4385,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_imports",{"_index":4384,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_providers",{"_index":4383,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_symbolmodule",{"_index":4502,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_declarations",{"_index":4503,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_exports",{"_index":4504,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_providers",{"_index":4505,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule",{"_index":4728,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declarations",{"_index":4729,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_exports",{"_index":4730,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodule",{"_index":4807,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_exports",{"_index":4809,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_imports",{"_index":4808,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodule",{"_index":4929,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declarations",{"_index":4930,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_exports",{"_index":4932,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_imports",{"_index":4931,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cluster_utilitymodule_providers",{"_index":4933,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cmd+click",{"_index":5498,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["code",{"_index":4396,"title":{},"body":{"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["coded",{"_index":5487,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["col",{"_index":1926,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{}}}],["collator",{"_index":4470,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["collator.compare(a",{"_index":4477,"title":{},"body":{"classes/Sorter.html":{}}}],["collection",{"_index":889,"title":{"classes/Collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"coverage.html":{}}}],["collection([1",{"_index":908,"title":{},"body":{"classes/Collection.html":{}}}],["collection.add(4",{"_index":957,"title":{},"body":{"classes/Collection.html":{}}}],["collection.addall([10,11,12",{"_index":961,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(1",{"_index":955,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(4",{"_index":956,"title":{},"body":{"classes/Collection.html":{}}}],["collection.hasall([1,10,11",{"_index":962,"title":{},"body":{"classes/Collection.html":{}}}],["collection.index(1",{"_index":959,"title":{},"body":{"classes/Collection.html":{}}}],["collection.remove(4",{"_index":958,"title":{},"body":{"classes/Collection.html":{}}}],["collection.removeall();it",{"_index":963,"title":{},"body":{"classes/Collection.html":{}}}],["collections",{"_index":2815,"title":{},"body":{"components/ListComponent.html":{}}}],["collects",{"_index":4330,"title":{},"body":{"injectables/SdkService.html":{},"modules/SymbolModule.html":{}}}],["color",{"_index":1322,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{}}}],["colors",{"_index":1327,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{}}}],["column",{"_index":1190,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columnclick",{"_index":2765,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclick(item",{"_index":2787,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclicked",{"_index":1029,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columns",{"_index":1928,"title":{},"body":{"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"interfaces/SdkField.html":{}}}],["com",{"_index":5591,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["combination",{"_index":3765,"title":{},"body":{"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["combined",{"_index":5448,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["come",{"_index":455,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["comes",{"_index":2027,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["coming",{"_index":470,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["command",{"_index":6010,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["commented",{"_index":3125,"title":{},"body":{"components/LoaderComponent.html":{}}}],["commit",{"_index":5558,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commits",{"_index":5229,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commonmodule",{"_index":698,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{}}}],["communicate",{"_index":3343,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["communicates",{"_index":3284,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupComponent.html":{}}}],["complaining",{"_index":3856,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["complete",{"_index":4833,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["complex",{"_index":5479,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["compliant",{"_index":6009,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["component",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["component(s",{"_index":6038,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["component_template",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["componentfactory",{"_index":1579,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolver",{"_index":1553,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentinstance",{"_index":2556,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1573,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.instance",{"_index":2626,"title":{},"body":{"components/InputComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["components.entrecode.de",{"_index":5199,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["concat",{"_index":5745,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["concat(actions",{"_index":432,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["concat(this.config.availablesizes",{"_index":3939,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.getresourcelistactions(list",{"_index":4137,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concat(this.timespan",{"_index":1368,"title":{},"body":{"interfaces/Day.html":{}}}],["concatted",{"_index":4131,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concept",{"_index":1973,"title":{},"body":{"classes/Field.html":{}}}],["conceptualizes",{"_index":2985,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["config",{"_index":389,"title":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["config.fields",{"_index":1831,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key",{"_index":1832,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].beforesave",{"_index":1835,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].beforesave(value[key",{"_index":1836,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].immutable",{"_index":1833,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].readonly",{"_index":1834,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.filter",{"_index":2040,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["config.input",{"_index":4798,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interface",{"_index":1078,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["config.interface.ts",{"_index":1125,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":4005,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:6",{"_index":1991,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":4008,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":4006,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":4799,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["config.service.ts",{"_index":2894,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:122",{"_index":3643,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:13",{"_index":2907,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:143",{"_index":3633,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:15",{"_index":4766,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:17",{"_index":2909,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:178",{"_index":4753,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:182",{"_index":4759,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:19",{"_index":3613,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:198",{"_index":4765,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:208",{"_index":4756,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:210",{"_index":3616,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:215",{"_index":4754,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:22",{"_index":2903,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:220",{"_index":4760,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:225",{"_index":4761,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:23",{"_index":4792,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:241",{"_index":3639,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:34",{"_index":2911,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:37",{"_index":3628,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:43",{"_index":2901,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:52",{"_index":3648,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:57",{"_index":3644,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:6",{"_index":2912,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:8",{"_index":2905,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.view",{"_index":4797,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1977,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1083,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resource",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.service",{"_index":1786,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.ts",{"_index":4224,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["config/resource.service.ts:102",{"_index":4230,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:122",{"_index":4232,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:135",{"_index":4234,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:35",{"_index":4226,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:38",{"_index":4245,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":4237,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:52",{"_index":4227,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:61",{"_index":4241,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:80",{"_index":4244,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:97",{"_index":4235,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/sdk",{"_index":4275,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["config/type",{"_index":1232,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":1123,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["configinput",{"_index":2833,"title":{},"body":{"components/ListComponent.html":{}}}],["configuration",{"_index":1001,"title":{},"body":{"classes/Config.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["configuration.interface.ts",{"_index":3734,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configurations",{"_index":990,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["configure",{"_index":991,"title":{},"body":{"classes/Config.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["configure(key",{"_index":993,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":1008,"title":{},"body":{"classes/Config.html":{}}}],["configured",{"_index":1056,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["configuring",{"_index":3601,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["confirmation",{"_index":1196,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["connect",{"_index":2635,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["connectcontrol",{"_index":2557,"title":{},"body":{"components/InputComponent.html":{}}}],["connector",{"_index":558,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["connectors",{"_index":562,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["considered",{"_index":5269,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["consistent",{"_index":1437,"title":{},"body":{"interfaces/Day.html":{}}}],["console.error('cannot",{"_index":4800,"title":{},"body":{"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('missing",{"_index":4795,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error(err",{"_index":4878,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.error(notification.error",{"_index":3862,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.log('cannot",{"_index":2922,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.log('could",{"_index":3297,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('entry',item.getbody(),item.id",{"_index":5429,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["console.log('error",{"_index":1113,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('no",{"_index":4127,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["console.log('raw",{"_index":1295,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('received",{"_index":5528,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["console.log('routes",{"_index":3510,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log('should",{"_index":2545,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["console.warn",{"_index":2082,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn('addfield",{"_index":2250,"title":{},"body":{"injectables/FormService.html":{}}}],["console.warn('cannot",{"_index":1627,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":2614,"title":{},"body":{"components/InputComponent.html":{}}}],["console.warn('field",{"_index":2936,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.warn('has",{"_index":973,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":2115,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"interfaces/Upload.html":{}}}],["console.warn('notification.time",{"_index":3818,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('this",{"_index":3869,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('to",{"_index":4087,"title":{},"body":{"components/PopComponent.html":{}}}],["console.warn('tried",{"_index":2841,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":2095,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn(`ec",{"_index":3585,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.warn(`entryservice.change",{"_index":1790,"title":{},"body":{"injectables/EntryService.html":{}}}],["console.warn(`icon",{"_index":2420,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`relation",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":166,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/readme/core-readme.html":{}}}],["constructed",{"_index":1883,"title":{},"body":{"classes/Field.html":{}}}],["constructor",{"_index":460,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(@inject('environment",{"_index":4353,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('moment.format.date",{"_index":1292,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["constructor(@inject('moment.format.month",{"_index":1347,"title":{},"body":{"interfaces/Day.html":{}}}],["constructor(@inject('usedesktopnotifications",{"_index":3857,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":4654,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":3273,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(cdr",{"_index":3042,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":1552,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":3894,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(el",{"_index":1514,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/TabComponent.html":{}}}],["constructor(element",{"_index":2141,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(entryservice",{"_index":3612,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(environment",{"_index":4303,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":3316,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservice",{"_index":623,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(formservice",{"_index":1480,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["constructor(geocodeservice",{"_index":3217,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":3088,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservice",{"_index":2397,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(items",{"_index":903,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(listconfig",{"_index":2774,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["constructor(maploader",{"_index":2272,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(modelconfig",{"_index":1682,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["constructor(notification",{"_index":3737,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservice",{"_index":2342,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservice",{"_index":2488,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["constructor(private",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme/location-readme.html":{}}}],["constructor(property",{"_index":1881,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protected",{"_index":3362,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{}}}],["constructor(public",{"_index":395,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["constructor(resourceconfig",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceListPopComponent.html":{}}}],["constructor(router",{"_index":2744,"title":{},"body":{"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":461,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1843,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/InputErrorsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(usedesktopnotifications",{"_index":3837,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":4448,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["constructors",{"_index":3839,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructs",{"_index":905,"title":{},"body":{"classes/Collection.html":{},"components/ModalComponent.html":{}}}],["consume",{"_index":5426,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["contacted",{"_index":4954,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["contain",{"_index":1944,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"classes/Sorter.html":{}}}],["contained",{"_index":923,"title":{},"body":{"classes/Collection.html":{}}}],["container",{"_index":41,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["containing",{"_index":1341,"title":{},"body":{"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["contains",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["content",{"_index":2391,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["contentchildren",{"_index":3579,"title":{},"body":{"components/ModalComponent.html":{},"components/TabsComponent.html":{}}}],["contentchildren(tabcomponent",{"_index":4621,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(templateref",{"_index":3572,"title":{},"body":{"components/ModalComponent.html":{}}}],["contents",{"_index":2680,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["context",{"_index":4976,"title":{},"body":{"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["contexts",{"_index":2691,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["control",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["control's",{"_index":2647,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls",{"_index":2235,"title":{},"body":{"injectables/FormService.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls[field.property",{"_index":2242,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controlvalueaccessor#setdisabled",{"_index":2600,"title":{},"body":{"components/InputComponent.html":{}}}],["conventional",{"_index":5228,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["cookie",{"_index":705,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactory",{"_index":692,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["cookiemodule",{"_index":703,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":714,"title":{},"body":{"modules/AuthModule.html":{}}}],["coords",{"_index":2305,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":3182,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":3181,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copied",{"_index":2729,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["copy",{"_index":3661,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["copyable",{"_index":5622,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["copycelltoclipboard",{"_index":2740,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["copycelltoclipboard(label",{"_index":2731,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["copytoclipboard",{"_index":2741,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["copytoclipboard(value",{"_index":2721,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["core",{"_index":556,"title":{"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/core-changelog.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["correct",{"_index":6015,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["correctly",{"_index":5484,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["count",{"_index":3925,"title":{},"body":{"classes/Pagination.html":{}}}],["counter",{"_index":5522,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["counter.component.html",{"_index":5523,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["countercomponent",{"_index":5524,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["course",{"_index":1971,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["coverage",{"_index":4968,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crash",{"_index":5606,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["create",{"_index":582,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["create(model",{"_index":1766,"title":{},"body":{"injectables/EntryService.html":{}}}],["create(relation",{"_index":4231,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["create/edit/delete",{"_index":1015,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delete",{"_index":4247,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createclicked",{"_index":4174,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created",{"_index":516,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["created.otherwise",{"_index":4242,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createdmassets(assetgroupid",{"_index":2062,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["createentry(model",{"_index":1837,"title":{},"body":{"injectables/EntryService.html":{}}}],["createlabel",{"_index":1129,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":547,"title":{},"body":{"components/AssetListComponent.html":{}}}],["createnew",{"_index":4166,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["creates/updates",{"_index":597,"title":{},"body":{"components/AssetListComponent.html":{}}}],["creating",{"_index":4282,"title":{},"body":{"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["creator",{"_index":3652,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["credentials",{"_index":3302,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["crud",{"_index":1021,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["crud'ed",{"_index":1044,"title":{},"body":{"components/CrudComponent.html":{}}}],["crud's",{"_index":1041,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'name",{"_index":223,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["crud.component",{"_index":4221,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":1022,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.ts",{"_index":4172,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:29",{"_index":4176,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:31",{"_index":4178,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:33",{"_index":4177,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":4179,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":4190,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":4193,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":4191,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":4180,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":4182,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":4175,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:54",{"_index":4195,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:55",{"_index":4194,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:58",{"_index":4187,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:62",{"_index":4186,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:72",{"_index":4185,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:77",{"_index":4188,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:90",{"_index":4183,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":1733,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["crud/crud.component",{"_index":1220,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/resource",{"_index":4171,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcomponent",{"_index":222,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentry",{"_index":4201,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":1038,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["crypto",{"_index":5329,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["css",{"_index":5544,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["current",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["currentactions",{"_index":423,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currentid",{"_index":415,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currently",{"_index":451,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"interfaces/Day.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cursor",{"_index":5834,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["custom",{"_index":1155,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["customfieldcomponent",{"_index":1560,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["customfieldconfig",{"_index":3615,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldconfig).then((modelconfig",{"_index":3677,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldscomponent",{"_index":5519,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["custominputcomponent",{"_index":5497,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customization",{"_index":1040,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["customizations",{"_index":5424,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customize",{"_index":3624,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customizing",{"_index":5456,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customupload",{"_index":1130,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["customwebpackconfig",{"_index":5322,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["d5dc292",{"_index":5730,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d7fa72b",{"_index":5718,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["d8ad11d",{"_index":5642,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d8c67be",{"_index":5651,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["darf",{"_index":5419,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["dark",{"_index":3554,"title":{},"body":{"components/ModalComponent.html":{}}}],["das",{"_index":3770,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["data",{"_index":373,"title":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["data.entryid",{"_index":2385,"title":{},"body":{"injectables/HistoryService.html":{}}}],["data.module",{"_index":5764,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["datamanager",{"_index":853,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamanager(environment.environment",{"_index":4366,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.enablehistoryevents(eventsource",{"_index":2381,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamanagerid",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerresource",{"_index":450,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamanagers",{"_index":2337,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamodule",{"_index":1199,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamodule.forenvironment(environment",{"_index":5369,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["datamoduleconfig",{"_index":1238,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["datarun",{"_index":6029,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["date",{"_index":883,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"modules/SymbolModule.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["date()).format(this.symbol.resolve('moment.format.date",{"_index":4783,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":4784,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clone",{"_index":1441,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1428,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1422,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1443,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1424,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":3138,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{}}}],["dateformat",{"_index":1293,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["datenschutz",{"_index":5257,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["datepickers",{"_index":4517,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["daterange'},{'name",{"_index":225,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["daterange/daterange.component",{"_index":872,"title":{},"body":{"modules/CalendarModule.html":{}}}],["daterangecomponent",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetime",{"_index":1241,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["datetime'},{'name",{"_index":227,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["datetime.component.html",{"_index":1243,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.pipe",{"_index":869,"title":{},"body":{"modules/CalendarModule.html":{}}}],["datetime/datetime.component",{"_index":2181,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecomponent",{"_index":226,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepipe",{"_index":860,"title":{"pipes/DatetimePipe.html":{}},"body":{"modules/CalendarModule.html":{},"pipes/DatetimePipe.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":4781,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1302,"title":{"interfaces/Day.html":{}},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["day.date.clone",{"_index":1370,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1363,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1423,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1365,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclicked",{"_index":1344,"title":{},"body":{"interfaces/Day.html":{}}}],["days",{"_index":1270,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["dd.mm.yyyy",{"_index":876,"title":{},"body":{"modules/CalendarModule.html":{}}}],["dd83e20",{"_index":5647,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["de",{"_index":4525,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["de51159",{"_index":5744,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["deactivate",{"_index":4586,"title":{},"body":{"components/TabComponent.html":{}}}],["deactivated",{"_index":4587,"title":{},"body":{"components/TabComponent.html":{}}}],["death",{"_index":5837,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["debounce",{"_index":2558,"title":{},"body":{"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime",{"_index":1316,"title":{},"body":{"interfaces/Day.html":{},"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decide",{"_index":5499,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decides",{"_index":2223,"title":{},"body":{"injectables/FormService.html":{},"components/ListComponent.html":{}}}],["decimal",{"_index":4769,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["deck",{"_index":3575,"title":{},"body":{"components/ModalComponent.html":{}}}],["declarations",{"_index":350,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["declare",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["declares",{"_index":2295,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["decoration",{"_index":3533,"title":{},"body":{"components/MenuComponent.html":{}}}],["decorators",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["decrement",{"_index":5527,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["deduplicate",{"_index":1993,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["def9084",{"_index":5728,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["default",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultcolumns",{"_index":4104,"title":{},"body":{"injectables/PopService.html":{}}}],["defaultentryinputcomponent",{"_index":228,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryinputcomponent#autofocus",{"_index":5825,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultentryoutputcomponent",{"_index":229,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultfilter",{"_index":2869,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["defaulting",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["defaultinputcomponent",{"_index":21,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcomponent:14",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:16",{"_index":149,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:18",{"_index":148,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:20",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:22",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:25",{"_index":146,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:27",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:33",{"_index":120,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultmonthformat",{"_index":1348,"title":{},"body":{"interfaces/Day.html":{}}}],["defaultoptions",{"_index":2019,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["defaultoutputcomponent",{"_index":232,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaults",{"_index":489,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["defaultsize",{"_index":2487,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["defaulttime",{"_index":3834,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["define",{"_index":5444,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["defines",{"_index":1189,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["del",{"_index":1754,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1768,"title":{},"body":{"injectables/EntryService.html":{}}}],["del(relation",{"_index":4233,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["delay",{"_index":3464,"title":{},"body":{"components/MenuComponent.html":{}}}],["delete",{"_index":299,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["deletenullproperties",{"_index":4229,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deleteonremove",{"_index":1131,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["deletes",{"_index":1770,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deliver",{"_index":3637,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["demo",{"_index":635,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["demonstrates",{"_index":5384,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["demos",{"_index":6035,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["denied",{"_index":3868,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dependencies",{"_index":349,"title":{"dependencies.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dependency",{"_index":5641,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["depending",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["depends",{"_index":4283,"title":{},"body":{"interfaces/SdkField.html":{},"injectables/SymbolPipe.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["deprecated",{"_index":1791,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["der",{"_index":3772,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["desc",{"_index":2870,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["desc/asc",{"_index":5811,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["descending",{"_index":2880,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describe",{"_index":1940,"title":{},"body":{"classes/Field.html":{}}}],["describes",{"_index":2676,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselects",{"_index":4597,"title":{},"body":{"components/TabComponent.html":{}}}],["desired",{"_index":3165,"title":{},"body":{"components/LocationMapComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["desktop",{"_index":3832,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification",{"_index":3835,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notification",{"_index":3840,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dest",{"_index":6021,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["destroy",{"_index":4653,"title":{},"body":{"components/TinymceComponent.html":{}}}],["destroys",{"_index":3405,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["details",{"_index":5546,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["determine",{"_index":3977,"title":{},"body":{"components/PaginationComponent.html":{}}}],["determines",{"_index":1311,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":5213,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["develop",{"_index":1132,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["developer",{"_index":3623,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{}}}],["developing",{"_index":5200,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["development",{"_index":5235,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["devkit/build",{"_index":5314,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["devthe",{"_index":5315,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["dialog",{"_index":2492,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["die",{"_index":3773,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["diese",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{}}}],["diff(date",{"_index":1429,"title":{},"body":{"interfaces/Day.html":{}}}],["differ",{"_index":1061,"title":{},"body":{"components/CrudComponent.html":{}}}],["different",{"_index":1329,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["direct",{"_index":3127,"title":{},"body":{"components/LoaderComponent.html":{}}}],["directive",{"_index":200,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["directives",{"_index":326,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":5241,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["directly",{"_index":511,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["directory",{"_index":5245,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["disable",{"_index":3123,"title":{},"body":{"components/LoaderComponent.html":{}}}],["disablecolumnfilter",{"_index":2156,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{}}}],["disablecreatepop",{"_index":1133,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabled",{"_index":1244,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["disabledrag",{"_index":2871,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disabledragend",{"_index":1339,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1337,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledrop",{"_index":4895,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["disabledropdown",{"_index":2872,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["disableheader",{"_index":1739,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["disablelegacy",{"_index":619,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":1134,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableremove",{"_index":1135,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["disables",{"_index":3555,"title":{},"body":{"components/ModalComponent.html":{}}}],["disablesearchbar",{"_index":1136,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["disableselectswitch",{"_index":1137,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabletime",{"_index":1247,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupdates",{"_index":2340,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":2344,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableurlupload",{"_index":1138,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["display",{"_index":1395,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["displayaccount",{"_index":4749,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate",{"_index":4750,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(time",{"_index":4755,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayed",{"_index":1250,"title":{},"body":{"components/DatetimeComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["displays",{"_index":1318,"title":{},"body":{"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["dist",{"_index":5207,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dist/data",{"_index":6030,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["div",{"_index":3971,"title":{},"body":{"components/PaginationComponent.html":{}}}],["dma",{"_index":3700,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["dmasset",{"_index":2071,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["dmasset(this.assetgroupid",{"_index":2518,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["dmassetconfig",{"_index":2020,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":2007,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist(assetgroupid",{"_index":2097,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitems",{"_index":2100,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetresource",{"_index":2009,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["dmassets",{"_index":4775,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dnddraggable",{"_index":5740,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dndmodule",{"_index":1216,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":636,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["docs",{"_index":3542,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["document",{"_index":2032,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"interfaces/Upload.html":{}}}],["document.addeventlistener",{"_index":2710,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.body.appendchild(el",{"_index":2724,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.body.removechild(el",{"_index":2727,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.createelement('textarea",{"_index":2722,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document.execcommand('copy",{"_index":2726,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["document:click",{"_index":1681,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["document:click($event",{"_index":1701,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["documentation",{"_index":4969,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["documented",{"_index":5557,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["done",{"_index":6006,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["dont",{"_index":5477,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dosomethingrisky",{"_index":3775,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doubt",{"_index":2084,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["drag",{"_index":1217,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["dragend",{"_index":3175,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggable",{"_index":1304,"title":{},"body":{"interfaces/Day.html":{}}}],["dragged",{"_index":1312,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{}}}],["dragging",{"_index":1377,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleave",{"_index":1512,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(e",{"_index":1526,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover",{"_index":1513,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(e",{"_index":1529,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1381,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":4053,"title":{},"body":{"components/PopComponent.html":{}}}],["driven",{"_index":5186,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["drop",{"_index":1218,"title":{},"body":{"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{}}}],["drop(e",{"_index":1531,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1361,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":1164,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["dropdownfields",{"_index":1139,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["dropdowns",{"_index":1169,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{}}}],["dropped",{"_index":1521,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropzone/dropzone.directive",{"_index":2131,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirective",{"_index":329,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["due",{"_index":5995,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["duplicates",{"_index":2003,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["during",{"_index":3330,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["dynamic",{"_index":235,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dynamically",{"_index":3876,"title":{},"body":{"components/OutputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dynamicrackcomponent",{"_index":233,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent",{"_index":234,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2607,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:14",{"_index":2606,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:17",{"_index":2588,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["e).then",{"_index":4921,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["e.datatransfer.files",{"_index":1542,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1543,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.g",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["e.metakey",{"_index":2705,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["e.preventdefault",{"_index":1384,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropagation",{"_index":3064,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["e.stoppropagation",{"_index":1538,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":4857,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files",{"_index":4858,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":4859,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localname",{"_index":4720,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toelement",{"_index":4722,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2bbf1a",{"_index":5820,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["e2e",{"_index":5252,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["e8b0e49",{"_index":5907,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["ea24c06",{"_index":5821,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["ea4ba17",{"_index":5632,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["each",{"_index":1749,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog.html":{}}}],["easy",{"_index":6004,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["eb506da",{"_index":5756,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ec",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.api",{"_index":456,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.components",{"_index":2196,"title":{},"body":{"injectables/FormService.html":{},"modules/SymbolModule.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["ec.components/ace",{"_index":4964,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ec.components/ace@0.6.0",{"_index":5270,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/calendar",{"_index":1274,"title":{},"body":{"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["ec.components/calendar@0.2.0",{"_index":5271,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/core",{"_index":384,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ec.components/core@0.19.0",{"_index":5272,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/coreimport",{"_index":5541,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["ec.components/data",{"_index":4962,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ec.components/data/src/entry",{"_index":5282,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/data@0.42.0",{"_index":5273,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/location",{"_index":4965,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["ec.components/location@0.18.0",{"_index":5274,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/medium",{"_index":4966,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["ec.components/style",{"_index":4963,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.components/style/components';new",{"_index":5295,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style/components.scss\";5",{"_index":5355,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/scss/components",{"_index":5548,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["ec.components/style/scss/components';3",{"_index":5296,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style@0.21.0",{"_index":5276,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/tinymce",{"_index":4967,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ec.components/tinymce@0.5.0",{"_index":5277,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/ui",{"_index":156,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"modules/FilesModule.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ec.components/ui';8",{"_index":6025,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":2409,"title":{},"body":{"components/IconComponent.html":{}}}],["ec.components/ui@0.36.0",{"_index":5278,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.datamanager",{"_index":5529,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ec.sdk",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ec.sdk/lib/accounts",{"_index":4341,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/core",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/datamanager",{"_index":2366,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":524,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresource",{"_index":3290,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresource",{"_index":466,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresource",{"_index":2365,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresource",{"_index":1623,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":2008,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresource",{"_index":2010,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1621,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresource",{"_index":1622,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":2012,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresource",{"_index":523,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/resource",{"_index":4212,"title":{},"body":{"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/session",{"_index":4342,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":477,"title":{},"body":{"directives/AssetDirective.html":{}}}],["ecasset]'},{'name",{"_index":328,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecdropzone",{"_index":1508,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'name",{"_index":330,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentries",{"_index":1587,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ecentries]'},{'name",{"_index":332,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentry",{"_index":1648,"title":{},"body":{"directives/EntryDirective.html":{}}}],["ecentry]'},{'name",{"_index":334,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecfocus",{"_index":2140,"title":{},"body":{"directives/FocusDirective.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ecfocus]'},{'name",{"_index":336,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecicons",{"_index":2436,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["ecimage",{"_index":2443,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'name",{"_index":339,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecslothost",{"_index":341,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecthis",{"_index":6012,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["edge",{"_index":1378,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":1114,"title":{},"body":{"components/CrudComponent.html":{},"injectables/FormService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["edit/create",{"_index":5466,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["editable",{"_index":1253,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["edited",{"_index":2576,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{}}}],["edititem",{"_index":5677,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["editor",{"_index":15,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["editor#mediumeditor",{"_index":3417,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'name",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["editor.component",{"_index":3434,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["editor.component.html",{"_index":3396,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":3395,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts",{"_index":3390,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":3399,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":3400,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":3402,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":3403,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":3410,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":3414,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":3411,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":3413,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":3406,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":3404,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":3409,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":3412,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":3407,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":3408,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.getcontent",{"_index":4705,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.module.ts",{"_index":3433,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor.on('change",{"_index":185,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.scss",{"_index":3427,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setcontent(this.value",{"_index":3425,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setvalue(this.value",{"_index":192,"title":{},"body":{"components/AceComponent.html":{}}}],["editor/dist/js/medium",{"_index":3415,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/lib/medium",{"_index":3389,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor/src/sass/medium",{"_index":3426,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/test.ts",{"_index":5104,"title":{},"body":{"coverage.html":{}}}],["editor?e=1",{"_index":3393,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor@0.4.0",{"_index":5275,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["editor[0",{"_index":4717,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editorsettings",{"_index":4702,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["editorsettings.setup(editor",{"_index":4712,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ee3518f",{"_index":5612,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["efa26a0",{"_index":5613,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["efb984e",{"_index":5893,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["eine",{"_index":4038,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["eingeloggt",{"_index":684,"title":{},"body":{"guards/AuthGuard.html":{}}}],["eject",{"_index":5310,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["el",{"_index":1516,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/TabComponent.html":{}}}],["el.select",{"_index":2725,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["el.value",{"_index":2723,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["element",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["elementref",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elements",{"_index":3976,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["email",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{}}}],["emailavailable",{"_index":3367,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["emailavailable(email",{"_index":846,"title":{},"body":{"injectables/AuthService.html":{}}}],["emaillabel",{"_index":3311,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailplaceholder",{"_index":3312,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailvalidator",{"_index":5153,"title":{},"body":{"coverage.html":{}}}],["embedd",{"_index":2406,"title":{},"body":{"components/IconComponent.html":{}}}],["embedded",{"_index":1558,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["emit",{"_index":1446,"title":{},"body":{"interfaces/Day.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["emit(host",{"_index":3781,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["emit(notification",{"_index":3845,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emits",{"_index":1047,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["emitted",{"_index":1075,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithNotifications.html":{}}}],["emitter",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["emojiicons",{"_index":2408,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["empty",{"_index":939,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["empty=true",{"_index":5475,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["en",{"_index":4510,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["enable",{"_index":850,"title":{},"body":{"injectables/AuthService.html":{}}}],["enables",{"_index":2352,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["enableupdates",{"_index":2341,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resource",{"_index":2349,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsulation",{"_index":2760,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1338,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["endless",{"_index":1592,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["enforces",{"_index":5376,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhance",{"_index":4550,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":5357,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ensure",{"_index":4031,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/PopComponent.html":{}}}],["enters",{"_index":5502,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entities",{"_index":1188,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["entity",{"_index":1197,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ItemConfig.html":{}}}],["entrecode",{"_index":5189,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entrecode.github.io/ec.components",{"_index":5196,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entries",{"_index":1158,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entries/entries.directive",{"_index":1222,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirective",{"_index":331,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry",{"_index":230,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["entry(this.model",{"_index":1664,"title":{},"body":{"directives/EntryDirective.html":{}}}],["entry.del().then((res",{"_index":1840,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.getimagethumburl(property",{"_index":4771,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(property",{"_index":4785,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.save",{"_index":1803,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.saved",{"_index":4530,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["entry/entry.directive",{"_index":1230,"title":{},"body":{"modules/DataModule.html":{}}}],["entry/entry.service",{"_index":1221,"title":{},"body":{"modules/DataModule.html":{},"injectables/ModelConfigService.html":{}}}],["entry[key",{"_index":1812,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryactionbarcomponent",{"_index":237,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrycomponent",{"_index":5503,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrycomponents",{"_index":363,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/TinymceModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrycreated",{"_index":2386,"title":{},"body":{"injectables/HistoryService.html":{}}}],["entrydirective",{"_index":333,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryform",{"_index":5281,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["entryformcomponent",{"_index":238,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryid",{"_index":1649,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["entryitem",{"_index":1776,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.config",{"_index":1817,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.getbody",{"_index":1802,"title":{},"body":{"injectables/EntryService.html":{}}}],["entrylist",{"_index":602,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["entrylist(this.model",{"_index":1630,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["entrylist.model",{"_index":1743,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["entrylistcomponent",{"_index":240,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistpopcomponent",{"_index":241,"title":{"components/EntryListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistselectcomponent",{"_index":242,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":1023,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcomponent",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresource",{"_index":1615,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["entryselectcomponent",{"_index":244,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice",{"_index":1208,"title":{"injectables/EntryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice#change",{"_index":1798,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryupdated",{"_index":2383,"title":{},"body":{"injectables/HistoryService.html":{}}}],["env",{"_index":4324,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["environment",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":4358,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":4361,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environment",{"_index":4368,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.init",{"_index":4354,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments",{"_index":5359,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["environments/environment",{"_index":5367,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":1095,"title":{},"body":{"components/CrudComponent.html":{}}}],["equally",{"_index":1941,"title":{},"body":{"classes/Field.html":{}}}],["erhalten",{"_index":4042,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":1115,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["err.message",{"_index":3369,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["error'},{'name",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["error('cannot",{"_index":535,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":4348,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":4343,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('the",{"_index":4577,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":3950,"title":{},"body":{"classes/Pagination.html":{}}}],["error.code",{"_index":1855,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail}}{{error.verbose",{"_index":1860,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1842,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1856,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail}}{{error.verbose",{"_index":1858,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.message",{"_index":2666,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error.verbose",{"_index":1859,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":3827,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.message",{"_index":1857,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcomponent",{"_index":245,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":3305,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["errors",{"_index":2648,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["errors'},{'name",{"_index":257,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["errors.component",{"_index":2673,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2650,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts",{"_index":2646,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:12",{"_index":2652,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":2659,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:17",{"_index":2655,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2645,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs",{"_index":2665,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errs.push",{"_index":2664,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellen",{"_index":4165,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["erstellt",{"_index":5410,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["es6",{"_index":1273,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["esc",{"_index":1693,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["escape",{"_index":4100,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1893,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["even",{"_index":1150,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event",{"_index":919,"title":{},"body":{"classes/Collection.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event.key",{"_index":4110,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycode",{"_index":4108,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitter",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["eventemitter.ts",{"_index":1007,"title":{},"body":{"classes/Config.html":{}}}],["events",{"_index":4102,"title":{},"body":{"injectables/PopService.html":{}}}],["eventsource",{"_index":2367,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsource/lib/eventsource",{"_index":2368,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsources",{"_index":2338,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventually",{"_index":4862,"title":{},"body":{"components/UploadComponent.html":{}}}],["everything",{"_index":3602,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["everytime",{"_index":2018,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1282,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{}}}],["exactly",{"_index":5461,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["example",{"_index":906,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/adding-new-packages.html":{}}}],["examples",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["execute",{"_index":5250,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["exist",{"_index":4578,"title":{},"body":{"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["existing",{"_index":1779,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ListConfigService.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["existing.hide",{"_index":2931,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["existing.hide.foreach((property",{"_index":2934,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["exists",{"_index":5287,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expected",{"_index":2392,"title":{},"body":{"components/IconComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["expects",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{}}}],["experimental",{"_index":2251,"title":{},"body":{"injectables/FormService.html":{},"interfaces/ListConfig.html":{}}}],["export",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["exportas",{"_index":525,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["exporting",{"_index":5859,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["exports",{"_index":352,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["expose",{"_index":4490,"title":{},"body":{"classes/Sorter.html":{}}}],["exposes",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{}}}],["extend",{"_index":5494,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["extended",{"_index":3355,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["extending",{"_index":5619,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["extends",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["extension",{"_index":2155,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["extensions/modes/themes",{"_index":5553,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["external",{"_index":1178,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":1160,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["extracts",{"_index":2215,"title":{},"body":{"injectables/FormService.html":{}}}],["f.hideinlist",{"_index":3029,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["f.hideinlist).map((f",{"_index":2928,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.name",{"_index":4887,"title":{},"body":{"components/UploadComponent.html":{}}}],["f.property",{"_index":2929,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.url",{"_index":2060,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["f3590a7",{"_index":5779,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["f7b65f4",{"_index":5877,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["factor",{"_index":5474,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fadein",{"_index":3549,"title":{},"body":{"components/ModalComponent.html":{}}}],["fail",{"_index":974,"title":{},"body":{"classes/Collection.html":{}}}],["failiure",{"_index":3798,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["fails",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{}}}],["faktor",{"_index":5414,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["fall",{"_index":1823,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2792,"title":{},"body":{"components/ListComponent.html":{},"components/ModalComponent.html":{}}}],["falling",{"_index":3588,"title":{},"body":{"components/ModalComponent.html":{}}}],["falls",{"_index":1179,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["false",{"_index":400,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fancier",{"_index":4736,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fb",{"_index":3319,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["fcfdf32",{"_index":5765,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fd41ccc",{"_index":5870,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["features",{"_index":3785,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["fed2c52",{"_index":5746,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fehler",{"_index":3777,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["ffnungszeiten",{"_index":5506,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field",{"_index":48,"title":{"classes/Field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["field#autofocus",{"_index":5827,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["field's",{"_index":1916,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{}}}],["field('name",{"_index":1957,"title":{},"body":{"classes/Field.html":{}}}],["field(this.property",{"_index":2617,"title":{},"body":{"components/InputComponent.html":{}}}],["field.component",{"_index":1561,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.create",{"_index":2231,"title":{},"body":{"injectables/FormService.html":{}}}],["field.display(name",{"_index":1965,"title":{},"body":{"classes/Field.html":{}}}],["field.edit",{"_index":2233,"title":{},"body":{"injectables/FormService.html":{}}}],["field.form",{"_index":2234,"title":{},"body":{"injectables/FormService.html":{}}}],["field.getlabel",{"_index":3033,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.getplaceholder",{"_index":1497,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.getview('filter",{"_index":3007,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.group(name",{"_index":1966,"title":{},"body":{"classes/Field.html":{}}}],["field.hideinform",{"_index":4951,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["field.hideinlist",{"_index":2933,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["field.immutable",{"_index":2257,"title":{},"body":{"injectables/FormService.html":{}}}],["field.maxitems||10",{"_index":1500,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.nestedcrudconfig",{"_index":3009,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.placeholder",{"_index":1496,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.property",{"_index":2995,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.readonly",{"_index":2258,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field.required",{"_index":2253,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobby",{"_index":1963,"title":{},"body":{"classes/Field.html":{}}}],["field.sort(name",{"_index":1968,"title":{},"body":{"classes/Field.html":{}}}],["field.ts",{"_index":4276,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["field.type",{"_index":469,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.validate",{"_index":2226,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.value",{"_index":2256,"title":{},"body":{"injectables/FormService.html":{}}}],["fieldconfig",{"_index":1168,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldconfig[field].inputview",{"_index":3682,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[field].type",{"_index":3680,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[key",{"_index":3728,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[property",{"_index":3694,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperty",{"_index":1862,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"components/InputComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldfilter",{"_index":591,"title":{},"body":{"components/AssetListComponent.html":{}}}],["fieldhost",{"_index":1567,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirective",{"_index":1576,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldname",{"_index":1994,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fields",{"_index":392,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["fields.filter((field",{"_index":4949,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe",{"_index":2179,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.ts",{"_index":4941,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":4948,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe.ts:12",{"_index":4946,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalidators",{"_index":3360,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["fieldvalidators.email",{"_index":3366,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["fieldvalidators.uuid",{"_index":4443,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["file",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["file.service",{"_index":632,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["fileinput",{"_index":4817,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":2053,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filename",{"_index":1995,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filenames",{"_index":2006,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fileoptions",{"_index":1140,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["files",{"_index":519,"title":{},"body":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["files.length",{"_index":2057,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.map((f",{"_index":2059,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.split('\\n').map((url",{"_index":4863,"title":{},"body":{"components/UploadComponent.html":{}}}],["files/file.service",{"_index":1198,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["files/files.module",{"_index":1231,"title":{},"body":{"modules/DataModule.html":{}}}],["files[0].url",{"_index":2058,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["fileservice",{"_index":616,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileservice#resolveassets",{"_index":2083,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filesmodule",{"_index":1205,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":4818,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill(0",{"_index":1413,"title":{},"body":{"interfaces/Day.html":{}}}],["filte",{"_index":3646,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filter",{"_index":548,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["filter((field",{"_index":2237,"title":{},"body":{"injectables/FormService.html":{},"injectables/ModelConfigService.html":{}}}],["filter((i",{"_index":4135,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter((item",{"_index":4483,"title":{},"body":{"classes/Sorter.html":{}}}],["filter((route",{"_index":3505,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter((v",{"_index":4158,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter((value",{"_index":4155,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter(property",{"_index":584,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["filter.model",{"_index":1787,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter.relation",{"_index":1788,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter[key",{"_index":4258,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filterable",{"_index":1865,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["filtercomponent",{"_index":3674,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filterdropdownlist(listcomponent",{"_index":4150,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filteredfield",{"_index":2941,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filteredfield.getlabel",{"_index":3032,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield",{"_index":2947,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield(property",{"_index":2961,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterform",{"_index":2942,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterformconfig",{"_index":2943,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filtering",{"_index":1891,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filterinput",{"_index":2944,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filteroperator",{"_index":1866,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["filteroperators",{"_index":5749,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filteroptions",{"_index":1603,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpop",{"_index":2945,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterpopclass",{"_index":1867,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filters",{"_index":1281,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["filterview",{"_index":3645,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["find",{"_index":5197,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["finds",{"_index":4542,"title":{},"body":{"injectables/SymbolService.html":{}}}],["finished",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":3852,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["fired",{"_index":2708,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["fires",{"_index":498,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":1305,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fits",{"_index":4239,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":2546,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["fixed",{"_index":3559,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["fixes",{"_index":5571,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["flag",{"_index":569,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["flags",{"_index":4826,"title":{},"body":{"components/UploadComponent.html":{}}}],["flexible",{"_index":2816,"title":{},"body":{"components/ListComponent.html":{}}}],["flip",{"_index":1729,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["flips",{"_index":1528,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":5397,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/publishing.html":{}}}],["fn",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["focus",{"_index":63,"title":{"interfaces/Focus.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["focus(focus",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["focus/focus.directive",{"_index":4935,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirective",{"_index":335,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["focused",{"_index":2709,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focuses",{"_index":4913,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["focusevent",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/UploadSelectComponent.html":{}}}],["focusfirst",{"_index":2766,"title":{},"body":{"components/ListComponent.html":{}}}],["focusitem",{"_index":2763,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focusnext",{"_index":2767,"title":{},"body":{"components/ListComponent.html":{}}}],["focusprev",{"_index":2768,"title":{},"body":{"components/ListComponent.html":{}}}],["focussed",{"_index":3056,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["folder",{"_index":5285,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/adding-new-packages.html":{}}}],["folders",{"_index":5206,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["following",{"_index":2422,"title":{},"body":{"components/IconComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["follows",{"_index":5399,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["font",{"_index":4500,"title":{},"body":{"interfaces/Symbol.html":{}}}],["footer",{"_index":3547,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["forcegroup",{"_index":2024,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["forcereload",{"_index":2107,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["foreach",{"_index":3695,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["foreach((field",{"_index":2239,"title":{},"body":{"injectables/FormService.html":{}}}],["forenvironment",{"_index":1212,"title":{},"body":{"modules/DataModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environment",{"_index":1213,"title":{},"body":{"modules/DataModule.html":{}}}],["forever",{"_index":3751,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["form's",{"_index":2596,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'name",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["form.component",{"_index":1227,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{}}}],["form.component'new",{"_index":5283,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form.component.html",{"_index":3304,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts",{"_index":3301,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":4418,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:18",{"_index":3350,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:20",{"_index":3353,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":3349,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:24",{"_index":3337,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":3336,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":3329,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:30",{"_index":3335,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":3325,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":3328,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":3332,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":4430,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:38",{"_index":3334,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":3323,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":3320,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":3318,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:47",{"_index":3354,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:50",{"_index":3344,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:58",{"_index":3348,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:66",{"_index":3340,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":3345,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.create",{"_index":5875,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["form.display('amazement_factor",{"_index":5483,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["form.fields",{"_index":2236,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form",{"_index":2259,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.display",{"_index":2262,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.isediting",{"_index":2261,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getbody",{"_index":2232,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getvalue('keepratio",{"_index":2550,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue('ratio",{"_index":2549,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue(field.property",{"_index":2241,"title":{},"body":{"injectables/FormService.html":{}}}],["form.group.controls.alt.setvalue(title",{"_index":2537,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.height.setvalue(math.round(value",{"_index":2551,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.ratio.setvalue(ratio",{"_index":2538,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(math.round(value",{"_index":2553,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(width",{"_index":2536,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.service",{"_index":1489,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["form.ts",{"_index":5084,"title":{},"body":{"coverage.html":{}}}],["form/admin",{"_index":443,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1224,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entry",{"_index":1226,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form/form.component",{"_index":2230,"title":{},"body":{"injectables/FormService.html":{},"components/ListHeaderComponent.html":{}}}],["form/form.module",{"_index":3072,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":3300,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resource",{"_index":4220,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":4415,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["format",{"_index":1306,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{}}}],["formats",{"_index":868,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.date",{"_index":886,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.month",{"_index":888,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.time",{"_index":887,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formatted",{"_index":1314,"title":{},"body":{"interfaces/Day.html":{}}}],["formattedtext",{"_index":4767,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formatter",{"_index":4763,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuilder",{"_index":3317,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcomponent",{"_index":247,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#inputs",{"_index":2598,"title":{},"body":{"components/InputComponent.html":{}}}],["formconfig",{"_index":2153,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["formdata",{"_index":2051,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formdata.append(key",{"_index":2054,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formgroup",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup(controls",{"_index":2249,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodule",{"_index":2163,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formmoduleconfig",{"_index":2189,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["forms",{"_index":1898,"title":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["formservice",{"_index":50,"title":{"injectables/FormService.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/LocationPickerComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["formsmodule",{"_index":702,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ListModule.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{}}}],["formtemplate",{"_index":5113,"title":{},"body":{"coverage.html":{}}}],["forroot",{"_index":864,"title":{},"body":{"modules/CalendarModule.html":{},"modules/LocationModule.html":{}}}],["forroot(formats",{"_index":865,"title":{},"body":{"modules/CalendarModule.html":{}}}],["forroot(undefined",{"_index":3196,"title":{},"body":{"modules/LocationModule.html":{}}}],["forwardref",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["found",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/style-readme.html":{}}}],["framework",{"_index":5530,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["freedom",{"_index":5472,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fresh",{"_index":5214,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["from(this.maploader.load()).pipe(switchmap",{"_index":2312,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":3225,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["fruit",{"_index":5533,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["fruits",{"_index":2819,"title":{},"body":{"components/ListComponent.html":{}}}],["fs",{"_index":5330,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["full",{"_index":3486,"title":{},"body":{"components/MenuComponent.html":{}}}],["fun",{"_index":5379,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":429,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["functionalities",{"_index":851,"title":{},"body":{"injectables/AuthService.html":{}}}],["functionality",{"_index":1016,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["functions",{"_index":5182,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamental",{"_index":893,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":3748,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["future",{"_index":1799,"title":{},"body":{"injectables/EntryService.html":{}}}],["g",{"_index":5338,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generally",{"_index":5485,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generate",{"_index":2658,"title":{},"body":{"components/InputErrorsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["generateconfig",{"_index":3607,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":3614,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generated",{"_index":3603,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["generates",{"_index":3617,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generation",{"_index":5464,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["generic",{"_index":573,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["geo",{"_index":3229,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocode",{"_index":2267,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.service",{"_index":3199,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":2269,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocoder",{"_index":2280,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder",{"_index":2285,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocode",{"_index":2316,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservice",{"_index":2263,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get(name",{"_index":4540,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(property",{"_index":3627,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(type",{"_index":4758,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["getaccount(api",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":4457,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(items",{"_index":4462,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethods",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(relation",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["getassetconfig(assetgroupid",{"_index":2036,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getcolor",{"_index":3445,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":3475,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolumns",{"_index":1876,"title":{},"body":{"classes/Field.html":{}}}],["getcomponent",{"_index":1877,"title":{},"body":{"classes/Field.html":{}}}],["getcomponent(occasion",{"_index":1929,"title":{},"body":{"classes/Field.html":{}}}],["getdaycolor(_moment",{"_index":1388,"title":{},"body":{"interfaces/Day.html":{}}}],["getdayheat(_moment",{"_index":1391,"title":{},"body":{"interfaces/Day.html":{}}}],["geterrors",{"_index":2651,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfieldconfig",{"_index":3608,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getfieldconfig(model",{"_index":3632,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getformdata(files",{"_index":2052,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getformlabel",{"_index":2198,"title":{},"body":{"injectables/FormService.html":{}}}],["getformlabel(form",{"_index":2208,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup",{"_index":2199,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":2211,"title":{},"body":{"injectables/FormService.html":{}}}],["getheader",{"_index":1676,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getheader(entrylist",{"_index":1704,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getitemcolor",{"_index":3446,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":3478,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlabel",{"_index":1878,"title":{},"body":{"classes/Field.html":{}}}],["getlevel",{"_index":3447,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":3480,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlightmodel",{"_index":3609,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getlightmodel(model",{"_index":3638,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel",{"_index":3610,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(model",{"_index":3642,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(this.model",{"_index":1099,"title":{},"body":{"components/CrudComponent.html":{}}}],["getmonth(day",{"_index":1406,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":2270,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(location",{"_index":2286,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpage",{"_index":3888,"title":{},"body":{"classes/Pagination.html":{}}}],["getpages",{"_index":3889,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":440,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/MenuComponent.html":{}}}],["getpath(item",{"_index":3484,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermission",{"_index":3836,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplaceholder",{"_index":1879,"title":{},"body":{"classes/Field.html":{}}}],["getresourcelistactions(listresource",{"_index":4121,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["getroot",{"_index":4336,"title":{},"body":{"injectables/SdkService.html":{}}}],["gets",{"_index":3744,"title":{},"body":{"classes/Notification.html":{}}}],["getschema",{"_index":4299,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":4308,"title":{},"body":{"injectables/SdkService.html":{}}}],["getstoragekey",{"_index":2897,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getstoragekey(list",{"_index":2902,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getsystemfields",{"_index":3611,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getter",{"_index":995,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{}}}],["getting",{"_index":4958,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["getvalidators",{"_index":2200,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":2213,"title":{},"body":{"injectables/FormService.html":{}}}],["getview",{"_index":1880,"title":{},"body":{"classes/Field.html":{}}}],["getview(occasion",{"_index":1934,"title":{},"body":{"classes/Field.html":{}}}],["ghost",{"_index":5480,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["give",{"_index":4942,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["gives",{"_index":4238,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["giving",{"_index":5453,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["global",{"_index":3105,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["globalloader",{"_index":3111,"title":{},"body":{"components/LoaderComponent.html":{}}}],["globally",{"_index":5337,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["glyph",{"_index":4501,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":5255,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["google",{"_index":2265,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["google.maps.geocoder",{"_index":2323,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":2298,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemaps",{"_index":3261,"title":{},"body":{"components/LocationSearchComponent.html":{},"dependencies.html":{}}}],["googlemaps.apikey",{"_index":3210,"title":{},"body":{"modules/LocationModule.html":{}}}],["granted",{"_index":3844,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["group",{"_index":51,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["group.addcontrol(field.property",{"_index":2252,"title":{},"body":{"injectables/FormService.html":{}}}],["group.pipe",{"_index":3073,"title":{},"body":{"modules/ListModule.html":{}}}],["group.value",{"_index":610,"title":{},"body":{"components/AssetListComponent.html":{}}}],["groupchanged",{"_index":622,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["groupdate",{"_index":4751,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["grouping",{"_index":1954,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["grouppipe",{"_index":1280,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1599,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":5415,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["guard",{"_index":641,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":706,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.ts",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:16",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guide",{"_index":5198,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["guidelines",{"_index":5559,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["h",{"_index":2825,"title":{},"body":{"components/ListComponent.html":{}}}],["haben",{"_index":4036,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacks",{"_index":5757,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["handle",{"_index":2266,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["handler",{"_index":2789,"title":{},"body":{"components/ListComponent.html":{}}}],["handles",{"_index":2207,"title":{},"body":{"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handling",{"_index":3501,"title":{},"body":{"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handy",{"_index":5447,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["happened",{"_index":2015,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["happens",{"_index":1691,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hard",{"_index":5486,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["has(item",{"_index":930,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":3448,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":3487,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasall",{"_index":896,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(items",{"_index":933,"title":{},"body":{"classes/Collection.html":{}}}],["hasfocus",{"_index":3040,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasfocus(item",{"_index":3054,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasmethod",{"_index":1025,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["hasmethod(method",{"_index":1051,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hassle",{"_index":5545,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["having",{"_index":449,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1342,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["header'},{'name",{"_index":260,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["header.component",{"_index":3074,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2940,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts",{"_index":2938,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":2972,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:113",{"_index":2960,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:122",{"_index":2976,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:132",{"_index":2978,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:138",{"_index":2970,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:16",{"_index":2956,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":2957,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":2984,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":2982,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":2980,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:24",{"_index":2981,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2955,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:27",{"_index":2979,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:29",{"_index":2974,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":2968,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":2966,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:46",{"_index":2971,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":2962,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/items/pagination",{"_index":5431,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header/list",{"_index":2937,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headers",{"_index":5409,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["headline",{"_index":3755,"title":{},"body":{"classes/Notification.html":{}}}],["heat",{"_index":1307,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap",{"_index":1326,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'name",{"_index":249,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["heatmap/heatmap.component",{"_index":871,"title":{},"body":{"modules/CalendarModule.html":{}}}],["heatmapcomponent",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":196,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{}}}],["hellip",{"_index":1501,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["help",{"_index":5254,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["helper",{"_index":1605,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["helpful",{"_index":2591,"title":{},"body":{"components/InputComponent.html":{}}}],["here",{"_index":3107,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["hh:mm",{"_index":878,"title":{},"body":{"modules/CalendarModule.html":{}}}],["hidden",{"_index":1868,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/WithNotifications.html":{}}}],["hide",{"_index":1111,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["hideassetgroupselect",{"_index":1141,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["hidefirstlast",{"_index":4002,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hideformlabel",{"_index":1869,"title":{},"body":{"classes/Field.html":{}}}],["hideformlabelifempty",{"_index":1870,"title":{},"body":{"classes/Field.html":{}}}],["hideinform",{"_index":2541,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{}}}],["hideinlist",{"_index":3662,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonclickoutside",{"_index":1679,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hideoncreate",{"_index":3702,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonedit",{"_index":3703,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonescape",{"_index":1680,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["hidepages",{"_index":4003,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagination",{"_index":1738,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["hides",{"_index":1171,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["hidesubmitbutton",{"_index":2157,"title":{},"body":{"interfaces/FormConfig.html":{}}}],["hiding",{"_index":3782,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["higher",{"_index":2826,"title":{},"body":{"components/ListComponent.html":{}}}],["highest",{"_index":5538,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["histories",{"_index":2362,"title":{},"body":{"injectables/HistoryService.html":{}}}],["history",{"_index":2379,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservice",{"_index":1209,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["holds",{"_index":445,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["host",{"_index":1524,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{}}}],["host.directive",{"_index":1578,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.ts",{"_index":4446,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":4451,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":4449,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbinding",{"_index":1533,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class",{"_index":1734,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class.is",{"_index":1535,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostbindings",{"_index":1509,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostlistener",{"_index":1534,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostlistener('document:click",{"_index":4075,"title":{},"body":{"components/PopComponent.html":{}}}],["hostlistener('dragleave",{"_index":1545,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragover",{"_index":1536,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1540,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisteners",{"_index":1511,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hosts",{"_index":5457,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["hours",{"_index":5510,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.html",{"_index":5511,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.scss",{"_index":5512,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hover",{"_index":3442,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":3453,"title":{},"body":{"components/MenuComponent.html":{}}}],["hovered",{"_index":3500,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":3449,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":3490,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":3450,"title":{},"body":{"components/MenuComponent.html":{}}}],["hovers",{"_index":3492,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["http",{"_index":5301,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["http://localhost:1337",{"_index":5239,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["https",{"_index":5303,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://angular.io/guide/dynamic",{"_index":4447,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":5516,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["https://components.entrecode.de/assets/asset?e=1",{"_index":476,"title":{},"body":{"directives/AssetDirective.html":{}}}],["https://components.entrecode.de/auth/auth?e=1",{"_index":3271,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/auth/password",{"_index":4017,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["https://components.entrecode.de/auth/signup?e=1",{"_index":4392,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://components.entrecode.de/entries/crud?e=1",{"_index":1018,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/entries/entries?e=1",{"_index":1586,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["https://components.entrecode.de/misc/ace?e=1",{"_index":19,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":3392,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymce?e=1",{"_index":4649,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetime?e=1",{"_index":1242,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["https://components.entrecode.de/ui/icons?e=1",{"_index":2393,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["https://components.entrecode.de/ui/list/basic?e=1",{"_index":2758,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transforms?e=1",{"_index":2759,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/loader?e=1",{"_index":3085,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login?e=1",{"_index":3303,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["https://components.entrecode.de/ui/modal?e=1",{"_index":3540,"title":{},"body":{"components/ModalComponent.html":{}}}],["https://components.entrecode.de/ui/notifications?e=1",{"_index":3761,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop?e=1",{"_index":4054,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/symbols?e=1",{"_index":4537,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://components.entrecode.de/ui/tabs?e=1",{"_index":4604,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/data_manager/#field",{"_index":4277,"title":{},"body":{"interfaces/SdkField.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":561,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environment",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ace",{"_index":169,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":2248,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":712,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/ng",{"_index":4562,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://localhost:4200",{"_index":5382,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffins",{"_index":5396,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://medium.com/claritydesignsystem/ng",{"_index":3541,"title":{},"body":{"components/ModalComponent.html":{}}}],["human",{"_index":1951,"title":{},"body":{"classes/Field.html":{}}}],["humans",{"_index":2684,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["i+1",{"_index":3990,"title":{},"body":{"components/PaginationComponent.html":{}}}],["i.getbody",{"_index":4134,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["i.id",{"_index":4136,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["icon",{"_index":1871,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["icon'},{'name",{"_index":251,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["icon.component",{"_index":2431,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":2396,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.content",{"_index":2425,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.service",{"_index":2416,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.module",{"_index":2184,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{}}}],["iconcomponent",{"_index":250,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodule",{"_index":2174,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons",{"_index":2389,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{}}}],["icons.ts",{"_index":5118,"title":{},"body":{"coverage.html":{}}}],["iconservice",{"_index":2398,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{}}}],["id",{"_index":374,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["idea",{"_index":2814,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["identifier",{"_index":391,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["identifierpattern",{"_index":2678,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["identify",{"_index":2682,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["ids",{"_index":2091,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ids.push(asset",{"_index":2090,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["if(body.amazement_factor",{"_index":5440,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value",{"_index":5435,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value===10",{"_index":5433,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["iframes",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignored",{"_index":2884,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["ignoreduplicates",{"_index":1996,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ignores",{"_index":2002,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ignoring",{"_index":4250,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["image",{"_index":253,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["image/image.directive",{"_index":2132,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirective",{"_index":337,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageform",{"_index":2485,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageloader",{"_index":2486,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["images",{"_index":2482,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageselectpopcomponent",{"_index":252,"title":{"components/ImageSelectPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":338,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["img's",{"_index":2440,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immediately",{"_index":493,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/PopComponent.html":{}}}],["immutable",{"_index":1773,"title":{},"body":{"injectables/EntryService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["implement",{"_index":5514,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["implementation",{"_index":1258,"title":{},"body":{"components/DatetimeComponent.html":{},"components/NotificationsComponent.html":{}}}],["implemented",{"_index":4280,"title":{},"body":{"interfaces/SdkField.html":{}}}],["implements",{"_index":17,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["import",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["imported",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/InputErrorsComponent.html":{}}}],["importing",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["imports",{"_index":364,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["impressum",{"_index":5256,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["improved",{"_index":5644,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["include",{"_index":4518,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["includeassetidinpath",{"_index":1997,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["included",{"_index":2222,"title":{},"body":{"injectables/FormService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["includes",{"_index":2004,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{}}}],["including",{"_index":2435,"title":{},"body":{"injectables/IconService.html":{}}}],["incoming",{"_index":4744,"title":{},"body":{"components/ToggleComponent.html":{}}}],["increment",{"_index":5525,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["index(item",{"_index":936,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":2407,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["indexable",{"_index":1936,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["indicate",{"_index":3102,"title":{},"body":{"components/LoaderComponent.html":{}}}],["indices",{"_index":2001,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["information",{"_index":3641,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["infos",{"_index":3917,"title":{},"body":{"classes/Pagination.html":{}}}],["inhabits",{"_index":2686,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":5452,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["inherited",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["init",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["init(environment",{"_index":4312,"title":{},"body":{"injectables/SdkService.html":{}}}],["init(list",{"_index":2799,"title":{},"body":{"components/ListComponent.html":{}}}],["inital",{"_index":5691,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["initfilterform",{"_index":2948,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initfilterform(filterform",{"_index":2965,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initfilterquery",{"_index":549,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initfilterquery(fieldfilter",{"_index":588,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initial",{"_index":1847,"title":{},"body":{"components/ErrorComponent.html":{},"components/MenuComponent.html":{}}}],["initialized",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["initializes",{"_index":1394,"title":{},"body":{"interfaces/Day.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{}}}],["initially",{"_index":4612,"title":{},"body":{"components/TabsComponent.html":{}}}],["initing",{"_index":4290,"title":{},"body":{"injectables/SdkService.html":{}}}],["initmethods",{"_index":4173,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initmode",{"_index":3545,"title":{},"body":{"components/ModalComponent.html":{}}}],["inits",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["inittabs",{"_index":4608,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":1290,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inject('environment",{"_index":4326,"title":{},"body":{"injectables/SdkService.html":{}}}],["injectable",{"_index":662,"title":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["injectables",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"overview.html":{}}}],["injection",{"_index":5949,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["injects",{"_index":485,"title":{},"body":{"directives/AssetDirective.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["input",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["input's",{"_index":1256,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'name",{"_index":255,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["input('config",{"_index":2832,"title":{},"body":{"components/ListComponent.html":{}}}],["input.component",{"_index":1223,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["input.component.html",{"_index":458,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.scss",{"_index":5496,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts",{"_index":444,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts:10",{"_index":1470,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:13",{"_index":463,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":464,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:16",{"_index":1487,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:18",{"_index":1486,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:20",{"_index":1484,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:22",{"_index":1481,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:25",{"_index":1485,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:27",{"_index":1483,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:33",{"_index":1482,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1469,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.focus(true",{"_index":2997,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["input/default",{"_index":1477,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"coverage.html":{}}}],["input/ec",{"_index":5469,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input/form",{"_index":5840,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["input/input.component",{"_index":2672,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":5481,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input[type=file",{"_index":4848,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcomponent",{"_index":129,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputcomponent#focus",{"_index":5828,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["inputcomponents",{"_index":2597,"title":{},"body":{"components/InputComponent.html":{}}}],["inputerrorscomponent",{"_index":256,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputready",{"_index":2949,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputready(input",{"_index":2967,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputs",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["inputthis",{"_index":5493,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputview",{"_index":2521,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inputviews",{"_index":4787,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["inside",{"_index":1068,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["inspiration",{"_index":4202,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["install",{"_index":5217,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["installation",{"_index":5534,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["instance",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["instanceof",{"_index":2473,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instances",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"pipes/DatetimePipe.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["instead",{"_index":1793,"title":{},"body":{"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["intended",{"_index":4671,"title":{},"body":{"components/TinymceComponent.html":{}}}],["interaction",{"_index":3830,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interface",{"_index":369,"title":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["interfaces",{"_index":371,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"overview.html":{}}}],["interfere",{"_index":3132,"title":{},"body":{"components/LoaderComponent.html":{}}}],["internal",{"_index":1181,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["interpreted",{"_index":2026,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["intialization",{"_index":2594,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefined",{"_index":4471,"title":{},"body":{"classes/Sorter.html":{}}}],["invalid",{"_index":4778,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["invite",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["inviteplaceholder",{"_index":4416,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["invoked",{"_index":2685,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["io/input/input.component",{"_index":2993,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["io/io.module",{"_index":2180,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodule",{"_index":2171,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isactive",{"_index":3451,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(page",{"_index":3908,"title":{},"body":{"classes/Pagination.html":{}}}],["isactive(path",{"_index":3494,"title":{},"body":{"components/MenuComponent.html":{}}}],["isclickable",{"_index":3041,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["isdisabled",{"_index":1262,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["isempty",{"_index":897,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1420,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1588,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperty",{"_index":1755,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1771,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1589,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["islastcolumn",{"_index":2950,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["islastcolumn(field",{"_index":2969,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["isloading",{"_index":2764,"title":{},"body":{"components/ListComponent.html":{}}}],["isn't",{"_index":5334,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["isnewasset(asset",{"_index":2042,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isnewassetgroupid(assetgroupid",{"_index":2112,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4762,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["isodate",{"_index":4752,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["isoldassetgroupid",{"_index":2501,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["isoldassetgroupid(assetgroupid",{"_index":2110,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isoutside",{"_index":1677,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isoutside(element",{"_index":1712,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isreadonly",{"_index":2201,"title":{},"body":{"injectables/FormService.html":{}}}],["isreadonly(field",{"_index":2218,"title":{},"body":{"injectables/FormService.html":{}}}],["issame(this.timespan[0].clone().startof('day",{"_index":1419,"title":{},"body":{"interfaces/Day.html":{}}}],["issame(this.timespan[1].clone().startof('day",{"_index":1421,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected",{"_index":3452,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_moment",{"_index":1453,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":3496,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1417,"title":{},"body":{"interfaces/Day.html":{}}}],["issue",{"_index":5836,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["ist",{"_index":3771,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["isvisible",{"_index":3960,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(page",{"_index":3963,"title":{},"body":{"components/PaginationComponent.html":{}}}],["item",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["item's",{"_index":3046,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item('a",{"_index":5542,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["item(asset",{"_index":2068,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":2066,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(s",{"_index":2113,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item.config.fields[property].form",{"_index":1097,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":1096,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsave",{"_index":4262,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.data?.title",{"_index":3528,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(value",{"_index":4264,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody",{"_index":611,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody().action",{"_index":402,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().action(item",{"_index":403,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().children",{"_index":404,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().select",{"_index":399,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.group(property",{"_index":2332,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":1107,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":3526,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.resolve(field.property",{"_index":5455,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["item.sort(property",{"_index":4481,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":2162,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.property",{"_index":1475,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.resolve(field.property)?.length",{"_index":1503,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemclick",{"_index":5698,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["itemconfig",{"_index":1762,"title":{"interfaces/ItemConfig.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["items",{"_index":894,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["items'},{'name",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["items.component",{"_index":3075,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":3039,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts",{"_index":3036,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:14",{"_index":3049,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:16",{"_index":3050,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:18",{"_index":3045,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:20",{"_index":3051,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:22",{"_index":3044,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:24",{"_index":3043,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:26",{"_index":3059,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:28",{"_index":3058,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:44",{"_index":3055,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:48",{"_index":3057,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:53",{"_index":3052,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":2331,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":968,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":984,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pipe",{"_index":2186,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.ts",{"_index":3382,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:7",{"_index":3386,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((has",{"_index":975,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.reverse",{"_index":4497,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.page",{"_index":3952,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":4492,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":3035,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["iterate",{"_index":2656,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["itself",{"_index":1715,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["javascript",{"_index":74,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3592,"title":{},"body":{"components/ModalComponent.html":{}}}],["js",{"_index":5166,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["json.parse(config",{"_index":2914,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.parse(e.data",{"_index":2384,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(object.assign(existing",{"_index":2918,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.stringify(value",{"_index":2916,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["jump",{"_index":5835,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["jwt/issues/305",{"_index":713,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":678,"title":{},"body":{"guards/AuthGuard.html":{}}}],["karma",{"_index":5251,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["keep",{"_index":1435,"title":{},"body":{"interfaces/Day.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["keeppopopen",{"_index":1142,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["keepratio",{"_index":2542,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["keeps",{"_index":2334,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{}}}],["key",{"_index":997,"title":{},"body":{"classes/Config.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["key[0",{"_index":1824,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keyaction",{"_index":2693,"title":{"interfaces/KeyAction.html":{}},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"coverage.html":{}}}],["keycommands",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["keycommands/keycommands.service",{"_index":4937,"title":{},"body":{"modules/UtilityModule.html":{}}}],["keycommandsservice",{"_index":151,"title":{"injectables/KeycommandsService.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LocationPickerComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyconfig",{"_index":2717,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keyconfig.action(e",{"_index":2720,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keyconfig.canactivate",{"_index":2719,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["keydown",{"_index":4101,"title":{},"body":{"injectables/PopService.html":{}}}],["keys",{"_index":2696,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"injectables/PopService.html":{}}}],["keyup",{"_index":4724,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kind",{"_index":3103,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithLoader.html":{}}}],["kinds",{"_index":4455,"title":{},"body":{"classes/Sorter.html":{}}}],["kleiner",{"_index":5417,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["know",{"_index":5491,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["knowing",{"_index":2096,"title":{},"body":{"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{}}}],["known",{"_index":506,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["label",{"_index":390,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["labels",{"_index":1906,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["language",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["languages",{"_index":5860,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["last",{"_index":1308,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["lat",{"_index":2324,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1557,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":4103,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":4112,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hide",{"_index":4114,"title":{},"body":{"injectables/PopService.html":{}}}],["latitude",{"_index":2306,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["layer",{"_index":3831,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["layout",{"_index":1436,"title":{},"body":{"interfaces/Day.html":{}}}],["lazy",{"_index":2559,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["left",{"_index":3565,"title":{},"body":{"components/ModalComponent.html":{}}}],["legacy",{"_index":639,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legacyasset",{"_index":2034,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["legacyassetconfig",{"_index":2022,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["lemontree",{"_index":2820,"title":{},"body":{"components/ListComponent.html":{}}}],["length",{"_index":978,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":5170,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["let's",{"_index":3866,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letters",{"_index":1747,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":3477,"title":{},"body":{"components/MenuComponent.html":{}}}],["leveled",{"_index":1838,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["levels",{"_index":481,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"injectables/TypeConfigService.html":{}}}],["li",{"_index":3975,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.is",{"_index":3531,"title":{},"body":{"components/MenuComponent.html":{}}}],["lib",{"_index":6019,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["libraries",{"_index":3208,"title":{},"body":{"modules/LocationModule.html":{}}}],["library",{"_index":6007,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["light",{"_index":3640,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lightmodel",{"_index":1672,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{}}}],["lightmodel.titlefield",{"_index":3718,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["line",{"_index":3126,"title":{},"body":{"components/LoaderComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["line:directive",{"_index":2147,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":2831,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":4007,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["links",{"_index":5402,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["lint",{"_index":5879,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["linter",{"_index":5754,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["list",{"_index":217,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["list'},{'name",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["list(resolved",{"_index":434,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["list(this.collection.items",{"_index":2840,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.items",{"_index":2837,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component",{"_index":609,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["list.component.html",{"_index":543,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.ts",{"_index":542,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["list.component.ts:9",{"_index":579,"title":{},"body":{"components/AssetListComponent.html":{}}}],["list.config",{"_index":2920,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.config.storagekey",{"_index":2921,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields",{"_index":2919,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.filter((f",{"_index":2927,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.find((f",{"_index":2935,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.foreach((field",{"_index":2932,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.load",{"_index":5460,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["list.ts",{"_index":5042,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.component",{"_index":3936,"title":{},"body":{"classes/Pagination.html":{}}}],["list/asset",{"_index":541,"title":{},"body":{"components/AssetListComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["list/entry",{"_index":1079,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["list/list",{"_index":2892,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["list/list.module",{"_index":4387,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resource",{"_index":608,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["listcomponent",{"_index":258,"title":{"components/ListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":383,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["listconfigservice",{"_index":603,"title":{"injectables/ListConfigService.html":{}},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["listens",{"_index":1703,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["listheadercomponent",{"_index":259,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscomponent",{"_index":261,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listmodule",{"_index":3065,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listmoduleconfig",{"_index":3078,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["listresource",{"_index":551,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{}}}],["listresource.follownextlink().then((list",{"_index":4130,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.getallitems().map((resource",{"_index":4122,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.hasnextlink",{"_index":4128,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["lists",{"_index":1073,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["lists/forms",{"_index":3626,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["listtemplate",{"_index":2762,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":866,"title":{},"body":{"modules/CalendarModule.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{}}}],["live",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":2326,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":478,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"directives/SlotHostDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["load(config",{"_index":3913,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":499,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadactions(actions",{"_index":425,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadactionsbefore",{"_index":410,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadcomponent",{"_index":1568,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(component",{"_index":1570,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loade",{"_index":3881,"title":{},"body":{"components/OutputComponent.html":{}}}],["loaded",{"_index":483,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loadentry",{"_index":1026,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":1054,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":552,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loader's",{"_index":3101,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":264,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["loader.component",{"_index":3147,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":3086,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interface",{"_index":3359,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loader.interface.ts",{"_index":4953,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.service",{"_index":3148,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promise",{"_index":3154,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.component",{"_index":3357,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.module",{"_index":2183,"title":{},"body":{"modules/FormModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":3358,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loadercomponent",{"_index":263,"title":{"components/LoaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{}}}],["loadermodule",{"_index":2175,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaders",{"_index":3108,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loaderservice",{"_index":1031,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderthe",{"_index":3106,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadimage",{"_index":2517,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadimg",{"_index":2523,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loading",{"_index":508,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"interfaces/WithLoader.html":{}}}],["loadresourcelistactions(state",{"_index":4141,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["loads",{"_index":474,"title":{},"body":{"directives/AssetDirective.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"miscellaneous/functions.html":{}}}],["loadwhen",{"_index":553,"title":{},"body":{"components/AssetListComponent.html":{}}}],["local",{"_index":2889,"title":{},"body":{"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["locale",{"_index":5404,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["localizable",{"_index":3697,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["localization",{"_index":4508,"title":{"additional-documentation/project-setup-tutorial/localization.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["localloader",{"_index":3113,"title":{},"body":{"components/LoaderComponent.html":{}}}],["localstorage.getitem(key",{"_index":2913,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["localstorage.setitem(key",{"_index":2915,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["located",{"_index":5195,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["location",{"_index":266,"title":{"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/location-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["location.latitude",{"_index":2325,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitude",{"_index":2327,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":3194,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_components",{"_index":3195,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmapcomponent",{"_index":265,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodule",{"_index":3187,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationmoduleconfig",{"_index":3203,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationpickercomponent",{"_index":268,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationsearchcomponent",{"_index":270,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locked",{"_index":4032,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["lockform",{"_index":4020,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":3797,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["logged",{"_index":2405,"title":{},"body":{"components/IconComponent.html":{}}}],["logic",{"_index":5515,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["login",{"_index":275,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login's",{"_index":3351,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login'},{'name",{"_index":273,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["login(undefined",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["login(value",{"_index":3339,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login.component.html",{"_index":3272,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login.component.ts",{"_index":5400,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login/login.component",{"_index":708,"title":{},"body":{"modules/AuthModule.html":{},"components/SignupComponent.html":{}}}],["logincomponent",{"_index":272,"title":{"components/LoginComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["logincomponent:23",{"_index":4397,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:25",{"_index":4400,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:27",{"_index":4399,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:29",{"_index":4406,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:31",{"_index":4407,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:34",{"_index":4405,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:35",{"_index":4408,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:36",{"_index":4409,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:39",{"_index":4402,"title":{},"body":{"components/SignupComponent.html":{}}}],["loginformcomponent",{"_index":274,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["loginformcomponent:18",{"_index":4437,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:20",{"_index":4439,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:22",{"_index":4436,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:24",{"_index":4429,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:26",{"_index":4428,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:28",{"_index":4424,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:30",{"_index":4427,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:32",{"_index":4422,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:34",{"_index":4423,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:36",{"_index":4425,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:38",{"_index":4426,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:40",{"_index":4421,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:42",{"_index":4420,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:44",{"_index":4438,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:47",{"_index":4440,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:50",{"_index":4433,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:58",{"_index":4435,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:66",{"_index":4432,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:72",{"_index":4434,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["logout",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2885,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{}}}],["longer",{"_index":5286,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["longitude",{"_index":2308,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":5360,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["looked",{"_index":3778,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["looks",{"_index":3739,"title":{},"body":{"classes/Notification.html":{}}}],["lookup",{"_index":2284,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lower",{"_index":2828,"title":{},"body":{"components/ListComponent.html":{}}}],["lowest",{"_index":5532,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["lvl",{"_index":3688,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lvl1",{"_index":1151,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["made",{"_index":4669,"title":{},"body":{"components/TinymceComponent.html":{}}}],["mail",{"_index":3326,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["main",{"_index":2812,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["mainly",{"_index":5188,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["make",{"_index":78,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["makes",{"_index":5501,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["making",{"_index":1598,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["managed",{"_index":5205,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["mandatory",{"_index":3564,"title":{},"body":{"components/ModalComponent.html":{}}}],["manually",{"_index":4659,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["many",{"_index":1175,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["map",{"_index":1005,"title":{},"body":{"classes/Config.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{}}}],["map'},{'name",{"_index":267,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["map((a",{"_index":4153,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map((d",{"_index":1414,"title":{},"body":{"interfaces/Day.html":{}}}],["map((date",{"_index":1416,"title":{},"body":{"interfaces/Day.html":{}}}],["map((field",{"_index":3681,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["map((i",{"_index":4133,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map((item",{"_index":4482,"title":{},"body":{"classes/Sorter.html":{}}}],["map((method",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((property",{"_index":3693,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["map.component",{"_index":3200,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":3158,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":3157,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts",{"_index":3156,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:11",{"_index":3164,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:13",{"_index":3169,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:15",{"_index":3166,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:17",{"_index":3172,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:19",{"_index":3171,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:25",{"_index":3177,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:36",{"_index":3174,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.value",{"_index":3249,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["maploader",{"_index":2276,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapped",{"_index":2000,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["mapping",{"_index":1323,"title":{},"body":{"interfaces/Day.html":{}}}],["maps",{"_index":1186,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["mapsapiloader",{"_index":2273,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":3167,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":3159,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coords",{"_index":3173,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markers",{"_index":3170,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["marks",{"_index":1332,"title":{},"body":{"interfaces/Day.html":{}}}],["markup",{"_index":3539,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["match",{"_index":1760,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LocationSearchComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["match.levels",{"_index":3686,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches",{"_index":4225,"title":{},"body":{"injectables/ResourceService.html":{}}}],["matches(change",{"_index":4236,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["matching",{"_index":344,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["math.abs(current",{"_index":3986,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(max",{"_index":3689,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["math.max(minlevel",{"_index":1102,"title":{},"body":{"components/CrudComponent.html":{}}}],["math.max(value.width",{"_index":2508,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.defaultsize",{"_index":2535,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.getpage",{"_index":3955,"title":{},"body":{"classes/Pagination.html":{}}}],["matter",{"_index":5365,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":2185,"title":{},"body":{"modules/FormModule.html":{}}}],["maxcolumns",{"_index":2873,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["maximal",{"_index":2881,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["maximum",{"_index":1910,"title":{},"body":{"classes/Field.html":{}}}],["maxitems",{"_index":1872,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{}}}],["maxitemspipe",{"_index":2169,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["meaning",{"_index":2111,"title":{},"body":{"interfaces/FileOptions.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["means",{"_index":5540,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["meant",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["meantioned",{"_index":5476,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["medium",{"_index":277,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediumeditor",{"_index":3401,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeelement",{"_index":3420,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcomponent",{"_index":276,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediumeditormodule",{"_index":3428,"title":{"modules/MediumEditorModule.html":{}},"body":{"modules/MediumEditorModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["mediummodule",{"_index":5297,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediummoduleconfig",{"_index":3435,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["menu",{"_index":3438,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu,[ec",{"_index":280,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menu.component.html",{"_index":3441,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":3440,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.component",{"_index":4936,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'name",{"_index":281,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menucomponent",{"_index":279,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merge",{"_index":3705,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merge(route.data",{"_index":1084,"title":{},"body":{"components/CrudComponent.html":{}}}],["merged",{"_index":1002,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["merged[title",{"_index":3706,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields",{"_index":3724,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields[key",{"_index":3727,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merges",{"_index":3618,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["merging",{"_index":5687,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["message",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{}}}],["message.close",{"_index":3872,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["messages",{"_index":2653,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["met",{"_index":5507,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["meta",{"_index":2698,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":581,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["methods",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["middle",{"_index":5537,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{}}}],["mimetypes",{"_index":5068,"title":{},"body":{"coverage.html":{}}}],["min",{"_index":195,"title":{},"body":{"components/AceComponent.html":{}}}],["minimum",{"_index":4012,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["miscellaneous",{"_index":5181,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":5573,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["mit",{"_index":4039,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mmmm",{"_index":880,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["modal",{"_index":3536,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["modal'},{'name",{"_index":283,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["modal.component.html",{"_index":3544,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":4096,"title":{},"body":{"modules/PopModule.html":{}}}],["modalcomponent",{"_index":282,"title":{"components/ModalComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model",{"_index":117,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["model's",{"_index":3599,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.${filter.model",{"_index":1789,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.${model",{"_index":1821,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.fields",{"_index":1000,"title":{},"body":{"classes/Config.html":{}}}],["model/schema",{"_index":5427,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["modelchange",{"_index":3398,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1032,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["modelconfig.fields",{"_index":3678,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":3630,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":3656,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":3649,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":3658,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields",{"_index":3721,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields[key",{"_index":3729,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservice",{"_index":1033,"title":{"injectables/ModelConfigService.html":{}},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["modelconfiguration",{"_index":3733,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelist.js",{"_index":171,"title":{},"body":{"components/AceComponent.html":{}}}],["modelresource",{"_index":2350,"title":{},"body":{"injectables/HistoryService.html":{}}}],["models",{"_index":2336,"title":{},"body":{"injectables/HistoryService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["models[model",{"_index":3732,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modes",{"_index":3578,"title":{},"body":{"components/ModalComponent.html":{}}}],["modified",{"_index":3653,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modified'].indexof(key",{"_index":1825,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modify",{"_index":2593,"title":{},"body":{"components/InputComponent.html":{}}}],["modifying",{"_index":1746,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["module",{"_index":346,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["module's",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["module(s",{"_index":6037,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["module.exports",{"_index":5327,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["modules",{"_index":348,"title":{"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["modulewithproviders",{"_index":700,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"miscellaneous/functions.html":{}}}],["moment",{"_index":1272,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{}}}],["moment's",{"_index":1432,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":4782,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value",{"_index":1297,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyy",{"_index":5411,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment(value).format(format",{"_index":4803,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1301,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":4805,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":4779,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).toisostring",{"_index":4806,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.date",{"_index":875,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":879,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.time",{"_index":877,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.locale('de",{"_index":5403,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment.locale(this.symbols.resolve('moment.locale'));using",{"_index":4519,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["moment.moment",{"_index":1248,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["monorepo",{"_index":5204,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["month",{"_index":885,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["month'},{'name",{"_index":285,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["month.component.html",{"_index":1321,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcomponent",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1343,"title":{},"body":{"interfaces/Day.html":{}}}],["months",{"_index":1459,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["mouseout",{"_index":3472,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover",{"_index":3465,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1386,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1385,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":898,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/adding-new-packages.html":{}}}],["move(item",{"_index":940,"title":{},"body":{"classes/Collection.html":{}}}],["moves",{"_index":942,"title":{},"body":{"classes/Collection.html":{}}}],["ms",{"_index":2568,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["muffin",{"_index":3631,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffin.entry?.name",{"_index":1662,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.name",{"_index":1620,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffincomponent",{"_index":3787,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["muffinconfiguration",{"_index":5467,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffins",{"_index":5395,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["muffins/muffins.component",{"_index":5393,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":5388,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscomponent",{"_index":5392,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["multi",{"_index":31,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["multiple",{"_index":1187,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["mustreload",{"_index":1027,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":1058,"title":{},"body":{"components/CrudComponent.html":{}}}],["mutable",{"_index":3696,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["mute",{"_index":2713,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["muted",{"_index":2697,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["myapp",{"_index":3109,"title":{},"body":{"components/LoaderComponent.html":{}}}],["myasset.asset?.assetid",{"_index":512,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.created",{"_index":517,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":520,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tags",{"_index":515,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.title",{"_index":513,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.type",{"_index":518,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":855,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycomponent",{"_index":3768,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["myimage.asset?.assetid",{"_index":2464,"title":{},"body":{"directives/ImageDirective.html":{}}}],["name",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["name[0].touppercase",{"_index":5408,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["names",{"_index":1999,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["namespace",{"_index":2296,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["native",{"_index":2456,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natural",{"_index":4469,"title":{},"body":{"classes/Sorter.html":{}}}],["naturally",{"_index":4475,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":2742,"title":{},"body":{"injectables/KeycommandsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["navigate(path",{"_index":2736,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["navigationend",{"_index":4624,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":2288,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":1195,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["needed",{"_index":2563,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needing",{"_index":5518,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needs",{"_index":2604,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["nest",{"_index":1577,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["nested",{"_index":1184,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["nestedcrudconfig",{"_index":3008,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/TypeConfigService.html":{}}}],["nestedpopactive",{"_index":1143,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["nesting",{"_index":3482,"title":{},"body":{"components/MenuComponent.html":{}}}],["never",{"_index":2573,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["new",{"_index":84,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["newdate",{"_index":1456,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1458,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistory",{"_index":2380,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newly",{"_index":4278,"title":{},"body":{"interfaces/SdkField.html":{}}}],["newprojectroot",{"_index":6013,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["newtimespan",{"_index":1367,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.reverse",{"_index":1372,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1371,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1369,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":578,"title":{},"body":{"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["nexted",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["nexts",{"_index":3268,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{}}}],["ng",{"_index":5237,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ng_value_accessor",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngaftercontentinit",{"_index":4609,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":1688,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabsComponent.html":{}}}],["ngmodel",{"_index":5333,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngmodule",{"_index":365,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["ngmodule(acemoduleconfig",{"_index":368,"title":{},"body":{"modules/AceModule.html":{}}}],["ngmodule(calendarmoduleconfig",{"_index":882,"title":{},"body":{"modules/CalendarModule.html":{}}}],["ngmodule(datamoduleconfig",{"_index":1239,"title":{},"body":{"modules/DataModule.html":{}}}],["ngmodule(formmoduleconfig",{"_index":2193,"title":{},"body":{"modules/FormModule.html":{}}}],["ngmodule(listmoduleconfig",{"_index":3079,"title":{},"body":{"modules/ListModule.html":{}}}],["ngmodule(locationmoduleconfig",{"_index":3209,"title":{},"body":{"modules/LocationModule.html":{}}}],["ngmodule(mediummoduleconfig",{"_index":3436,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["ngmodule(popmoduleconfig",{"_index":4098,"title":{},"body":{"modules/PopModule.html":{}}}],["ngmodule(selectmoduleconfig",{"_index":4390,"title":{},"body":{"modules/SelectModule.html":{}}}],["ngmodule(tinymcemoduleconfig",{"_index":4734,"title":{},"body":{"modules/TinymceModule.html":{}}}],["ngmodule(uimoduleconfig",{"_index":4814,"title":{},"body":{"modules/UiModule.html":{}}}],["ngmodule(utilitymoduleconfig",{"_index":4939,"title":{},"body":{"modules/UtilityModule.html":{}}}],["ngonchanges",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ngonchanges(change",{"_index":1396,"title":{},"body":{"interfaces/Day.html":{}}}],["ngonchanges(changes",{"_index":592,"title":{},"body":{"components/AssetListComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["ngondestroy",{"_index":3397,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":57,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ngx",{"_index":704,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":2274,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":679,"title":{},"body":{"guards/AuthGuard.html":{}}}],["noapi",{"_index":4300,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":4315,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":5552,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["node",{"_index":5328,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules",{"_index":5221,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["node_modules/@ec.components",{"_index":5210,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["node_modules/eventsource/lib/eventsource.js",{"_index":5299,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/jsonpath",{"_index":5304,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/tinymce/skins/lightgray/content.min.css",{"_index":5555,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["node_modules/tinymce/skins/lightgray/skin.min.css",{"_index":5554,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["non",{"_index":3563,"title":{},"body":{"components/ModalComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":3047,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["normal",{"_index":1519,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["notable",{"_index":5556,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["note",{"_index":4009,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["nothing",{"_index":1340,"title":{},"body":{"interfaces/Day.html":{},"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notification",{"_index":1074,"title":{"classes/Notification.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["notification(notification",{"_index":3858,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":3809,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notification",{"_index":3810,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.ts",{"_index":3800,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.error",{"_index":3758,"title":{},"body":{"classes/Notification.html":{},"injectables/NotificationsService.html":{}}}],["notification.hide",{"_index":3805,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":3814,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.message",{"_index":3808,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replace",{"_index":3811,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":3812,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notification",{"_index":3813,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticky",{"_index":3816,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.time",{"_index":3817,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.title",{"_index":3807,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcomponent",{"_index":3736,"title":{},"body":{"classes/Notification.html":{}}}],["notifications",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notifications'},{'name",{"_index":287,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["notifications.component",{"_index":3757,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":3762,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interface",{"_index":6024,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["notifications.interface.ts",{"_index":4957,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.service",{"_index":3801,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.module",{"_index":4811,"title":{},"body":{"modules/UiModule.html":{}}}],["notifications/notifications.service",{"_index":2695,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["notificationscomponent",{"_index":286,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationservice",{"_index":1034,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["notificationservice.$emitter",{"_index":3760,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodule",{"_index":3820,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":657,"title":{"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":2547,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["npm",{"_index":5218,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["nth",{"_index":3384,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":972,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["number",{"_index":495,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["numbers",{"_index":907,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["numbers.add(4",{"_index":924,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":927,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":932,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":935,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":946,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeall",{"_index":949,"title":{},"body":{"classes/Collection.html":{}}}],["numeric",{"_index":4472,"title":{},"body":{"classes/Sorter.html":{}}}],["object",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/KeycommandsService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["object.assign",{"_index":1003,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["object.assign(componentref.instance",{"_index":1584,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":4796,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assign(entry",{"_index":1815,"title":{},"body":{"injectables/EntryService.html":{}}}],["object.assign(merged",{"_index":3691,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(resource",{"_index":4271,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.assign(this",{"_index":1979,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":2834,"title":{},"body":{"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][property",{"_index":1011,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.get(model",{"_index":3712,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(this.types[type",{"_index":4801,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assigned",{"_index":4666,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["object.keys(customfieldconfig",{"_index":3723,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig",{"_index":3679,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filter).reduce((match",{"_index":4256,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equal",{"_index":1094,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permissions",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(symbolservice.sets).length",{"_index":4556,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(this.control.errors).reduce((errs",{"_index":2660,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":4574,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1810,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["objects",{"_index":1943,"title":{},"body":{"classes/Field.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"classes/Sorter.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["observable",{"_index":915,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["observable((observer",{"_index":2297,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observables",{"_index":599,"title":{},"body":{"components/AssetListComponent.html":{}}}],["observeelement",{"_index":2271,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":2289,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complete",{"_index":2311,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coords",{"_index":2310,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observers",{"_index":1709,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["observes",{"_index":2291,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolete",{"_index":3796,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["obtained",{"_index":3620,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["occasion",{"_index":1931,"title":{},"body":{"classes/Field.html":{}}}],["occur",{"_index":5520,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["occurs",{"_index":3280,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ok",{"_index":2318,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1796,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["oldassetgroupids",{"_index":2028,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["oldvalues",{"_index":1809,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1811,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":5193,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["omits",{"_index":4305,"title":{},"body":{"injectables/SdkService.html":{}}}],["omitted",{"_index":3654,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["omittedfields",{"_index":3606,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["once",{"_index":5655,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ondestroy",{"_index":3394,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(e",{"_index":1546,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(e",{"_index":1537,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(e",{"_index":1541,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["one",{"_index":576,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["onedit",{"_index":2679,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["oneline",{"_index":5688,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ones",{"_index":4943,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["onsave",{"_index":2506,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["onsubmit",{"_index":3307,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["open",{"_index":1153,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"injectables/PopService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["opened",{"_index":1149,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/PopService.html":{}}}],["opening",{"_index":4184,"title":{},"body":{"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghours",{"_index":5505,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghourscomponent",{"_index":5513,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["opens",{"_index":2963,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/UploadComponent.html":{}}}],["openurl",{"_index":2743,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["openurl(url",{"_index":2733,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["operation",{"_index":4955,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["operations",{"_index":1194,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"classes/Sorter.html":{}}}],["operator",{"_index":587,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["operators",{"_index":5462,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["option",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultInputComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["option.label",{"_index":1498,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["optional",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["optionally",{"_index":3276,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["options",{"_index":1156,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["options[key",{"_index":2055,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":3416,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["original",{"_index":2525,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["original.resolution",{"_index":2528,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["others",{"_index":2964,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"additional-documentation/adding-new-packages.html":{}}}],["otherwise",{"_index":1780,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ouput",{"_index":2491,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{}}}],["out",{"_index":361,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["outline",{"_index":5437,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["output",{"_index":521,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["output'},{'name",{"_index":231,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["output('toggle",{"_index":4073,"title":{},"body":{"components/PopComponent.html":{}}}],["output.component",{"_index":1225,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1472,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts",{"_index":1471,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:11",{"_index":1473,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1474,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1499,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["output/output.component",{"_index":2671,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcomponent",{"_index":288,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["outputs",{"_index":482,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["outputview",{"_index":5789,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["outside",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["over",{"_index":2657,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["overlay",{"_index":3574,"title":{},"body":{"components/ModalComponent.html":{}}}],["overridden",{"_index":3373,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["override",{"_index":2413,"title":{},"body":{"components/IconComponent.html":{}}}],["overriden",{"_index":3605,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overrides",{"_index":2561,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["overriding",{"_index":2412,"title":{},"body":{"components/IconComponent.html":{}}}],["overview",{"_index":5259,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["overwrite",{"_index":4523,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwriting",{"_index":4521,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwritten",{"_index":3341,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["p",{"_index":6011,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["package",{"_index":4961,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["package(s",{"_index":6036,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["package.json",{"_index":5279,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages",{"_index":5190,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages/.../actionbar.component.ts",{"_index":5265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../auth.module.ts",{"_index":5183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../sorter.ts",{"_index":5184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/ace/src/lib/ace.component.ts",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{}}}],["packages/ace/src/lib/ace.component.ts:102",{"_index":114,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:112",{"_index":132,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:115",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:119",{"_index":104,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:29",{"_index":128,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:33",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:37",{"_index":134,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:39",{"_index":130,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:43",{"_index":126,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:47",{"_index":71,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:51",{"_index":81,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:54",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:75",{"_index":106,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:84",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:93",{"_index":94,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:97",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.module.ts",{"_index":362,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["packages/ace/src/test.ts",{"_index":4975,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts",{"_index":861,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts:32",{"_index":867,"title":{},"body":{"modules/CalendarModule.html":{}}}],["packages/calendar/src/lib/calendar/calendar.component.ts",{"_index":4977,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar/month.component.ts",{"_index":1303,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/daterange/daterange.component.ts",{"_index":4983,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts",{"_index":1279,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts:12",{"_index":1287,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/calendar/src/lib/heatmap/heatmap.component.ts",{"_index":4986,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/test.ts",{"_index":4988,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts",{"_index":891,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts:10",{"_index":911,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:106",{"_index":944,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:12",{"_index":914,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:123",{"_index":948,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:138",{"_index":953,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:14",{"_index":904,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:147",{"_index":951,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:160",{"_index":938,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:165",{"_index":941,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:31",{"_index":937,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:42",{"_index":931,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:53",{"_index":934,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:71",{"_index":920,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:89",{"_index":926,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/config/config.ts",{"_index":989,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/lib/config/config.ts:13",{"_index":994,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/config.ts:5",{"_index":992,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/field",{"_index":1990,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts",{"_index":1861,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts:11",{"_index":1899,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:13",{"_index":1885,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:15",{"_index":1920,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:17",{"_index":1924,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:19",{"_index":1921,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:21",{"_index":1886,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:23",{"_index":1907,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:25",{"_index":1913,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:27",{"_index":1914,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:29",{"_index":1908,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:31",{"_index":1890,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:33",{"_index":1894,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:35",{"_index":1901,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:37",{"_index":1902,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:39",{"_index":1895,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:41",{"_index":1923,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:43",{"_index":1888,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:45",{"_index":1905,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:47",{"_index":1919,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:49",{"_index":1889,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:51",{"_index":1909,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:53",{"_index":1903,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:55",{"_index":1882,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:67",{"_index":1933,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:7",{"_index":1917,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:71",{"_index":1925,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:75",{"_index":1932,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:82",{"_index":1935,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:86",{"_index":1930,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:9",{"_index":1915,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/form/form",{"_index":2154,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/form/form.ts",{"_index":4996,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/item/item",{"_index":2675,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/item/item.ts",{"_index":5000,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/list/list",{"_index":2866,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/list/list.ts",{"_index":5004,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts",{"_index":3885,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:102",{"_index":3912,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:11",{"_index":3901,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:111",{"_index":3909,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:116",{"_index":3910,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:121",{"_index":3911,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:129",{"_index":3927,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:13",{"_index":3897,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:134",{"_index":3916,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:146",{"_index":3930,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:15",{"_index":3895,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:37",{"_index":3906,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:42",{"_index":3907,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:47",{"_index":3915,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:56",{"_index":3918,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:67",{"_index":3923,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:7",{"_index":3902,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:80",{"_index":3914,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:88",{"_index":3921,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:9",{"_index":3900,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:97",{"_index":3905,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/selection/selection.ts",{"_index":5008,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/sorter/sorter.ts",{"_index":4453,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:24",{"_index":4461,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:31",{"_index":4463,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:60",{"_index":4466,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/test.ts",{"_index":5011,"title":{},"body":{"coverage.html":{}}}],["packages/data/dist",{"_index":6017,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/lib",{"_index":6018,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/package.json#name",{"_index":6014,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/src/lib/asset",{"_index":540,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.module.ts",{"_index":694,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/lib/auth/auth.service.ts",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:128",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:149",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:160",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:174",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:190",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:24",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:29",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:44",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:59",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:71",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:81",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:89",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/email",{"_index":5017,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/errors.ts",{"_index":5019,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts",{"_index":3266,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:23",{"_index":3275,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:25",{"_index":3282,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:27",{"_index":3279,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:29",{"_index":3286,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:31",{"_index":3274,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:34",{"_index":3285,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:35",{"_index":3287,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:36",{"_index":3288,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:39",{"_index":3283,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/password",{"_index":4013,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts",{"_index":4391,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:16",{"_index":4394,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:18",{"_index":4395,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:20",{"_index":4398,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:22",{"_index":4403,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:24",{"_index":4404,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:27",{"_index":4401,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/crud/crud",{"_index":1124,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts",{"_index":1012,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:116",{"_index":1064,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:30",{"_index":1043,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:32",{"_index":1039,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:34",{"_index":1045,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:36",{"_index":1070,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:38",{"_index":1066,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:40",{"_index":1072,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:42",{"_index":1046,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:44",{"_index":1049,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:46",{"_index":1037,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:56",{"_index":1077,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:57",{"_index":1076,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:69",{"_index":1062,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:77",{"_index":1052,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:82",{"_index":1059,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:89",{"_index":1055,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/data.module.ts",{"_index":1211,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["packages/data/src/lib/data.module.ts:90",{"_index":1214,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts",{"_index":1585,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:103",{"_index":1606,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:111",{"_index":1604,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:22",{"_index":1617,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:24",{"_index":1601,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:26",{"_index":1602,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:28",{"_index":1595,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:30",{"_index":1594,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:32",{"_index":1600,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:34",{"_index":1614,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:35",{"_index":1593,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:40",{"_index":1619,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:41",{"_index":1616,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:45",{"_index":1610,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:58",{"_index":1608,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:74",{"_index":1613,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:85",{"_index":1609,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:92",{"_index":1611,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:99",{"_index":1607,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entry",{"_index":442,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts",{"_index":1647,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:19",{"_index":1660,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:21",{"_index":1652,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:23",{"_index":1655,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:25",{"_index":1651,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:27",{"_index":1653,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:29",{"_index":1656,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:31",{"_index":1654,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:33",{"_index":1650,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:38",{"_index":1661,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:39",{"_index":1659,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:43",{"_index":1658,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:51",{"_index":1657,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.service.ts",{"_index":1744,"title":{},"body":{"injectables/EntryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:100",{"_index":1767,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:114",{"_index":1769,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:14",{"_index":1757,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:16",{"_index":1785,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:19",{"_index":1759,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:37",{"_index":1777,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:52",{"_index":1784,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:71",{"_index":1772,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:76",{"_index":1764,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/files/asset",{"_index":5051,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts",{"_index":473,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:16",{"_index":507,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:18",{"_index":491,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:20",{"_index":494,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:22",{"_index":492,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:24",{"_index":496,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:26",{"_index":487,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:28",{"_index":497,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:30",{"_index":484,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:33",{"_index":509,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:36",{"_index":505,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:47",{"_index":500,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/assetgroup",{"_index":612,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts",{"_index":1505,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:11",{"_index":1517,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:13",{"_index":1530,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:24",{"_index":1532,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:37",{"_index":1527,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:46",{"_index":1515,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:7",{"_index":1522,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:9",{"_index":1520,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/file.service.ts",{"_index":1992,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/files.module.ts",{"_index":2124,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/lib/files/image",{"_index":2481,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts",{"_index":2439,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:14",{"_index":2451,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:16",{"_index":2449,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:18",{"_index":2447,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:20",{"_index":2446,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:22",{"_index":2463,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:27",{"_index":2457,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:39",{"_index":2453,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:43",{"_index":2462,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:64",{"_index":2460,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/mime",{"_index":5066,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/tag",{"_index":5069,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/upload",{"_index":4888,"title":{},"body":{"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts",{"_index":4815,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:104",{"_index":4843,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:22",{"_index":4845,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:23",{"_index":4852,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:24",{"_index":4849,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:26",{"_index":4830,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:28",{"_index":4827,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:30",{"_index":4824,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:32",{"_index":4825,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:34",{"_index":4829,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:36",{"_index":4823,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:38",{"_index":4832,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:40",{"_index":4831,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:42",{"_index":4847,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:44",{"_index":4851,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:46",{"_index":4822,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:56",{"_index":4840,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:66",{"_index":4838,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:72",{"_index":4835,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:80",{"_index":4836,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:87",{"_index":4844,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/model",{"_index":3598,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource",{"_index":4117,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource/resource.module.ts",{"_index":4219,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/lib/sdk/history.service.ts",{"_index":2333,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:15",{"_index":2361,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:17",{"_index":2343,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:20",{"_index":2360,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:21",{"_index":2359,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:22",{"_index":2364,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:23",{"_index":2363,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:27",{"_index":2356,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:47",{"_index":2345,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:57",{"_index":2351,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/sdk.module.ts",{"_index":4286,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts",{"_index":4288,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:112",{"_index":4318,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:125",{"_index":4309,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:136",{"_index":4306,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:151",{"_index":4316,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:34",{"_index":4321,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:36",{"_index":4329,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:37",{"_index":4337,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:49",{"_index":4334,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:51",{"_index":4320,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:53",{"_index":4319,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:55",{"_index":4323,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:57",{"_index":4338,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:64",{"_index":4340,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:69",{"_index":4325,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:71",{"_index":4335,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:73",{"_index":4331,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:80",{"_index":4304,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:83",{"_index":4327,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:90",{"_index":4313,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/test.ts",{"_index":5095,"title":{},"body":{"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts",{"_index":2264,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts:12",{"_index":2275,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:16",{"_index":2290,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:41",{"_index":2278,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:46",{"_index":2281,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:59",{"_index":2287,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/location",{"_index":3155,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts",{"_index":3193,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts:31",{"_index":3197,"title":{},"body":{"modules/LocationModule.html":{}}}],["packages/location/src/test.ts",{"_index":5101,"title":{},"body":{"coverage.html":{}}}],["packages/medium",{"_index":3388,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["packages/style",{"_index":5208,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["packages/tinymce/src/lib/tinymce.module.ts",{"_index":4731,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce",{"_index":5105,"title":{},"body":{"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts",{"_index":4647,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:103",{"_index":4678,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:108",{"_index":4676,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:134",{"_index":4674,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:138",{"_index":4681,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:145",{"_index":4684,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:147",{"_index":4679,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:151",{"_index":4680,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:53",{"_index":4685,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:55",{"_index":4683,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:57",{"_index":4682,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:59",{"_index":4686,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:61",{"_index":4660,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:63",{"_index":4665,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:65",{"_index":4662,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:67",{"_index":4667,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:70",{"_index":4668,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:72",{"_index":4656,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:90",{"_index":4677,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:96",{"_index":4675,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/test.ts",{"_index":5108,"title":{},"body":{"coverage.html":{}}}],["packages/ui",{"_index":5521,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["packages/ui/src/lib/actionbar/actionbar.component.ts",{"_index":372,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts",{"_index":1240,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:24",{"_index":1249,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:26",{"_index":1254,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:28",{"_index":1265,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:30",{"_index":1269,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:32",{"_index":1252,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:34",{"_index":1255,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:36",{"_index":1266,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:39",{"_index":1263,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:44",{"_index":1267,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:47",{"_index":1257,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:52",{"_index":1259,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:54",{"_index":1261,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/default",{"_index":1476,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.html.ts",{"_index":5112,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.ts",{"_index":5114,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.module.ts",{"_index":2177,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts",{"_index":2194,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts:10",{"_index":2228,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:14",{"_index":2221,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:25",{"_index":2212,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:47",{"_index":2206,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:55",{"_index":2214,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:67",{"_index":2225,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:82",{"_index":2219,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:87",{"_index":2209,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:9",{"_index":2204,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/max",{"_index":3381,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts",{"_index":4735,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:19",{"_index":4746,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:21",{"_index":4738,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:24",{"_index":4742,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:29",{"_index":4743,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:33",{"_index":4745,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:35",{"_index":4739,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:39",{"_index":4740,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/visible",{"_index":4940,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/ec",{"_index":5117,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/emoji",{"_index":5119,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts",{"_index":2388,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:16",{"_index":2400,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:18",{"_index":2399,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:21",{"_index":2403,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:27",{"_index":2402,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:30",{"_index":2401,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.module.ts",{"_index":2430,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts",{"_index":2432,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts:11",{"_index":2437,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/lib/io/dynamic",{"_index":1547,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input",{"_index":2644,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts",{"_index":2555,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:118",{"_index":2580,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:133",{"_index":2587,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:140",{"_index":2602,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:143",{"_index":2584,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:148",{"_index":2585,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:150",{"_index":2586,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:32",{"_index":2570,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:34",{"_index":2599,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:36",{"_index":2564,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:38",{"_index":2577,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:40",{"_index":2579,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:42",{"_index":2567,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:44",{"_index":2569,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:46",{"_index":2575,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:48",{"_index":2571,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:50",{"_index":2562,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:52",{"_index":2560,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:54",{"_index":2572,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:57",{"_index":2589,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:59",{"_index":2603,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:61",{"_index":2601,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:63",{"_index":2583,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:69",{"_index":2581,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:77",{"_index":2582,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/io.module.ts",{"_index":2670,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts",{"_index":3874,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:20",{"_index":3878,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:22",{"_index":3879,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:24",{"_index":3877,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:28",{"_index":3880,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/slot",{"_index":4445,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts",{"_index":2328,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts:10",{"_index":2330,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/lib/list/list",{"_index":2893,"title":{},"body":{"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.html.ts",{"_index":5129,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts",{"_index":2757,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts:104",{"_index":2788,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:112",{"_index":2807,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:123",{"_index":2806,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:130",{"_index":2795,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:136",{"_index":2796,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:149",{"_index":2797,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:162",{"_index":2794,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:33",{"_index":2809,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:36",{"_index":2811,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:38",{"_index":2778,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:40",{"_index":2779,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:42",{"_index":2777,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:44",{"_index":2783,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:46",{"_index":2784,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:48",{"_index":2785,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:50",{"_index":2786,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:52",{"_index":2780,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:54",{"_index":2781,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:56",{"_index":2782,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:58",{"_index":2776,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:60",{"_index":2810,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:62",{"_index":2775,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:64",{"_index":2808,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:68",{"_index":2801,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:77",{"_index":2800,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.module.ts",{"_index":3071,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination",{"_index":4001,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts",{"_index":3957,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:15",{"_index":3962,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:17",{"_index":3970,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:19",{"_index":3980,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:21",{"_index":3974,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:23",{"_index":3961,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:26",{"_index":3967,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:31",{"_index":3965,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:39",{"_index":3964,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:50",{"_index":3969,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/searchbar/searchbar.component.ts",{"_index":5133,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts",{"_index":3080,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:14",{"_index":3099,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:16",{"_index":3100,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:18",{"_index":3089,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:24",{"_index":3092,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:30",{"_index":3090,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:37",{"_index":3095,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.module.ts",{"_index":3146,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts",{"_index":3149,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:11",{"_index":3151,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:16",{"_index":3152,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:8",{"_index":3153,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/with",{"_index":4952,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts",{"_index":3535,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:26",{"_index":3577,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:29",{"_index":3562,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:31",{"_index":3553,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:33",{"_index":3551,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:35",{"_index":3561,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:37",{"_index":3557,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:39",{"_index":3560,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:41",{"_index":3573,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:43",{"_index":3558,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:45",{"_index":3548,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:47",{"_index":3571,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:51",{"_index":3567,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:74",{"_index":3570,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:78",{"_index":3569,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts",{"_index":1841,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:12",{"_index":1844,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:17",{"_index":1846,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:21",{"_index":1845,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:25",{"_index":1848,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/notification.ts",{"_index":3735,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:10",{"_index":3745,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:12",{"_index":3752,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:14",{"_index":3749,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:16",{"_index":3756,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:18",{"_index":3742,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:20",{"_index":3743,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:22",{"_index":3740,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:24",{"_index":3738,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:6",{"_index":3754,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:8",{"_index":3746,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts",{"_index":3759,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:19",{"_index":3764,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:21",{"_index":3763,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.module.ts",{"_index":3826,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts",{"_index":3829,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:22",{"_index":3851,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:24",{"_index":3854,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:26",{"_index":3838,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:33",{"_index":3846,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:47",{"_index":3848,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:60",{"_index":3841,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/with",{"_index":4956,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts",{"_index":4049,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:28",{"_index":4056,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:30",{"_index":4066,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:32",{"_index":4059,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:34",{"_index":4057,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:36",{"_index":4058,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:38",{"_index":4060,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:40",{"_index":4067,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:43",{"_index":4061,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:53",{"_index":4055,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:55",{"_index":4068,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:58",{"_index":4063,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:63",{"_index":4065,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:72",{"_index":4064,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:88",{"_index":4062,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.module.ts",{"_index":4095,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts",{"_index":4099,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:11",{"_index":4105,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:9",{"_index":4106,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/select/select.component.html.ts",{"_index":5137,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.component.ts",{"_index":5138,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.module.ts",{"_index":4386,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/de.ts",{"_index":5140,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/en.ts",{"_index":5141,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.interface.ts",{"_index":4498,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.module.ts",{"_index":4507,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts",{"_index":4528,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts:21",{"_index":4532,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts",{"_index":4536,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:12",{"_index":4560,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:16",{"_index":4558,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:20",{"_index":4559,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:21",{"_index":4561,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:27",{"_index":4541,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:32",{"_index":4546,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:41",{"_index":4549,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:50",{"_index":4539,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:57",{"_index":4553,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:62",{"_index":4555,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:70",{"_index":4544,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:75",{"_index":4547,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:81",{"_index":4551,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/ui.module.ts",{"_index":4810,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts",{"_index":2139,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:13",{"_index":2144,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:19",{"_index":2145,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:8",{"_index":2143,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:9",{"_index":2142,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts",{"_index":2137,"title":{},"body":{"interfaces/Focus.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts:6",{"_index":2138,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts",{"_index":2694,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:14",{"_index":2754,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:15",{"_index":2755,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16",{"_index":2745,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18",{"_index":2756,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:45",{"_index":2749,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:49",{"_index":2753,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:53",{"_index":2752,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:58",{"_index":2746,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:65",{"_index":2748,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:80",{"_index":2747,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:86",{"_index":2751,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/keycommands/keycommands.service.ts:90",{"_index":2750,"title":{},"body":{"injectables/KeycommandsService.html":{}}}],["packages/ui/src/lib/utility/login",{"_index":3299,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts",{"_index":3437,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:107",{"_index":3495,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:15",{"_index":3468,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:17",{"_index":3467,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:19",{"_index":3469,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:21",{"_index":3466,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:23",{"_index":3460,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:25",{"_index":3471,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:27",{"_index":3463,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:29",{"_index":3499,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:31",{"_index":3455,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:37",{"_index":3498,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:47",{"_index":3488,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:53",{"_index":3497,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:59",{"_index":3481,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:64",{"_index":3476,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:69",{"_index":3479,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:74",{"_index":3491,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:85",{"_index":3473,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:92",{"_index":3493,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:99",{"_index":3485,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/signup",{"_index":4414,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts",{"_index":4582,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:11",{"_index":4589,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:13",{"_index":4592,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:15",{"_index":4591,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:17",{"_index":4593,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:19",{"_index":4594,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:21",{"_index":4588,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:24",{"_index":4598,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:26",{"_index":4595,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:31",{"_index":4596,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts",{"_index":4602,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:14",{"_index":4622,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:16",{"_index":4611,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:27",{"_index":4620,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:38",{"_index":4614,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:48",{"_index":4615,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:53",{"_index":4618,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/utility.module.ts",{"_index":4934,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/email.validator.ts",{"_index":5152,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/field",{"_index":5154,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/test.ts",{"_index":5156,"title":{},"body":{"coverage.html":{}}}],["packagr/issues/696",{"_index":4564,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packagr/ng",{"_index":4563,"title":{},"body":{"injectables/SymbolService.html":{}}}],["page",{"_index":671,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"guards/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["page!==1",{"_index":1628,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontainer",{"_index":3959,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pages",{"_index":3886,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{}}}],["paginate",{"_index":3933,"title":{},"body":{"classes/Pagination.html":{}}}],["paginated",{"_index":3904,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination",{"_index":2772,"title":{"classes/Pagination.html":{}},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination'},{'name",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pagination.component.html",{"_index":3958,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":3988,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpages",{"_index":3934,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.last",{"_index":3993,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":3992,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":3996,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":3989,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":3932,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.size",{"_index":4000,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination/pagination",{"_index":2830,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.component",{"_index":3076,"title":{},"body":{"modules/ListModule.html":{}}}],["pagination?.params()?.from",{"_index":3994,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.to",{"_index":3995,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.total",{"_index":3997,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":289,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2773,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":3984,"title":{},"body":{"components/PaginationComponent.html":{}}}],["param",{"_index":4489,"title":{},"body":{"classes/Sorter.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3890,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["parent",{"_index":964,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parent.getpath(item",{"_index":3512,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":3483,"title":{},"body":{"components/MenuComponent.html":{}}}],["parse",{"_index":3701,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parses",{"_index":3568,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{}}}],["parsetype",{"_index":5759,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["part",{"_index":1053,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["pass",{"_index":2566,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["passed",{"_index":2353,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/LoaderService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["passes",{"_index":4670,"title":{},"body":{"components/TinymceComponent.html":{}}}],["passing",{"_index":3115,"title":{},"body":{"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["password",{"_index":292,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["passwordlabel",{"_index":3313,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordplaceholder",{"_index":3314,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordreset.button",{"_index":4048,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordresetcomponent",{"_index":291,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":3380,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["pasted",{"_index":4207,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["patch",{"_index":3014,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["path",{"_index":375,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["paths",{"_index":4151,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/TabsComponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["paths.length",{"_index":4160,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["paths[paths.length",{"_index":4632,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1285,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pattern[0",{"_index":1300,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["pending",{"_index":4332,"title":{},"body":{"injectables/SdkService.html":{}}}],["per",{"_index":2886,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["peripherals",{"_index":3038,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permission",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{}}}],["permissions",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{}}}],["permissions[method",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":4776,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["pick",{"_index":2489,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":3212,"title":{},"body":{"components/LocationPickerComponent.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["picker'},{'name",{"_index":269,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["picker.component",{"_index":3201,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":3214,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":3213,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts",{"_index":3211,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:23",{"_index":3219,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:25",{"_index":3221,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:27",{"_index":3220,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:29",{"_index":3236,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:31",{"_index":3239,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:33",{"_index":3233,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":3218,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:38",{"_index":3232,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:39",{"_index":3231,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:40",{"_index":3234,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:46",{"_index":3226,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:58",{"_index":3230,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:64",{"_index":3228,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:79",{"_index":3237,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:81",{"_index":3222,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:85",{"_index":3223,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:87",{"_index":3224,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pickers",{"_index":5280,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["pictures",{"_index":5406,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["pipe",{"_index":1277,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["pipe(debouncetime(100",{"_index":1354,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(800",{"_index":1358,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(this.debounce",{"_index":4703,"title":{},"body":{"components/TinymceComponent.html":{}}}],["pipes",{"_index":1278,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1289,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":2301,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["place.geometry",{"_index":2304,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":2307,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":2309,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placed",{"_index":4584,"title":{},"body":{"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["placeholder",{"_index":620,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["placeholders",{"_index":4279,"title":{},"body":{"interfaces/SdkField.html":{}}}],["places",{"_index":3122,"title":{},"body":{"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{}}}],["plain",{"_index":2031,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plan",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["play",{"_index":5473,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["please",{"_index":2087,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plugged",{"_index":3081,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plurallabel",{"_index":1144,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["plus/lib'to",{"_index":5308,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["plus/lib/jsonpath.js",{"_index":5305,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["polyfill",{"_index":2369,"title":{},"body":{"injectables/HistoryService.html":{}}}],["pop",{"_index":1067,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["pop'},{'name",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pop.alt",{"_index":2540,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component",{"_index":1082,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":1671,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts",{"_index":1670,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:23",{"_index":4208,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:24",{"_index":1685,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:25",{"_index":1684,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:26",{"_index":1686,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:27",{"_index":1696,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:28",{"_index":1727,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":4211,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:30",{"_index":1700,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:31",{"_index":1683,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:32",{"_index":2496,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:34",{"_index":1724,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:35",{"_index":1725,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:36",{"_index":1723,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:37",{"_index":1722,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:38",{"_index":4210,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:39",{"_index":2498,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:40",{"_index":2499,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:41",{"_index":2500,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:42",{"_index":1706,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:43",{"_index":2495,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:44",{"_index":2494,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:49",{"_index":2493,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:50",{"_index":1708,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:53",{"_index":4209,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:59",{"_index":1705,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.header",{"_index":2554,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.height",{"_index":2552,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.keepratio",{"_index":2543,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.service",{"_index":4072,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.submitbuttonlabel",{"_index":2505,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.width",{"_index":2548,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop/asset",{"_index":2128,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entry",{"_index":1081,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["pop/image",{"_index":2135,"title":{},"body":{"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["pop/pop.component",{"_index":2992,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{}}}],["pop/pop.module",{"_index":2178,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/pop.service",{"_index":3580,"title":{},"body":{"components/ModalComponent.html":{}}}],["pop/resource",{"_index":4196,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":3675,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["popcolumns",{"_index":1145,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["popcomponent",{"_index":294,"title":{"components/PopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:28",{"_index":1687,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:30",{"_index":1728,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:32",{"_index":1695,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:34",{"_index":1689,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:36",{"_index":1692,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:38",{"_index":1697,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:40",{"_index":1731,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:43",{"_index":1702,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:55",{"_index":1732,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:58",{"_index":1713,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:63",{"_index":1721,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:72",{"_index":1718,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:88",{"_index":1710,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popmodule",{"_index":2172,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popmoduleconfig",{"_index":4097,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["pops",{"_index":1192,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/TinymceComponent.html":{}}}],["popservice",{"_index":1673,"title":{"injectables/PopService.html":{}},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popservice.defaultcolumns",{"_index":1193,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["popservice.stack",{"_index":1711,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popthe",{"_index":4071,"title":{},"body":{"components/PopComponent.html":{}}}],["populated",{"_index":2891,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["position",{"_index":3180,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possesses",{"_index":559,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possible",{"_index":1163,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["post",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["prebuilt",{"_index":5543,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["preceding",{"_index":3792,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["preexisting",{"_index":4524,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["prefill",{"_index":2544,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefilled",{"_index":5776,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefix",{"_index":1794,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["prepare",{"_index":1887,"title":{},"body":{"classes/Field.html":{}}}],["prequisites",{"_index":5336,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["preservefilenames",{"_index":1998,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["preserves",{"_index":2005,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["pressing",{"_index":4181,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretty",{"_index":5458,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["prev",{"_index":1590,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["prevent",{"_index":4289,"title":{},"body":{"injectables/SdkService.html":{}}}],["prevents",{"_index":2706,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["previous",{"_index":2798,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{}}}],["primitive",{"_index":2690,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/readme/core-readme.html":{}}}],["primitve",{"_index":5509,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["private",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["pro",{"_index":5288,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["problems",{"_index":5331,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["processing",{"_index":4661,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":5246,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["production",{"_index":5247,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["programmatically",{"_index":2687,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":5185,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["project/node_modules/eventsource/lib",{"_index":5302,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["project/node_modules/jsonpath",{"_index":5307,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["promise",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["promise((resolve",{"_index":2314,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/TinymceComponent.html":{}}}],["promise.all(this.stack.items).then",{"_index":3140,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":530,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":3867,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehler",{"_index":3776,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["promise.reject('getaccount",{"_index":4377,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":4372,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":845,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimage",{"_index":2471,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1808,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["promise.resolve().then",{"_index":2101,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>assets",{"_index":2093,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(actions(this.actionstack",{"_index":431,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["promise.resolve(api",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":4263,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.resolve(methods",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":176,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(value",{"_index":3374,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["promises",{"_index":2339,"title":{},"body":{"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["propagate",{"_index":3053,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["propagatechange",{"_index":43,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["propagates",{"_index":3227,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["propagation",{"_index":1268,"title":{},"body":{"components/DatetimeComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["proper",{"_index":5230,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["properly",{"_index":5398,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["properties",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property",{"_index":586,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property.interface",{"_index":1978,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["property.interface.ts",{"_index":4991,"title":{},"body":{"coverage.html":{}}}],["protected",{"_index":546,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{}}}],["protractor",{"_index":5253,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["provded",{"_index":3048,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provide",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provided",{"_index":2958,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["providers",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provides",{"_index":1555,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["providing",{"_index":3833,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["pseudo",{"_index":5443,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["public",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["public_api",{"_index":5668,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["publicapi",{"_index":486,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["publicapi#getfieldconfig",{"_index":3635,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["publicapi(shortid",{"_index":4367,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":2011,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publicassetresource",{"_index":522,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["publicassetresources",{"_index":2080,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publish",{"_index":5226,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["publishing",{"_index":6039,"title":{"additional-documentation/publishing.html":{}},"body":{}}],["purpose",{"_index":5588,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["pushed",{"_index":3847,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["puttable",{"_index":5678,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":3207,"title":{},"body":{"modules/LocationModule.html":{}}}],["query",{"_index":2874,"title":{},"body":{"interfaces/ListConfig.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["queryfilter",{"_index":4773,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":3972,"title":{},"body":{"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["quick",{"_index":1127,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickly",{"_index":5385,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rack",{"_index":1562,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component",{"_index":2674,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1551,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.ts",{"_index":1549,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1554,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynamic",{"_index":1548,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["range",{"_index":4004,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["ranking",{"_index":5445,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ratio",{"_index":2484,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["raw",{"_index":1286,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{}}}],["rawfilter",{"_index":3668,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["re",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["reach",{"_index":4248,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["react",{"_index":652,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reactions",{"_index":3281,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactive",{"_index":3391,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodule",{"_index":701,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":1183,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["readable",{"_index":1952,"title":{},"body":{"classes/Field.html":{}}}],["readme",{"_index":472,"title":{"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["readonly",{"_index":621,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["reads",{"_index":2458,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ready",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["really",{"_index":5580,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recent",{"_index":3352,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["recognize",{"_index":5760,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recommended",{"_index":3786,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reconstruct",{"_index":2804,"title":{},"body":{"components/ListComponent.html":{}}}],["reconstructing",{"_index":2803,"title":{},"body":{"components/ListComponent.html":{}}}],["redirect",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["redirecting",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reduce((a",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((max",{"_index":3687,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["refer",{"_index":5387,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["reference",{"_index":2590,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["referenced",{"_index":5500,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["references",{"_index":5536,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["reflect",{"_index":1461,"title":{},"body":{"interfaces/Day.html":{}}}],["reflected",{"_index":1331,"title":{},"body":{"interfaces/Day.html":{}}}],["regex",{"_index":5291,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["regexp",{"_index":2683,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["register",{"_index":2433,"title":{},"body":{"injectables/IconService.html":{},"injectables/KeycommandsService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["register(keyconfig",{"_index":2715,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["registered",{"_index":2438,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registeronchange",{"_index":58,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":95,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registerontouched",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registers",{"_index":97,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/ToggleComponent.html":{}}}],["registration",{"_index":4410,"title":{},"body":{"components/SignupComponent.html":{}}}],["registry",{"_index":2390,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registry.find((s",{"_index":4565,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.indexof(this.get(symbol.name",{"_index":4570,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.push(symbol",{"_index":4571,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry[index",{"_index":4572,"title":{},"body":{"injectables/SymbolService.html":{}}}],["regular",{"_index":4947,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reinit/reload",{"_index":2574,"title":{},"body":{"components/InputComponent.html":{}}}],["reinstantiate",{"_index":5876,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["reject",{"_index":2315,"title":{},"body":{"injectables/GeocodeService.html":{},"components/TinymceComponent.html":{}}}],["reject(status",{"_index":2320,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["related",{"_index":696,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/LocationModule.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["relation",{"_index":554,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relations",{"_index":4322,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["relative",{"_index":1462,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["relativeto",{"_index":4645,"title":{},"body":{"components/TabsComponent.html":{}}}],["release",{"_index":1800,"title":{},"body":{"injectables/EntryService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["releaseto",{"_index":5225,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["releasing",{"_index":5222,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["relevant",{"_index":452,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relevantkeys",{"_index":3722,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.foreach((key",{"_index":3726,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.length",{"_index":3725,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["reload",{"_index":4139,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["reloading",{"_index":5423,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["reloads",{"_index":1057,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rely",{"_index":5508,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["remain",{"_index":1172,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["removal",{"_index":1161,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["remove",{"_index":899,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["remove(item",{"_index":943,"title":{},"body":{"classes/Collection.html":{}}}],["removeall",{"_index":900,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(items",{"_index":947,"title":{},"body":{"classes/Collection.html":{}}}],["removed",{"_index":1159,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["removeitem",{"_index":5766,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["removes",{"_index":945,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["removing",{"_index":3091,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rename",{"_index":2692,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{}}}],["renamed",{"_index":5298,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["render",{"_index":1014,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendered",{"_index":2161,"title":{},"body":{"interfaces/FormConfig.html":{},"components/OutputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendering",{"_index":3875,"title":{},"body":{"components/OutputComponent.html":{}}}],["renders",{"_index":1433,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{}}}],["replace",{"_index":1118,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["replaces",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/SymbolService.html":{}}}],["replacewith",{"_index":901,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(items",{"_index":950,"title":{},"body":{"classes/Collection.html":{}}}],["repo",{"_index":5215,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["repository",{"_index":5203,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["represented",{"_index":1310,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["represents",{"_index":1938,"title":{},"body":{"classes/Field.html":{}}}],["request",{"_index":4016,"title":{},"body":{"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requested",{"_index":2450,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["requests",{"_index":4333,"title":{},"body":{"injectables/SdkService.html":{}}}],["require",{"_index":448,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["require(\"path",{"_index":5326,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["required",{"_index":1873,"title":{},"body":{"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["requires",{"_index":2434,"title":{},"body":{"injectables/IconService.html":{}}}],["res",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reset",{"_index":360,"title":{},"body":{"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["reset'},{'name",{"_index":293,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["reset.component",{"_index":710,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":4019,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":4014,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:16",{"_index":4030,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":4029,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":4022,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":4024,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":4025,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":4021,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:28",{"_index":4028,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:30",{"_index":4026,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":709,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset?e=1",{"_index":4018,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resetfilter",{"_index":2951,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["resetpassword",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(this.email",{"_index":4034,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resets",{"_index":3346,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["resolution",{"_index":2527,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.height",{"_index":2534,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.width",{"_index":2533,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolve",{"_index":1947,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["resolve(name",{"_index":4545,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(results",{"_index":2319,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolve(tinymce.init(settings",{"_index":4716,"title":{},"body":{"components/TinymceComponent.html":{}}}],["resolveassets",{"_index":2081,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolved",{"_index":427,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resource",{"_index":2104,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvefn",{"_index":2923,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvefn(list",{"_index":2925,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolver",{"_index":160,"title":{},"body":{"components/AceComponent.html":{}}}],["resolves",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{}}}],["resolvevariables",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(string",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["resouce",{"_index":5699,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resource",{"_index":296,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["resource.assetid",{"_index":2105,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((res",{"_index":4273,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.newhistory",{"_index":2378,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.save",{"_index":4265,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource/resource.module",{"_index":1233,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[identifier",{"_index":4123,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resource[key",{"_index":4270,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource[label",{"_index":4124,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceaction",{"_index":4149,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceactionbarcomponent",{"_index":295,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceactionbarstate",{"_index":4116,"title":{"interfaces/ResourceActionbarState.html":{}},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["resourceconfig",{"_index":544,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceconfig#set",{"_index":5710,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resourcecrudcomponent",{"_index":297,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcomponent",{"_index":298,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":5085,"title":{},"body":{"coverage.html":{}}}],["resourceformcomponent",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":583,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["resourcelist(relation",{"_index":4142,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourcelistcomponent",{"_index":301,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:118",{"_index":593,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:127",{"_index":585,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:131",{"_index":590,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:29",{"_index":605,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:31",{"_index":563,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:33",{"_index":575,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:35",{"_index":567,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:37",{"_index":601,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:39",{"_index":557,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:41",{"_index":572,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:43",{"_index":565,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:52",{"_index":604,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:53",{"_index":600,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:54",{"_index":607,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:66",{"_index":580,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:82",{"_index":596,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistpopcomponent",{"_index":302,"title":{"components/ResourceListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcemodule",{"_index":1206,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcomponent",{"_index":303,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resources",{"_index":4146,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceselectcomponent",{"_index":304,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice",{"_index":1752,"title":{"injectables/ResourceService.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice.change",{"_index":1792,"title":{},"body":{"injectables/EntryService.html":{}}}],["response",{"_index":2077,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["response['getallitems",{"_index":2076,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{}}}],["result",{"_index":343,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results",{"_index":345,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results.length",{"_index":3247,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":3248,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retoggle",{"_index":5816,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["retrieve",{"_index":2898,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieve(key",{"_index":2904,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieves",{"_index":3629,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["returned",{"_index":1839,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/SdkField.html":{}}}],["returns",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":2282,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["reversed",{"_index":5812,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["revert",{"_index":5636,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["reverted",{"_index":5581,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["reworked",{"_index":5673,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["role",{"_index":454,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["root",{"_index":387,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Config.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["roots",{"_index":4296,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["route",{"_index":545,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["route.data",{"_index":3508,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":3509,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.params",{"_index":1085,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.path",{"_index":3506,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":3507,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparams",{"_index":1086,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":1024,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routermodule",{"_index":1215,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routes",{"_index":646,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"guards/AuthGuard.html":{},"components/MenuComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routing",{"_index":3439,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["routing.module.ts",{"_index":5391,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["row",{"_index":2681,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["run",{"_index":5216,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["running",{"_index":5211,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["runs",{"_index":1949,"title":{},"body":{"classes/Field.html":{}}}],["runtime",{"_index":4293,"title":{},"body":{"injectables/SdkService.html":{}}}],["rxfilter",{"_index":4246,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"dependencies.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["rxjs';9",{"_index":6027,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["rxjs/operators",{"_index":1317,"title":{},"body":{"interfaces/Day.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["rxjs/subject",{"_index":6026,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["s.name",{"_index":4566,"title":{},"body":{"injectables/SymbolService.html":{}}}],["safari",{"_index":5833,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["safedelete",{"_index":1146,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["safeput",{"_index":1783,"title":{},"body":{"injectables/EntryService.html":{}}}],["same",{"_index":912,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sandbox.scss",{"_index":5354,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["save",{"_index":1756,"title":{},"body":{"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["save(item",{"_index":4240,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["save(model",{"_index":1775,"title":{},"body":{"injectables/EntryService.html":{}}}],["save(safeput",{"_index":1819,"title":{},"body":{"injectables/EntryService.html":{}}}],["save2",{"_index":5535,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["saved",{"_index":1174,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["saves",{"_index":1778,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["savethis",{"_index":5349,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scaffolding",{"_index":5240,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["scale",{"_index":3625,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema",{"_index":3604,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["schemarequests",{"_index":4297,"title":{},"body":{"injectables/SdkService.html":{}}}],["script",{"_index":5220,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["scss",{"_index":5294,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scssmake",{"_index":5346,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":459,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sdk.api",{"_index":490,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.init",{"_index":4291,"title":{},"body":{"injectables/SdkService.html":{}}}],["sdk.service",{"_index":4287,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.service",{"_index":1234,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.module",{"_index":1235,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.service",{"_index":465,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkfield",{"_index":4274,"title":{"interfaces/SdkField.html":{}},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["sdkmodule",{"_index":1207,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservice",{"_index":462,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sdkservice#api",{"_index":3278,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["search",{"_index":1892,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["search'},{'name",{"_index":271,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["search.component",{"_index":3202,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":3251,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts",{"_index":3250,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:12",{"_index":3255,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:14",{"_index":3254,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:16",{"_index":3260,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:18",{"_index":3253,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:22",{"_index":3257,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:28",{"_index":3258,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1674,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["searchbar'},{'name",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["searchbar/searchbar.component",{"_index":3077,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcomponent",{"_index":305,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchinput",{"_index":3252,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2824,"title":{},"body":{"components/ListComponent.html":{}}}],["section",{"_index":4069,"title":{},"body":{"components/PopComponent.html":{}}}],["see",{"_index":560,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["sein",{"_index":5420,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["seite",{"_index":677,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select",{"_index":254,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["select#togglepop",{"_index":5704,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["select'},{'name",{"_index":212,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select(item",{"_index":1707,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["select(page",{"_index":3919,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":4616,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.component",{"_index":1229,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":615,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts",{"_index":614,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:11",{"_index":628,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:12",{"_index":625,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":626,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":627,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":629,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:16",{"_index":624,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:17",{"_index":4899,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:18",{"_index":631,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:19",{"_index":4900,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:20",{"_index":630,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:22",{"_index":4902,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:24",{"_index":4903,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:25",{"_index":4901,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:26",{"_index":4898,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:28",{"_index":4916,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:30",{"_index":4917,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:32",{"_index":4914,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:34",{"_index":4897,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:36",{"_index":4912,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:38",{"_index":4904,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:41",{"_index":4905,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:46",{"_index":4906,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:53",{"_index":4910,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:59",{"_index":4908,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.emit(item",{"_index":2791,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":2129,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/assetgroup",{"_index":613,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entry",{"_index":1228,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resource",{"_index":4222,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.component",{"_index":380,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.component.html",{"_index":382,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.module",{"_index":4812,"title":{},"body":{"modules/UiModule.html":{}}}],["select/tag",{"_index":2136,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/upload",{"_index":2134,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["selectable",{"_index":577,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["selectbyurl",{"_index":4610,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":4619,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcomponent",{"_index":307,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_moment",{"_index":1445,"title":{},"body":{"interfaces/Day.html":{}}}],["selected",{"_index":1030,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/UploadComponent.html":{}}}],["selectentry",{"_index":1028,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":1063,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2769,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2805,"title":{},"body":{"components/ListComponent.html":{}}}],["selecting",{"_index":3256,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["selection",{"_index":965,"title":{},"body":{"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.config.solo",{"_index":2116,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.select(upload.item",{"_index":2117,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.toggle",{"_index":2793,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.toggleall(upload.items",{"_index":2118,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selectmode",{"_index":2875,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["selectmodule",{"_index":4380,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectmoduleconfig",{"_index":4389,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["selector",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["selects",{"_index":1157,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["selecttemplate",{"_index":381,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["selectupload(upload",{"_index":2114,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["self",{"_index":4156,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["self.indexof(value",{"_index":4157,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["semicolon",{"_index":6028,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["send",{"_index":4015,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sends",{"_index":4027,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sensitivity",{"_index":4473,"title":{},"body":{"classes/Sorter.html":{}}}],["sent",{"_index":4033,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["seperate",{"_index":5788,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["seperated",{"_index":5430,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["seperately",{"_index":5737,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["seperation",{"_index":5432,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["serve",{"_index":5238,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["server",{"_index":5236,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["server:generic\",now",{"_index":5324,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["serveral",{"_index":4603,"title":{},"body":{"components/TabsComponent.html":{}}}],["service",{"_index":1745,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["services",{"_index":697,"title":{},"body":{"modules/AuthModule.html":{},"components/DefaultInputComponent.html":{},"modules/LocationModule.html":{},"modules/SymbolModule.html":{}}}],["session",{"_index":4298,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environment",{"_index":4357,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":531,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/publishing.html":{}}}],["set(key",{"_index":2906,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["set(property",{"_index":3647,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbols",{"_index":4548,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(type",{"_index":4764,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":4339,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(date",{"_index":1438,"title":{},"body":{"interfaces/Day.html":{}}}],["setdisabledstate",{"_index":1246,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1260,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setemptystringstonull",{"_index":4228,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["setfilter",{"_index":2952,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setfilter(field",{"_index":2973,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setgroup",{"_index":4820,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setgroup(group",{"_index":4837,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setmode",{"_index":60,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mode",{"_index":105,"title":{},"body":{"components/AceComponent.html":{}}}],["sets",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setter",{"_index":996,"title":{},"body":{"classes/Config.html":{}}}],["settheme",{"_index":61,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(theme",{"_index":110,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":437,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/DefaultInputComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"components/UploadSelectComponent.html":{}}}],["settimeout(resolve",{"_index":3117,"title":{},"body":{"components/LoaderComponent.html":{}}}],["setting",{"_index":3093,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["settings",{"_index":854,"title":{},"body":{"injectables/AuthService.html":{},"components/TinymceComponent.html":{}}}],["settings.ts",{"_index":5106,"title":{},"body":{"coverage.html":{}}}],["settoday",{"_index":1467,"title":{},"body":{"interfaces/Day.html":{}}}],["settotal",{"_index":3891,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":3951,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(total",{"_index":3922,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":4509,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/publishing.html":{}}}],["seturl",{"_index":2444,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":2459,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalue",{"_index":3160,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(value",{"_index":3176,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["short",{"_index":2989,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shortcuts",{"_index":2707,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["shorthand",{"_index":5347,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":3716,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["shouldbepartofform",{"_index":2202,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldbepartofform(field",{"_index":2220,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldn't",{"_index":5489,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["show",{"_index":1678,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["show(e",{"_index":1717,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["showerror",{"_index":3308,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showerror(err",{"_index":3347,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showheader",{"_index":2770,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["showing",{"_index":1334,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["showlabels",{"_index":3315,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["shown",{"_index":566,"title":{},"body":{"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["shownotification",{"_index":3769,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["showrawvalue",{"_index":3216,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shows",{"_index":1719,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["showurlinput",{"_index":4889,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["sie",{"_index":682,"title":{},"body":{"guards/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["signup",{"_index":311,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{}}}],["signup'},{'name",{"_index":309,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["signup(email",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefined",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup(value",{"_index":4431,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signup.component.html",{"_index":4393,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":711,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupcomponent",{"_index":308,"title":{"components/SignupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupformcomponent",{"_index":310,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["silent",{"_index":3920,"title":{},"body":{"classes/Pagination.html":{},"interfaces/WithNotifications.html":{}}}],["simi",{"_index":1006,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1624,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1911,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["simple",{"_index":3766,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["sind",{"_index":683,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":510,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["singleton",{"_index":4454,"title":{},"body":{"classes/Sorter.html":{}}}],["singularlabel",{"_index":1147,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["site",{"_index":3124,"title":{},"body":{"components/LoaderComponent.html":{}}}],["situations",{"_index":4748,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":2098,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["sizes",{"_index":2878,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["skipped",{"_index":564,"title":{},"body":{"components/AssetListComponent.html":{}}}],["skiproute",{"_index":4617,"title":{},"body":{"components/TabsComponent.html":{}}}],["slice",{"_index":3892,"title":{},"body":{"classes/Pagination.html":{}}}],["slice(items",{"_index":3926,"title":{},"body":{"classes/Pagination.html":{}}}],["slices",{"_index":3383,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slot",{"_index":1565,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["slot'},{'name",{"_index":236,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["slot.component",{"_index":2608,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1566,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.ts",{"_index":1564,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1569,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":1574,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:17",{"_index":1572,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynamic",{"_index":1563,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirective",{"_index":340,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sm",{"_index":1987,"title":{},"body":{"classes/Field.html":{}}}],["smoother",{"_index":4010,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["snackbar",{"_index":3576,"title":{},"body":{"components/ModalComponent.html":{}}}],["snippet",{"_index":5425,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["soeben",{"_index":4037,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":555,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{}}}],["somebody",{"_index":2085,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["somemodule",{"_index":2410,"title":{},"body":{"components/IconComponent.html":{}}}],["sometimes",{"_index":5908,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["somewhere",{"_index":164,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["soon",{"_index":471,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sophisticated",{"_index":892,"title":{},"body":{"classes/Collection.html":{}}}],["sort",{"_index":1962,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["sort((a",{"_index":3940,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(items",{"_index":4465,"title":{},"body":{"classes/Sorter.html":{}}}],["sortable",{"_index":1874,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["sortboolean",{"_index":4460,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":4480,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortby",{"_index":2876,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sorted",{"_index":2887,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sorter",{"_index":4452,"title":{"classes/Sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["sorting",{"_index":2879,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sortnumber",{"_index":4459,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":4478,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorts",{"_index":4467,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["sortstring",{"_index":4458,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":4476,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttype",{"_index":4456,"title":{},"body":{"classes/Sorter.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{}}}],["source.addeventlistener",{"_index":2382,"title":{},"body":{"injectables/HistoryService.html":{}}}],["span",{"_index":1333,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchanged",{"_index":1345,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1335,"title":{},"body":{"interfaces/Day.html":{}}}],["speakingurl",{"_index":5504,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["spec",{"_index":5947,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["specific",{"_index":1939,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["specified",{"_index":107,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["specify",{"_index":3277,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["splice(1",{"_index":3591,"title":{},"body":{"components/ModalComponent.html":{}}}],["split",{"_index":3590,"title":{},"body":{"components/ModalComponent.html":{}}}],["spreadsheet",{"_index":2033,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["square",{"_index":2452,"title":{},"body":{"directives/ImageDirective.html":{}}}],["src",{"_index":2442,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["src/app/app",{"_index":5390,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":5377,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.module",{"_index":5366,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":5389,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environments",{"_index":5356,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.ts",{"_index":5363,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.ts",{"_index":5361,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl",{"_index":5372,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":5373,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":388,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["stackblitz",{"_index":6034,"title":{"additional-documentation/stackblitz.html":{}},"body":{"additional-documentation/stackblitz.html":{}}}],["stage",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["staging",{"_index":5358,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["standards",{"_index":6008,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["stands",{"_index":998,"title":{},"body":{"classes/Config.html":{}}}],["start",{"_index":1251,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["started",{"_index":4959,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["startnow",{"_index":5381,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["startof('day",{"_index":1418,"title":{},"body":{"interfaces/Day.html":{}}}],["startof('month",{"_index":1409,"title":{},"body":{"interfaces/Day.html":{}}}],["startof('week",{"_index":1410,"title":{},"body":{"interfaces/Day.html":{}}}],["startthe",{"_index":5219,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["state",{"_index":1748,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["statement",{"_index":5732,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["statements",{"_index":4970,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2939,"title":{},"body":{"components/ListHeaderComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["static",{"_index":863,"title":{},"body":{"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{}}}],["status",{"_index":2317,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":3750,"title":{},"body":{"classes/Notification.html":{},"injectables/SymbolService.html":{}}}],["stays",{"_index":1730,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["step",{"_index":3711,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["steps",{"_index":6005,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["sticky",{"_index":1117,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["still",{"_index":4793,"title":{},"body":{"injectables/TypeConfigService.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["stop",{"_index":2086,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["storage",{"_index":2890,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["storagekey",{"_index":2877,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["storagekeyresolver",{"_index":2895,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["store",{"_index":2888,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["store(key",{"_index":2908,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig",{"_index":2899,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig(list",{"_index":2910,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["stored",{"_index":5244,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["stores",{"_index":2357,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["strategy=endless",{"_index":1629,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":2347,"title":{},"body":{"injectables/HistoryService.html":{}}}],["string",{"_index":69,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["string,value",{"_index":589,"title":{},"body":{"components/AssetListComponent.html":{}}}],["string.replace",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringify",{"_index":5741,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["strings",{"_index":1829,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/functions.html":{}}}],["strong",{"_index":5454,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strong.component.ts",{"_index":5451,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strongcomponent",{"_index":5450,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["structured",{"_index":1942,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{}}}],["stuff",{"_index":3084,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["style",{"_index":3537,"title":{"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/style-changelog.html":{}},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["styles.scss",{"_index":5350,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleurls",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sub",{"_index":999,"title":{},"body":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["subbranches",{"_index":2689,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":3342,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["subject",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/adding-new-packages.html":{}}}],["submenus",{"_index":3461,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":2160,"title":{},"body":{"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["submitbuttonlabel",{"_index":2158,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{}}}],["submitted",{"_index":3306,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["submitting",{"_index":5465,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["subscribe",{"_index":1087,"title":{},"body":{"components/CrudComponent.html":{}}}],["subscribe((day",{"_index":1355,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((editor",{"_index":4704,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe((timespan",{"_index":1359,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribed",{"_index":1750,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribers",{"_index":4249,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["subscribes",{"_index":598,"title":{},"body":{"components/AssetListComponent.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["subtract(weeksbefore",{"_index":1411,"title":{},"body":{"interfaces/Day.html":{}}}],["succesful",{"_index":3338,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["success",{"_index":3269,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["success/error",{"_index":3784,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successful",{"_index":3270,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["successfully",{"_index":1173,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{}}}],["such",{"_index":1946,"title":{},"body":{"classes/Field.html":{}}}],["suitable",{"_index":1953,"title":{},"body":{"classes/Field.html":{},"additional-documentation/readme/location-readme.html":{}}}],["summary.json",{"_index":6033,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["super",{"_index":3655,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["super(elementref",{"_index":397,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["super(formservice",{"_index":467,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["super(popservice",{"_index":1735,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["super(sdk",{"_index":2465,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.filterdropdownlist(listcomponent",{"_index":4161,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["super.load",{"_index":2454,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(this",{"_index":2469,"title":{},"body":{"directives/ImageDirective.html":{}}}],["support",{"_index":3586,"title":{},"body":{"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["supported",{"_index":1182,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{}}}],["supports",{"_index":5421,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sure",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["svg",{"_index":5258,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1166,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["switchmap",{"_index":2294,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":1035,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol's",{"_index":4515,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.content",{"_index":4568,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interface",{"_index":4534,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.language",{"_index":4520,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.pipe",{"_index":4527,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.service",{"_index":4526,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{}}}],["symbol/symbol.interface",{"_index":2417,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.module",{"_index":2187,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.service",{"_index":1291,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{}}}],["symbolmodule",{"_index":2176,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpipe",{"_index":4506,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{},"overview.html":{}}}],["symbols",{"_index":4513,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbols.map((symbol",{"_index":4569,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice",{"_index":1036,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice#set",{"_index":4516,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice.get(name",{"_index":4567,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.registry",{"_index":4543,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.resolve",{"_index":4533,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symbolservice.resolve('moment.format.date",{"_index":2190,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.month",{"_index":2192,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.time",{"_index":2191,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve(name",{"_index":4580,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.set(symbols",{"_index":4581,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.sets[object.keys(symbolservice.sets)[0",{"_index":4557,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symlinks",{"_index":5209,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["syntax",{"_index":5438,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["system",{"_index":1774,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["t",{"_index":913,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["tab",{"_index":4583,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["tab's",{"_index":4590,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'name",{"_index":313,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tab.activate",{"_index":4642,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":4585,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('selected",{"_index":4637,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":4646,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.parent",{"_index":4636,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.route",{"_index":4643,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.component",{"_index":4625,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcomponent",{"_index":312,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":1320,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5157,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4606,"title":{},"body":{"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["tabs'},{'name",{"_index":315,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tabs.component.html",{"_index":4607,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":4599,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscomponent",{"_index":314,"title":{"components/TabsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":317,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["tags",{"_index":514,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["tagselectcomponent",{"_index":316,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["takes",{"_index":1013,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["taking",{"_index":1176,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["target",{"_index":3128,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/TinymceComponent.html":{}}}],["targeted",{"_index":150,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["task",{"_index":5223,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tell",{"_index":5488,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["tells",{"_index":1918,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"interfaces/SdkField.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["templated",{"_index":4623,"title":{},"body":{"components/TabsComponent.html":{}}}],["templateref",{"_index":3556,"title":{},"body":{"components/ModalComponent.html":{}}}],["templates",{"_index":446,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ModalComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["templateurl",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["test",{"_index":5249,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tests",{"_index":4468,"title":{},"body":{"classes/Sorter.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["text",{"_index":1504,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MenuComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["textarea",{"_index":4768,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["thats",{"_index":5380,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["themelist.js",{"_index":172,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entry",{"_index":1806,"title":{},"body":{"injectables/EntryService.html":{}}}],["then((_methods",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((_resource",{"_index":4268,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((_upload",{"_index":4873,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((account",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["then((actions",{"_index":4144,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["then((asset",{"_index":2511,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then((assetlist",{"_index":2063,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((assets",{"_index":2078,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((available",{"_index":847,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((dmassetlist",{"_index":2099,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((entry",{"_index":1666,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/EntryService.html":{}}}],["then((list",{"_index":1632,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["then((loadedentry",{"_index":1108,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((minlevel",{"_index":1101,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((res",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((resolvedapi",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resource",{"_index":4272,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((response",{"_index":2075,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((source",{"_index":2374,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then((upload",{"_index":2069,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((url",{"_index":2513,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then((user",{"_index":3292,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["then(this.seturl.bind(this",{"_index":2478,"title":{},"body":{"directives/ImageDirective.html":{}}}],["therefor",{"_index":5539,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["therefore",{"_index":2688,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["this._api",{"_index":4311,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.gettoken",{"_index":4379,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.me",{"_index":4378,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":4350,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then((api",{"_index":4370,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":4369,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(this.active",{"_index":4088,"title":{},"body":{"components/PopComponent.html":{}}}],["this.accounts",{"_index":4307,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.actionstack[this.currentid",{"_index":412,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.activate(this.keys[e.key",{"_index":2702,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.activated",{"_index":4084,"title":{},"body":{"components/PopComponent.html":{}}}],["this.activated.next",{"_index":4600,"title":{},"body":{"components/TabComponent.html":{}}}],["this.active",{"_index":1539,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.add(item",{"_index":980,"title":{},"body":{"classes/Collection.html":{}}}],["this.add.subscribe((item",{"_index":398,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.addall(items",{"_index":985,"title":{},"body":{"classes/Collection.html":{}}}],["this.additem(item",{"_index":4169,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.api",{"_index":532,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.apiresolved",{"_index":4351,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":4707,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":538,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroupid",{"_index":2522,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.assetgrouplistpromise",{"_index":2108,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.assetgroups",{"_index":638,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.assetid",{"_index":527,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth",{"_index":3291,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":1089,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.relation",{"_index":4199,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.autofocus",{"_index":2148,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.autofocusfirst",{"_index":2844,"title":{},"body":{"components/ListComponent.html":{}}}],["this.autoload",{"_index":528,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.backdrop",{"_index":3595,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bakery.bake().then",{"_index":3790,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.calendar.writevalue(value",{"_index":1275,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(value",{"_index":1464,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cdr.markforcheck",{"_index":1092,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{}}}],["this.cells",{"_index":1404,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1375,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1376,"title":{},"body":{"interfaces/Day.html":{}}}],["this.center",{"_index":3179,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobservable",{"_index":3899,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.next(this.config",{"_index":3948,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit",{"_index":2515,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.changed.emit(change",{"_index":2631,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changed.emit(coords",{"_index":3265,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.changed.emit(position",{"_index":3184,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.changed.emit(this.list",{"_index":2848,"title":{},"body":{"components/ListComponent.html":{}}}],["this.changed.emit(this.value",{"_index":4706,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.changes.asobservable",{"_index":4259,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().pipe(rxfilter((change",{"_index":4260,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":4254,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changesenvironment.next(environment",{"_index":4355,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.changespan",{"_index":1357,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1374,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.classes",{"_index":3589,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.clean(oldvalues",{"_index":1822,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(value",{"_index":1816,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":4854,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clearfilter",{"_index":3013,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.clickevent",{"_index":4078,"title":{},"body":{"components/PopComponent.html":{}}}],["this.collection",{"_index":2839,"title":{},"body":{"components/ListComponent.html":{}}}],["this.colors",{"_index":1389,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":3518,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostring",{"_index":1390,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":3517,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.columnclicked.emit(item",{"_index":1120,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":1119,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columns",{"_index":1985,"title":{},"body":{"classes/Field.html":{}}}],["this.component",{"_index":3883,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":1580,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinstance",{"_index":2610,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control",{"_index":2629,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control.valuechanges.pipe(debouncetime(this.debounce)).subscribe((change",{"_index":2630,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.disabled",{"_index":2636,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent",{"_index":2612,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent.emit(focus",{"_index":2613,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange",{"_index":2637,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange(this.propagatechange",{"_index":2638,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.setdisabledstate",{"_index":2642,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.setdisabledstate(isdisabled",{"_index":2643,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue",{"_index":2640,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue(value",{"_index":2641,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":435,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["this.config.alwaysloadentry",{"_index":1104,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availablesizes",{"_index":3956,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.fields",{"_index":1100,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.levels",{"_index":1103,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.methods",{"_index":1091,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods).then((methods",{"_index":1090,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":1093,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.page",{"_index":3942,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.singularlabel",{"_index":1742,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.config.size",{"_index":3938,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config[key",{"_index":1009,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][property",{"_index":1010,"title":{},"body":{"classes/Config.html":{}}}],["this.configinput",{"_index":2835,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":3657,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.connectcontrol",{"_index":2627,"title":{},"body":{"components/InputComponent.html":{}}}],["this.container.nativeelement",{"_index":4711,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":3418,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.control",{"_index":2618,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2661,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.copytoclipboard(json.stringify(item.resolve(property",{"_index":2732,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.create(model",{"_index":1805,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.create(relation",{"_index":4267,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.create.emit(query",{"_index":4168,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.create.observers.length",{"_index":4167,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.createclicked.next",{"_index":4204,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":4203,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.currentactions",{"_index":4152,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.custom",{"_index":4865,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.datamanager",{"_index":4365,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":4346,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date",{"_index":1440,"title":{},"body":{"interfaces/Day.html":{}}}],["this.date.clone().add(value",{"_index":1457,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dateformat",{"_index":1288,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["this.dayclicked.emit(_moment",{"_index":1449,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":4601,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaultmonthformat",{"_index":1351,"title":{},"body":{"interfaces/Day.html":{}}}],["this.defaulttime",{"_index":3873,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.desktopnotification(instance",{"_index":3860,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.destroy",{"_index":4709,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.disabled",{"_index":1276,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["this.disabledragend",{"_index":1383,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1382,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":2372,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(true",{"_index":4777,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.dmassetconfig",{"_index":2041,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.drag",{"_index":1352,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1387,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged",{"_index":1362,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1364,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1366,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1356,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropdownlist",{"_index":438,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.dropdownlist.focusfirst",{"_index":439,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.ecasset",{"_index":526,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(e",{"_index":1544,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocus.emit(true",{"_index":2149,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecfocus.subscribe((event",{"_index":2150,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimage",{"_index":2466,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2467,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(true",{"_index":4721,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":3424,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.execcommand('mceinsertcontent",{"_index":4726,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.getcontent",{"_index":3422,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('change",{"_index":4723,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":4719,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.remove",{"_index":4708,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mode",{"_index":189,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.value",{"_index":4718,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/theme",{"_index":190,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.value",{"_index":182,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":3421,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":2152,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focus",{"_index":2151,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref",{"_index":4079,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement",{"_index":4082,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.classlist.add(`${this.type",{"_index":3596,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.classlist.remove(`${type",{"_index":3594,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.contains(element",{"_index":4081,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":2480,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobservable",{"_index":3853,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(instance",{"_index":3861,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resource",{"_index":2373,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1625,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entry",{"_index":1667,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1663,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1637,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then((list",{"_index":1643,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then((list",{"_index":1644,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitems",{"_index":1638,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1646,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1645,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentry",{"_index":1109,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.entryservice.change({model:'muffin",{"_index":1795,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.entryservice.save(model",{"_index":3719,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.environment",{"_index":4314,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.error",{"_index":1851,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.code",{"_index":1853,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":3371,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.message",{"_index":1854,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.next(error",{"_index":3296,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.errormessage",{"_index":3368,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.event",{"_index":4866,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":2375,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].close",{"_index":2377,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[relation",{"_index":2371,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":3364,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.field",{"_index":1491,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.autofocus",{"_index":1492,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.field.config",{"_index":2622,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init",{"_index":2633,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinstance",{"_index":2634,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2625,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.output",{"_index":3884,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.field.property",{"_index":2621,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1581,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":4853,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":4855,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.value",{"_index":4861,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then((assetgroups",{"_index":637,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.defaultoptions",{"_index":4828,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.fileservice.isnewassetgroupid(this.assetgroupid",{"_index":4870,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.isoldassetgroupid(this.assetgroupid",{"_index":2502,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(files",{"_index":4871,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(files",{"_index":4872,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":4864,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filteredfield",{"_index":3010,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filteredfield.property",{"_index":3011,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterfield(this.list.config.defaultfilter",{"_index":3000,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform",{"_index":2998,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.form.getfield(property",{"_index":3018,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group",{"_index":3016,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property",{"_index":3015,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property).patchvalue(this.list.getfiltervalue(property",{"_index":3017,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(this.filteredfield.property).reset",{"_index":3021,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterformconfig",{"_index":3004,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput",{"_index":2996,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput.focus(true",{"_index":3003,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.hide",{"_index":3012,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.show",{"_index":3019,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.focus",{"_index":1493,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent",{"_index":2623,"title":{},"body":{"components/InputComponent.html":{}}}],["this.focusevent.emit(focus",{"_index":1494,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent.emit(true",{"_index":4919,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.focusfirst",{"_index":2846,"title":{},"body":{"components/ListComponent.html":{}}}],["this.focusitem",{"_index":2847,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.focusnext",{"_index":2861,"title":{},"body":{"components/ListComponent.html":{}}}],["this.form",{"_index":3363,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.get('password').setvalue",{"_index":3370,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":3378,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.valid",{"_index":3376,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.formatted",{"_index":1442,"title":{},"body":{"interfaces/Day.html":{}}}],["this.formservice.shouldbepartofform(field",{"_index":4950,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["this.generateconfig(model",{"_index":3676,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng(new",{"_index":2322,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeelement).subscribe((coords",{"_index":3264,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(value).then((results",{"_index":3246,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.getaccount().then((user",{"_index":4363,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(items",{"_index":4491,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getapi(email)).then((resolvedapi",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":3520,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(date",{"_index":1426,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getdayheat(date",{"_index":1427,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getfieldconfig(model).then((fieldconfig",{"_index":3720,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getformdata(files",{"_index":2061,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.getlightmodel(model",{"_index":3710,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getmonth(date.clone",{"_index":1444,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clone",{"_index":1405,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpage",{"_index":3953,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpages",{"_index":3954,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":3514,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":3870,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getresourcelistactions(list",{"_index":4143,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.getstoragekey(list",{"_index":2926,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.getsystemfields",{"_index":3692,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getvalidators(field",{"_index":2240,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2619,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.property",{"_index":2620,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":4856,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.has(item",{"_index":976,"title":{},"body":{"classes/Collection.html":{}}}],["this.heatmap",{"_index":1392,"title":{},"body":{"interfaces/Day.html":{}}}],["this.heatmap[_moment.toisostring",{"_index":1393,"title":{},"body":{"interfaces/Day.html":{}}}],["this.hide",{"_index":2514,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.hideonclickoutside",{"_index":4077,"title":{},"body":{"components/PopComponent.html":{}}}],["this.hideonescape",{"_index":4085,"title":{},"body":{"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('is",{"_index":3134,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('is",{"_index":3135,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hover",{"_index":3521,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":3523,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":2418,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.name",{"_index":2419,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registry",{"_index":2423,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicons",{"_index":2414,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.use(emojiicons",{"_index":2411,"title":{},"body":{"components/IconComponent.html":{}}}],["this.id",{"_index":1980,"title":{},"body":{"classes/Field.html":{}}}],["this.imageform",{"_index":2503,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimage",{"_index":2520,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimg",{"_index":2539,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.index(item",{"_index":971,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":191,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.init(new",{"_index":2836,"title":{},"body":{"components/ListComponent.html":{}}}],["this.initmethods",{"_index":4197,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initmode",{"_index":3597,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.initselection",{"_index":436,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.inittabs",{"_index":4640,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.invite",{"_index":4442,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.isactive(item",{"_index":3519,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":3946,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1830,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":3945,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":2045,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolved",{"_index":2094,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoldassetgroupid(assetgroupid",{"_index":2037,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoutside($event.target",{"_index":4080,"title":{},"body":{"components/PopComponent.html":{}}}],["this.isreadonly(field",{"_index":2243,"title":{},"body":{"injectables/FormService.html":{}}}],["this.item",{"_index":2615,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.property",{"_index":2616,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items",{"_index":967,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.items.concat(items",{"_index":1639,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1640,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1641,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":970,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":979,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":969,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(index",{"_index":986,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":981,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.items.indexof(item",{"_index":987,"title":{},"body":{"classes/Collection.html":{}}}],["this.keys[e.key",{"_index":2701,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.keys[keyconfig.key",{"_index":2716,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.label",{"_index":1983,"title":{},"body":{"classes/Field.html":{}}}],["this.lazy",{"_index":2609,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["this.legacyassetconfig",{"_index":2038,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.levels",{"_index":1665,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.lightmodel",{"_index":1737,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.list",{"_index":433,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.change$.subscribe",{"_index":2843,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.change$.subscribe((newlist",{"_index":3062,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.clearfilter",{"_index":3022,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config",{"_index":2849,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.config.alwaysshowheader",{"_index":2857,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.defaultfilter",{"_index":2999,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.disableheader",{"_index":2854,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.fields",{"_index":3002,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.fields[field.property",{"_index":3006,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.selectmode",{"_index":2852,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.title",{"_index":2856,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields",{"_index":3026,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.fields.filter((f",{"_index":3028,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.fields.length",{"_index":2855,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(property",{"_index":2865,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filterablefields().reduce((fields",{"_index":3005,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempty",{"_index":2858,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered",{"_index":2845,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered(this.filteredfield.property",{"_index":3020,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.items",{"_index":4132,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.list.items[index",{"_index":2859,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page",{"_index":3061,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.page.indexof(this.focusitem",{"_index":2862,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page.length",{"_index":2864,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page[index",{"_index":2863,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.setfilter",{"_index":2994,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.togglevisibility(field",{"_index":3024,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.listconfig.applyconfig(this.list",{"_index":2842,"title":{},"body":{"components/ListComponent.html":{}}}],["this.listconfig.storeconfig(this.list",{"_index":3025,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.load",{"_index":529,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"classes/Pagination.html":{}}}],["this.loadactions",{"_index":4164,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(actionsbefore",{"_index":413,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(concatted",{"_index":4138,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(item.getbody().children",{"_index":405,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actions",{"_index":414,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actionstack[this.currentid",{"_index":422,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactionsbefore",{"_index":409,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadcomponent",{"_index":3882,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loadcomponent(this.component",{"_index":2624,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":539,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entry",{"_index":1668,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader",{"_index":1122,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["this.loader.wait(login",{"_index":3298,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.loader.wait(registration",{"_index":4413,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.loader.wait(reset",{"_index":4047,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promise",{"_index":1636,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalloader",{"_index":3114,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(loading",{"_index":2387,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":3116,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":1121,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":2376,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromise",{"_index":4880,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.loadresourcelistactions",{"_index":4120,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.localloader",{"_index":3119,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.localloader.wait(new",{"_index":3120,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.lockform",{"_index":4043,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.value).then((res",{"_index":3377,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(value",{"_index":3241,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.value",{"_index":3244,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":2321,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(change",{"_index":4261,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.meta",{"_index":2704,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.mode",{"_index":177,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{}}}],["this.mode.replace(this.type",{"_index":3584,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.mode.split",{"_index":3582,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.model",{"_index":1088,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig",{"_index":1098,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.modelconfig.getlightmodel(this.model).then((model",{"_index":1736,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":5405,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.monthformat",{"_index":1349,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":1105,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.mute",{"_index":2711,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.muted",{"_index":2700,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.name",{"_index":2421,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":4786,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":2300,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":4347,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":4371,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notifications",{"_index":1112,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notifications.add(notification",{"_index":3815,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.notifications.remove(notification",{"_index":3819,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hide",{"_index":3806,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttime",{"_index":3803,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":1110,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notification",{"_index":3804,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.emit",{"_index":2728,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.observeelement(el",{"_index":2313,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.oldassetgroupids.includes(assetgroupid",{"_index":2039,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.openurl(this.router.serializeurl(this.router.createurltree(path",{"_index":2737,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.options",{"_index":1631,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.page",{"_index":1626,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placeholder",{"_index":3419,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pages",{"_index":3943,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pages.length",{"_index":3944,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagination",{"_index":2838,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["this.pagination.getpage",{"_index":3985,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.parent",{"_index":3511,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":3516,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.route",{"_index":3527,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.placeholder",{"_index":1982,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":4205,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.create",{"_index":4206,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbody",{"_index":4200,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hide",{"_index":4876,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":4867,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.popservice.stack.add(this",{"_index":4086,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(this",{"_index":4089,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promise",{"_index":536,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":2370,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechange",{"_index":194,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(++this.value",{"_index":5526,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(change",{"_index":2632,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":187,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.value",{"_index":3423,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.propagatechange(value",{"_index":3243,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.property",{"_index":1984,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1981,"title":{},"body":{"classes/Field.html":{}}}],["this.ready",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.emit(this",{"_index":2628,"title":{},"body":{"components/InputComponent.html":{}}}],["this.ready.then",{"_index":4345,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":184,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":685,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.registry",{"_index":4573,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.relation",{"_index":4198,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.reload",{"_index":4170,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.remove(item",{"_index":982,"title":{},"body":{"classes/Collection.html":{}}}],["this.remove.subscribe((item",{"_index":407,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.removeall(undefined",{"_index":983,"title":{},"body":{"classes/Collection.html":{}}}],["this.resetfilter",{"_index":3023,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.resolve",{"_index":2424,"title":{},"body":{"components/IconComponent.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":2021,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":2023,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(relation",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.resourceconfig.get(relation).permissions",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(this.relation",{"_index":4213,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["this.resourceconfig.get(this.state.relation",{"_index":4162,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.resourceservice.change(filter",{"_index":1801,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.change({relation:'model.muffin",{"_index":1797,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.changes.next",{"_index":1820,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.retrieve(key",{"_index":2917,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.root",{"_index":418,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":4344,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.route",{"_index":3502,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":3504,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":4626,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate",{"_index":4644,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profile",{"_index":5401,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["this.router.navigate(path",{"_index":2738,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.router.url",{"_index":3513,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":3515,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":2348,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.routes",{"_index":3503,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.schemarequests[model",{"_index":4373,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].api",{"_index":4374,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].request",{"_index":4376,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.accounts",{"_index":841,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.me",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":533,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api).then((res",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.asset(unresolved[0]).then((asset",{"_index":2102,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.asset(value).then((asset",{"_index":2524,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":2109,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":2103,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":2073,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":2074,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.dmasset(this.assetgroupid",{"_index":2530,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.entry(this.model",{"_index":1106,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.sdk.api.getfieldconfig(model).then((fieldconfig",{"_index":3690,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.logout",{"_index":844,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.me",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.modellist()).then((models",{"_index":3731,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.changesenvironment.subscribe(env",{"_index":4253,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.sdk.environment",{"_index":848,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.environment.clientid",{"_index":849,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.init",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then",{"_index":3730,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.sdk.ready.then((user",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":4328,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.session",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":3240,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.value",{"_index":3245,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar.clear",{"_index":406,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.searchbar.focusevent.emit(true",{"_index":1741,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.searchinput",{"_index":3262,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.value",{"_index":3263,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select(match",{"_index":4634,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":4638,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":4627,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":4639,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectday(moment",{"_index":1468,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selected",{"_index":1439,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.selected.deactivate",{"_index":4641,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(selection",{"_index":2851,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_moment",{"_index":1454,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selection",{"_index":416,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.add(item",{"_index":401,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.getvalue",{"_index":441,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.isempty",{"_index":417,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.items[this.selection.items.length",{"_index":419,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.remove(item",{"_index":408,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.removeall",{"_index":421,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2860,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle(item",{"_index":1740,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.update$.subscribe((newlist",{"_index":3063,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.selection.update$.subscribe((selection",{"_index":2850,"title":{},"body":{"components/ListComponent.html":{}}}],["this.session",{"_index":4356,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":4359,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.setdate",{"_index":1380,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_moment",{"_index":1447,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1379,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(moment",{"_index":1466,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date",{"_index":1400,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(value",{"_index":1465,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.selected",{"_index":1398,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mode",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":4576,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":4575,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.theme",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settings",{"_index":4710,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup",{"_index":4713,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup(editor",{"_index":4714,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settotal(total",{"_index":3941,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setup.emit(editor",{"_index":4715,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setvalue(position",{"_index":3183,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.shouldbepartofform(field",{"_index":2238,"title":{},"body":{"injectables/FormService.html":{}}}],["this.show",{"_index":3137,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.show(e",{"_index":4083,"title":{},"body":{"components/PopComponent.html":{}}}],["this.showurlinput",{"_index":4918,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.signup(this.form.value).then((res",{"_index":4444,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.solo",{"_index":2853,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":4487,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1360,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promise",{"_index":3136,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":4111,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":4113,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":4115,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeall",{"_index":3141,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.state",{"_index":4140,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.storagekeyresolver",{"_index":2924,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.store(key",{"_index":2930,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.submitted",{"_index":3375,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit",{"_index":4044,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":4874,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(res",{"_index":3379,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit(user",{"_index":3294,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.symbol.resolve('datetime.local",{"_index":3707,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('entries.load.error",{"_index":1635,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.symbol.resolve('entry.load.error",{"_index":1669,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.symbol.resolve('error",{"_index":1852,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2662,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2663,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":1116,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":4879,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecuser",{"_index":4804,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.created",{"_index":3664,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.creator",{"_index":3672,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":3660,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.modified",{"_index":3670,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('image",{"_index":2504,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.symbol.resolve('login.button.label",{"_index":3322,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.label",{"_index":3324,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.placeholder",{"_index":3327,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.error",{"_index":3295,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.password.label",{"_index":3331,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.password.placeholder",{"_index":3333,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":3293,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.date",{"_index":1294,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1350,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.time",{"_index":4802,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('resource",{"_index":2260,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('resource.generic",{"_index":2210,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('signup.button.label",{"_index":4417,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.error",{"_index":4412,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('signup.invite.placeholder",{"_index":4419,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.success",{"_index":4411,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":4875,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve(name",{"_index":4535,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.symbols.set(en",{"_index":4514,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["this.tabs",{"_index":4628,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":4631,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":4635,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.theme",{"_index":179,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2475,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.time",{"_index":3802,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":3522,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1373,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1425,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":3139,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.total",{"_index":3947,"title":{},"body":{"classes/Pagination.html":{}}}],["this.trees",{"_index":2817,"title":{},"body":{"components/ListComponent.html":{}}}],["this.type",{"_index":3581,"title":{},"body":{"components/ModalComponent.html":{},"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":3673,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displaydate",{"_index":3665,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(fieldconfig[field].type).inputviews",{"_index":3683,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(type",{"_index":3704,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupdate",{"_index":3666,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.isodate",{"_index":3667,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.set('location",{"_index":5549,"title":{},"body":{"additional-documentation/readme/location-readme.html":{}}}],["this.types.foreach((type",{"_index":3593,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.includes(this.type",{"_index":3583,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.join",{"_index":3587,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types[type",{"_index":4794,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.unmute",{"_index":2712,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["this.update",{"_index":1850,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1804,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.update(relation",{"_index":4266,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.update.asobservable",{"_index":916,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this",{"_index":977,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":4725,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":3242,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(files",{"_index":4868,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.trigger(e",{"_index":4923,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploader.uploadfiles(urls",{"_index":4920,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploadfiles(e.target.files",{"_index":4860,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise",{"_index":4869,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":4881,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":2070,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2479,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.urlstoupload",{"_index":4922,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.use(this.ecimage",{"_index":2468,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":4579,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":4362,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotifications",{"_index":3859,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1633,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.user",{"_index":4364,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.value",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.vanishdelay",{"_index":3525,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.view",{"_index":1989,"title":{},"body":{"classes/Field.html":{}}}],["this.visible",{"_index":3133,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.writevalue(this.value",{"_index":2639,"title":{},"body":{"components/InputComponent.html":{}}}],["this[occasion",{"_index":1988,"title":{},"body":{"classes/Field.html":{}}}],["those",{"_index":1975,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["three",{"_index":3619,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["through",{"_index":2354,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":534,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["throwerror",{"_index":3356,"title":{},"body":{"components/LoginFormComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["throwerror(err",{"_index":3372,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["throwing",{"_index":5873,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["thrown",{"_index":1849,"title":{},"body":{"components/ErrorComponent.html":{}}}],["throws",{"_index":3129,"title":{},"body":{"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{}}}],["thumb",{"_index":2445,"title":{},"body":{"directives/ImageDirective.html":{}}}],["tick",{"_index":4658,"title":{},"body":{"components/TinymceComponent.html":{}}}],["time",{"_index":884,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["timeout",{"_index":3443,"title":{},"body":{"components/MenuComponent.html":{}}}],["times",{"_index":5470,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["timespan",{"_index":1313,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":3087,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tiny",{"_index":4663,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce",{"_index":4648,"title":{"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tinymce'},{'name",{"_index":319,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tinymce.component.html",{"_index":4651,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":4650,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":4688,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autoresize",{"_index":4689,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/code",{"_index":4690,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpicker",{"_index":4691,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":4692,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":4693,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":4694,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/lists",{"_index":4695,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/paste",{"_index":4696,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/table",{"_index":4697,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/template",{"_index":4698,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":4699,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblocks",{"_index":4700,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":4701,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce",{"_index":4687,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.component",{"_index":4732,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecomponent",{"_index":318,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodule",{"_index":4727,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["tinymcemoduleconfig",{"_index":4733,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["tip",{"_index":5289,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["titel",{"_index":3659,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["titel&#39",{"_index":3651,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["title",{"_index":376,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["titles",{"_index":5804,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["toast",{"_index":1698,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["today",{"_index":1309,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":633,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Config.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["todos",{"_index":5774,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["together",{"_index":1955,"title":{},"body":{"classes/Field.html":{}}}],["toggle",{"_index":902,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggle'},{'name",{"_index":321,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["toggle(e",{"_index":1720,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["toggle(item",{"_index":952,"title":{},"body":{"classes/Collection.html":{}}}],["toggle(resource",{"_index":2355,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle.component.html",{"_index":4737,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.component",{"_index":2182,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecomponent",{"_index":320,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":4052,"title":{},"body":{"components/PopComponent.html":{}}}],["toggledfilterpop",{"_index":2953,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggledfilterpop(active",{"_index":2975,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggles",{"_index":954,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggleurlinput",{"_index":4892,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["togglevisibility",{"_index":2954,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["togglevisibility(field",{"_index":2977,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["token",{"_index":5364,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["top",{"_index":3621,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["total",{"_index":3887,"title":{},"body":{"classes/Pagination.html":{}}}],["total>0",{"_index":5882,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["touch",{"_index":4741,"title":{},"body":{"components/ToggleComponent.html":{}}}],["track",{"_index":2335,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["tracked",{"_index":2654,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["tracking",{"_index":3898,"title":{},"body":{"classes/Pagination.html":{}}}],["transform",{"_index":1283,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["transform(array",{"_index":3385,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(fields",{"_index":4945,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(items",{"_index":2329,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(name",{"_index":4531,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(value",{"_index":1284,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["transformation",{"_index":1945,"title":{},"body":{"classes/Field.html":{}}}],["transforming",{"_index":2292,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["transforms",{"_index":1950,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["translate",{"_index":3966,"title":{},"body":{"components/PaginationComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["translates",{"_index":4529,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["translation",{"_index":3978,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["tries",{"_index":3267,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["trigger",{"_index":2802,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{}}}],["trigger(e",{"_index":4839,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggered",{"_index":3083,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["triggering",{"_index":4841,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggers",{"_index":2790,"title":{},"body":{"components/ListComponent.html":{},"components/UploadComponent.html":{}}}],["triggerupload",{"_index":4893,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["triggerupload(e",{"_index":4907,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["true",{"_index":32,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ts",{"_index":4352,"title":{},"body":{"injectables/SdkService.html":{}}}],["tsconfig.json",{"_index":6016,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["tslib",{"_index":5177,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":2146,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":570,"title":{},"body":{"components/AssetListComponent.html":{}}}],["turned",{"_index":2882,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["turns",{"_index":1506,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{}}}],["tutorial",{"_index":5335,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["tutorials",{"_index":5386,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["twice",{"_index":5729,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["two",{"_index":3622,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":68,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["type's",{"_index":4747,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.includes('asset",{"_index":3698,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.replace('a",{"_index":3699,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typealiases",{"_index":5263,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconfig",{"_index":2035,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfig.inputview",{"_index":3709,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig.placeholder",{"_index":3708,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfigservice",{"_index":1210,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfigservice#get",{"_index":3636,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typed",{"_index":1296,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typed.isvalid",{"_index":1298,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":428,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["types",{"_index":447,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/ModalComponent.html":{},"interfaces/SdkField.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["types.length",{"_index":4486,"title":{},"body":{"classes/Sorter.html":{}}}],["types.ts",{"_index":5067,"title":{},"body":{"coverage.html":{}}}],["types[0",{"_index":4488,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":966,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["typical",{"_index":3783,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["typing",{"_index":5762,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["typo",{"_index":5681,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ui",{"_index":1042,"title":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ui/src/notifications/notification",{"_index":6022,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ui/src/notifications/with",{"_index":6023,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["uimodule",{"_index":358,"title":{"modules/UiModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["uimoduleconfig",{"_index":4813,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["ul",{"_index":3981,"title":{},"body":{"components/PaginationComponent.html":{}}}],["undefined",{"_index":1765,"title":{},"body":{"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["under",{"_index":2358,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{},"additional-documentation/adding-new-packages.html":{}}}],["underline",{"_index":3534,"title":{},"body":{"components/MenuComponent.html":{}}}],["ungültiges",{"_index":4780,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["unique",{"_index":918,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["unit",{"_index":5248,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["unmute",{"_index":2714,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["unresolved",{"_index":2088,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":2092,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["until",{"_index":3096,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":1154,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/publishing.html":{}}}],["update",{"_index":550,"title":{"interfaces/Update.html":{}},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["update(model",{"_index":1782,"title":{},"body":{"injectables/EntryService.html":{}}}],["update(relation",{"_index":4243,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updateaddress",{"_index":3215,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updated",{"_index":1781,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["updateon",{"_index":2244,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":1460,"title":{},"body":{"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updatesize",{"_index":3893,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(size",{"_index":3929,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(value",{"_index":3968,"title":{},"body":{"components/PaginationComponent.html":{}}}],["updating",{"_index":2246,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["upgrade",{"_index":5266,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{}}],["upload",{"_index":325,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["upload'},{'name",{"_index":323,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["upload(files",{"_index":4842,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":4882,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.browse",{"_index":4927,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.component.html",{"_index":4816,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.deduplicate",{"_index":4886,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoreduplicates",{"_index":4885,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":4884,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.link",{"_index":4924,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.or",{"_index":4925,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.preservefilenames",{"_index":4883,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.url",{"_index":4926,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.url.start",{"_index":4928,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload/upload.component",{"_index":2133,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{}}}],["uploadassets(files",{"_index":2056,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["uploadcomponent",{"_index":322,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploaded",{"_index":2014,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["uploader",{"_index":4890,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfiles",{"_index":4821,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadfiles(files",{"_index":2072,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadfromurls",{"_index":4894,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfromurls(urls",{"_index":4909,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploading",{"_index":2013,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadpromise",{"_index":4819,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploads",{"_index":1170,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadselectcomponent",{"_index":324,"title":{"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["upon",{"_index":1751,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1167,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/KeycommandsService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["url(url",{"_index":4629,"title":{},"body":{"components/TabsComponent.html":{}}}],["urls",{"_index":4911,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["urlstoupload",{"_index":4891,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["usage",{"_index":1956,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["use",{"_index":488,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["use(asset",{"_index":2461,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(loader",{"_index":3150,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbols",{"_index":4552,"title":{},"body":{"injectables/SymbolService.html":{}}}],["used",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["usedatamanager",{"_index":4301,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":4317,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotifications",{"_index":3828,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexisting",{"_index":29,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["useful",{"_index":3795,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["uselist",{"_index":1591,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1612,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["uses",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["usese",{"_index":4757,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":4538,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":4554,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalue",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/LocationModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["using",{"_index":502,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/LocationSearchComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["utility/focus/focus.interface",{"_index":1488,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["utility/keycommands/keycommands.service",{"_index":1490,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["utility/utility.module",{"_index":2188,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utility/validators/field",{"_index":4441,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["utilitymodule",{"_index":2173,"title":{"modules/UtilityModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["utilitymoduleconfig",{"_index":4938,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["utilizes",{"_index":3634,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["ux",{"_index":4011,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4159,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["v.name",{"_index":3685,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["valid",{"_index":4499,"title":{},"body":{"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validate",{"_index":1875,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validatefactory",{"_index":2203,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":2224,"title":{},"body":{"injectables/FormService.html":{}}}],["validating",{"_index":5418,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validation",{"_index":1922,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["validationerrors",{"_index":2227,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":2217,"title":{},"body":{"injectables/FormService.html":{}}}],["validators",{"_index":2216,"title":{},"body":{"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.push(this.validatefactory(field",{"_index":2255,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.required",{"_index":2254,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.required",{"_index":3365,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.ts",{"_index":5155,"title":{},"body":{"coverage.html":{}}}],["validators/field",{"_index":3361,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["value).then((asset",{"_index":2531,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.alt",{"_index":2516,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.hasownproperty(key",{"_index":1826,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.height",{"_index":2509,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.img",{"_index":2519,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.latitude",{"_index":4789,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1960,"title":{},"body":{"classes/Field.html":{}}}],["value.longitude",{"_index":4788,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.name",{"_index":4791,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":4774,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.title",{"_index":4790,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.touppercase",{"_index":1959,"title":{},"body":{"classes/Field.html":{}}}],["value[key",{"_index":1827,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["vanishdelay",{"_index":3454,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["variable",{"_index":4613,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["variables",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["variables[key",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["various",{"_index":3082,"title":{},"body":{"components/LoaderComponent.html":{}}}],["verify",{"_index":2303,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":4035,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":5233,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["versions",{"_index":5224,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["via",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["viable",{"_index":1972,"title":{},"body":{"classes/Field.html":{}}}],["video",{"_index":2029,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["view",{"_index":1325,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["viewchild",{"_index":153,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["viewchild('container",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":4846,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterpop",{"_index":2983,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalloader",{"_index":3110,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('imageloader",{"_index":2497,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["viewchild('localloader",{"_index":3112,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('pagecontainer",{"_index":3979,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":3259,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcomponent",{"_index":1264,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcomponent",{"_index":1069,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcomponent",{"_index":1065,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercomponent",{"_index":1071,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(locationmapcomponent",{"_index":3235,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcomponent",{"_index":3238,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcomponent",{"_index":4850,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild(resourcelistcomponent",{"_index":4189,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcomponent",{"_index":4192,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcomponent",{"_index":1726,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["viewchild(slothostdirective",{"_index":1575,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["viewchild(uploadcomponent",{"_index":4915,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["viewchildren",{"_index":3983,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchildren('page",{"_index":3973,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontainer",{"_index":4450,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1556,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1582,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":1583,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewed",{"_index":1431,"title":{},"body":{"interfaces/Day.html":{}}}],["viewencapsulation",{"_index":2829,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.none",{"_index":2761,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["views",{"_index":1559,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/ModelConfigService.html":{}}}],["views.find((v",{"_index":3684,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["visibility",{"_index":2159,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["visible",{"_index":1060,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/UploadSelectComponent.html":{}}}],["visiblecolumns",{"_index":3027,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["visiblecolumns[visiblecolumns.length",{"_index":3030,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["visiblefields",{"_index":4944,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspipe",{"_index":2170,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["vm",{"_index":5306,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["void",{"_index":90,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["vscode",{"_index":5290,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["wait",{"_index":568,"title":{},"body":{"components/AssetListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wait(promise",{"_index":3094,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["waited",{"_index":3097,"title":{},"body":{"components/LoaderComponent.html":{}}}],["want",{"_index":2592,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["warning",{"_index":2404,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{}}}],["way",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["webpack",{"_index":5309,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js",{"_index":5325,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js\"},notice",{"_index":5323,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack:browser",{"_index":5321,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["week",{"_index":1271,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekdays",{"_index":1245,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weiteren",{"_index":4040,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1550,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{}}}],["werden",{"_index":681,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wether",{"_index":1896,"title":{},"body":{"classes/Field.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{}}}],["whenever",{"_index":2578,"title":{},"body":{"components/InputComponent.html":{}}}],["whitelistednonpeerdependencies",{"_index":6020,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["whole",{"_index":1974,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["whose",{"_index":4051,"title":{},"body":{"components/PopComponent.html":{}}}],["width",{"_index":1191,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{}}}],["wildcard",{"_index":1937,"title":{},"body":{"classes/Field.html":{}}}],["window",{"_index":3855,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["window.addeventlistener('keydown",{"_index":4107,"title":{},"body":{"injectables/PopService.html":{}}}],["window.addeventlistener('keyup",{"_index":2699,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["window.addeventlistener('mousedown",{"_index":2703,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["window.location.origin).pathname.split",{"_index":4630,"title":{},"body":{"components/TabsComponent.html":{}}}],["window.notification(notification.title",{"_index":3871,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permission",{"_index":3863,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permission",{"_index":3864,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.open(url",{"_index":2734,"title":{},"body":{"interfaces/KeyAction.html":{},"injectables/KeycommandsService.html":{}}}],["withloader",{"_index":1019,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotifications",{"_index":1020,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/adding-new-packages.html":{}}}],["without",{"_index":1177,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["won't",{"_index":5375,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":1162,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["work",{"_index":2813,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["workaround",{"_index":161,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{}}}],["works",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{}}}],["workspaces",{"_index":5202,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["wrap",{"_index":5478,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrapper",{"_index":1699,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wraps",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["writes",{"_index":115,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["writevalue",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["writevalue(value",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrong",{"_index":5778,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["wysiwyg",{"_index":5194,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["x",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.ui",{"_index":3538,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["x.ui/src/_config",{"_index":5352,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":5353,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui.scss",{"_index":5547,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":468,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":5351,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":5362,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":5201,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["yes",{"_index":504,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"pipes/DatetimePipe.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/KeycommandsService.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{}}}],["yields",{"_index":1714,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["you'll",{"_index":5471,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["yourself",{"_index":4292,"title":{},"body":{"injectables/SdkService.html":{}}}],["yyyy",{"_index":881,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["z",{"_index":3714,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["z0",{"_index":2048,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["za",{"_index":2047,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["zone",{"_index":1507,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.js",{"_index":5179,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":359,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["zurücksetzen",{"_index":4046,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/lib/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace?e=1\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:47\n                            \n                        \n                \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:51\n                            \n                        \n                \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:29\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:39\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:37\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/webpack-resolver';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace?e=1\n */\n@Component({\n  selector: 'ec-ace',\n  templateUrl: 'ace.component.html',\n  styleUrls: ['ace.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AceComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n  /** The ace editor instance */\n  editor: any;\n  /**\n   * The current value of the editor\n   */\n  value = '';\n  /**\n   * Promise that resolves when the editor has been initialized.\n   */\n  ready: Promise;\n  /** Form input component */\n  input: InputComponent;\n  /**\n   * container element for ace editor\n   */\n  @ViewChild('container') container: ElementRef;\n  /**\n   * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n   */\n  @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n  /**\n   * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n   */\n  @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n  /** creates new ace instance if not present and sets mode and theme if given */\n  init() {\n    if (!this.editor) {\n      this.editor = ace.edit(this.container.nativeElement);\n    }\n    this.ready = Promise.resolve(this.editor);\n    if (this.mode) {\n      this.setMode(this.mode);\n    }\n    if (this.theme) {\n      this.setTheme(this.theme);\n    }\n    if (this.value) {\n      this.editor.setValue(this.value, 1);\n    }\n    this.ready.then((editor) => {\n      editor.on('change', (e) => {\n        this.propagateChange(this.editor.getValue());\n      });\n    });\n  }\n  /** Sets the editor mode to the specified language (after ace/mode/) */\n  setMode(mode: string) {\n    this.mode = mode;\n    if (!this.editor) {\n      return;\n    }\n    this.editor.session.setMode('ace/mode/' + this.mode);\n  }\n\n  /** Sets the editor theme to the specified theme (after ace/theme/) */\n  setTheme(theme: string) {\n    this.theme = theme;\n    if (!this.editor) {\n      return;\n    }\n    this.editor.setTheme('ace/theme/' + this.theme);\n  }\n\n  /** Inits the editor */\n  ngOnInit() {\n    this.init();\n  }\n  /** Re-inits the editor */\n  ngOnChanges() {\n    this.init();\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (!this.ready) {\n      return;\n    }\n    this.ready.then((editor) => {\n      editor.setValue(this.value, 1);\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ace.component.scss\n                \n                .ec-ace {\n    min-height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n    Modules\n    AceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n AceComponent), multi: true,\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/lib/ace.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AceComponent } from './ace.component';\nimport { UiModule } from '@ec.components/ui';\n\nexport const aceModuleConfig = {\n  imports: [UiModule],\n  exports: [AceComponent],\n  declarations: [AceComponent],\n  entryComponents: [AceComponent],\n  providers: [],\n};\n\n@NgModule(aceModuleConfig)\nexport class AceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { selectTemplate } from '../select/select.component.html';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n  title: string;\n  id: string;\n  path?: string;\n  data?: any;\n  select?: boolean;\n  action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {}\n\n@Component({\n  selector: 'ec-actionbar',\n  template: selectTemplate,\n})\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n  @Input() root = 'ROOT'; // id of root stack item\n  @Input() config: ActionbarConfig = {\n    label: 'title',\n    identifier: 'id',\n    fields: {\n      title: {},\n    },\n  };\n  @Input() actions: Action[];\n  actionStack: { [id: string]: Action[] } = {};\n\n  constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(elementRef, cdr);\n    this.add.subscribe((item) => {\n      if (item.getBody().select !== false) {\n        this.selection.add(item);\n      }\n      if (item.getBody().action) {\n        item.getBody().action(item, this);\n      }\n      if (item.getBody().children) {\n        this.loadActions(item.getBody().children);\n      }\n      this.searchbar.clear();\n    });\n    this.remove.subscribe((item) => {\n      this.selection.remove(item);\n      this.loadActionsBefore();\n    });\n  }\n\n  loadActionsBefore() {\n    const actionsBefore = this.actionStack[this.currentID()];\n    if (actionsBefore) {\n      this.loadActions(actionsBefore);\n    }\n  }\n\n  ngOnInit() {\n    this.loadActions(this.actions);\n  }\n\n  currentID() {\n    if (!this.selection || this.selection.isEmpty()) {\n      return this.root;\n    }\n    return this.selection.items[this.selection.items.length - 1].id();\n  }\n\n  reset() {\n    this.selection.removeAll();\n    this.loadActions(this.actionStack[this.currentID()]);\n  }\n\n  currentActions() {\n    return this.actionStack[this.currentID()];\n  }\n\n  async loadActions(actions, addToStack = true) {\n    let resolved;\n    if (typeof actions === 'function') {\n      resolved = await Promise.resolve(actions(this.actionStack, this));\n    } else {\n      resolved = [].concat(actions);\n    }\n    if (addToStack) {\n      this.actionStack[this.currentID()] = actions;\n    }\n    this.list = new List(resolved, this.config);\n    if (!this.selection) {\n      this.initSelection();\n    }\n    setTimeout(() => {\n      if (this.dropdownList) {\n        this.dropdownList.focusFirst();\n      }\n    });\n  }\n\n  getPath() {\n    return this.selection.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionbarConfig.html":{"url":"interfaces/ActionbarConfig.html","title":"interface - ActionbarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionbarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { selectTemplate } from '../select/select.component.html';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n  title: string;\n  id: string;\n  path?: string;\n  data?: any;\n  select?: boolean;\n  action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {}\n\n@Component({\n  selector: 'ec-actionbar',\n  template: selectTemplate,\n})\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n  @Input() root = 'ROOT'; // id of root stack item\n  @Input() config: ActionbarConfig = {\n    label: 'title',\n    identifier: 'id',\n    fields: {\n      title: {},\n    },\n  };\n  @Input() actions: Action[];\n  actionStack: { [id: string]: Action[] } = {};\n\n  constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(elementRef, cdr);\n    this.add.subscribe((item) => {\n      if (item.getBody().select !== false) {\n        this.selection.add(item);\n      }\n      if (item.getBody().action) {\n        item.getBody().action(item, this);\n      }\n      if (item.getBody().children) {\n        this.loadActions(item.getBody().children);\n      }\n      this.searchbar.clear();\n    });\n    this.remove.subscribe((item) => {\n      this.selection.remove(item);\n      this.loadActionsBefore();\n    });\n  }\n\n  loadActionsBefore() {\n    const actionsBefore = this.actionStack[this.currentID()];\n    if (actionsBefore) {\n      this.loadActions(actionsBefore);\n    }\n  }\n\n  ngOnInit() {\n    this.loadActions(this.actions);\n  }\n\n  currentID() {\n    if (!this.selection || this.selection.isEmpty()) {\n      return this.root;\n    }\n    return this.selection.items[this.selection.items.length - 1].id();\n  }\n\n  reset() {\n    this.selection.removeAll();\n    this.loadActions(this.actionStack[this.currentID()]);\n  }\n\n  currentActions() {\n    return this.actionStack[this.currentID()];\n  }\n\n  async loadActions(actions, addToStack = true) {\n    let resolved;\n    if (typeof actions === 'function') {\n      resolved = await Promise.resolve(actions(this.actionStack, this));\n    } else {\n      resolved = [].concat(actions);\n    }\n    if (addToStack) {\n      this.actionStack[this.currentID()] = actions;\n    }\n    this.list = new List(resolved, this.config);\n    if (!this.selection) {\n      this.initSelection();\n    }\n    setTimeout(() => {\n      if (this.dropdownList) {\n        this.dropdownList.focusFirst();\n      }\n    });\n  }\n\n  getPath() {\n    return this.selection.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '../sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n  templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n  api: DataManagerResource;\n  constructor(public sdk: SdkService, public formService: FormService, public keycommands: KeycommandsService) {\n    super(formService, keycommands);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template.\nassets/asset\nhttps://components.entrecode.de/assets/asset?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:26\n                            \n                        \n                \n                    \n                        The api to use. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:18\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:22\n                            \n                        \n                \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:20\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:24\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:28\n                            \n                        \n                \n                    \n                        Fires as soon as the asset has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:36\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:16\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template.\n * assets/asset\n * https://components.entrecode.de/assets/asset?e=1\n */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset',\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {}\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId).then((asset) => {\n      this.asset = asset;\n      this.loaded.emit(asset);\n      return asset;\n    });\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListComponent.html":{"url":"components/AssetListComponent.html","title":"component - AssetListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/asset-list/asset-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list\n            \n\n\n\n\n            \n                templateUrl\n                ./asset-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                list\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                loadWhen\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:39\n                            \n                        \n                \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                \n                \n                    \n                        Type :     ListResource\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:31\n                            \n                        \n                \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:43\n                            \n                        \n                \n                    \n                        The loader that should be shown while the list is loaded. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loadWhen\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:35\n                            \n                        \n                \n                    \n                        If set to false, the list will wait for the flag to turn true before loading. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:41\n                            \n                        \n                \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:33\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/asset-list/asset-list.component.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:66\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:127\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:118\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:82\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:37\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\n\n@Component({\n  selector: 'ec-asset-list',\n  templateUrl: './asset-list.component.html',\n})\nexport class AssetListComponent extends ResourceListComponent implements OnInit {\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                \n                    \n                \n                \n                    {{group.value}}\n                \n            \n             -->\n\n            \n            \n                \n                    \n                \n                {{item.getBody()}}\n             -->\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                    {{group.value}}                                         -->                                                                                            {{item.getBody()}}             -->            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'select assetgroup..'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '../file.service';\n\n// TODO: add demo + doc\n\n@Component({\n  selector: 'ec-assetgroup-select',\n  templateUrl: './assetgroup-select.component.html',\n})\nexport class AssetgroupSelectComponent implements OnInit {\n  @Input() placeholder = 'select assetgroup..';\n  @Input() assetGroupID: string;\n  @Input() assetGroups: string[];\n  @Input() disableLegacy: boolean;\n  @Input() readOnly: boolean;\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n\n  constructor(public fileService: FileService) {}\n\n  ngOnInit() {\n    this.fileService.assetGroupList().then((assetGroups) => (this.assetGroups = assetGroups));\n  }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth-guard.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui';\nimport { Subject } from 'rxjs';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {}\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then((user) => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.',\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for all auth related components and services. \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                        \n                            cookieFactory()\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { CookieModule } from 'ngx-cookie';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { SignupComponent } from './signup/signup.component';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [PasswordResetComponent, LoginComponent, SignupComponent],\n  imports: [FormsModule, cookieFactory(), CommonModule, ReactiveFormsModule, UiModule],\n  exports: [ReactiveFormsModule, PasswordResetComponent, LoginComponent, SignupComponent],\n  providers: [AuthGuard, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:174\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:160\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:190\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:149\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, private sdk: SdkService) {}\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      })\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api\n      ? api.signup(email, password, invite)\n      : this.sdk.api\n          .signup(email, password, invite)\n          .catch(() => this.sdk.accounts.signup(email, password, invite))\n          .then((res) => {\n            return this.sdk.init();\n          });\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api\n      .me()\n      .then((account) => {\n        return account || this.sdk.accounts.me();\n      })\n      .catch((err) => {\n        return this.sdk.api.me();\n      });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      if (!user) {\n        return false;\n      }\n      api = api || this.sdk.api;\n      return api.checkPermission(permission);\n    });\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(\n    relation: string,\n    variables: Object = {},\n    methods?: string[],\n    api?: Core,\n  ): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method]\n          ? Promise.resolve(results)\n          : permissions[method] === true\n          ? Promise.resolve(results.concat(method))\n          : this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then((res) => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              })\n              .catch((err) => {\n                return results;\n              });\n      })\n      .reduce((a, b) => a.then((r) => b(r)), Promise.resolve([]))\n      .then((_methods) => {\n        _methods.filter((x) => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api).then((res) => {\n          if (res) {\n            results.push(method);\n          }\n          return results;\n        }),\n      )\n      .reduce((a, b) => a.then((r) => b(r)), Promise.resolve([]))\n      .then((_methods) => {\n        _methods.filter((x) => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email)).then((resolvedAPI) => {\n      const _api = resolvedAPI || this.sdk.accounts;\n      return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n    });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api\n      ? api.logout()\n      : this.sdk.session\n          .logout()\n          .catch(() => this.sdk.api.logout())\n          .then(() => {\n            return this.sdk.init();\n          });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api\n      .emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      })\n      .catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.sdk.environment || !this.sdk.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarModule.html":{"url":"modules/CalendarModule.html","title":"module - CalendarModule","body":"\n                   \n\n\n\n\n    Modules\n    CalendarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module contains all calendar related components \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(formats: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/calendar.module.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formats\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DatetimePipe } from './datetime.pipe';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { HeatmapComponent } from './heatmap/heatmap.component';\nimport { DaterangeComponent } from './daterange/daterange.component';\nimport { MonthComponent } from './calendar/month.component';\nimport { CommonModule } from '@angular/common';\n\nexport const calendarModuleConfig = {\n  imports: [CommonModule],\n  exports: [DatetimePipe, CalendarComponent, HeatmapComponent, DaterangeComponent, MonthComponent],\n  declarations: [DatetimePipe, CalendarComponent, HeatmapComponent, DaterangeComponent, MonthComponent],\n  providers: [\n    {\n      provide: 'moment.format.date',\n      useValue: 'DD.MM.YYYY',\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: 'HH:mm',\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: 'MMMM YYYY',\n    },\n  ],\n};\n\n/** This Module contains all calendar related components */\n@NgModule(calendarModuleConfig)\nexport class CalendarModule {\n  static forRoot(formats: { date?; time?; month? }): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        {\n          provide: 'moment.format.date',\n          useValue: formats.date,\n        },\n        {\n          provide: 'moment.format.time',\n          useValue: formats.time,\n        },\n        {\n          provide: 'moment.format.month',\n          useValue: formats.month,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                move\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                               *  const numbers = new Collection([1, 2, 3]);\n   *\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:10\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:71\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.add(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:89\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.addAll([5, 6, 7]);\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has(2); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:53\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has([1,2]); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:31\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:160\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            move\n                            \n                            \n                        \n                    \n                \n                \n                    \nmove(item: T, index: number, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:165\n                            \n                        \n\n\n                \n                    \n                            Moves the given item to the given array index. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:106\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.remove(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:123\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.removeAll();\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:147\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:138\n                            \n                        \n\n\n                \n                    \n                            Toggles the item in and out of collection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable, Subject } from 'rxjs';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /** Moves the given item to the given array index. */\n  move(item: T, index: number, event: boolean = true) {\n    if (!this.has(item) || this.items.indexOf(item) === index) {\n      return;\n    }\n    this.items.splice(index, 0, this.items.splice(this.items.indexOf(item), 1)[0]);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object;\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * \n *https://components.entrecode.de/entries/crud?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, modelConfig: ModelConfigService, notificationService: NotificationsService, symbol: SymbolService, cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:32\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:30\n                            \n                        \n                \n                    \n                        The model that should be crud'ed. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:34\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:42\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:44\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryPopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:38\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:36\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:40\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { Notification, WithNotifications, SymbolService } from '@ec.components/ui';\nimport { ModelConfigService } from '../model-config/model-config.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/entries/crud?e=1\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private modelConfig: ModelConfigService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    private cdr: ChangeDetectorRef,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute,\n  ) {\n    /* if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    } */\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods).then((methods) => {\n      this.config.methods = methods;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return this.modelConfig\n      .getMinLevel(this.model, this.config.fields)\n      .then((minLevel) => {\n        const levels = Math.max(minLevel, this.config.levels || 1);\n        if (!this.config.alwaysLoadEntry && !this.mustReload(item) && levels === 1) {\n          return item.getBody();\n        }\n        return this.sdk.api.entry(this.model, item.id(), levels);\n      })\n      .then((loadedEntry) => {\n        this.entryPop.edit(loadedEntry);\n        this.notificationService.emit({ hide: this.notifications });\n      })\n      .catch((err) => {\n        console.log('error while loading entry to edit', err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.load'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n      });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  public selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        customUpload\n                                \n                                \n                                            Optional\n                                        deleteOnRemove\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        disableUrlUpload\n                                \n                                \n                                            Optional\n                                        dropdownFields\n                                \n                                \n                                            Optional\n                                        fileOptions\n                                \n                                \n                                            Optional\n                                        hideAssetGroupSelect\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopActive\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        pluralLabel\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        safeDelete\n                                \n                                \n                                            Optional\n                                        singularLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customUpload\n                                    \n                                \n                                \n                                    \n                                        customUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a pop will open before upload to set up custom options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteOnRemove\n                                    \n                                \n                                \n                                    \n                                        deleteOnRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, selects will delete entries that are removed from the selection \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be accessible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableUrlUpload\n                                    \n                                \n                                \n                                    \n                                        disableUrlUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, assets cannot be upload via url \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdownFields\n                                    \n                                \n                                \n                                    \n                                        dropdownFields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The fields that are used in select dropdowns, defaults to label field only. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileOptions\n                                    \n                                \n                                \n                                    \n                                        fileOptions:     FileOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default options for file uploads \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideAssetGroupSelect\n                                    \n                                \n                                \n                                    \n                                        hideAssetGroupSelect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Hides the assetGroup select in asset-list-pop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopActive\n                                    \n                                \n                                \n                                    \n                                        nestedPopActive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a nested pop will be active immediately \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets a placeholder. Used e.g. for empty entry-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluralLabel\n                                    \n                                \n                                \n                                    \n                                        pluralLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for multiple entities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the column width of the pops used. Defaults to popService.defaultColumns \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeDelete\n                                    \n                                \n                                \n                                    \n                                        safeDelete:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, delete operations need confirmation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singularLabel\n                                    \n                                \n                                \n                                    \n                                        singularLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for one entity \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig, FieldConfig } from '@ec.components/core';\nimport { NotificationsComponent, LoaderComponent } from '@ec.components/ui';\nimport { FileOptions } from '../files/file.service';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The fields that are used in select dropdowns, defaults to label field only. */\n  dropdownFields?: FieldConfig;\n  /** The label for one entity */\n  singularLabel?: string;\n  /** The label for multiple entities */\n  pluralLabel?: string;\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean; post?: string | boolean; get?: string | boolean; delete?: string | boolean };\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, assets cannot be upload via url */\n  disableUrlUpload?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, no dropdown will be accessible */\n  disableSearchbar?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, selects will delete entries that are removed from the selection */\n  deleteOnRemove?: boolean;\n  /** If true, delete operations need confirmation */\n  safeDelete?: boolean;\n  /** Hides the assetGroup select in asset-list-pop */\n  hideAssetGroupSelect?: boolean;\n  /** Default options for file uploads */\n  fileOptions?: FileOptions;\n  /** If true, a pop will open before upload to set up custom options */\n  customUpload?: boolean;\n  /** Defines the column width of the pops used. Defaults to popService.defaultColumns */\n  popColumns?: number;\n  /** If true, a nested pop will be active immediately */\n  nestedPopActive?: boolean;\n  /** Sets a placeholder. Used e.g. for empty entry-select */\n  placeholder?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryActionbarComponent\n\nEntryActionbarComponent\n\nDataModule -->\n\nEntryActionbarComponent->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryActionbarComponent \n\nEntryActionbarComponent \n\nEntryActionbarComponent  -->\n\nDataModule->EntryActionbarComponent \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/data.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryActionbarComponent\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntryActionbarComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EntryService\n                        \n                        \n                            HistoryService\n                        \n                        \n                            ModelConfigService\n                        \n                        \n                            TypeConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryActionbarComponent\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forEnvironment(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/data.module.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { EntryService } from './entry/entry.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListPopComponent } from './entry-list-pop/entry-list-pop.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\nimport { EntryListSelectComponent } from './entry-list-select/entry-list-select.component';\nimport { EntryActionbarComponent } from './entry-actionbar/entry-actionbar.component';\n\nexport const dataModuleConfig = {\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n    EntryActionbarComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntryListSelectComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryActionbarComponent,\n    EntryListPopComponent,\n  ],\n  imports: [FormsModule, CommonModule, UiModule, SdkModule, FilesModule, AuthModule, ResourceModule, DndModule],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryActionbarComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n  ],\n  providers: [\n    EntryService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live',\n        datamanagerID: '83cc6374',\n      },\n    },\n  ],\n};\n\n@NgModule(dataModuleConfig)\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live',\n            },\n            environment,\n          ),\n        },\n      ],\n    };\n  }\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                disabled\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :     moment.Moment\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:24\n                            \n                        \n                \n                    \n                        The date that should be displayed at start. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:32\n                            \n                        \n                \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:26\n                            \n                        \n                \n                    \n                        The form control that holds the date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:34\n                            \n                        \n                \n                    \n                        The input's placeholder \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisabledState(isDisabled)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CalendarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:28\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:36\n                            \n                        \n\n                \n                    \n                        If true, the time cannot be changed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:44\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from '@ec.components/calendar';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime?e=1\n *\n */\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true,\n    },\n  ],\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n  /** If true, the time cannot be changed */\n  disabled: boolean;\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {};\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.dateFormat\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Inject } from '@angular/core';\nimport moment from 'moment-es6';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime',\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(@Inject('moment.format.date') private dateFormat /* private symbol: SymbolService */) {}\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.dateFormat /* this.symbol.resolve('moment.format.date') */,\n    raw?: string,\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                            Optional\n                                        heat\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heat\n                                    \n                                \n                                \n                                    \n                                        heat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Inject } from '@angular/core';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\nimport moment from 'moment-es6';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/** Interface for a day inside the a month.\n * https://components.entrecode.de/ui/datetime?e=1\n * */\nexport interface Day {\n  /** The cell index */\n  index: number;\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n  /** custom class */\n  heat?: string;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  templateUrl: 'month.component.html',\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color mapping for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Class mapping for day cells. E.g. to apply different background classes */\n  @Input() heatmap: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc';\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** If true, nothing can be changed */\n  @Input() disabled;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  /* public symbol: SymbolService */\n  constructor(@Inject('moment.format.month') protected defaultMonthFormat) {\n    /* this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat; */\n    this.monthFormat = this.defaultMonthFormat || this.monthFormat;\n    this.drag\n      .asObservable()\n      .pipe(debounceTime(100))\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan\n      .asObservable()\n      .pipe(debounceTime(800))\n      .subscribe((timespan) => this.spanChanged.emit(this.timespan));\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || ((day.first && this.dragged.first) || (day.last && this.dragged.last))) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  getDayHeat(_moment: moment.Moment) {\n    if (this.heatmap && this.heatmap[_moment.toISOString()]) {\n      return this.heatmap[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    }\n    if (change.colors || change.heatmap) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day\n      .clone()\n      .startOf('month')\n      .startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart =\n          this.timespan &&\n          date\n            .clone()\n            .startOf('day')\n            .isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd =\n          this.timespan &&\n          date\n            .clone()\n            .startOf('day')\n            .isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          heat: this.getDayHeat(date),\n          format: date.format('DD'),\n          today:\n            moment()\n              .startOf('day')\n              .diff(date, 'days') === 0,\n        };\n      });\n  }\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    if (this.disabled) {\n      return;\n    }\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment, emit = true): void {\n    if (this.disabled) {\n      return;\n    }\n    this.setDate(_moment);\n    this.selected = _moment;\n    if (emit) {\n      this.dayClicked.emit(_moment);\n    }\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n\n  /** Sets the current selected date to today. */\n  setToday(): void {\n    this.selectDay(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService, public formService: FormService, public keycommands: KeycommandsService) {\n    super(formService, keycommands);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                              🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                Focus\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:22\n                            \n                        \n\n                \n                    \n                            Injects the services. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, AfterViewInit, OnChanges } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field, Item } from '@ec.components/core';\nimport { Focus } from '../../utility/focus/focus.interface';\nimport { FormService } from '../form.service';\nimport { KeycommandsService } from '../../utility/keycommands/keycommands.service';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent implements AfterViewInit, Focus {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  /** Injects the services. */\n  constructor(public formService: FormService, public keycommands: KeycommandsService) {}\n\n  ngAfterViewInit() {\n    if (this.field && this.field.autofocus) {\n      this.focus();\n    }\n  }\n\n  focus(focus = true) {\n    setTimeout(() => {\n      this.focusEvent.emit(focus);\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    {{ field.placeholder }}\n  \n\n  \n\n  \n\n  \n  \n\n  \n\n  \n    \n      {{ field.getPlaceholder() }}\n      \n        {{ option.label ? option.label : option }}\n      \n    \n    \n  \n  \n    \n      {{ item?.display(field.property) }}\n    \n  \n\n  \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ field.placeholder }}                        {{ field.getPlaceholder() }}              {{ option.label ? option.label : option }}                            {{ item?.display(field.property) }}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n    \n    (field.maxItems||10)\">\n      &hellip;\n    \n  \n\n  {{item?.display(field.property)}}\n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n\n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    {{item?.display(field.property)}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}        (field.maxItems||10)\">      …        {{item?.display(field.property)}}      ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                    {{item?.resolve(field.property)?.length}}                    {{item?.resolve(field.property)?.length}}                                {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}            {{item?.display(field.property)}}      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. TODO: demo \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n                \n                    \n                        If true the element acts normal \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n                \n                    \n                        Emits when files are dropped \n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. TODO: demo */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n  /** The is-active class is bound to the host when dragover is active */\n  @HostBinding('class.is-active') public active: boolean;\n  /** Emits when files are dropped */\n  @Output() ecDropzone: EventEmitter = new EventEmitter();\n  /** If true the element acts normal */\n  @Input() disabled = false;\n  /** flips active to true on dragover */\n  @HostListener('dragover', ['$event']) onDragOver(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.active) {\n      this.active = true;\n    }\n  }\n  /** emits dropped files and flips active to false on drop */\n  @HostListener('drop', ['$event']) onDrop(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n      return;\n    }\n    this.ecDropzone.emit(e);\n    this.active = false;\n  }\n  /** flips active to false on dragleave */\n  @HostListener('dragleave', ['$event']) onDragLeave(e) {\n    if (this.disabled) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.active) {\n      this.active = false;\n    }\n  }\n  constructor(private el: ElementRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html',\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html',\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {}\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, attributes: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, attributes);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Private\n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:30\n                            \n                        \n                \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:28\n                            \n                        \n                \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:32\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:24\n                            \n                        \n                \n                    \n                        The model to load from. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:26\n                            \n                        \n                \n                    \n                        The filterOptions for loading. \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:111\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:58\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:22\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader, NotificationsService } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { SymbolService } from '@ec.components/ui';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/entries/entries?e=1\n */\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries',\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService,\n  ) {}\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api\n      .entryList(this.model, this.options)\n      .then((list) => this.useList(list))\n      .catch((error) =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entries.load.error'),\n          error,\n        }),\n      );\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then((list) => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then((list) => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:25\n                            \n                        \n                \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:21\n                            \n                        \n                \n                    \n                        The entry id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:27\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:31\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:23\n                            \n                        \n                \n                    \n                        The model to load from \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:29\n                            \n                        \n                \n                    \n                        Fires as soon as the entry has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:51\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:43\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:19\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/entries/entries?e=1\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry',\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService,\n  ) {}\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api\n      .entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      })\n      .catch((error) =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entry.load.error'),\n          error,\n        }),\n      );\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListPopComponent.html":{"url":"components/EntryListPopComponent.html","title":"component - EntryListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop that contains an entry list. TODO: add demo \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./entry-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                modelConfig\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeader\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelConfig: ModelConfigService, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHeader(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Item, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\n\n/** A Pop that contains an entry list. TODO: add demo */\n@Component({\n  selector: 'ec-entry-list-pop',\n  templateUrl: './entry-list-pop.component.html',\n})\nexport class EntryListPopComponent extends PopComponent implements OnChanges {\n  @Input() model: string;\n  @Input() config: CrudConfig;\n  @Input() selection: Selection;\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'toast-wrapper';\n  lightModel: any;\n\n  constructor(\n    public modelConfig: ModelConfigService,\n    public popService: PopService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n\n  ngOnChanges() {\n    if (this.model) {\n      this.modelConfig.getLightModel(this.model).then((model) => (this.lightModel = model));\n    }\n    this.config = Object.assign({}, this.config || {}, { hidePagination: true, disableHeader: true });\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select(item) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    } else if (this.selection) {\n      this.selection.toggle(item);\n    }\n    // this.searchbar.focusEvent.emit(true);\n  }\n\n  getHeader(entryList) {\n    const label = this.config.singularLabel || entryList.model;\n    return `${label}`;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{getHeader(entryList)}}\n         -->\n        \n    \n    \n        \n        \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{getHeader(entryList)}}         -->                                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntryService.html":{"url":"injectables/EntryService.html","title":"injectable - EntryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resourceService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.service.ts:14\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, config?: ItemConfig, cleanReadOnly)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:76\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    ItemConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cleanReadOnly\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entryItem: Item, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entryItem\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update(model, entryItem: Item, value: Object, safePut)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        entryItem\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        safePut\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { Item, ItemConfig } from '@ec.components/core';\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class EntryService {\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public resourceService: ResourceService) {}\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: any): Observable {\n    if (filter.model) {\n      filter.relation = `model.${filter.model}`;\n      delete filter.model;\n    }\n    console.warn(`EntryService.change is deprecated! Use ResourceService.change instead!\n    Make sure to change the \"model\" property to \"relation\" with prefix \"model.\":\n\n    this.entryService.change({model:'muffin'}) // OLD\n    // CHANGE TO\n    this.resourceService.change({relation:'model.muffin'}) // NEW\n\n    The EntryService#change method will be removed in a future release!\n    `);\n    return this.resourceService.change(filter);\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entryItem: Item, value: Object) {\n    const entry = entryItem.getBody();\n    if (entry && entry.save) {\n      return this.update(model, entryItem, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  async update(model, entryItem: Item, value: Object, safePut = true): Promise {\n    const oldValues = {}; // save old values\n    const entry = entryItem.getBody();\n    Object.keys(value).forEach((key) => (oldValues[key] = entry[key]));\n    // TODO: EDITOR-263 get model config, clean readOnly fields too. Add custom filter argument to clean method\n    Object.assign(entry, this.clean(value, entryItem.config, true)); // assign new form values\n    return entry\n      .save(safePut)\n      .then((_entry) => {\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: _entry, type: 'put' });\n        return _entry;\n      })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, config?: ItemConfig, cleanReadOnly = false): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n        if (config && config.fields && config.fields[key]) {\n          if (config.fields[key].immutable || (cleanReadOnly && config.fields[key].readOnly)) {\n            delete value[key];\n          } else if (config.fields[key].beforeSave) {\n            value[key] = config.fields[key].beforeSave(value[key], config.fields[key], value);\n          }\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api\n      .createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // TODO: make sure leveled entries are returned leveled\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'post' });\n        return entry;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n                \n                    \n                        The error that should be displayed \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html',\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {}\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}{{error.verbose?': '+error.verbose:''}}\n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}{{error.verbose?\\': \\'+error.verbose:\\'\\'}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                autofocus\n                            \n                            \n                                    Optional\n                                beforeSave\n                            \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                hideFormLabel\n                            \n                            \n                                    Optional\n                                hideFormLabelIfEmpty\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumns\n                            \n                            \n                                getComponent\n                            \n                            \n                                getLabel\n                            \n                            \n                                getPlaceholder\n                            \n                            \n                                getView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:55\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            autofocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        If true, the field will autofocus after view init \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beforeSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom clean function to prepare for save \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:49\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hideFormLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        If true, the form input label will always be hidden \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hideFormLabelIfEmpty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        If true, the form input label will be hidden if no value is set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:53\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:51\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:47\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColumns()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:71\n                            \n                        \n\n\n                \n                    \n                            Returns the column class for data-col, based on configured columns \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(occasion?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:86\n                            \n                        \n\n\n                \n                    \n                            Returns the component for the given occasion \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occasion\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:75\n                            \n                        \n\n\n                \n                    \n                            Returns the fields label \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:67\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getView\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetView(occasion?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns the view for the given occasion \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occasion\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:53\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** If true, the field will autofocus after view init */\n  autofocus?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom clean function to prepare for save */\n  beforeSave?: (value?, field?, body?) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** If true, the form input label will always be hidden */\n  hideFormLabel?: boolean;\n  /** If true, the form input label will be hidden if no value is set */\n  hideFormLabelIfEmpty?: boolean;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n  /** Returns the column class for data-col, based on configured columns */\n  getColumns() {\n    return (this.columns || 12) + '-sm';\n  }\n  /** Returns the fields label */\n  getLabel() {\n    if (this.label === false) {\n      return '';\n    }\n    return this.label || this.property;\n  }\n  /** Returns the view for the given occasion */\n  getView(occasion?) {\n    return this[occasion + 'View'] || this.view;\n  }\n  /** Returns the component for the given occasion */\n  getComponent(occasion?) {\n    return this[occasion + 'Component'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/config/field-config.interface.ts:6\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FieldConfigProperty } from './field-config-property.interface';\n\n/**\n * Configuration for list fields.\n */\nexport interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deduplicate\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fileName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deduplicate\n                                    \n                                \n                                \n                                    \n                                        deduplicate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deduplicate upload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig,\n  ) {}\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, config.filter || {}, {\n          type: assetGroupID,\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) => (only && (match && this.isNewAsset(a))) || (!only && (match || this.isNewAsset(a))),\n        only,\n      );\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n        if (key in options) {\n          formData.append(key, `${options[key]}`);\n        }\n      });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map((f) => f.url) : this.getFormData(files, options);\n    return api\n      .createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('dmAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve()\n      .then(\n        (): Promise Promise> => {\n          if (files.length === 1) {\n            return this.sdk.api.createAsset(data, {});\n          }\n          return this.sdk.api.createAssets(data, {});\n        },\n      )\n      .then((res) => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      })\n      .then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('legacyAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(\n    assets: Array,\n    assetGroupID?: string,\n  ): Promise> {\n    console.warn(\n      'FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.',\n    );\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) {\n      // new assets\n      return this.sdk.api\n        .dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then((dmAssetList) => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then(\n      (): any => {\n        if (unresolved.length === 1) {\n          return this.sdk.api.asset(unresolved[0]).then((asset) => {\n            return [asset];\n          });\n        }\n        return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 }).then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ? resolved.find((resource) => resource.assetID === asset) : asset,\n          );\n        });\n      },\n    );\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { AssetListComponent } from '../asset-list/asset-list.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\nimport { UploadSelectComponent } from './upload-select/upload-select.component';\nimport { ImageSelectPopComponent } from './image-select-pop/image-select-pop.component';\nimport { TagSelectComponent } from './tag-select/tag-select.component';\n\n@NgModule({\n  entryComponents: [AssetSelectComponent, AssetgroupSelectComponent, UploadComponent, TagSelectComponent],\n  declarations: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    ImageSelectPopComponent,\n    TagSelectComponent,\n  ],\n  imports: [CommonModule, FormsModule, UiModule, SdkModule, ResourceModule],\n  exports: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    SdkModule,\n    ImageSelectPopComponent,\n    TagSelectComponent,\n  ],\n  providers: [FileService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.interface.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit, AfterViewInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit, AfterViewInit {\n  @Input() ecFocus: EventEmitter;\n  @Input() autofocus: boolean;\n\n  constructor(private element: ElementRef) {}\n\n  ngAfterViewInit() {\n    if (this.autofocus) {\n      this.ecFocus.emit(true);\n    }\n  }\n\n  ngOnInit() {\n    this.ecFocus.subscribe((event: boolean) => {\n      if (event) {\n        this.element.nativeElement.focus();\n      } else {\n        this.element.nativeElement.blur();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        hideSubmitButton\n                                \n                                \n                                            Optional\n                                        submitButtonLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the column visibility filter will not be visible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideSubmitButton\n                                    \n                                \n                                \n                                    \n                                        hideSubmitButton:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no submit button will be rendered. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonLabel\n                                    \n                                \n                                \n                                    \n                                        submitButtonLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the submit button \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n  /** If true, no submit button will be rendered. */\n  hideSubmitButton?: boolean;\n  /** The label of the submit button */\n  submitButtonLabel?: string;\n  /** If true, the column visibility filter will not be visible */\n  disableColumnFilter?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nCalendarModule\n\nCalendarModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CalendarModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            IoModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            IoModule\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            PopModule\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            UtilityModule\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { CalendarModule } from '@ec.components/calendar';\nimport { UtilityModule } from '../utility/utility.module';\n\nexport const formModuleConfig = {\n  entryComponents: [DefaultInputComponent, DefaultOutputComponent],\n  declarations: [\n    FormComponent,\n    DatetimeComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule,\n    CalendarModule,\n    UtilityModule,\n  ],\n  exports: [\n    UtilityModule,\n    ReactiveFormsModule,\n    IoModule,\n    FormComponent,\n    DatetimeComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService,\n    /* {\n      provide: 'moment.format.date',\n      useValue: SymbolService.resolve('moment.format.date')\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: SymbolService.resolve('moment.format.time')\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: SymbolService.resolve('moment.format.month')\n    } */\n  ],\n};\n\n@NgModule(formModuleConfig)\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                getFormLabel\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                    Public\n                                shouldBePartOfForm\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormLabel(form: FormComponent, label)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Returns label for given form (e.g. Edit label) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('resource.generic')\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReadOnly\n                            \n                            \n                        \n                    \n                \n                \n                    \nisReadOnly(field, form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be readOnly, depending on its config and the form state. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldBePartOfForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldBePartOfForm(field, form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:14\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be included in the form.\nDecides based on field config values form, edit and create \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form, Field } from '@ec.components/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { SymbolService } from '../symbol/symbol.service';\nimport { FormComponent } from '../form/form.component';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n  constructor(public symbol: SymbolService) {}\n\n  /** Returns true if the field should be included in the form.\n   * Decides based on field config values form, edit and create */\n  public shouldBePartOfForm(field, form) {\n    if (field.create === false && !form.getBody()) {\n      return false;\n    }\n    if (field.edit === false && !!form.getBody()) {\n      return false;\n    }\n    return field.form !== false;\n  }\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const controls = {};\n    form.fields\n      .filter((field) => this.shouldBePartOfForm(field, form))\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        let value = form.getValue(field.property);\n        value = value === undefined ? null : value;\n        controls[field.property] = new FormControl(\n          {\n            value,\n            disabled: this.isReadOnly(field, form),\n          },\n          validators,\n        );\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(controls);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    console.warn('addField is experimental!');\n    const validators = this.getValidators(field);\n    const control = new FormControl({ value: form.getValue(field.property) }, validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error,\n        };\n      }\n    };\n  }\n\n  /** Returns true if the field should be readOnly, depending on its config and the form state. */\n  isReadOnly(field, form) {\n    return field.immutable || (field.readOnly && form && !!form.getBody());\n  }\n\n  /** Returns label for given form (e.g. Edit label) */\n  getFormLabel(form: FormComponent, label = this.symbol.resolve('resource.generic')) {\n    if (!form || !form.form) {\n      return '';\n    }\n    return `${this.symbol.resolve('resource.' + (form.form.isEditing() ? 'edit' : 'create'))}\n    ${label} ${form.form.display() ? `\"${form.form.display()}\"` : ''}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/lib/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder, location)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n  constructor(private mapLoader: MapsAPILoader, private ngZone: NgZone) {}\n\n  /** Observes a given input element, transforming it into an autocomplete */\n  public observeElement(el) {\n    return new Observable((observer) => {\n      const autocomplete = new google.maps.places.Autocomplete(el, {\n        types: ['address'],\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          const place = autocomplete.getPlace();\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          const coords = {\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng(),\n          };\n          observer.next(coords);\n          /* observer.complete(); */\n        });\n      });\n    });\n  }\n\n  /** Turns an input element to an maps autocomplete searchbar. */\n  public autocompleteAddress(el): Observable {\n    return from(this.mapLoader.load()).pipe(switchMap(() => this.observeElement(el)));\n  }\n\n  /** Reverse address lookup for a given location */\n  geocodeLatLng(geocoder, location): Promise {\n    return new Promise((resolve, reject) => {\n      geocoder.geocode({ location }, (results, status) => {\n        if (status === 'OK') {\n          resolve(results);\n        } else {\n          reject(status);\n        }\n      });\n    });\n  }\n\n  /** Returns the nearest address for a given location */\n  public getNearestAddress(location: { latitude: number; longitude: number }): Promise> {\n    return this.mapLoader.load().then(() => {\n      return this.geocodeLatLng(new google.maps.Geocoder(), {\n        lat: location.latitude,\n        lng: location.longitude,\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group',\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key.\nThe relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport * as EventSource from 'eventsource/lib/eventsource-polyfill';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n  /** Current loaded histories */\n  promises: { [relation: string]: Promise } = {};\n  /** EventSources that are active */\n  eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n  constructor(\n    public notificationService: NotificationsService,\n    public loaderService: LoaderService,\n    public router: Router,\n    public resourceService: ResourceService,\n  ) {}\n  /** Toggles live updates on the resource and stores them under the given key.\n   * The relation is passed through the Update instances on change. */\n  toggle(\n    resource: ModelResource | DataManagerResource | EntryResource,\n    relation: string,\n    key = this.router.url.split('?')[0],\n  ) {\n    if (this.promises[key] && !this.eventSources[relation]) {\n      return this.promises[key];\n    }\n    this.disableUpdates(key);\n    this.promises[key] = this.enableUpdates(resource, relation, key)\n      .then((source) => {\n        this.eventSources[key] = source;\n      })\n      .catch((error) => {\n        delete this.promises[key];\n      });\n    this.loaderService.wait(this.promises[key]);\n  }\n\n  /** Closes the event stream for the given key */\n  disableUpdates(key = this.router.url.split('?')[0]) {\n    if (this.eventSources[key]) {\n      this.eventSources[key].close();\n      delete this.promises[key];\n      delete this.eventSources[key];\n      return;\n    }\n  }\n\n  /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n  enableUpdates(\n    resource: ModelResource | DataManagerResource | EntryResource,\n    relation: string,\n    key = this.router.url.split('?')[0],\n  ) {\n    if (!resource || !resource.newHistory) {\n      throw new Error('cannot get history: no newHistory method found on given resource');\n    }\n    if (this.promises[key]) {\n      return this.promises[key];\n    }\n    DataManager.enableHistoryEvents(EventSource);\n    const loading = resource\n      .newHistory()\n      .then((source) => {\n        source.addEventListener(\n          'entryUpdated',\n          (e) => {\n            const data = JSON.parse(e.data);\n            this.resourceService.changes.next({\n              relation,\n              type: 'put',\n              identifier: data ? data.entryID : '',\n            });\n          },\n          false,\n        );\n        source.addEventListener(\n          'entryCreated',\n          (e) => {\n            const data = JSON.parse(e.data);\n            this.resourceService.changes.next({\n              relation,\n              type: 'post',\n              identifier: data ? data.entryID : '',\n            });\n          },\n          false,\n        );\n        return source;\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: 'History Error',\n          error,\n        });\n      });\n    this.loaderService.wait(loading);\n    return loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\nIf not, is is expected to be a ec-icon.\nhttps://components.entrecode.de/ui/icons?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/icon/icon.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:16\n                            \n                        \n                \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:18\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nOpen Demo\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\n * If not, is is expected to be a ec-icon.\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Component({\n  selector: 'ec-icon',\n  templateUrl: './icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IconComponent implements OnInit, OnChanges {\n  /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n  @Input() name: string;\n  /** The resolved icon (by name) */\n  icon: Symbol;\n  constructor(private iconService: IconService) {}\n  /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n  resolve() {\n    this.icon = this.iconService.get(this.name);\n    if (!this.icon) {\n      console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n    }\n  }\n  ngOnInit() {\n    this.resolve();\n  }\n  ngOnChanges() {\n    this.resolve();\n  }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n    Modules\n    IconModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IconService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [IconComponent],\n  exports: [IconComponent],\n  providers: [IconService],\n})\nexport class IconModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\nhttps://components.entrecode.de/ui/icons?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.service.ts:11\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Injectable()\nexport class IconService extends SymbolService {\n  /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n  public registry: Symbol[] = ecIcons;\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                \n                \n                    \n                        Type :     string | DMAssetResource\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:18\n                            \n                        \n                \n                    \n                        The assetID that should be loaded \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:16\n                            \n                        \n                \n                    \n                        The size that should be requested. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:14\n                            \n                        \n                \n                    \n                        If true, the image will be requested as thumb (square) \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:27\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage',\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve()\n      .then(() => {\n        if (asset.type !== 'image') {\n          return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n        }\n        if (asset instanceof DMAssetResource) {\n          // new asset\n          return asset.getFileVariant(this.size, this.thumb);\n        } else if (asset instanceof PublicAssetResource) {\n          // old asset\n          if (this.thumb) {\n            return asset.getImageThumbUrl(this.size, '');\n          }\n          return asset.getImageUrl(this.size, '');\n        }\n      })\n      .then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageSelectPopComponent.html":{"url":"components/ImageSelectPopComponent.html","title":"component - ImageSelectPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageSelectPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a pop with a form to add images. You can set an the alternative Text and the size.\nThe size inputs will keep the image ratio by default.  \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-image-select-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./image-select-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                imageForm\n                            \n                            \n                                imageLoader\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                defaultSize\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, sdk: SdkService, symbol: SymbolService, fileService: FileService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n                \n                    \n                        The assetGroupID to pick from \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultSize\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:28\n                            \n                        \n                \n                    \n                        The default size used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:30\n                            \n                        \n                \n                    \n                        Ouput that emits when image changes  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'dialog-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Inits the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:32\n                            \n                        \n\n                \n                    \n                        The instance of the imageForm  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('imageLoader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:34\n                            \n                        \n\n                \n                    \n                        The loader that is shown after an image has been selected  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FormConfig } from '@ec.components/core';\nimport { FormComponent, LoaderComponent, PopComponent, PopService, SymbolService } from '@ec.components/ui';\nimport { DefaultEntryInputComponent } from '../../entry-form/default-entry-input.component';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService } from '../file.service';\n\n/** This component is a pop with a form to add images. You can set an the alternative Text and the size.\n * The size inputs will keep the image ratio by default.  */\n@Component({\n  selector: 'ec-image-select-pop',\n  templateUrl: './image-select-pop.component.html',\n})\nexport class ImageSelectPopComponent extends PopComponent implements OnInit {\n  /** The assetGroupID to pick from */\n  @Input() assetGroupID;\n  /** The default size used */\n  @Input() defaultSize = 400;\n  /** Ouput that emits when image changes  */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** The instance of the imageForm  */\n  imageForm: FormConfig;\n  /** The loader that is shown after an image has been selected  */\n  @ViewChild('imageLoader') imageLoader: LoaderComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'dialog-wrapper';\n\n  constructor(\n    public popService: PopService,\n    public sdk: SdkService,\n    public symbol: SymbolService,\n    public fileService: FileService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n  /** Inits the form */\n  ngOnInit() {\n    const isOldAssetGroupID = this.fileService.isOldAssetGroupID(this.assetGroupID);\n    this.imageForm = {\n      submitButtonLabel: this.symbol.resolve('image-select-pop.submitButtonLabel'),\n      onSave: (form, value: { img; height; width; alt }) => {\n        const size = Math.max(value.width, value.height);\n        if (isOldAssetGroupID) {\n          this.sdk.api\n            .asset(value.img)\n            .then((asset) => asset.getImageUrl(size, ''))\n            .then((url) => {\n              this.hide();\n              this.changed.emit({ url, alt: value.alt, size });\n            });\n        } else {\n          const loadImage = this.sdk.api\n            .dmAsset(this.assetGroupID, value.img)\n            .then((asset) => asset.getImageUrl(size))\n            .then((url) => {\n              this.hide();\n              this.changed.emit({ url, alt: value.alt, size });\n            });\n          this.imageLoader.wait(loadImage);\n        }\n      },\n      fields: {\n        img: {\n          label: ' ',\n          input: DefaultEntryInputComponent,\n          inputView: isOldAssetGroupID ? 'asset-select' : 'dmAsset-select',\n          relation: !isOldAssetGroupID ? this.assetGroupID : 'legacyAsset',\n          required: true,\n          changed: (value, form) => {\n            const loadImg = Promise.resolve()\n              .then(() => {\n                if (isOldAssetGroupID) {\n                  return this.sdk.api.asset(value).then((asset) => {\n                    const original = asset.getOriginalFile();\n                    const resolution = original.resolution;\n                    return { resolution, title: asset.title };\n                  });\n                } else {\n                  return this.sdk.api.dmAsset(this.assetGroupID, value).then((asset) => {\n                    const resolution = asset.file.resolution;\n                    return { resolution, title: asset.title };\n                  });\n                }\n              })\n              .then(({ resolution, title }) => {\n                const ratio = resolution.width / resolution.height;\n                const width = Math.min(this.defaultSize, resolution.width);\n                form.group.controls.width.setValue(width);\n                form.group.controls.alt.setValue(title);\n                form.group.controls.ratio.setValue(ratio);\n              });\n            this.imageLoader.wait(loadImg);\n          },\n        },\n        alt: {\n          label: this.symbol.resolve('image-select-pop.alt'),\n          view: 'string',\n        },\n        ratio: {\n          hideInForm: true,\n          view: 'number',\n        },\n        keepRatio: {\n          label: this.symbol.resolve('image-select-pop.keepRatio'),\n          view: 'boolean',\n          prefill: true,\n          changed: (value) => {\n            if (value === true) {\n              console.log('should fix ratio now...');\n            }\n          },\n        },\n        width: {\n          label: this.symbol.resolve('image-select-pop.width'),\n          view: 'number',\n          columns: 6,\n          changed: (value, form: FormComponent) => {\n            const ratio = form.getValue('ratio');\n            if (ratio && form.getValue('keepRatio')) {\n              form.group.controls.height.setValue(Math.round(value / ratio));\n            }\n          },\n        },\n        height: {\n          label: this.symbol.resolve('image-select-pop.height'),\n          view: 'number',\n          columns: 6,\n          changed: (value, form) => {\n            const ratio = form.getValue('ratio');\n            if (ratio && form.getValue('keepRatio')) {\n              form.group.controls.width.setValue(Math.round(value * ratio));\n            }\n          },\n        },\n      },\n    };\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{'image-select-pop.header' | symbol}}\n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'image-select-pop.header\\' | symbol}}                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageSelectPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                disabled\n                            \n                            \n                                focusEvent\n                            \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectControl\n                            \n                            \n                                focus\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                config\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                lazy\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                ready\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:52\n                            \n                        \n                \n                    \n                        Overrides the default component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:50\n                            \n                        \n                \n                    \n                        Config that should be used, only needed when not using field input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     AbstractControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:36\n                            \n                        \n                \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:42\n                            \n                        \n                \n                    \n                        Debounce time in ms before the changed event emits. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :     Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:44\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:32\n                            \n                        \n                \n                    \n                        The belonging form group \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:48\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:54\n                            \n                        \n                \n                    \n                        If true, the input will never reinit/reload. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:46\n                            \n                        \n                \n                    \n                        The property name that is edited. Expects a form as item input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:40\n                            \n                        \n                \n                    \n                        Emits when the component has been loaded \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisabledState(isDisabled)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:17\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:57\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:34\n                            \n                        \n\n                \n                    \n                        If true, the input is readonly. Is set by ControlValueAccessor#setDisabled \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:61\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:140\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:59\n                            \n                        \n\n                \n                    \n                        The current value of the input. Needs to be saved for the case the component is not yet loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  Type,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, AbstractControl } from '@angular/forms';\nimport { FieldConfigProperty, Field, Form, Item } from '@ec.components/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { debounceTime } from 'rxjs/operators';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** If true, the input is readonly. Is set by ControlValueAccessor#setDisabled */\n  disabled: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: AbstractControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Emits when the component has been loaded */\n  @Output() ready = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Config that should be used, only needed when not using field input */\n  @Input() config: FieldConfigProperty;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** If true, the input will never reinit/reload. */\n  @Input() lazy: boolean;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: InputComponent;\n  /** The current value of the input. Needs to be saved for the case the component is not yet loaded */\n  value: any;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  ngOnChanges(changes?) {\n    if (!this.lazy || !this.componentInstance || changes.field) {\n      this.init();\n    }\n  }\n\n  focus(focus = true) {\n    if (this.componentInstance && this.componentInstance.focusEvent) {\n      this.componentInstance.focusEvent.emit(focus);\n    } else {\n      console.warn('could not focus component', this.componentInstance);\n    }\n  }\n\n  init() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    } else if (!this.field && this.config) {\n      this.field = new Field(this.property || 'input', this.config);\n    }\n    if (!this.field) {\n      return;\n    }\n    if (!this.control) {\n      this.control = this.group ? this.group.get(this.field.property) : new FormControl();\n    }\n    if (!this.group) {\n      this.group = new FormGroup({\n        [this.property || this.field.property || 'input']: this.control,\n      });\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this,\n      config: this.config || this.field.config || {},\n      focusEvent: this.focusEvent,\n    };\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    this.connectControl();\n    this.ready.emit(this);\n    if (this.componentInstance.control) {\n      this.componentInstance.control.valueChanges.pipe(debounceTime(this.debounce)).subscribe((change) => {\n        this.changed.emit(change);\n        this.propagateChange(change);\n      });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  connectControl() {\n    if (!this.componentInstance) {\n      // console.warn('could not connect control: no instance loaded');\n      return;\n    }\n    this.componentInstance.disabled = this.disabled;\n    if (this.componentInstance.registerOnChange && this.propagateChange) {\n      this.componentInstance.registerOnChange(this.propagateChange);\n    }\n    if (this.value !== undefined) {\n      this.writeValue(this.value);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance.writeValue) {\n      this.componentInstance.writeValue(value);\n    }\n    this.value = value;\n  }\n\n  propagateChange = (_: any) => {};\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n    this.connectControl();\n  }\n\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    if (this.componentInstance) {\n      if (this.componentInstance.setDisabledState) {\n        this.componentInstance.setDisabledState(isDisabled);\n      } else {\n        this.componentInstance.disabled = isDisabled;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n                \n                    \n                        The form control that should be tracked \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {}\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  public getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message,\n      });\n      return errs;\n    }, []);\n  }\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n    Modules\n    IoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/io/io.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [InputComponent, OutputComponent, InputErrorsComponent],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n})\nexport class IoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onEdit\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEdit\n                                    \n                                \n                                \n                                    \n                                        onEdit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked before the item is edited \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n  /** Callback that is invoked before the item is edited */\n  onEdit?: (value?: T) => Promise | T; // TODO rename to save\n  /** This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class */\n  classes?: (item?: Item) => string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyAction.html":{"url":"interfaces/KeyAction.html","title":"interface - KeyAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                            Optional\n                                        canActivate\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canActivate\n                                    \n                                \n                                \n                                    \n                                        canActivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from '../../notifications/notifications.service';\n\nexport interface KeyAction {\n  key: string;\n  description: string;\n  action: (e?) => void;\n  canActivate?: (e?) => boolean;\n}\n\n@Injectable()\nexport class KeycommandsService {\n  keys: { [key: string]: KeyAction } = {};\n  muted = false;\n  meta = false;\n\n  constructor(public router: Router, public notificationsService: NotificationsService) {\n    window.addEventListener('keyup', (e) => {\n      if (!this.muted && this.keys[e.key]) {\n        this.activate(this.keys[e.key], e);\n      }\n    });\n    window.addEventListener('mousedown', (e) => {\n      this.meta = e.metaKey;\n    });\n    // prevents shortcuts to be fired when inputs are focused\n    document.addEventListener(\n      'focus',\n      (e) => {\n        this.mute();\n      },\n      true,\n    );\n\n    document.addEventListener(\n      'blur',\n      (e) => {\n        this.unmute();\n      },\n      true,\n    );\n  }\n\n  mute() {\n    this.muted = true;\n  }\n\n  unmute() {\n    this.muted = false;\n  }\n\n  register(keyconfig: KeyAction) {\n    this.keys[keyconfig.key] = keyconfig;\n    return this;\n  }\n\n  activate(keyconfig: KeyAction, e?) {\n    if (!keyconfig.canActivate()) {\n      return;\n    }\n    keyconfig.action(e);\n  }\n\n  copyToClipBoard(value, label) {\n    const el = document.createElement('textarea');\n    el.value = value;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    this.notificationsService.emit({\n      title: `${label} has been copied to the clipboard`,\n      message: value,\n      type: 'info',\n    });\n  }\n\n  copyCellToClipboard(label = 'Cell') {\n    return (item, property) => {\n      this.copyToClipBoard(JSON.stringify(item.resolve(property) || ''), label);\n    };\n  }\n\n  openUrl(url) {\n    window.open(url, '_blank');\n  }\n\n  navigate(path: string[], options = {}) {\n    if (this.meta) {\n      this.openUrl(this.router.serializeUrl(this.router.createUrlTree(path, options)));\n    } else {\n      this.router.navigate(path, options);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeycommandsService.html":{"url":"injectables/KeycommandsService.html","title":"injectable - KeycommandsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  KeycommandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                keys\n                            \n                            \n                                meta\n                            \n                            \n                                muted\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                copyCellToClipboard\n                            \n                            \n                                copyToClipBoard\n                            \n                            \n                                mute\n                            \n                            \n                                navigate\n                            \n                            \n                                openUrl\n                            \n                            \n                                register\n                            \n                            \n                                unmute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate(keyconfig: KeyAction, e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyconfig\n                                                        \n                                                                    KeyAction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyCellToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyCellToClipboard(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'Cell'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (item: any, property: any) => void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyToClipBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyToClipBoard(value, label)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mute\n                            \n                            \n                        \n                    \n                \n                \n                    \nmute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigate(path: string[], options: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUrl(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister(keyconfig: KeyAction)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyconfig\n                                                        \n                                                                    KeyAction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unmute\n                            \n                            \n                        \n                    \n                \n                \n                    \nunmute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            muted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/keycommands/keycommands.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from '../../notifications/notifications.service';\n\nexport interface KeyAction {\n  key: string;\n  description: string;\n  action: (e?) => void;\n  canActivate?: (e?) => boolean;\n}\n\n@Injectable()\nexport class KeycommandsService {\n  keys: { [key: string]: KeyAction } = {};\n  muted = false;\n  meta = false;\n\n  constructor(public router: Router, public notificationsService: NotificationsService) {\n    window.addEventListener('keyup', (e) => {\n      if (!this.muted && this.keys[e.key]) {\n        this.activate(this.keys[e.key], e);\n      }\n    });\n    window.addEventListener('mousedown', (e) => {\n      this.meta = e.metaKey;\n    });\n    // prevents shortcuts to be fired when inputs are focused\n    document.addEventListener(\n      'focus',\n      (e) => {\n        this.mute();\n      },\n      true,\n    );\n\n    document.addEventListener(\n      'blur',\n      (e) => {\n        this.unmute();\n      },\n      true,\n    );\n  }\n\n  mute() {\n    this.muted = true;\n  }\n\n  unmute() {\n    this.muted = false;\n  }\n\n  register(keyconfig: KeyAction) {\n    this.keys[keyconfig.key] = keyconfig;\n    return this;\n  }\n\n  activate(keyconfig: KeyAction, e?) {\n    if (!keyconfig.canActivate()) {\n      return;\n    }\n    keyconfig.action(e);\n  }\n\n  copyToClipBoard(value, label) {\n    const el = document.createElement('textarea');\n    el.value = value;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    this.notificationsService.emit({\n      title: `${label} has been copied to the clipboard`,\n      message: value,\n      type: 'info',\n    });\n  }\n\n  copyCellToClipboard(label = 'Cell') {\n    return (item, property) => {\n      this.copyToClipBoard(JSON.stringify(item.resolve(property) || ''), label);\n    };\n  }\n\n  openUrl(url) {\n    window.open(url, '_blank');\n  }\n\n  navigate(path: string[], options = {}) {\n    if (this.meta) {\n      this.openUrl(this.router.serializeUrl(this.router.createUrlTree(path, options)));\n    } else {\n      this.router.navigate(path, options);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nhttps://components.entrecode.de/ui/list/basic?e=1\nhttps://components.entrecode.de/ui/list/transforms?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n\n\n            \n                template\n                listTemplate\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                config\n                            \n                            \n                                focusItem\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                filter\n                            \n                            \n                                focusFirst\n                            \n                            \n                                focusNext\n                            \n                            \n                                focusPrev\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoFocusFirst\n                            \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                pagination\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoFocusFirst\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:58\n                            \n                        \n                \n                    \n                        If true, the first item in the list will always be focused after changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        collection\n                    \n                \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:42\n                            \n                        \n                \n                    \n                        The used collection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:40\n                            \n                        \n                \n                    \n                        The visible items \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:52\n                            \n                        \n                \n                    \n                        The Instance of the List \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :     Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:54\n                            \n                        \n                \n                    \n                        Pagination that should be used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                \n                \n                    \n                        Type :     PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:56\n                            \n                        \n                \n                    \n                        Custom PaginationConfig \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:44\n                            \n                        \n                \n                    \n                        The used selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:46\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:62\n                            \n                        \n                \n                    \n                        emits after the list changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:48\n                            \n                        \n                \n                    \n                        Event emitter on item selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:50\n                            \n                        \n                \n                    \n                        Event emitter on selection change \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:162\n                            \n                        \n\n\n                \n                    \n                            Filters the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:60\n                            \n                        \n\n                \n                    \n                        Current focus \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:36\n                            \n                        \n\n                \n                    \n                        Config input for List \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Collection, List, ListConfig, Selection, Pagination } from '@ec.components/core';\nimport { Item } from '@ec.components/core';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\nimport { ListConfigService } from './list-config.service';\n\nimport { listTemplate } from './list.component.html';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * https://components.entrecode.de/ui/list/basic?e=1\n * https://components.entrecode.de/ui/list/transforms?e=1\n * */\n@Component({\n  selector: 'ec-list',\n  /* templateUrl: './list.component.html', */\n  template: listTemplate,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  /** Flag that flips true when loading. */\n  isLoading = false;\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Pagination that should be used */\n  @Input() pagination: Pagination;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n  /** If true, the first item in the list will always be focused after changed */\n  @Input() autoFocusFirst = false;\n  /** Current focus */\n  focusItem: Item;\n  /** emits after the list changed */\n  @Output() changed: EventEmitter> = new EventEmitter();\n\n  constructor(public listConfig: ListConfigService, public cdr: ChangeDetectorRef) {}\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.init(new List(this.items, this.config, this.pagination));\n    } else if (this.collection) {\n      this.init(new List(this.collection.items, this.config, this.pagination));\n    }\n  }\n\n  init(list: List) {\n    if (!list) {\n      console.warn('tried to init list.component with undefined list');\n      return;\n    }\n    this.list = list;\n    this.listConfig.applyConfig(this.list);\n    this.list.change$.subscribe(() => {\n      if (this.autoFocusFirst || this.list.isFiltered()) {\n        this.focusFirst();\n      } else {\n        delete this.focusItem;\n      }\n      this.cdr.markForCheck();\n      this.changed.emit(this.list);\n    });\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      });\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return (\n      this.list &&\n      this.list.config &&\n      !this.list.config.disableHeader &&\n      (this.list.fields.length || this.list.config.title)\n    );\n    /* && (this.list.config.alwaysShowHeader || !this.list.isEmpty()); */\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  focusFirst() {\n    delete this.focusItem;\n    this.focusNext();\n  }\n\n  /** Selects the next item */\n  focusNext() {\n    if (!this.list) {\n      return;\n    }\n    let index = 0;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Selects the previous item */\n  focusPrev() {\n    if (!this.list) {\n      return;\n    }\n    let index = this.list.page.length - 1;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + this.list.page.length - 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Filters the list */\n  filter(property, value) {\n    this.list.filter(property, value);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'listTemplate'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        autoload\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        defaultFilter\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        disableDrag\n                                \n                                \n                                            Optional\n                                        disableDropdown\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        storageKey\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoload\n                                    \n                                \n                                \n                                    \n                                        autoload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will automatically load on change \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultFilter\n                                    \n                                \n                                \n                                    \n                                        defaultFilter:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, a filter input for the given field property will be shown by default \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no column filter will be shown in the list header \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDrag\n                                    \n                                \n                                \n                                    \n                                        disableDrag:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, select items cannot be dragged \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDropdown\n                                    \n                                \n                                \n                                    \n                                        disableDropdown:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be shown for a select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select dropdown will be shown on ec-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Transforms the Items before they are displayed, e.g. to apply a filter for the view *\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    how many columns should the pop have? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageKey\n                                    \n                                \n                                \n                                    \n                                        storageKey:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that should store the lists config in the local storage.\nIf set, the key will be populated on config changes. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\nimport { List } from '../list/list';\nimport { Item } from '../item/item';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean;\n  /** If true, no select dropdown will be shown on ec-select */\n  disableSearchbar?: boolean;\n  /** If true, the list will have no header. */\n  disableHeader?: boolean;\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean;\n  /** If true, no dropdown will be shown for a select */\n  disableDropdown?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, no column filter will be shown in the list header */\n  disableColumnFilter?: boolean;\n  /** If true, select items cannot be dragged */\n  disableDrag?: boolean;\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number;\n  /** The number of items per page */\n  size?: number;\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[];\n  /** Should the selection be solo? */\n  solo?: boolean;\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any };\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any };\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number;\n  /** how many columns should the pop have? */\n  popColumns?: number;\n  /** If true, the list will automatically load on change */\n  autoload?: boolean;\n  /** The key that should store the lists config in the local storage.\n   * If set, the key will be populated on config changes. */\n  storageKey?: string | ((list: List) => string);\n  /** Transforms the Items before they are displayed, e.g. to apply a filter for the view **/\n  display?: (items: Item[]) => Item[];\n  /** If set, a filter input for the given field property will be shown by default */\n  defaultFilter?: string | boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListConfigService.html":{"url":"injectables/ListConfigService.html","title":"injectable - ListConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/list-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                storageKeyResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyConfig\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                retrieve\n                            \n                            \n                                set\n                            \n                            \n                                store\n                            \n                            \n                                storeConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStorageKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStorageKey(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieve(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(key, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \nstore(key, config)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageKeyResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { List } from '@ec.components/core';\n\n@Injectable()\nexport class ListConfigService {\n  public storageKeyResolver: (list: List) => string;\n\n  retrieve(key) {\n    const config = localStorage.getItem(key);\n    return config ? JSON.parse(config) : null;\n  }\n\n  set(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  store(key, config) {\n    const existing = this.retrieve(key) || {};\n    localStorage.setItem(key, JSON.stringify(Object.assign(existing, config)));\n  }\n\n  getStorageKey(list: List) {\n    if (!list || !list.fields || !list.config || !list.config.storageKey) {\n      // console.log('cannot apply config: no storage key or list set');\n      return;\n    }\n    const resolveFn = list.config.storageKey || this.storageKeyResolver;\n    if (typeof resolveFn === 'function') {\n      return resolveFn(list);\n    }\n    return list.config.storageKey;\n  }\n\n  storeConfig(list: List) {\n    const key = this.getStorageKey(list);\n    if (!key) {\n      return;\n    }\n    const config = { hide: list.fields.filter((f) => f.hideInList).map((f) => f.property) };\n    this.store(key, config);\n  }\n\n  applyConfig(list: List) {\n    const key = this.getStorageKey(list);\n    if (!key) {\n      return;\n    }\n    const existing = this.retrieve(key);\n    if (existing && existing.hide) {\n      list.fields.forEach((field) => (field.hideInList = false));\n      existing.hide.forEach((property) => {\n        const field = list.fields.find((f) => f.property === property);\n        if (!field) {\n          console.warn('field ', property, ' not found');\n          return;\n        }\n        field.hideInList = true;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                filteredField\n                            \n                            \n                                filterForm\n                            \n                            \n                                filterFormConfig\n                            \n                            \n                                filterInput\n                            \n                            \n                                filterPop\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                    Public\n                                filterField\n                            \n                            \n                                initFilterForm\n                            \n                            \n                                inputReady\n                            \n                            \n                                isLastColumn\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                resetFilter\n                            \n                            \n                                setFilter\n                            \n                            \n                                toggledFilterPop\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:16\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:18\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterField(property)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterForm(filterForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterForm\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputReady\n                            \n                            \n                        \n                    \n                \n                \n                    \ninputReady(input)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLastColumn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLastColumn(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Yields true if the given field is the last column of the current list header \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFilter(field, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggledFilterPop\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggledFilterPop(active)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Toggles the fields visibility in the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterFormConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:22\n                            \n                        \n\n                \n                    \n                        The config for the filter form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('filterPop')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:20\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List Header\nThis document conceptualizes the ec-list-header.\nIdea\nThe list-header displays the field labels in columns. If a fields are sortable or filterable, a clickeable icons will be shown.\nFiltering\nIf a field has the option \"filterable\" set to true, a search icon will be shown. When clicking the icon, an input field will appear above the list header which can be used to filter the list by the field property.\n\nThe input field will be autofocused\nNo validation errors should be shown\nWhen the input value changes, the list will load after a short debounce.\nWhen the input is closed, the filter will be cleared.\nWhen another field's search icon is clicked, all previous filters will be cleared.\n\n\n    \n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { Field, List, ListConfig, Selection } from '@ec.components/core';\nimport { FormComponent } from '../../form/form.component';\nimport { PopComponent } from '../../pop/pop.component';\nimport { ListConfigService } from '../list-config.service';\nimport { InputComponent } from '../../io/input/input.component';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListHeaderComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChild('filterPop') filterPop: PopComponent;\n  /** The config for the filter form */\n  filterFormConfig: ListConfig;\n  filteredField: any;\n  filterForm: FormComponent;\n  filterInput: InputComponent;\n\n  constructor(public listConfig: ListConfigService, public cdr: ChangeDetectorRef) {}\n\n  setFilter(field, value) {\n    this.list.setFilter({ [field.property]: value });\n  }\n\n  inputReady(input) {\n    this.filterInput = input;\n    input.focus(true);\n  }\n\n  initFilterForm(filterForm) {\n    // is called when form is ready\n    this.filterForm = filterForm;\n    if (this.list.config.defaultFilter) {\n      this.filterField(this.list.config.defaultFilter);\n    }\n  }\n\n  ngOnChanges(changes?) {\n    if (!changes.list) {\n      return;\n    }\n    if (!this.list || !this.list.config || !this.list.config.fields) {\n      return;\n    }\n    /* this.list.change$.subscribe(() => {\n      if (this.filterInput) {\n        // this.filterInput.focus(true);\n      }\n    }); */\n    this.filterFormConfig = {\n      ...this.list.config,\n      fields: this.list.filterableFields().reduce((fields, field) => {\n        return {\n          ...fields,\n          [field.property]: {\n            ...this.list.config.fields[field.property],\n            view: field.getView('filter'),\n            required: false,\n            readOnly: false,\n            immutable: false,\n            create: true,\n            form: true,\n            autofocus: true,\n            nestedCrudConfig: {\n              ...field.nestedCrudConfig,\n              methods: ['get'],\n            },\n          },\n        };\n      }, {}),\n    };\n  }\n\n  /** opens the given filter pop and closes all others */\n  public filterField(property) {\n    if (this.filteredField) {\n      if (this.filteredField.property === property) {\n        /* this.filterPop.hide(); */\n        if (this.filterInput) {\n          this.filterInput.focus(true);\n        }\n        return;\n      }\n      this.clearFilter();\n    }\n    // patch current filter value to control\n    const control = this.filterForm.group.get(property);\n    if (!control) {\n      console.warn('no control found for ' + property + '. Is it filterable?', this.list.config, this.filterForm.group);\n      return;\n    }\n    this.filterForm.group.get(property).patchValue(this.list.getFilterValue(property));\n    this.filteredField = this.filterForm.form.getField(property);\n    setTimeout(() => this.filterPop.show());\n  }\n\n  resetFilter() {\n    if (!this.filteredField || !this.list || !this.list.isFiltered(this.filteredField.property)) {\n      return;\n    }\n    this.filterForm.group.get(this.filteredField.property).reset();\n    this.list.clearFilter();\n  }\n\n  clearFilter() {\n    if (!this.filteredField || !this.list.isFiltered(this.filteredField.property)) {\n      delete this.filteredField;\n      return;\n    }\n    this.resetFilter();\n    delete this.filteredField;\n  }\n\n  toggledFilterPop(active) {\n    if (!active) {\n      this.clearFilter();\n    }\n    if (this.filterInput) {\n      this.filterInput.focus(true);\n    }\n  }\n\n  /** Toggles the fields visibility in the list */\n  public toggleVisibility(field: Field) {\n    this.list.toggleVisibility(field);\n    this.listConfig.storeConfig(this.list);\n  }\n\n  /** Yields true if the given field is the last column of the current list header */\n  isLastColumn(field: Field) {\n    if (!this.list || !this.list.fields) {\n      return;\n    }\n    const visibleColumns = this.list.fields.filter((f) => !f.hideInList);\n    return field.property === visibleColumns[visibleColumns.length - 1].property;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{filteredField.getLabel()}}\n      \n      \n        \n          {{filteredField.getLabel()}}\n        \n      \n     -->\n    \n\n    \n       -->\n      \n    \n\n    \n      \n        \n      \n      \n        \n          \n            \n              \n              \n            \n            {{\n              field.getLabel()\n            }}\n          \n        \n      \n    \n  \n\n\n  \n  \n    \n      \n    \n    \n      \n      \n        \n      \n      \n        \n       -->\n\n      \n        {{ field.getLabel() }}\n      \n      \n        \n        \n      \n    \n\n    \n      &#9776;\n      \n        \n          \n            \n              {{\n                field.getLabel()\n              }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{filteredField.getLabel()}}                              {{filteredField.getLabel()}}                   -->               -->                                                                                                                          {{              field.getLabel()            }}                                                                                                   -->              {{ field.getLabel() }}                                                ☰                                                  {{                field.getLabel()              }}                                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                hasFocus\n                            \n                            \n                                isClickable\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusItem\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        focusItem\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:22\n                            \n                        \n                \n                    \n                        The current focused item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Item[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:18\n                            \n                        \n                \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:14\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:16\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:20\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter on item clicked \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasFocus(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            yields true if the item is focussed \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClickable\n                            \n                            \n                        \n                    \n                \n                \n                    \nisClickable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** The current focused item */\n  @Input() focusItem: Item;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n  constructor(public cdr: ChangeDetectorRef) {}\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n    if (this.list) {\n      this.list.change$.subscribe((newList) => {\n        this.cdr.markForCheck();\n      });\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((newList) => {\n        this.cdr.markForCheck();\n      });\n    }\n  }\n  /** yields true if the item is focussed */\n  hasFocus(item) {\n    return this.focusItem === item;\n  }\n\n  isClickable() {\n    return this.columnClicked.observers.length || (this.selection && this.list && this.list.config.selectMode);\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n    Modules\n    ListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ListConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { ListConfigService } from './list-config.service';\nimport { FormsModule } from '@angular/forms';\n\nexport const listModuleConfig = {\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [CommonModule, FormsModule, FormModule, IconModule, SymbolModule, UtilityModule],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: [ListConfigService],\n};\n\n@NgModule(listModuleConfig)\nexport class ListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Collection } from '@ec.components/core';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader?e=1\n */\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {}\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items).then(() => {\n      if (timestamp === this.timestamp) {\n        this.hide();\n        this.stack.removeAll();\n      }\n    });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    LoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [CommonModule],\n  exports: [LoaderComponent],\n  providers: [LoaderService],\n})\nexport class LoaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                ./location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disabled\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { latitude: 48.8093253, longitude: 9.159388100000001 }\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:11\n                            \n                        \n                \n                    \n                        The desired map center \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:15\n                            \n                        \n                \n                    \n                        If true, no marker can be chaned \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:13\n                            \n                        \n                \n                    \n                        If true, no markers can be changed or set \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:19\n                            \n                        \n                \n                    \n                        Form input component \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:17\n                            \n                        \n                \n                    \n                        Emits when the marker has been changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n  selector: 'ec-location-map',\n  templateUrl: './location-map.component.html',\n  styleUrls: ['./location-map.component.scss'],\n})\nexport class LocationMapComponent {\n  /** The desired map center */\n  @Input() center: { longitude: any; latitude: any } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n  /** If true, no markers can be changed or set */\n  @Input() readOnly: boolean;\n  /** If true, no marker can be chaned */\n  @Input() disabled: boolean;\n  /** Emits when the marker has been changed */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Form input component */\n  @Input() value: {\n    longitude: number;\n    latitude: number;\n  };\n\n  /** sets the value cand changes the center */\n  setValue(value) {\n    if (this.disabled) {\n      console.warn('cannot change map value: disabled!');\n      return;\n    }\n    this.value = value;\n    if (value) {\n      this.center = value;\n    }\n  }\n  /** changes value on marker dragend */\n  markerDragEnd(coords) {\n    if (!coords) {\n      console.warn('no coords');\n      return;\n    }\n    if (this.disabled) {\n      return;\n    }\n    const position = { longitude: coords.lng, latitude: coords.lat };\n    this.setValue(position);\n    this.changed.emit(position);\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./location-map.component.scss\n                \n                :host {\n    height: 300px;\n}\nagm-map {\n    height: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/lib/location.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module holds all location/map related components and services \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LOCATION_COMPONENTS\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GeocodeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location.module.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [LocationMapComponent, LocationSearchComponent, LocationPickerComponent];\n\nexport const locationModuleConfig = {\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n      libraries: ['places'],\n    }),\n  ],\n  exports: LOCATION_COMPONENTS,\n  declarations: LOCATION_COMPONENTS,\n  entryComponents: LOCATION_COMPONENTS,\n  providers: [GeocodeService],\n};\n/** This module holds all location/map related components and services */\n@NgModule(locationModuleConfig)\nexport class LocationModule {\n  static forRoot({ apiKey }): ModuleWithProviders {\n    return {\n      ngModule: LocationModule,\n      providers: [\n        {\n          provide: 'googlemaps.apiKey',\n          useValue: apiKey,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LocationPickerComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                ./location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Public\n                                keycommands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, formService: FormService, keycommands: KeycommandsService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-picker.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycommands\n                                                  \n                                                        \n                                                                    KeycommandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:35\n                            \n                        \n                \n                    \n                        readonly? \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:23\n                            \n                        \n                \n                    \n                        The form control that holds the location \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:27\n                            \n                        \n                \n                    \n                        Placeholder for search input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:25\n                            \n                        \n                \n                    \n                        If true, the raw location value will be visible\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisabledState(isDisabled)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value, fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationMapComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:29\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationSearchComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:31\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:20\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:22\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keycommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeycommandsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent, FormService, KeycommandsService } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n  selector: 'ec-location-picker',\n  templateUrl: './location-picker.component.html',\n  styleUrls: ['./location-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => LocationPickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n  /** The form control that holds the location */\n  @Input() formControl: FormControl;\n  /** If true, the raw location value will be visible*/\n  @Input() showRawValue = true;\n  /** Placeholder for search input */\n  @Input() placeholder;\n  /** The nested LocationMapComponent */\n  @ViewChild(LocationMapComponent) map: LocationMapComponent;\n  /** The nested LocationSearchComponent */\n  @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n  /** Form input component */\n  input: InputComponent;\n  /** readonly? */\n  @Input() disabled: boolean;\n\n  constructor(\n    public geocodeService: GeocodeService,\n    public formService: FormService,\n    public keycommands: KeycommandsService,\n  ) {\n    super(formService, keycommands);\n  }\n\n  /** Sets value of map and propagates change */\n  setValue(value, fromSearch?: boolean) {\n    if (!value) {\n      this.search.clear();\n    }\n    this.map.setValue(value);\n    if (!fromSearch) {\n      this.updateAddress();\n    }\n    this.propagateChange(value);\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.map.setValue(value);\n    this.updateAddress();\n  }\n\n  /** updates the address string by reverse geo lookup  */\n  updateAddress() {\n    const value = this.map.value;\n    if (!value) {\n      this.search.searchInput.nativeElement.value = '';\n      return;\n    }\n    this.geocodeService.getNearestAddress(value).then((results) => {\n      if (results.length) {\n        this.search.searchInput.nativeElement.value = results[0].formatted_address;\n      } else {\n        this.search.searchInput.nativeElement.value = '';\n      }\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n                \n                    ./location-picker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-search.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:14\n                            \n                        \n                \n                    \n                        If true, the input cannot be used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'Search Location...'\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:12\n                            \n                        \n                \n                    \n                        Placeholder for input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:18\n                            \n                        \n                \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('search')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:16\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport {} from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n  selector: 'ec-location-search',\n  templateUrl: './location-search.component.html',\n})\nexport class LocationSearchComponent implements AfterViewInit {\n  /** Placeholder for input */\n  @Input() placeholder = 'Search Location...';\n  /** If true, the input cannot be used */\n  @Input() disabled;\n  /** The search input element */\n  @ViewChild('search') searchInput: ElementRef;\n  /** emits when the coords have been changed (after selecting a match) */\n  @Output() changed: EventEmitter = new EventEmitter();\n\n  constructor(private geocodeService: GeocodeService, private ngZone: NgZone) {}\n  /** Clears the searchbar input value */\n  clear() {\n    if (this.searchInput) {\n      this.searchInput.nativeElement.value = '';\n    }\n  }\n  /** subscribes to changes from the inputs autocomplete using geocodeService. */\n  ngAfterViewInit() {\n    this.geocodeService.autocompleteAddress(this.searchInput.nativeElement).subscribe((coords) => {\n      this.changed.emit(coords);\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:23\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:27\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:25\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  SymbolService,\n  WithNotifications,\n  Notification,\n  LoaderComponent,\n  NotificationsService,\n  WithLoader,\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { AuthService } from '../auth.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth?e=1\n */\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html',\n})\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when an error occurs. For custom error reactions */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService,\n  ) {}\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth\n      .login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications,\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n        this.error.next(error);\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:42\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:40\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:32\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:34\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:28\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:36\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:38\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:30\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:26\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:24\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { SymbolService } from '../../symbol/symbol.service';\nimport { FieldValidators } from '../validators/field-validators';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n */\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  protected submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = this.symbol.resolve('login.email.label');\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = this.symbol.resolve('login.email.placeholder');\n  /** The Label of the password field. */\n  @Input() passwordLabel = this.symbol.resolve('login.password.label');\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = this.symbol.resolve('login.password.placeholder');\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('login.button.label');\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(protected fb: FormBuilder, public symbol: SymbolService) {}\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    throwError(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) {\n    // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value).then((res) => {\n      this.form.reset();\n      this.success.emit(res);\n    });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/max-items.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n  name: 'maxItems',\n})\nexport class MaxItemsPipe implements PipeTransform {\n  transform(array: Array = [], maxItems: number, start: number = 0): any {\n    return array.slice(start, maxItems);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/lib/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                ./medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:35\n                            \n                        \n                \n                    \n                        data model \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:37\n                            \n                        \n                \n                    \n                        MediumEditor options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:39\n                            \n                        \n                \n                    \n                        empty placeholder \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:41\n                            \n                        \n                \n                    \n                        change emitter \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor?e=1\n */\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any = {};\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./medium-editor.component.scss\n                \n                @import '~medium-editor/src/sass/medium-editor.scss';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumEditorModule.html":{"url":"modules/MediumEditorModule.html","title":"module - MediumEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MediumEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n MediumEditorComponent), multi: true,\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}->MediumEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/lib/medium-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\nexport const mediumModuleConfig = {\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n};\n\n@NgModule(mediumModuleConfig)\nexport class MediumEditorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:23\n                            \n                        \n                \n                    \n                        Color map of submenus. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:27\n                            \n                        \n                \n                    \n                        Delay before menu is shown on mouseover. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :     MenuComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:21\n                            \n                        \n                \n                    \n                        Parent Menu (when nested) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:17\n                            \n                        \n                \n                    \n                        The currently active route \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:15\n                            \n                        \n                \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:19\n                            \n                        \n                \n                    \n                        The title of the menu \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:25\n                            \n                        \n                \n                    \n                        Delay before menu is hidden after mouseout. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item, path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item, parent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {}\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n        .filter((route) => route.path && route.path.indexOf(':') === -1)\n        .filter((route) => !route.data || !route.data.hidden);\n      console.log('routes', this.routes);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) {\n    // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) {\n    // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay);\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n\n  isActive(path) {\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{item.data?.title || item.path}}\n      \n      \n        \n          {{child.data?.title || child.path}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                li.is-active>a {\n    text-decoration: underline;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item.data?.title || item.path}}                              {{child.data?.title || child.path}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/modal/modal.component.ts\n\n\n    \n        Description\n    \n    \n        A modal is an extension of a pop. It adds different style options that apply x.ui markup.\nhttps://components.entrecode.de/ui/modal?e=1\nhttps://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                classes\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                templates\n                            \n                            \n                                types\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initMode\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animation\n                            \n                            \n                                backdrop\n                            \n                            \n                                body\n                            \n                            \n                                columns\n                            \n                            \n                                footer\n                            \n                            \n                                header\n                            \n                            \n                                mode\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/modal/modal.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructs the modal, injects pop service \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animation\n                    \n                \n                \n                    \n                        Default value : 'fadeIn 4'\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Sets data-animate. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        backdrop\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:31\n                            \n                        \n                \n                    \n                        If true, the modal will have a dark backdrop that disables clicking outside. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:37\n                            \n                        \n                \n                    \n                        Body Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n                \n                    \n                        Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        footer\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:39\n                            \n                        \n                \n                    \n                        Footer Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:35\n                            \n                        \n                \n                    \n                        Header Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:29\n                            \n                        \n                \n                    \n                        This property sets the mode + additional options.\nIt expects the type at first and non mandatory options like opens-left afterwards. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMode\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Is called on init and change. Parses mode input and throws warning if type is not supported. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:45\n                            \n                        \n\n                \n                    \n                        Will contain the classes (mode - type) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:41\n                            \n                        \n\n                \n                    \n                        Templates for header body and footer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['dialog', 'overlay', 'deck', 'toast', 'snackbar']\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:26\n                            \n                        \n\n                \n                    \n                        all possible modes that can be set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  OnChanges,\n  TemplateRef,\n  ContentChildren,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { PopComponent } from '../pop/pop.component';\nimport { PopService } from '../pop/pop.service';\n\n/**\n * A modal is an extension of a pop. It adds different style options that apply x.ui markup.\n * https://components.entrecode.de/ui/modal?e=1\n *\n * https://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n */\n@Component({\n  selector: 'ec-modal',\n  templateUrl: './modal.component.html',\n})\nexport class ModalComponent extends PopComponent implements OnInit, OnChanges {\n  /** all possible modes that can be set */\n  types = ['dialog', 'overlay', 'deck', 'toast', 'snackbar'];\n  /** This property sets the mode + additional options.\n   * It expects the type at first and non mandatory options like opens-left afterwards. */\n  @Input() mode: string;\n  /** If true, the modal will have a dark backdrop that disables clicking outside. */\n  @Input() backdrop = false;\n  /** Sets data-animate. */\n  @Input() animation = 'fadeIn 4';\n  /** Header Template */\n  @Input() header: TemplateRef;\n  /** Body Template */\n  @Input() body: TemplateRef;\n  /** Footer Template */\n  @Input() footer: TemplateRef;\n  /** Templates for header body and footer */\n  @ContentChildren(TemplateRef) templates: TemplateRef[];\n  /** Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). */\n  @Input() columns: number | string;\n  /** Will contain the classes (mode - type) */\n  public classes: string;\n  /** Constructs the modal, injects pop service */\n  constructor(public popService: PopService, public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n    super(popService, elementRef, cdr);\n  }\n  /** Is called on init and change. Parses mode input and throws warning if type is not supported. */\n  initMode() {\n    this.mode = this.mode || 'dialog';\n    this.type = this.mode.split(' ')[0];\n    if (!this.types.includes(this.type)) {\n      const fallback = this.mode.replace(this.type, 'dialog');\n      console.warn(`ec-modal does not support the mode \"${this.type}\".\n            Use one of ${this.types.join(', ')}.\n            Falling back to ${fallback}.`);\n      this.type = fallback;\n    }\n    this.classes = this.mode\n      .split(' ')\n      .splice(1)\n      .join(' ');\n    this.types.forEach((type) => {\n      this.elementRef.nativeElement.classList.remove(`${type}-wrapper`);\n    });\n    if (this.backdrop) {\n      this.elementRef.nativeElement.classList.add(`${this.type}-wrapper`);\n    }\n  }\n\n  /** calls initMode */\n  ngOnInit() {\n    this.initMode();\n  }\n  /** calls initMode */\n  ngOnChanges() {\n    this.initMode();\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateConfig\n                            \n                            \n                                get\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getLightModel\n                            \n                            \n                                getMinLevel\n                            \n                            \n                                getSystemFields\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entryService: EntryService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/model-config.service.ts:19\n                            \n                        \n\n                \n                    \n                            Injects EntryService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryService\n                                                  \n                                                        \n                                                                    EntryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateConfig(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            Generates a CrudConfig for the given model.\nMerges three configurations into one:\n\ndefault field config, obtained by getFieldConfig\nglobal model config (if any) configured via with set\ncustomFieldConfig: any custom field config that is merged on top of the other two.\nThis enables the developer to either customize at a global scale to target all lists/forms,\nor just specific components. \n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFieldConfig(model: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            Returns the default field config for the given model.\nUtilizes PublicAPI#getFieldConfig + TypeConfigService#get.\nThis config is meant to deliver the default behaviour when nothing else is configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLightModel(model)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:241\n                            \n                        \n\n\n                \n                    \n                            Returns light model information \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMinLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMinLevel(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Parses config for fields that require leveled entries \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSystemFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSystemFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Returns the field config for all system fields \n\n\n                            \n                                Returns :     { id: { label: any; create: boolean; view: string; filterView: string; filterable: boolean; filte...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.set(&#39;muffin&#39;, {\n   *  fields: {\n   *    title: {\n   *      label: &#39;Muffin Titel&#39;\n   *    }\n   *  });\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'private', 'created', 'creator', 'modified']\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:19\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config, FieldConfig, Item } from '@ec.components/core';\nimport { SymbolService, DefaultInputComponent } from '@ec.components/ui';\nimport { fields } from 'ec.sdk/lib/PublicAPI';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { EntryService } from '../entry/entry.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = ['id', 'private', 'created', 'creator', 'modified'];\n\n  /** Injects EntryService and SdkService. */\n  constructor(\n    private entryService: EntryService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService,\n  ) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Returns the field config for all system fields */\n  getSystemFields() {\n    return {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        create: false,\n        view: 'copy',\n        filterView: 'string',\n        filterable: true,\n        filterOperator: 'exact',\n        form: true,\n        immutable: true,\n        hideInList: true,\n        columns: 3,\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        copy: this.typeConfig.isoDate(),\n        create: false,\n        form: true,\n        columns: 3,\n        view: 'copy',\n        immutable: true,\n        sortable: true,\n        hideInList: true,\n        rawFilter: true,\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        copy: this.typeConfig.isoDate(),\n        create: false,\n        form: true,\n        columns: 3,\n        view: 'copy',\n        immutable: true,\n        sortable: true,\n        hideInList: false,\n        rawFilter: true,\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        copy: (value) => value,\n        create: false,\n        type: 'account',\n        view: 'copy',\n        columns: 3,\n        form: true,\n        immutable: true,\n        hideInList: true,\n        filterable: true,\n        filterComponent: AdminEntryInputComponent,\n        formComponent: DefaultInputComponent,\n        output: DefaultEntryOutputComponent,\n        readOnly: true,\n        filterPopClass: 'ec-pop_dialog',\n        filterOperator: 'exact',\n      },\n    };\n  }\n\n  /** Parses config for fields that require leveled entries */\n  getMinLevel(model: string, customFieldConfig?: FieldConfig) {\n    return this.generateConfig(model, customFieldConfig).then((modelConfig) => {\n      const fieldConfig = modelConfig.fields;\n      return Object.keys(fieldConfig)\n        .filter((field) => !!fieldConfig[field].type)\n        .map((field) => {\n          const inputView = fieldConfig[field].inputView;\n          const views = this.typeConfig.get(fieldConfig[field].type).inputViews || [];\n          if (!inputView || !views) {\n            return 1;\n          }\n          const match = views.find((v) => v.name === inputView);\n          return match ? match.levels || 1 : 1;\n        })\n        .reduce((max, lvl) => Math.max(max, lvl), 1);\n    });\n  }\n\n  /** Returns the default field config for the given model.\n   * Utilizes PublicAPI#getFieldConfig + TypeConfigService#get.\n   * This config is meant to deliver the default behaviour when nothing else is configured. */\n  getFieldConfig(model: string): Promise {\n    return this.sdk.api.getFieldConfig(model).then((fieldConfig: fields) => {\n      const merged = {};\n      Object.assign(merged, this.getSystemFields());\n      Object.keys(fieldConfig)\n        .map((property) => fieldConfig[property])\n        .forEach(\n          ({ config, type, title, unique, mutable, readOnly, required, validation, description, localizable }) => {\n            /* type = type as string; */\n            config = config || {};\n            if (type.includes('asset')) {\n              type = type.replace('a', 'dmA');\n            }\n            // parse field config\n            const {\n              hideInList,\n              hideInForm,\n              hideOnCreate,\n              hideOnEdit,\n              placeholder,\n              inputView,\n              label,\n              classes,\n              columns = 12,\n            } = config;\n            const typeConfig = this.typeConfig.get(type);\n            // assign default values + merge customFieldConfig if given\n            merged[title] = Object.assign(\n              {\n                property: title,\n                label: label || title + (type === 'datetime' ? ` ${this.symbol.resolve('datetime.local')}` : ''),\n                placeholder,\n                description,\n                validation,\n                relation: validation,\n                immutable: !mutable,\n                readOnly,\n                hideInList,\n                hideInForm,\n                create: !hideOnCreate,\n                edit: !hideOnEdit,\n                classes,\n                unique,\n                required,\n                columns,\n                /* display: ((value) => value), */\n                localizable,\n              },\n              typeConfig,\n              {\n                placeholder: placeholder || typeConfig.placeholder,\n                inputView: inputView || typeConfig.inputView || type,\n              },\n            );\n          },\n        );\n      return merged;\n    });\n  }\n\n  /** Generates a CrudConfig for the given model.\n   * Merges three configurations into one:\n   * - default field config, obtained by getFieldConfig\n   * - global model config (if any) configured via with set\n   * - customFieldConfig: any custom field config that is merged on top of the other two.\n   * This enables the developer to either customize at a global scale to target all lists/forms,\n   * or just specific components. */\n  async generateConfig(model: string, customFieldConfig?: FieldConfig): Promise> {\n    const lightModel = await this.getLightModel(model);\n    // first step: merge global model config with default entry config\n    const modelConfig = Object.assign(this.get(model) || {}, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      defaultFilter: lightModel.titleField,\n      onSave: (item: Item, value) => this.entryService.save(model, item, value),\n    });\n    return this.getFieldConfig(model).then((fieldConfig: FieldConfig) => {\n      const modelConfigFields = modelConfig.fields || {};\n      const relevantKeys = Object.keys(customFieldConfig || modelConfigFields);\n      const mergedFields = {};\n      if (!relevantKeys.length) {\n        modelConfig.fields = fieldConfig;\n      } else {\n        relevantKeys.forEach((key) => {\n          mergedFields[key] = Object.assign(\n            {},\n            fieldConfig[key] || {},\n            modelConfigFields[key] || {},\n            (customFieldConfig || {})[key],\n          );\n        });\n        modelConfig.fields = mergedFields;\n      }\n      return modelConfig;\n    });\n  }\n  /** Returns light model information */\n  getLightModel(model) {\n    return this.sdk.ready.then(() => this.sdk.api.modelList()).then((models) => models[model]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n                \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications?e=1\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                        \n                            PopModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [NotificationsComponent, ErrorComponent],\n  imports: [CommonModule, PopModule, IconModule],\n  exports: [NotificationsComponent, ErrorComponent],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false,\n    },\n    NotificationsService,\n  ],\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {}\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    if (notification && notification.error) {\n      console.error(notification.error);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:24\n                            \n                        \n                \n                    \n                        Overrides the default component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :     Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:20\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:22\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:17\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  ChangeDetectionStrategy,\n  Type\n} from '@angular/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field, Item } from '@ec.components/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Overrides the default component */\n  @Input() component: Type;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(\n        this.component || this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:13\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:9\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:11\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:7\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:97\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:37\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:42\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:111\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:116\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:102\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:80\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:134\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:56\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number, silent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:88\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        silent\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:67\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:129\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:146\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Subject, Observable } from 'rxjs';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(\n        new Set(\n          [this.config.size]\n            .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n            .sort((a, b) => a - b),\n        ),\n      ),\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number, silent = false): void {\n    if (page === this.config.page || silent) {\n      this.config.page = page;\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, this.config.page * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    };\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:23\n                            \n                        \n                \n                    \n                        The config that is used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :     Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:15\n                            \n                        \n                \n                    \n                        A Pagination Instance \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:17\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('page')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pageContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnChanges, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return (\n      Math.abs(current - page) \n    \n\n    \n        \n  1&&!pagination?.isFirst()\">\n    \n      \n        {{'pagination.first' | symbol}}\n      \n    \n    \n      \n        {{'pagination.prev' | symbol}}\n      \n    \n  \n  1\">\n    \n      \n        \n          {{i+1}}\n        \n      \n    \n  \n  1&&!pagination?.isLast()\">\n    \n      \n        {{'pagination.next' | symbol}}\n      \n    \n    \n      \n        {{'pagination.last' | symbol}}\n      \n    \n  \n  \n    {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ 'pagination.of' | symbol}} {{pagination?.params()?.total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  1&&!pagination?.isFirst()\">                  {{\\'pagination.first\\' | symbol}}                            {{\\'pagination.prev\\' | symbol}}              1\">                            {{i+1}}                      1&&!pagination?.isLast()\">                  {{\\'pagination.next\\' | symbol}}                            {{\\'pagination.last\\' | symbol}}                  {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ \\'pagination.of\\' | symbol}} {{pagination?.params()?.total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '../../symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n  /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n   * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n  range = 2;\n  /** Hides first and last Link */\n  hideFirstLast: boolean;\n  /** Hides pages */\n  hidePages: boolean;\n  /** The constructor assigns the config */\n  constructor(config: PaginationConfig) {\n    Object.assign(this, config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request.\nhttps://components.entrecode.de/auth/password-reset?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:20\n                            \n                        \n                \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'E-Mail Adresse...'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:22\n                            \n                        \n                \n                    \n                        Custom placeholder for email field \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n                \n                    \n                        Event after request was successful \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:18\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:16\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request.\n * https://components.entrecode.de/auth/password-reset?e=1\n *\n */\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html',\n})\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {}\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth\n      .resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true,\n        });\n        this.lockForm = true;\n        this.success.emit();\n      })\n      .catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true,\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    {{'passwordReset.button' | symbol}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'passwordReset.button\\' | symbol}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:38\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  HostBinding,\n  HostListener,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop?e=1\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() @HostBinding('class.is-active') active: boolean;\n  /** Flip and stays true after first show */\n  activated = false;\n  /** The used type on the host element */\n  @Input() type: string;\n  /** If set to true, the pop will hide when a click happens outside the pop. */\n  @Input() hideOnClickOutside = false;\n  /** If set to false, esc will not close the pop */\n  @Input() hideOnEscape = true;\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n\n  clickEvent;\n\n  /** Listens for document:click and hides */\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (\n      this.hideOnClickOutside &&\n      this.active &&\n      (!this.clickEvent || $event !== this.clickEvent) && // to ensure the show event wont hide immediately\n      this.elementRef &&\n      this.isOutside($event.target)\n    ) {\n      this.hide();\n    }\n  }\n\n  constructor(protected popService: PopService, public elementRef: ElementRef, protected cdr: ChangeDetectorRef) {}\n\n  /** yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) */\n  isOutside(element) {\n    return !this.elementRef.nativeElement.contains(element) /*  ||\n      element === this.elementRef.nativeElement */;\n  } // active: boolean = !this.active, emit: boolean = false\n\n  /** Shows if not active, hides if active. */ public toggle(e?) {\n    if (this.active) {\n      this.hide();\n    } else {\n      this.show(e);\n    }\n  }\n\n  /** Shows the pop. Sets active true and adds pop to popService.stack */\n  public show(e?) {\n    this.active = true;\n    this.activated = true;\n    if (this.hideOnEscape) {\n      this.popService.stack.add(this);\n    }\n    if (e) {\n      this.clickEvent = e;\n    } else if (this.hideOnClickOutside) {\n      // console.warn('To use hideOnClickOutside, you need to pass the click event to the show method of ec-pop!');\n    }\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n\n  /** Hides the pop. Sets active false and removes pop from popService.stack */\n  public hide() {\n    if (this.hideOnEscape) {\n      this.popService.stack.remove(this);\n    }\n    this.active = false;\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n    Modules\n    PopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_imports\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PopService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { IconModule } from '../icon/icon.module';\n\nexport const popModuleConfig = {\n  declarations: [PopComponent, ModalComponent],\n  imports: [CommonModule, IconModule],\n  exports: [PopComponent, ModalComponent],\n  providers: [PopService],\n};\n\n@NgModule(popModuleConfig)\nexport class PopModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultColumns\n                            \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 9\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        default value for columns of any pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n  /** default value for columns of any pop */\n  defaultColumns = 9;\n  /** Stack of current opened pops */\n  stack: Collection = new Collection();\n  /** Listens for escape keys and hides latest pop + removes the pop from stack */\n  constructor() {\n    window.addEventListener('keydown', (event) => {\n      if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n        const latestPop = this.stack.items[this.stack.items.length - 1];\n        latestPop.hide();\n        this.stack.remove(latestPop);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceActionbarState.html":{"url":"interfaces/ResourceActionbarState.html","title":"interface - ResourceActionbarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceActionbarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                        actionbar\n                                \n                                \n                                        api\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        relation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionbar\n                                    \n                                \n                                \n                                    \n                                        actionbar:     ActionbarComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionbarComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                    \n                                \n                                \n                                    \n                                        api:     Core\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Core\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ElementRef, Input, ChangeDetectorRef, EventEmitter, Output } from '@angular/core';\nimport { ActionbarComponent, Action, ActionFunction, selectTemplate } from '@ec.components/ui';\nimport { NotificationsService, ListComponent } from '@ec.components/ui';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport ListResource from 'ec.sdk/lib/resources/ListResource';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { SdkService } from '../sdk/sdk.service';\n\nexport interface ResourceActionbarState {\n  api: Core;\n  relation: string;\n  actionbar: ActionbarComponent;\n  action?: ActionFunction;\n  options?: Object;\n}\n\n@Component({\n  selector: 'ec-resource-actionbar',\n  template: selectTemplate,\n})\nexport class ResourceActionbarComponent extends ActionbarComponent implements OnInit {\n  state: ResourceActionbarState;\n\n  @Output() create: EventEmitter = new EventEmitter();\n  @Output() select: EventEmitter> = new EventEmitter();\n\n  @Input() actions: Action[];\n\n  constructor(\n    public notificationService: NotificationsService,\n    public sdk: SdkService,\n    public resourceConfig: ResourceConfig,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(elementRef, cdr);\n  }\n\n  ngOnInit() {\n    const state = {\n      api: this.sdk.api,\n      relation: 'tags',\n    };\n    const { api, relation } = state;\n    this.sdk.ready.then(() => {\n      this.loadResourceListActions({\n        api,\n        relation,\n        actionbar: this,\n      });\n    });\n  }\n\n  getResourceListActions(listResource: ListResource, relation: string, action?: ActionFunction): Action[] {\n    const actions: Action[] = listResource.getAllItems().map((resource) => {\n      const { identifier, label } = this.resourceConfig.get(relation);\n      return {\n        id: resource[identifier],\n        title: resource[label] || '- no title -',\n        data: resource,\n        path: relation,\n        action: (item, bar) => {\n          if (action) {\n            action(item.getBody().data, bar);\n          } else {\n            console.log('no action specified..');\n          }\n        },\n      };\n    });\n    if (listResource.hasNextLink()) {\n      actions.push({\n        id: 'next-page',\n        title: `Load Page`,\n        path: null,\n        data: {},\n        select: false,\n        action: () => {\n          listResource.followNextLink().then((list) => {\n            const concatted = this.list.items\n              .map((i) => i.getBody())\n              .filter((i) => i.id !== 'next-page')\n              .concat(this.getResourceListActions(list, relation, action));\n            this.loadActions(concatted);\n          });\n        },\n      });\n    }\n    return actions;\n  }\n\n  reload() {\n    this.loadResourceListActions({\n      ...this.state,\n      options: {},\n    });\n  }\n\n  loadResourceListActions(state: ResourceActionbarState = this.state, stack = true): Promise {\n    const { api, relation, actionbar, action, options } = state;\n    this.state = {\n      ...this.state,\n      ...state,\n    };\n    const loading = api\n      .resourceList(relation, options)\n      .then((list) => {\n        return this.getResourceListActions(list, relation, action);\n      })\n      .then((actions) => {\n        if (actions) {\n          actionbar.loadActions(actions, stack);\n        }\n        return actions;\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: 'Error while loading Resources',\n          error,\n        });\n      })\n      .then((actions) => actions || []);\n    if (actionbar.dropdownLoader) {\n      actionbar.dropdownLoader.wait(loading);\n    }\n    return loading;\n  }\n\n  resourceAction({\n    relation,\n    title,\n    api,\n    action,\n    actionbar,\n    add,\n    path,\n  }: {\n    relation: string;\n    title: string;\n    api: Core;\n    action?: ActionFunction;\n    actionbar?: ActionbarComponent;\n    add?: boolean;\n    path?: string;\n  }) {\n    return {\n      id: path || relation,\n      title: title,\n      add,\n      action: () => this.loadResourceListActions({ api, relation, actionbar, action }),\n    };\n  }\n\n  filterDropdownList(listComponent: ListComponent, query) {\n    const paths = this.currentActions()\n      .map((a) => a.path)\n      .filter((value, index, self) => self.indexOf(value) === index)\n      .filter((v) => !!v);\n    if (!paths.length) {\n      return super.filterDropdownList(listComponent, query);\n    }\n    const { identifier, label } = this.resourceConfig.get(this.state.relation);\n    this.loadResourceListActions(\n      {\n        ...this.state,\n        options: {\n          [label + '~']: { exact: query },\n        },\n      },\n      false,\n    ).then((actions) => {\n      if (actions.length === 0) {\n        this.loadActions(\n          [\n            {\n              title: `\"${query}\" erstellen`,\n              id: 'createnew',\n              select: false,\n              action: () => {\n                if (this.create.observers.length) {\n                  this.create.emit(query);\n                } else {\n                  const item = new Item(\n                    {\n                      id: Date.now() + '',\n                      title: query,\n                    },\n                    this.config,\n                  );\n                  this.addItem(item);\n                  this.searchbar.clear();\n                  this.reload();\n                }\n              },\n            },\n          ],\n          false,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * \n *\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:29\n                            \n                        \n                \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:33\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:31\n                            \n                        \n                \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:35\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:43\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n                \n                    \n                        Output that is nexted when pressing the create button \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:45\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourceListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:37\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourcePopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { LoaderService } from '@ec.components/ui';\nimport { NotificationsService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n  selector: 'ec-resource-crud',\n  templateUrl: './resource-crud.component.html',\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n  /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n  @Input() api: Core; // sdk api connector\n  /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n  @Input() relation: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The ResourceListComponent inside the template. */\n  @ViewChild(ResourceListComponent) list: ResourceListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Output that is nexted when pressing the create button */\n  @Output() createClicked: EventEmitter = new EventEmitter();\n\n  constructor(\n    private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.initMethods();\n  }\n\n  initMethods() {\n    if (!this.relation) {\n      return;\n    }\n    this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods).then((methods) => {\n      this.config.methods = methods;\n    });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Called on list columnClicked */\n  select(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.pop.edit(item.getBody());\n    // TODO: check CrudComponent#loadEntry for further inspiration\n  }\n\n  /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n  create() {\n    if (this.createClicked.observers.length) {\n      this.createClicked.next();\n    } else if (this.pop) {\n      this.pop.create();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceListPopComponent.html":{"url":"components/ResourceListPopComponent.html","title":"component - ResourceListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                resourceConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                pasted\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pasted\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:88\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:58\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:72\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:63\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@Component({\n  selector: 'ec-resource-list-pop',\n  templateUrl: './resource-list-pop.component.html',\n})\nexport class ResourceListPopComponent extends PopComponent implements OnChanges {\n  @Input() relation: string;\n  @Input() api: Core;\n  @Input() config: ListConfig;\n  @Input() selection: Selection;\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  @Output() pasted: EventEmitter> = new EventEmitter();\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n  /** Set host class to make sure the type is used */\n  @HostBinding('class') class = 'toast-wrapper';\n  lightModel: any;\n\n  constructor(\n    public resourceConfig: ResourceConfig,\n    public popService: PopService,\n    public elementRef: ElementRef,\n    public cdr: ChangeDetectorRef,\n  ) {\n    super(popService, elementRef, cdr);\n  }\n\n  ngOnChanges() {\n    if (this.relation) {\n      this.config = Object.assign({}, this.config || {}, this.resourceConfig.get(this.relation));\n    }\n    if (this.config) {\n      this.config = Object.assign({ hidePagination: true, disableHeader: true }, this.config);\n    }\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select(item) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    } else if (this.selection) {\n      this.selection.toggle(item);\n    }\n    // this.searchbar.focusEvent.emit(true);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n         -->\n        \n    \n    \n        \n        \n            \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         -->                                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/resource/resource.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ResourceListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ResourceConfig\n                        \n                        \n                            ResourceService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceListPopComponent } from '../resource-list-pop/resource-list-pop.component';\nimport { ResourceActionbarComponent } from '../resource-actionbar/resource-actionbar.component';\nimport { ApiActionbarComponent } from '../resource-actionbar/api-actionbar.component';\n\n@NgModule({\n  entryComponents: [ResourceListComponent],\n  declarations: [\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  imports: [CommonModule, FormsModule, UiModule, SdkModule],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  providers: [ResourceService, ResourceConfig],\n})\nexport class ResourceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull, deleteNullProperties)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation, resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n  /** The relation that has been updated. */\n  relation: string | string[];\n  /** The relevant resource. */\n  resource?: Resource;\n  /** The list where it happened. */\n  list?: ResourceList;\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete';\n  /** An identifier associated with the update e.g. an entryID */\n  identifier?: string;\n  /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n  broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n  /** The changes event is emitted everytime an resource is created or updated. */\n  public changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public config: ResourceConfig) {\n    /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return change.broadcast || Object.keys(filter).reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().pipe(rxFilter((change: Update) => this.matches(change, filter)));\n  }\n\n  /** Saves the given resource with the given value. If the resource is not yet existing,\n   * it will be created.Otherwise it will be updated. */\n  save(item: Item, value: Object, relation: string, api: Core): Promise {\n    const resource = item.getBody();\n    if (item.config.onSave) {\n      return Promise.resolve(item.config.onSave(item, value));\n    }\n    item.deleteImmutableProperties(value);\n    if (resource && resource.save) {\n      return this.update(relation, resource, value);\n    }\n    return this.create(relation, value, api)\n      .then((_resource) => {\n        return _resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given resource with the new value. Fires the \"update\" change. */\n  update(relation, resource: Resource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => (oldValues[key] = resource[key]));\n    Object.assign(resource, this.clean(value, false, false)); // assign new form values\n    return resource\n      .save()\n      .then((_resource) => {\n        this.changes.next({ relation, resource: _resource, type: 'put' });\n        return _resource;\n      })\n      .catch((err) => {\n        Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (setEmptyStringsToNull && value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (deleteNullProperties && value[key] === null) {\n          delete value[key];\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n  create(relation: string, value: Object, api: Core): Promise {\n    return api\n      .create(relation, this.clean(value))\n      .then((resource: Resource) => {\n        this.changes.next({ relation, resource, type: 'post' });\n        return resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given resource and emits the \"delete\" change. */\n  del(relation: string, resource: Resource) {\n    return resource.del().then((res) => {\n      this.changes.next({ relation, resource, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SdkField.html":{"url":"interfaces/SdkField.html","title":"interface - SdkField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SdkField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/sdk-field.ts\n        \n\n            \n                Description\n            \n            \n                Field Config as obtained by PublicAPI#getFieldConfig.\nSee https://doc.entrecode.de/data_manager/#field-data-types for more info\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        localizable\n                                \n                                \n                                        mutable\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                                \n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    further field config options (like columns etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default value that is returned for a newly created required field on old entries \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Description. Used for placeholders \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizable\n                                    \n                                \n                                \n                                    \n                                        localizable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Not implemented yet. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutable\n                                    \n                                \n                                \n                                    \n                                        mutable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tells if the field value can be changed. If true, the field is a system field  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field can only be altered when creating. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field must have a value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    System Title \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Type \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique: each entry has a unique value for that field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Validation info, depends on field type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SdkField {\n  /** further field config options (like columns etc.) */\n  config: Object;\n  /** Field Type */\n  type: string;\n  /** System Title */\n  title: string;\n  /** Unique: each entry has a unique value for that field */\n  unique: boolean;\n  /** Default value that is returned for a newly created required field on old entries */\n  default: string;\n  /** Tells if the field value can be changed. If true, the field is a system field  */\n  mutable: boolean;\n  /** If true, the field can only be altered when creating. */\n  readOnly: boolean;\n  /** If true, the field must have a value */\n  required: boolean;\n  /** Validation info, depends on field type. */\n  validation: string;\n  /** Field Description. Used for placeholders */\n  description: string;\n  /** Not implemented yet. */\n  localizable: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n    Modules\n    SdkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SdkService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [SdkService],\n})\nexport class SdkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                changesEnvironment\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    root\n                                \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/sdk.service.ts:80\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. Omits init if environment has set init: false \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api.\nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:53\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:51\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:34\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changesEnvironment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:55\n                            \n                        \n\n                \n                    \n                        Emits when the env changes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:69\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject('environment')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:80\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\n   * this.sdk.ready.then(account => {});\n   *\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:36\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:73\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:49\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:71\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:57\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api)\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:64\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport { Subject } from 'rxjs';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() =>\n        this.datamanager.dataManager(this._api.dataManagerID),\n      );\n    }\n    return this.roots[this._api.dataManagerID];\n  }\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** Emits when the env changes */\n  public changesEnvironment: Subject = new Subject();\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => (this.apiResolved = true));\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. Omits init if environment has set init: false */\n  constructor(@Inject('environment') public environment) {\n    if (!environment || environment.init !== false) {\n      this.init();\n    }\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    if (environment !== this.environment) {\n      this.changesEnvironment.next(environment);\n    }\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount().then((user) => {\n      this.user = user;\n      this.datamanager = new DataManager(environment.environment);\n      return this.user;\n    });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api.\n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n    return this._api.resolve().then((api) => {\n      this.apiResolved = true;\n      return api;\n    });\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model] || this.schemaRequests[model].api !== api) {\n      this.schemaRequests[model] = { request: api.getSchema(model), api };\n    }\n    return this.schemaRequests[model].request;\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api\n      .me()\n      .then((account) => {\n        return account || this._api.me();\n      })\n      .catch((error) => {\n        return this._api && this._api.getToken() ? this._api.me() : null;\n      });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n    Modules\n    SelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n SelectComponent), multi: true,\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/select/select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            ListModule\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\nimport { ActionbarComponent } from '../actionbar/actionbar.component';\nimport { LoaderModule } from '../loader/loader.module';\n\nexport const selectModuleConfig = {\n  imports: [CommonModule, ListModule, DndModule, LoaderModule],\n  declarations: [SelectComponent, ActionbarComponent],\n  exports: [ListModule, SelectComponent, ActionbarComponent, DndModule],\n  providers: [],\n};\n\n@NgModule(selectModuleConfig)\nexport class SelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/signup?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginComponent\n    \n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup\n            \n\n\n\n\n            \n                templateUrl\n                signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                invite\n                            \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:16\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:18\n                            \n                        \n                \n                    \n                        Invite code to use. If set, the invite form field will be hidden. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:23\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:20\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:27\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:25\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:22\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:24\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:29\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:31\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { WithNotifications, LoaderComponent, WithLoader, Notification } from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/signup?e=1\n */\n@Component({\n  selector: 'ec-signup',\n  templateUrl: 'signup.component.html',\n})\nexport class SignupComponent extends LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Invite code to use. If set, the invite form field will be hidden. */\n  @Input() invite = '';\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  signup({ email, password, invite }) {\n    const registration = this.auth\n      .signup({ email, password, invite }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('signup.success'),\n          hide: this.notifications,\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('signup.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications,\n        });\n        this.error.next(error);\n        console.log('could not signup', error);\n      });\n    this.loader.wait(registration);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginFormComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup-form\n            \n\n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonLabel\n                            \n                            \n                                invite\n                            \n                            \n                                invitePlaceholder\n                            \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:16\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:20\n                            \n                        \n                \n                    \n                        If set, the invite field will be hidden and the given code will be used for signup \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invitePlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.invite.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:18\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:42\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:40\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:32\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:34\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:28\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:36\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:38\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:30\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:26\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:24\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:66\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:58\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FieldValidators } from '../../utility/validators/field-validators';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { LoginFormComponent } from '../login-form/login-form.component';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n */\n@Component({\n  selector: 'ec-signup-form',\n  templateUrl: './signup-form.component.html',\n})\nexport class SignupFormComponent extends LoginFormComponent implements OnInit, WithLoader {\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('signup.button.label');\n  /** The Placeholder of the mail Field */\n  @Input() invitePlaceholder = this.symbol.resolve('signup.invite.placeholder');\n  /** If set, the invite field will be hidden and the given code will be used for signup */\n  @Input() invite = '';\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  signup(value) {\n    // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n      invite: [this.invite, [Validators.required]], // FieldValidators.uuid\n    });\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.signup(this.form.value).then((res) => {\n      // this.form.reset();\n      this.success.emit(res);\n    });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    Invite\n    \n    \n  \n\n  \n    {{buttonLabel}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                Invite                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecSlotHost]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ecSlotHost]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    string: sortString,\n    number: sortNumber,\n    boolean: sortBoolean,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:24\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:31\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:60\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    string: sortString,\n    number: sortNumber,\n    boolean: sortBoolean,\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items.reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map((item) => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n  /** The name under which the symbol is accessible. */\n  name: string;\n  /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n  content?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n    Modules\n    SymbolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Collects all localization related components and services.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SymbolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n    \n        Localization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n    \n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n/**\n * Collects all localization related components and services.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SymbolPipe],\n  exports: [SymbolPipe],\n  providers: [SymbolService],\n})\nexport class SymbolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n * {{ 'entry.saved' | symbol }}\n *See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n  name: 'symbol',\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n  /** Depends on the SymbolService */\n  constructor(private symbol: SymbolService) {}\n  /** Calls SymbolService.resolve with the given name */\n  transform(name: string): string {\n    if (!name) {\n      return '';\n    }\n    return this.symbol.resolve(name) || '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de.\nhttps://components.entrecode.de/ui/symbols?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                registry\n                            \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Static\n                                sets\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                get\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                resolve\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/symbol/symbol.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(symbols: Symbol[], registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : Object.keys(SymbolService.sets).length\n    ? SymbolService.sets[Object.keys(SymbolService.sets)[0]]\n    : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:12\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    en,\n    de,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { de } from './de';\nimport { en } from './en';\n/** Service to register symbols for localization. The default set is de.\n * https://components.entrecode.de/ui/symbols?e=1\n */\n// https://github.com/ng-packagr/ng-packagr/issues/696\n@Injectable()\nexport class SymbolService {\n  /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n  public static sets: { [key: string]: Symbol[] } = {\n    en,\n    de,\n  };\n  public static registry: Symbol[] = Object.keys(SymbolService.sets).length\n    ? SymbolService.sets[Object.keys(SymbolService.sets)[0]]\n    : [];\n\n  public registry: Symbol[];\n  public sets: { [key: string]: Symbol[] } = {\n    en,\n    de,\n  };\n\n  /** finds a symbol in the registry by name */\n  static get(name: string, registry = SymbolService.registry): Symbol {\n    const symbol = registry.find((s) => s.name === name);\n    return symbol;\n  }\n\n  static resolve(name: string, registry = SymbolService.registry): string {\n    const symbol = SymbolService.get(name, registry);\n    if (symbol) {\n      return symbol.content;\n    }\n    return null;\n  }\n  /** Uses the given symbol set to enhance the current registry.\n   * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n  static set(symbols: Symbol[] = [], registry = SymbolService.registry) {\n    symbols.map((symbol) => {\n      const index = registry.indexOf(this.get(symbol.name));\n      if (index === -1) {\n        registry.push(symbol);\n      } else {\n        registry[index] = symbol;\n      }\n    });\n  }\n\n  constructor() {\n    this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n  }\n\n  /** Uses the given symbol set. Replaces registry. */\n  use(symbols: Symbol[]) {\n    this.registry = symbols;\n  }\n\n  /** uses the set with the given key */\n  useSet(key: string) {\n    if (!this.sets[key]) {\n      throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n    }\n    this.use(this.sets[key]);\n  }\n\n  /** finds a symbol in the registry by name */\n  get(name: string): Symbol {\n    return SymbolService.get(name, this.registry);\n  }\n\n  /** resolves a symbols content by name */\n  resolve(name: string): string {\n    return SymbolService.resolve(name, this.registry);\n  }\n\n  /** Uses the given symbol set to enhance the current registry.\n   * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n  set(symbols: Symbol[] = []) {\n    SymbolService.set(symbols, this.registry);\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:11\n                            \n                        \n                \n                    \n                        The tab's label \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:15\n                            \n                        \n                \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:13\n                            \n                        \n                \n                    \n                        If set to true, the tab will be selected at start. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:17\n                            \n                        \n                \n                    \n                        Output that emits when the tab is activated \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:19\n                            \n                        \n                \n                    \n                        Output that emits when the tab is deactivated \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {}\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     TabComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n                \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent, skipRoute)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        skipRoute\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TabComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:14\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { AfterContentInit, Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs?e=1\n */\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = new URL(url, window.location.origin).pathname.split('/');\n    const match = this.tabs.find((tab) => paths[paths.length - 1].indexOf(tab.route) !== -1);\n    if (match) {\n      this.select(match, true);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent, skipRoute = false) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route && !skipRoute) {\n      this.router.navigate(['../' + tab.route], { relativeTo: this.route });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/lib/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TinymceComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                ./tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImageByUrl\n                            \n                            \n                                destroy\n                            \n                            \n                                init\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                lazy\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:72\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:61\n                            \n                        \n                \n                    \n                        Debounce time for value change processing \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:65\n                            \n                        \n                \n                    \n                        If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:63\n                            \n                        \n                \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:67\n                            \n                        \n                \n                    \n                        Output that emits when the value has been changed by the user \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        setup\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:70\n                            \n                        \n                \n                    \n                        Output that is emitted when the setup is being made.\nPasses the editor instance. Intended to be used for custom controls  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addImageByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \naddImageByUrl(url: string, caption: string, size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            adds an image by url to the editor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        caption\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                200\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            calls init \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            calls destroy \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:57\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:55\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:53\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:59\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:72\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ApplicationRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport tinymce from 'tinymce/tinymce';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/themes/modern';\n\nimport { editorSettings } from './tinymce-settings';\nimport { debounceTime } from 'rxjs/operators';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce?e=1\n */\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TinymceComponent implements AfterViewInit, OnDestroy, ControlValueAccessor, OnDestroy {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks */\n  @Input() lazy = false;\n  /** Output that emits when the value has been changed by the user */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Output that is emitted when the setup is being made.\n   * Passes the editor instance. Intended to be used for custom controls  */\n  @Output() setup: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .pipe(debounceTime(this.debounce))\n      .subscribe((editor) => {\n        if (!this.editor) {\n          return;\n        }\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.changed.emit(this.value);\n        this.app.tick();\n      });\n  }\n  /** calls init */\n  ngAfterViewInit() {\n    if (!this.lazy) {\n      this.init();\n    }\n  }\n  /** Destroys the editor. */\n  destroy() {\n    if (this.editor) {\n      this.editor.remove();\n      delete this.editor;\n    }\n  }\n  /** calls destroy */\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  /** Initializes the editor */\n  init() {\n    const settings = Object.assign({}, editorSettings, this.settings, {\n      target: this.container.nativeElement,\n      setup: (editor) => {\n        editorSettings.setup(editor);\n        if (this.settings && this.settings.setup) {\n          this.settings.setup(editor);\n        }\n        this.setup.emit(editor);\n      },\n    });\n    this.ready = new Promise((resolve, reject) => setTimeout(() => resolve(tinymce.init(settings))));\n    this.ready.then((editor) => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', (e) => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', (res) => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** adds an image by url to the editor */\n  addImageByUrl(url: string, caption = '', size = 200) {\n    this.editor.execCommand('mceInsertContent', false, ``);\n  }\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (this.editor) {\n      this.editor.setContent(this.value);\n    }\n  }\n\n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./tinymce.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n    Modules\n    TinymceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/lib/tinymce.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\nexport const tinymceModuleConfig = {\n  declarations: [TinymceComponent],\n  entryComponents: [TinymceComponent],\n  exports: [TinymceComponent],\n};\n\n@NgModule(tinymceModuleConfig)\nexport class TinymceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ToggleComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:21\n                            \n                        \n                \n                    \n                        The toggles placeholder (currently not in use) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true,\n    },\n  ],\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {};\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {}\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                isoDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/type-config.service.ts:178\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:208\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too.\nUsese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:182\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:220\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isoDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nisoDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:225\n                            \n                        \n\n\n                \n                    \n                            Returns a date iso formatter \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:198\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /* size: 5, */\n    // methods: ['get']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:15\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label',\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact',\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true,\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    email: {},\n    phone: {\n      view: 'string',\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date')),\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-actionbar',\n      inputViews: [\n        {\n          name: 'entries-select',\n        },\n        {\n          name: 'entries-actionbar',\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2,\n        },\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? JSON.stringify(value) : ''),\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog',\n    },\n    account: {\n      display: (value) => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    role: {\n      display: (value) => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n    },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:23\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfig, FieldConfigProperty } from '@ec.components/core';\nimport { DefaultInputComponent, DefaultOutputComponent, SymbolService } from '@ec.components/ui';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    /* size: 5, */\n    // methods: ['get']\n  };\n\n  // TODO check if filterPopClass: '' is still needed\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label',\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact',\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true,\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: '',\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: '',\n    },\n    email: {},\n    phone: {\n      view: 'string',\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date')),\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-actionbar',\n      inputViews: [\n        {\n          name: 'entries-select',\n        },\n        {\n          name: 'entries-actionbar',\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2,\n        },\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig,\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? JSON.stringify(value) : ''),\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog',\n    },\n    account: {\n      display: (value) => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n      filterable: true,\n      filterOperator: 'exact',\n    },\n    role: {\n      display: (value) => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog',\n    },\n  };\n  constructor(private symbol: SymbolService) {}\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent,\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too.\n   * Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format =\n      this.symbol.resolve('moment.format.date') + (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return (value) => (value ? moment(value).format(format) : '');\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) => entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return (value) => moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n\n  /** Returns a date iso formatter */\n  isoDate() {\n    return (value) => moment(value).toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n    Modules\n    UiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ListModule } from './list/list.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\nimport { FormModule } from './form/form.module';\n\nexport const uiModuleConfig = {\n  imports: [\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule,\n  ],\n  exports: [\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule,\n  ],\n};\n\n@NgModule(uiModuleConfig)\nexport class UiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the ResourceService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        broadcast\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        relation\n                                \n                                \n                                            Optional\n                                        resource\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcast\n                                    \n                                \n                                \n                                    \n                                        broadcast:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An identifier associated with the update e.g. an entryID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The relation that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:     Resource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Resource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant resource. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n  /** The relation that has been updated. */\n  relation: string | string[];\n  /** The relevant resource. */\n  resource?: Resource;\n  /** The list where it happened. */\n  list?: ResourceList;\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete';\n  /** An identifier associated with the update e.g. an entryID */\n  identifier?: string;\n  /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n  broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n  /** The changes event is emitted everytime an resource is created or updated. */\n  public changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public config: ResourceConfig) {\n    /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return change.broadcast || Object.keys(filter).reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().pipe(rxFilter((change: Update) => this.matches(change, filter)));\n  }\n\n  /** Saves the given resource with the given value. If the resource is not yet existing,\n   * it will be created.Otherwise it will be updated. */\n  save(item: Item, value: Object, relation: string, api: Core): Promise {\n    const resource = item.getBody();\n    if (item.config.onSave) {\n      return Promise.resolve(item.config.onSave(item, value));\n    }\n    item.deleteImmutableProperties(value);\n    if (resource && resource.save) {\n      return this.update(relation, resource, value);\n    }\n    return this.create(relation, value, api)\n      .then((_resource) => {\n        return _resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given resource with the new value. Fires the \"update\" change. */\n  update(relation, resource: Resource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => (oldValues[key] = resource[key]));\n    Object.assign(resource, this.clean(value, false, false)); // assign new form values\n    return resource\n      .save()\n      .then((_resource) => {\n        this.changes.next({ relation, resource: _resource, type: 'put' });\n        return _resource;\n      })\n      .catch((err) => {\n        Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' || ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (setEmptyStringsToNull && value[key] === '') {\n          // clear empty strings\n          value[key] = null;\n        }\n        if (deleteNullProperties && value[key] === null) {\n          delete value[key];\n        }\n        if (this.isImmutableProperty(key)) {\n          // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n  create(relation: string, value: Object, api: Core): Promise {\n    return api\n      .create(relation, this.clean(value))\n      .then((resource: Resource) => {\n        this.changes.next({ relation, resource, type: 'post' });\n        return resource;\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given resource and emits the \"delete\" change. */\n  del(relation: string, resource: Resource) {\n    return resource.del().then((res) => {\n      this.changes.next({ relation, resource, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the FileService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: [],\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig,\n  ) {}\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, config.filter || {}, {\n          type: assetGroupID,\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) => (only && (match && this.isNewAsset(a))) || (!only && (match || this.isNewAsset(a))),\n        only,\n      );\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n        if (key in options) {\n          formData.append(key, `${options[key]}`);\n        }\n      });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map((f) => f.url) : this.getFormData(files, options);\n    return api\n      .createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('dmAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve()\n      .then(\n        (): Promise Promise> => {\n          if (files.length === 1) {\n            return this.sdk.api.createAsset(data, {});\n          }\n          return this.sdk.api.createAssets(data, {});\n        },\n      )\n      .then((res) => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      })\n      .then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map((asset) => new Item(asset, this.resourceConfig.get('legacyAsset'))),\n        };\n      })\n      .then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(\n    assets: Array,\n    assetGroupID?: string,\n  ): Promise> {\n    console.warn(\n      'FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.',\n    );\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) {\n      // new assets\n      return this.sdk.api\n        .dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then((dmAssetList) => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then(\n      (): any => {\n        if (unresolved.length === 1) {\n          return this.sdk.api.asset(unresolved[0]).then((asset) => {\n            return [asset];\n          });\n        }\n        return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 }).then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ? resolved.find((resource) => resource.assetID === asset) : asset,\n          );\n        });\n      },\n    );\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. TODO: demo \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload/upload.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:36\n                            \n                        \n                \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:30\n                            \n                        \n                \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:32\n                            \n                        \n                \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:28\n                            \n                        \n                \n                    \n                        The loader that should be used while uploading\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:34\n                            \n                        \n                \n                    \n                        Upload options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:26\n                            \n                        \n                \n                    \n                        The input placeholder\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:40\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:38\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(files, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFiles(files, e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fileInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:46\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:44\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  LoaderComponent,\n  LoaderService,\n  Notification,\n  NotificationsService,\n  PopComponent,\n  SymbolService,\n  WithLoader,\n  WithNotifications,\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileOptions, FileService, Upload } from '../file.service';\n\n/** This component will render an input field to upload files to the datamanager. TODO: demo */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(\n    private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n  ) {}\n  /** opens the system upload window by triggering the input */\n  trigger(e) {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    files = typeof files === 'string' ? files.split('\\n').map((url) => ({ name: url, url })) : files;\n    if (files[0].url && this.fileService.isOldAssetGroupID(this.assetGroupID)) {\n      delete this.assetGroupID;\n    }\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return Promise.resolve();\n    }\n    return this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.fileService.isNewAssetGroupID(this.assetGroupID)\n      ? this.fileService.uploadAssets(files, this.assetGroupID, this.options, api)\n      : this.fileService.uploadFiles(files)\n    )\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications,\n        });\n        this.pop.hide();\n        return _upload;\n      })\n      .catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications,\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    });\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            {{'upload.assetGroup' | symbol}}\n            \n        \n        \n            \n                \n                \n                    \n                    {{'upload.preserveFilenames' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.includeAssetIDInPath' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.ignoreDuplicates' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.deduplicate' | symbol}}\n                \n            \n            \n                {{ f.name }}\n                \n                    \n                \n            \n        \n        Upload\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{\\'upload.assetGroup\\' | symbol}}                                                                                                                {{\\'upload.preserveFilenames\\' | symbol}}                                                                                                                {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                                                {{\\'upload.ignoreDuplicates\\' | symbol}}                                                                                                                {{\\'upload.deduplicate\\' | symbol}}                                                        {{ f.name }}                                                                                Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadSelectComponent.html":{"url":"components/UploadSelectComponent.html","title":"component - UploadSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload-select/upload-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload-select\n            \n\n\n\n\n            \n                templateUrl\n                ./upload-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                showUrlInput\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                uploader\n                            \n                            \n                                urlsToUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGroup\n                            \n                            \n                                toggleUrlInput\n                            \n                            \n                                triggerUpload\n                            \n                            \n                                uploadFromUrls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                custom\n                            \n                            \n                                disableDrop\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                browse\n                            \n                            \n                                groupChanged\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDrop\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        browse\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:22\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:24\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleUrlInput\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleUrlInput()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            triggerUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \ntriggerUpload(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFromUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFromUrls(urls, e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:34\n                            \n                        \n\n                \n                    \n                        The event that focuses the url input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUrlInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:32\n                            \n                        \n\n                \n                    \n                        Wether or not the url input should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UploadComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(UploadComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:28\n                            \n                        \n\n                \n                    \n                        The nested upload component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlsToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:30\n                            \n                        \n\n                \n                    \n                        The Url to upload from \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SymbolService } from '@ec.components/ui';\nimport { UploadComponent } from '../upload/upload.component';\nimport { Upload, FileOptions, FileService } from '../file.service';\n\n@Component({\n  selector: 'ec-upload-select',\n  templateUrl: './upload-select.component.html',\n})\nexport class UploadSelectComponent implements OnInit {\n  @Input() readOnly: boolean;\n  @Input() custom: boolean;\n  @Input() disableDrop: boolean;\n  @Input() assetGroupID: string;\n  @Input() loader: LoaderComponent;\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Emits when an upload is complete. */\n  @Output() uploaded: EventEmitter = new EventEmitter();\n  @Output() browse: EventEmitter = new EventEmitter();\n  @Input() config: CrudConfig;\n  /** The nested upload component */\n  @ViewChild(UploadComponent) uploader: UploadComponent;\n  /** The Url to upload from */\n  urlsToUpload = '';\n  /** Wether or not the url input should be visible */\n  showUrlInput = false;\n  /** The event that focuses the url input */\n  public focusEvent: EventEmitter = new EventEmitter();\n\n  constructor(public symbol: SymbolService, public fileService: FileService) {}\n\n  ngOnInit() {}\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  toggleUrlInput() {\n    this.showUrlInput = !this.showUrlInput;\n    setTimeout(() => {\n      this.focusEvent.emit(true);\n    });\n  }\n\n  uploadFromUrls(urls, e) {\n    this.uploader.uploadFiles(urls, e).then(() => {\n      this.urlsToUpload = '';\n      this.showUrlInput = false;\n    });\n  }\n  triggerUpload(e) {\n    this.uploader.trigger(e);\n  }\n}\n\n    \n\n    \n        \n    Drop to upload\n    \n    {{'upload.link' | symbol}}\n     {{'upload.or' | symbol}}\n        {{'upload.url' | symbol}}\n    \n     {{'upload.or' | symbol}}\n        {{'upload.browse' | symbol}}\n    \n    \n        \n        {{'upload.url.start' | symbol}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Drop to upload        {{\\'upload.link\\' | symbol}}     {{\\'upload.or\\' | symbol}}        {{\\'upload.url\\' | symbol}}         {{\\'upload.or\\' | symbol}}        {{\\'upload.browse\\' | symbol}}                        {{\\'upload.url.start\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryActionbarComponent', 'selector': 'ec-entry-actionbar'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_UtilityModule_providers\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nKeycommandsService\n\nKeycommandsService\n\nUtilityModule -->\n\nKeycommandsService->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/utility/utility.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            KeycommandsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { KeycommandsService } from './keycommands/keycommands.service';\n\nexport const utilityModuleConfig = {\n  entryComponents: [],\n  declarations: [TabsComponent, TabComponent, MenuComponent, LoginFormComponent, SignupFormComponent, FocusDirective],\n  imports: [FormsModule, ReactiveFormsModule, IoModule, CommonModule, RouterModule],\n  exports: [\n    /* FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    */\n    TabsComponent,\n    TabComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [KeycommandsService],\n};\n\n@NgModule(utilityModuleConfig)\nexport class UtilityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array, form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field, Form } from '@ec.components/core';\nimport { FormService } from './form.service';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields',\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  constructor(public formService: FormService) {}\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array, form: Form): any {\n    return fields.filter((field) => this.formService.shouldBePartOfForm(field, form) && !field.hideInForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n  /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n  notifications?: Notification[];\n  /** If true, no notifications will be emitted */\n  silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            component\n            AceComponent\n            \n                76 %\n                (20/26)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            variable\n            ace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.module.ts\n            \n            variable\n            aceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar.module.ts\n            \n            variable\n            calendarModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                75 %\n                (44/58)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            component\n            MonthComponent\n            \n                69 %\n                (25/36)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            interface\n            Day\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/daterange/daterange.component.ts\n            \n            component\n            DaterangeComponent\n            \n                68 %\n                (26/38)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/datetime.pipe.ts\n            \n            pipe\n            DatetimePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/heatmap/heatmap.component.ts\n            \n            component\n            HeatmapComponent\n            \n                68 %\n                (30/44)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/collection/collection.ts\n            \n            class\n            Collection\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/config.ts\n            \n            class\n            Config\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config-property.interface.ts\n            \n            interface\n            FieldConfigProperty\n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config.interface.ts\n            \n            interface\n            FieldConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/field/field.ts\n            \n            class\n            Field\n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form-config.interface.ts\n            \n            interface\n            FormConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form.ts\n            \n            class\n            Form\n            \n                93 %\n                (29/31)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item-config.interface.ts\n            \n            interface\n            ItemConfig\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item.ts\n            \n            class\n            Item\n            \n                91 %\n                (22/24)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list-config.interface.ts\n            \n            interface\n            ListConfig\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list.ts\n            \n            class\n            List\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                packages/core/src/lib/pagination/pagination.ts\n            \n            class\n            Pagination\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                packages/core/src/lib/selection/selection.ts\n            \n            class\n            Selection\n            \n                94 %\n                (47/50)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            class\n            Sorter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortNumber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            variable\n            collator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/asset-list/asset-list.component.ts\n            \n            component\n            AssetListComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n            guard\n            AuthGuard\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.module.ts\n            \n            function\n            cookieFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/email-available.validator.ts\n            \n            variable\n            emailAvailable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            backendErrorCodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            errors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud-config.interface.ts\n            \n            interface\n            CrudConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud.component.ts\n            \n            component\n            CrudComponent\n            \n                77 %\n                (14/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/data.module.ts\n            \n            variable\n            dataModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entries/entries.directive.ts\n            \n            directive\n            EntriesDirective\n            \n                60 %\n                (12/20)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-actionbar/entry-actionbar.component.ts\n            \n            component\n            EntryActionbarComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/admin-entry-input.component.ts\n            \n            component\n            AdminEntryInputComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-input.component.ts\n            \n            component\n            DefaultEntryInputComponent\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-output.component.ts\n            \n            component\n            DefaultEntryOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/entry-form.component.ts\n            \n            component\n            EntryFormComponent\n            \n                90 %\n                (40/44)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n            \n            component\n            EntryListPopComponent\n            \n                44 %\n                (13/29)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-select/entry-list-select.component.ts\n            \n            component\n            EntryListSelectComponent\n            \n                68 %\n                (32/47)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.component.ts\n            \n            component\n            EntryListComponent\n            \n                60 %\n                (15/25)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.ts\n            \n            class\n            EntryList\n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-pop/entry-pop.component.ts\n            \n            component\n            EntryPopComponent\n            \n                71 %\n                (30/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-select/entry-select.component.ts\n            \n            component\n            EntrySelectComponent\n            \n                68 %\n                (64/94)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.directive.ts\n            \n            directive\n            EntryDirective\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.service.ts\n            \n            injectable\n            EntryService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-list-pop/asset-list-pop.component.ts\n            \n            component\n            AssetListPopComponent\n            \n                59 %\n                (25/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-select/asset-select.component.ts\n            \n            component\n            AssetSelectComponent\n            \n                64 %\n                (54/84)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset/asset.directive.ts\n            \n            directive\n            AssetDirective\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n            \n            component\n            AssetgroupSelectComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/dropzone/dropzone.directive.ts\n            \n            directive\n            DropzoneDirective\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            injectable\n            FileService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            FileOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            Upload\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n            \n            component\n            ImageSelectPopComponent\n            \n                64 %\n                (18/28)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image/image.directive.ts\n            \n            directive\n            ImageDirective\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/mime-types.ts\n            \n            variable\n            mimeTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/tag-select/tag-select.component.ts\n            \n            component\n            TagSelectComponent\n            \n                60 %\n                (57/95)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload-select/upload-select.component.ts\n            \n            component\n            UploadSelectComponent\n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload/upload.component.ts\n            \n            component\n            UploadComponent\n            \n                77 %\n                (17/22)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.interface.ts\n            \n            interface\n            ModelConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.service.ts\n            \n            injectable\n            ModelConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-configuration.interface.ts\n            \n            interface\n            ModelConfiguration\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/sdk-field.ts\n            \n            interface\n            SdkField\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/type-config.service.ts\n            \n            injectable\n            TypeConfigService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/api-actionbar.component.ts\n            \n            component\n            ApiActionbarComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            component\n            ResourceActionbarComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            interface\n            ResourceActionbarState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource-config.service.ts\n            \n            injectable\n            ResourceConfig\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            injectable\n            ResourceService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            interface\n            Update\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-crud/resource-crud.component.ts\n            \n            component\n            ResourceCrudComponent\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-delete-pop/resource-delete-pop.component.ts\n            \n            component\n            ResourceDeletePopComponent\n            \n                61 %\n                (22/36)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.component.ts\n            \n            component\n            ResourceFormComponent\n            \n                86 %\n                (40/46)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.ts\n            \n            class\n            ResourceForm\n            \n                85 %\n                (30/35)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n            \n            component\n            ResourceListPopComponent\n            \n                40 %\n                (12/30)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.component.ts\n            \n            component\n            ResourceListComponent\n            \n                77 %\n                (34/44)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.ts\n            \n            class\n            ResourceList\n            \n                91 %\n                (56/61)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-pop/resource-pop.component.ts\n            \n            component\n            ResourcePopComponent\n            \n                72 %\n                (29/40)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-select/resource-select.component.ts\n            \n            component\n            ResourceSelectComponent\n            \n                67 %\n                (58/86)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/sdk.service.ts\n            \n            injectable\n            SdkService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            injectable\n            GeocodeService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            variable\n            google\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-map.component.ts\n            \n            component\n            LocationMapComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-picker.component.ts\n            \n            component\n            LocationPickerComponent\n            \n                57 %\n                (16/28)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-search.component.ts\n            \n            component\n            LocationSearchComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            LOCATION_COMPONENTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            locationModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.component.ts\n            \n            component\n            MediumEditorComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.module.ts\n            \n            variable\n            mediumModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce.module.ts\n            \n            variable\n            tinymceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce-settings.ts\n            \n            variable\n            editorSettings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce.component.ts\n            \n            component\n            TinymceComponent\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            component\n            ActionbarComponent\n            \n                53 %\n                (35/66)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            ActionbarConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/datetime/datetime.component.ts\n            \n            component\n            DatetimeComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-input/default-input.component.ts\n            \n            component\n            DefaultInputComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-output/default-output.component.ts\n            \n            component\n            DefaultOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.html.ts\n            \n            variable\n            formTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                91 %\n                (32/35)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.module.ts\n            \n            variable\n            formModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/max-items.pipe.ts\n            \n            pipe\n            MaxItemsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/visible-fields.pipe.ts\n            \n            pipe\n            VisibleFieldsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/ec-icons.ts\n            \n            variable\n            ecIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/emoji-icons.ts\n            \n            variable\n            emojiIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.service.ts\n            \n            injectable\n            IconService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n            \n            component\n            DynamicRackComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n            \n            component\n            DynamicSlotComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input-errors/input-errors.component.ts\n            \n            component\n            InputErrorsComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                71 %\n                (20/28)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/output/output.component.ts\n            \n            component\n            OutputComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/slot-host.directive.ts\n            \n            directive\n            SlotHostDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/group.pipe.ts\n            \n            pipe\n            GroupPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-config.service.ts\n            \n            injectable\n            ListConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-header/list-header.component.ts\n            \n            component\n            ListHeaderComponent\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-items/list-items.component.ts\n            \n            component\n            ListItemsComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.html.ts\n            \n            variable\n            listTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                78 %\n                (22/28)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.module.ts\n            \n            variable\n            listModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n            \n            class\n            PaginationConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/searchbar/searchbar.component.ts\n            \n            component\n            SearchbarComponent\n            \n                78 %\n                (29/37)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/with-loader.interface.ts\n            \n            interface\n            WithLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                80 %\n                (25/31)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notification.ts\n            \n            class\n            Notification\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.component.ts\n            \n            component\n            NotificationsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            injectable\n            NotificationsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            variable\n            window\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/with-notifications.interface.ts\n            \n            interface\n            WithNotifications\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.component.ts\n            \n            component\n            PopComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.module.ts\n            \n            variable\n            popModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.service.ts\n            \n            injectable\n            PopService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.html.ts\n            \n            variable\n            selectTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                67 %\n                (36/53)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.module.ts\n            \n            variable\n            selectModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/de.ts\n            \n            variable\n            de\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/en.ts\n            \n            variable\n            en\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.interface.ts\n            \n            interface\n            Symbol\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            injectable\n            SymbolPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            pipe\n            SymbolPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.service.ts\n            \n            injectable\n            SymbolService\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/ui.module.ts\n            \n            variable\n            uiModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.interface.ts\n            \n            interface\n            Focus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n            \n            injectable\n            KeycommandsService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/keycommands/keycommands.service.ts\n            \n            interface\n            KeyAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n            \n            component\n            SignupFormComponent\n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tab/tab.component.ts\n            \n            component\n            TabComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/utility.module.ts\n            \n            variable\n            utilityModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/email.validator.ts\n            \n            variable\n            emailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/field-validators.ts\n            \n            variable\n            FieldValidators\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : 1.0.0-beta.5\n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ec.components/ace : *\n        \n            @ec.components/calendar : *\n        \n            @ec.components/core : *\n        \n            @ec.components/data : *\n        \n            @ec.components/location : *\n        \n            @ec.components/medium-editor : *\n        \n            @ec.components/style : *\n        \n            @ec.components/tinymce : *\n        \n            @ec.components/ui : *\n        \n            x.ui : ^9.1.3\n        \n            ace-builds : ^1.4.3\n        \n            core-js : ^2.6.5\n        \n            ec.sdk : ^0.21.4\n        \n            googlemaps : ^1.12.0\n        \n            lerna : ^3.13.1\n        \n            medium-editor : ^5.23.2\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.1.0\n        \n            rxjs : ~6.3.3\n        \n            tinymce : ^4.9.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/lib/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n    packages/core/src/lib/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_UtilityModule_providers\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}\n\n AceComponent), multi: true,\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true,\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryActionbarComponent\n\nEntryActionbarComponent\n\nDataModule -->\n\nEntryActionbarComponent->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryActionbarComponent \n\nEntryActionbarComponent \n\nEntryActionbarComponent  -->\n\nDataModule->EntryActionbarComponent \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}\n\n MediumEditorComponent), multi: true,\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true,\n}->MediumEditorComponent\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true,\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}\n\n SelectComponent), multi: true,\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true,\n}->SelectComponent\n\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nKeycommandsService\n\nKeycommandsService\n\nUtilityModule -->\n\nKeycommandsService->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        21 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    69 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (packages/.../actionbar.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ui/src/lib/actionbar/actionbar.component.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/angular-7-upgrade-guide.html":{"url":"additional-documentation/angular-7-upgrade-guide.html","title":"additional-page - Angular 7 Upgrade Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngular7 update: BREAKING changes\nThe following breaking changes need to be considered when updating the components with angular 7. This update guide is just for @ec.components and angular 7. A whole angular 7 update guide can be found here.\nAngular 7 is used since the following versions:\n\n@ec.components/ace@0.6.0\n@ec.components/calendar@0.2.0\n@ec.components/core@0.19.0\n@ec.components/data@0.42.0\n@ec.components/location@0.18.0\n@ec.components/medium-editor@0.4.0\n@ec.components/style@0.21.0\n@ec.components/tinymce@0.5.0\n@ec.components/ui@0.36.0\n\nIt is recommended you use the most recent versions. Also add @ec.components/calendar to your package.json if you use datetime pipe or calendars / date pickers.\n1. All imports now go from the packages roots\nold:\nimport { EntryForm } from '@ec.components/data/src/entry-form/entry-form.component'new:\nimport { EntryForm } from '@ec.components/data'=> make sure you never import anything from src, since this folder no longer exists in the package\nPRO TIP\nUse VSCode \"Search: Replace in Files\" with the following Regex:\n\nSearch: _'@ec.components/(\\w+).*'_\nReplace: _'@ec.components/$1'_\n\n2. SCSS import changes\nold:\n@import '~@ec.components/style/components';new:\n@import '~@ec.components/style/scss/components';3. MediumModule has been renamed to MediumEditorModule\n4. Build Errors\nIf you are getting this:\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'http' in '/your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'https' in 'your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/jsonpath-plus/lib/jsonpath.js\nModule not found: Error: Can't resolve 'vm' in 'your-project/node_modules/jsonpath-plus/lib'To fix it, you need a custom webpack config. Eject is not available any more so we need to use angular-builders:\nnpm i @angular-builders/custom-webpack @angular-builders/dev-server @angular-devkit/build-angular --save-devThe following versions were used in this guide:\n\"@angular-builders/custom-webpack\": \"^7.2.0\",\n\"@angular-builders/dev-server\": \"^7.2.1\",\n\"@angular-devkit/build-angular\": \"^0.12.3\",In angular.json make following changes -\n\"architect\": {\n    \"build\": {\n        \"builder\": \"@angular-builders/custom-webpack:browser\",\n        \"options\": {\n        \"customWebpackConfig\": {\"path\": \"./custom-webpack.config.js\"},Notice change in builder and new option customWebpackConfig. Also change\n\"serve\": {\n    \"builder\": \"@angular-builders/dev-server:generic\",Now create a custom-webpack.config.js file in the root directory, containing:\nconst path = require(\"path\");\nmodule.exports = {\n    node: {\n        crypto: 'empty',\n        fs: 'empty',\n        http: 'empty',\n        https: 'empty',\n    }\n};Check this for more info.\nOther Problems you might run into\n\nCan't bind to 'ngModel' since it isn't a known property of 'input'\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/localization.html":{"url":"additional-documentation/project-setup-tutorial/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields-config.html","title":"additional-page - Custom Fields Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nExample\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nSee the related doc links for default values / possible config values.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-list.html","title":"additional-page - Custom Entry List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec-entry-list\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry Lists load multiple entries from a model and display them in a paginated list. It supports load error notifications, loader, filtering, sorting and automatic reloading + many customizations.\nDefault Usage\nThe above snippet will either consume the config for muffin in ModelConfigService, or if no config is found, generate one from the model schema.\nPassing a Config\nThe following snippet will assign the given config to the model/schema config:\ncolumnClicked output\nYou can react to column clicks via the columnClicked output:\nselect(item) {\n    console.log('entry',item.getBody(),item.id());\n}Seperated header/items/pagination markup\nIf you need a seperation of the list-header -items and -pagination, you can use the sub components of list.component:\n\n\n\n\nCreate Custom Cells via transform methods\nIf you want to custom cell values that do not require a custom markup, you can use transforms\ndisplay\nThe display transform method is used to display the value (say what?).\nIt is called from inside ec-output, which is used in list-cells and form readOnly fields.\nYou can change the display behaviour like this:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            display: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});group\nYou can use grouping to get a clearer outline over sorted data:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            group: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});The syntax is the same as for display but the result is used as a group label when the property is sorted.\nresolve\nThe value that is passed to the transform methods like display, group etc. can be changed beforehand with the resolve method. NOTE: the params are different than for the transform methods:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            resolve: (body, item) => {\n                if(body.amazement_factor === -1) {\n                    return 0;\n                }\n                return body.amazement_factor;\n            }\n        }\n    }\n});this will also affect your forms!\npseudo properties via resolve\nYou can also define pseudo properties, meaning properties that do not exist on the original object:\nthis.modelConfig.set('muffin', {\n    fields: {\n        ranking: {\n            resolve: (body, item) => body.amazement_factor*body.flavour/body.price\n        }\n    }\n});This comes in handy when you want to display a often combined value out of multiple values.\nNOTE: pseudo properties should not be passed to the backend...\nCustom Cells via custom output component\nIf you want to custom cell values that do require a custom markup, you can use a custom output component:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            output: StrongComponent\n        }\n    }\n});In your strong.component.ts, you can inherit OutputComponent, giving you access to the field and item of your cell:\n@Component({\n  selector: 'app-strong',\n  template: `{{item.resolve(field.property)}}`\n})\nexport class StrongComponent extends OutputComponent {}NOTE: customizing the output component will also change the look of forms using that config, if the property is set readOnly.\nFiltering Lists\nBy default, each column that hosts a filterable property contains a search icon in its header. If the property is filterable is defined either by the field config (filterable) or falls back to the backend types that support filters. The search icon will open a pop with a field type specific filter input inside.\nCustom Filtering\nIf you do not want that (currently pretty clunky) pop filters, you can set filterable to false and manually call list.load with the desired filter:\n\n    show amazing muffins\n\nClicking the link will now show all muffins with exactly amazement_factor 10.\nCustom filter operators\nBy default, the entry-list will filter the property by its default filterOperator (see type config). If you want to change the default operator you can set it in the config:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            filterOperator: 'from'\n        }\n    }\n});\n    show amazing muffins\n\nIf you now click the link, all muffins with amazement_factor>=5 will be loaded.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-forms.html","title":"additional-page - Custom Entry Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEntry Forms\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry forms can edit and create entries. They support notifications, loader, validation error handling and dynamic config generation out of the box.\nNOTE: it is expected you have placed a ec-notifications tag somewhere in your root component.\nDefault Behaviour\nCreate\nsubmitting the form will create a new entry and then switch to edit mode.\nEdit\nDynamic Edit/Create from template\nYou can also access the form from the template and call edit or create:\n\n\n    \n      {{muffin.name}}\n    \n  \nCreate new MuffinConfiguration\nIf nothing else is configured, the form will parse the schema of muffin and generate a generic field config.\nIf you configured the model via ModelConfigService (see Custom Fields), the form will use that config.\nAlternatively, you can also pass a config directly:\nThe given config will be Object.assigned to the possible preexisting modelConfig.\nCustom Markup with ec-input/ec-output\nMost times, you'll want more freedom over your forms markup etc. This is where ec-input and ec-output come into play:\n  \n    \n    Title\n        \n    \n    \n    Amazement Factor\n    \n    Submit\n  As soon as the ec-entry-form contains elements (or you pass empty=true, as meantioned below), the contents will be rendered instead of the default form.\nFeatures you have to add manually (if needed)\n\nsubmit button\nfield.readOnly handling (show ec-output instead of ec-input)\nlocal ec-loader\n\nNOTE: dont wrap labels around complex input components, because they fire ghost clicks!\nCustom input/output markup\nOf course you can remove another layer of abstraction to further customize the form:\n  \n    \n    Title\n    \n    \n    \n    Amazement Factor\n    {{form.display('amazement_factor')}}\n\n    Submit\n  Features you have to add manually:\n\nhandling of input errors (ec-input-errors)\nmaking sure your markup handles the field type correctly\nmaking sure your markup handles the field value correctly\n\nIt is generally recommended to use ec-input over hard coded forms.\nThe empty flag\nYou can also place the ec-input elements somewhere else and just tell the ec-entry-form that it shouldn't render the default form with the empty flag:\n\nNOTE: Always make sure the property accessed by ec-input is also present in your config (or you dont use a config at all). Otherwise, the input wont know what to render.\nCreating custom inputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nCustom Fields without wrapper\nYou can also use custom components as input directly without needing to wrap them in \"CustomFieldsComponent\".\nJust make sure you implement ControlValueAccessor like above. When changes occur from the template, call propagateChange. You can react to outside model changes in writeValue.\nimport { Component, OnInit, Input } from '@angular/core';\nimport { InputComponent } from '../../../packages/ui';\nimport { ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'ec-counter',\n    templateUrl: './counter.component.html'\n})\n\nexport class CounterComponent extends InputComponent implements ControlValueAccessor {\n\n    value = 0;\n\n    increment() {\n        this.propagateChange(++this.value);\n    }\n\n    decrement() {\n        this.propagateChange(--this.value);\n    }\n\n    writeValue(value: any) {\n        this.value = value;\n        console.log('received value', value);\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme.html":{"url":"additional-documentation/readme.html","title":"additional-page - README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/data-readme.html":{"url":"additional-documentation/readme/data-readme.html","title":"additional-page - data README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/data\nThis package contains all ec.datamanager related components.\nBeing wether framework agnostic nor backend agnostic, it is lowest fruit on the abstraction tree.\nIt extends the classes of the core module to create datamanager specific classes that are then used in the components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/data --save2. Add Module\nimport { DataModule } from '@ec.components/data';\n\n@NgModule({\n  imports: [\n    DataModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ui-readme.html":{"url":"additional-documentation/readme/ui-readme.html","title":"additional-page - ui README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ui\nThis package contains all angular components that have no ec.datamanager references.\nIt utilizes the classes of the @ec.components/core package.\nBeing the middle layer in the abstraction tree, it is still backend agnostic but not framework agnostic.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ui --save2. Add Module\nimport { UiModule } from '@ec.components/ui';\n\n@NgModule({\n  imports: [\n    UiModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/core-readme.html":{"url":"additional-documentation/readme/core-readme.html","title":"additional-page - core README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/core\nThis package contains all the core typescript classes.\nIt is the highest abstraction layer and is therefor framework and backend agnostic.\nThis means it contains no angular or ec.datamanager references.\nOverview\n\nCHANGELOG\nAvailable Classes\n\nInstallation\nnpm i @ec.components/coreimport { Item } from '@ec.components/core';\nconst primitive = new Item('a');\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/style-readme.html":{"url":"additional-documentation/readme/style-readme.html","title":"additional-page - style README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/style\nThis package contains all scss styles for the ec.components packages.\nOverview\n\nCHANGELOG\nx.ui\n\nInstallation\nMethod A: With prebuilt CSS styles\nIf you are not using scss or you just want to add styles without hassle, just add this css to your index.html:\nMethod B: Custom Styles with SCSS\nIf you want to use your own styles, you can use scss to import and build the styles with x.ui:\n1. Install package\nnpm install @ec.components/style --saveThis will also install x.ui.\n3. Add styles\nDetails on how to setup your config can be found in the x.ui README.\n@import 'config';\n@import '~x.ui/src/x.ui.scss';\n@import '~@ec.components/style/scss/components';\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/calendar-readme.html":{"url":"additional-documentation/readme/calendar-readme.html","title":"additional-page - calendar README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/calendar\nThis package provides calendar and date components as part of ec.components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/calendar --save2. Add Module\nimport { CalendarModule } from '@ec.components/calendar';\n\n@NgModule({\n  imports: [\n    CalendarModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/location-readme.html":{"url":"additional-documentation/readme/location-readme.html","title":"additional-page - location README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/location\nThis package wraps the angular-google-maps to be suitable for forms.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/location --save2. Add Module\nimport { LocationModule } from '@ec.components/location';\n\n@NgModule({\n  imports: [\n    LocationModule\n  ]\n})\nexport class AppModule {\n}3. Use it as default input for location fields\n  constructor(private typeConfig: TypeConfigService) {\n    this.typeConfig.set('location', {\n      input: LocationPickerComponent\n    });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ace-readme.html":{"url":"additional-documentation/readme/ace-readme.html","title":"additional-page - ace README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ace --save2. Add Module\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}3. Add CDN\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/medium-editor-readme.html":{"url":"additional-documentation/readme/medium-editor-readme.html","title":"additional-page - medium-editor README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/medium-editor --save2. Add Module\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/tinymce-readme.html":{"url":"additional-documentation/readme/tinymce-readme.html","title":"additional-page - tinymce README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/tinymce --save2. Add Module\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}3. Add styles files to angular.json\n\"styles\": [\n  \"node_modules/tinymce/skins/lightgray/skin.min.css\",\n  \"node_modules/tinymce/skins/lightgray/content.min.css\"\n],4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog.html":{"url":"additional-documentation/changelog.html","title":"additional-page - CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/data-changelog.html":{"url":"additional-documentation/changelog/data-changelog.html","title":"additional-page - data CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.49.1 (2019-05-27)\nNote: Version bump only for package @ec.components/data\n0.49.0 (2019-05-24)\nFeatures\n\nentry-actionbar (786d09b)\n\n0.48.6 (2019-05-24)\nNote: Version bump only for package @ec.components/data\n0.48.5 (2019-05-24)\nNote: Version bump only for package @ec.components/data\n0.48.4 (2019-05-24)\nBug Fixes\n\ndisabled state for select inputs (ac83326)\nmissing readonly states (52dc850)\n\n0.48.3 (2019-05-24)\nBug Fixes\n\nEDITOR-364 (62162b7)\n\n0.48.2 (2019-05-03)\nBug Fixes\n\njson + location now really reverted (3fe4aaf)\n\n0.48.1 (2019-05-03)\nBug Fixes\n\njson + location (01d1130)\n\n0.48.0 (2019-05-03)\nBug Fixes\n\ncan now edit json + location (388924d)\n\nFeatures\n\nbeforeSave for entry fields (846039a)\ncan now set different purpose components (2d2e536)\n\n0.47.9 (2019-05-03)\nBug Fixes\n\nCOM-259 boolean readonly (cb43986)\nEDITOR-348 (336ba95)\ntag select EDITOR-343 (7dcaf42)\n\n0.47.8 (2019-04-26)\nBug Fixes\n\ncreator filter + resource-select focus (b461540)\n\n0.47.7 (2019-04-26)\nBug Fixes\n\nEDITOR-293 (b900b38)\n\n0.47.6 (2019-04-26)\nBug Fixes\n\ngetAccount would crash without _api (a2b4ace)\n\n0.47.5 (2019-04-26)\nNote: Version bump only for package @ec.components/data\n0.47.4 (2019-04-12)\nBug Fixes\n\nEDITOR-293 (bd766bf)\nEDITOR-330 => ids are now filterable (ee3518f)\npublic user auth flow after sdk update (efa26a0)\n\n0.47.3 (2019-04-08)\nNote: Version bump only for package @ec.components/data\n0.47.2 (2019-04-05)\nBug Fixes\n\nremove log (45b12e4)\n\n0.47.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.47.0 (2019-04-05)\nFeatures\n\nnow showing copyable system fields (5af4631)\n\n0.46.8 (2019-04-05)\nNote: Version bump only for package @ec.components/data\n0.46.7 (2019-04-05)\nNote: Version bump only for package @ec.components/data\n0.46.6 (2019-04-01)\nNote: Version bump only for package @ec.components/data\n0.46.5 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.4 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.3 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.1 (2019-03-29)\nBug Fixes\n\ncircular dependency in resource-config (d8ad11d)\n\n0.46.0 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nno default filter for tag-select (dd83e20)\nremove model config cache after sdk fix (2e97a10)\nresource-pop hasMethod could throw error (7f99383)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nadded dropdownFields option to CrudConfig (0256008)\n\n0.45.6 (2019-03-22)\nBug Fixes\n\nmodel config is now only requested once (a542c43)\nnow using sdk 0.18.7 (ac3bb86)\n\n0.45.5 (2019-03-22)\nBug Fixes\n\nentry-list-select undefined array (bc9bb53)\npass readOnly + config to asset-select (b7d33e2)\n\n0.45.4 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.45.3 (2019-03-08)\nNote: Version bump only for package @ec.components/data\n0.45.2 (2019-03-01)\nBug Fixes\n\nadd resource-list to data public_api (2b0b354)\n\n0.45.1 (2019-02-25)\nNote: Version bump only for package @ec.components/data\n0.45.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.44.2 (2019-02-15)\nBug Fixes\n\nresource-select focus searchbar + fire editItem if puttable (b2cf446)\n\n0.44.1 (2019-02-15)\nBug Fixes\n\ntypo in resource-select (4650da9)\n\n0.44.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.43.10 (2019-02-15)\nNote: Version bump only for package @ec.components/data\n0.43.9 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.43.8 (2019-02-08)\nBug Fixes\n\nfixed asset-list-pop search + set inital size to 24 (651f1de)\n\n0.43.7 (2019-02-04)\nBug Fixes\n\nresource-select stop propagation on item click (68f12f5)\n\n0.43.6 (2019-02-04)\nBug Fixes\n\nresource-select click item (42301aa)\n\n0.43.5 (2019-02-04)\nBug Fixes\n\ncan now set itemClick in field config + fix resouce-select config (9e23457)\n\n0.43.4 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.43.3 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop now really fixed (8abc48b)\n\n0.43.2 (2019-02-01)\nNote: Version bump only for package @ec.components/data\n0.43.1 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop (79c1a6d)\n\n0.43.0 (2019-02-01)\nFeatures\n\nResourceConfig#set (ba52443)\n\n0.42.16 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.15 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.14 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.13 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.12 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.42.11 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.42.10 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.9 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.8 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.7 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.6 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.5 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.4 (2019-01-21)\nBug Fixes\n\nauth.service clientID check + removed broadcast load on env switch (def9084)\ncalling entry-pop create twice would edit the first entry (d5dc292)\nclear searchbar when changing asset group (1cfc328)\nclientID if statement (43c7da5)\nconfig generation for empty forms was bugged since last commit (789e7ca)\ncould not define custom components for entry field types (0b433be)\ncould not pass config to entry-list seperately (4a14246)\ncould not set custom asset list config (06b615c)\ndndDraggable stringify error (a992381)\nEDITOR-187 (de51159)\nendless ecEntries could concat same page multiple times (fed2c52)\nentry-list.component (431e3fd)\nfiles index (bcbefd1)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfocus asset list pop searchbar when changing group (24868b9)\nform without config would bug (5892365)\ngroup resource-config (020e689)\nlinter bug (b4d03eb)\nModelConfigService now using CrudConfig instead of ItemConfig (eb506da)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nparseType would not recognize relations with \"-\" (a08a9d6)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nrelative path in data.module (fcfdf32)\nremoveItem still activated entry-select + entry-select demo (364482b)\nresource-list.component (2826ac4)\nselect assetGroup if legacyAsset and url upload (7580583)\nselection was broken for ec-entry-select list (121566c)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\nwrong method reference (f3590a7)\n\nFeatures\n\nsdk changesEnvironment + resource service env update broadcast (ad58c68)\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ui-changelog.html":{"url":"additional-documentation/changelog/ui-changelog.html","title":"additional-page - ui CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.44.1 (2019-05-27)\nBug Fixes\n\nCOM-276 (a581ce2)\n\n0.44.0 (2019-05-24)\nFeatures\n\nentry-actionbar (786d09b)\n\n0.43.4 (2019-05-24)\nBug Fixes\n\nCOM-259 (b6ec56b)\n\n0.43.3 (2019-05-24)\nBug Fixes\n\nconnect disabled state COM-259 (bbe7ba3)\n\n0.43.2 (2019-05-24)\nBug Fixes\n\ndisabled state for select inputs (ac83326)\nmissing readonly states (52dc850)\n\n0.43.1 (2019-05-24)\nBug Fixes\n\nEDITOR-363 (80eecab)\n\n0.43.0 (2019-05-03)\nFeatures\n\ncan now seperate inputView and outputView (2e0756e)\ncan now set different purpose components (2d2e536)\n\n0.42.5 (2019-05-03)\nBug Fixes\n\nCOM-259 boolean readonly (cb43986)\n\n0.42.4 (2019-04-26)\nBug Fixes\n\nCOM-261 (af10188)\ntab routing EDITOR-267 (b0c6065)\n\n0.42.3 (2019-04-12)\nBug Fixes\n\nEDITOR-330 => ids are now filterable (ee3518f)\n\n0.42.2 (2019-04-08)\nNote: Version bump only for package @ec.components/ui\n0.42.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.42.0 (2019-04-05)\nFeatures\n\nadded keycommands service (80b8030)\nnow showing copyable system fields (5af4631)\n\n0.41.6 (2019-04-05)\nBug Fixes\n\nselect readonly input (77a8486)\n\n0.41.5 (2019-04-01)\nNote: Version bump only for package @ec.components/ui\n0.41.4 (2019-03-29)\nBug Fixes\n\nadd titles with original field names (0dbce91)\n\n0.41.3 (2019-03-29)\nBug Fixes\n\nset form true in list header (7664cb2)\nset immutable false for filtering (8ab4791)\n\n0.41.2 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.0 (2019-03-29)\nBug Fixes\n\nformControl Input for select (bcbbc51)\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nlist-header: could not retoggle list-filter (041cd83)\nrxjs throwError import (c0c7f17)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nhideOnEscape option for pop (7d50c5f)\nready emitter for input component (e2bbf1a)\nreworked list-header (ea24c06)\n\n0.40.0 (2019-03-22)\nBug Fixes\n\nEDITOR-289 list-header filter inputs autofocus (9915311)\n\nFeatures\n\nDefaultEntryInputComponent#autofocus (cea52fc)\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.39.3 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.39.2 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\n\n0.39.1 (2019-03-01)\nBug Fixes\n\nadded lazy option for new input/form behaviour (878e9df)\n\n0.39.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.38.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.37.4 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.3 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.2 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.37.1 (2019-02-01)\nBug Fixes\n\ndefault input config to empty object (46d4a1f)\n\n0.37.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\nnow passing field config to input component (25a36aa)\n\n0.36.15 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.14 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.13 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.12 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.11 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.36.10 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.36.9 (2019-01-25)\nBug Fixes\n\nnow exporting languages by name (7733151)\n\n0.36.8 (2019-01-25)\nBug Fixes\n\nexport de + en from ui package barrel (c950461)\n\n0.36.7 (2019-01-25)\nNote: Version bump only for package @ec.components/ui\n0.36.6 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.5 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.4 (2019-01-21)\nBug Fixes\n\nclear searchbar when changing asset group (1cfc328)\ncontrol binding (fd41ccc)\ndndDraggable stringify error (a992381)\ndynamic-slot make inject public to be able to call super (b7460e6)\nec-input bug (1d9e231)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfirst tab selection was throwing an error (50e2d98)\nfocus asset list pop searchbar when changing group (24868b9)\nform.create would not reinstantiate with config being undefined (f7b65f4)\ninit control in input.component (3fb8f47)\nlint errors (1cb8b1c)\nlinter errors (70d5e24)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nonly show size select if total>0 (7a88da8)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwrong import (b760780)\n\nFeatures\n\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/core-changelog.html":{"url":"additional-documentation/changelog/core-changelog.html","title":"additional-page - core CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.26.0 (2019-05-03)\nFeatures\n\nbeforeSave for entry fields (846039a)\ncan now set different purpose components (2d2e536)\n\n0.25.2 (2019-04-12)\nBug Fixes\n\nEDITOR-330 => ids are now filterable (ee3518f)\n\n0.25.1 (2019-04-05)\nBug Fixes\n\nadd creator + fixed extending inputs (0dd22f6)\n\n0.25.0 (2019-04-05)\nFeatures\n\nnow showing copyable system fields (5af4631)\n\n0.24.3 (2019-04-01)\nNote: Version bump only for package @ec.components/core\n0.24.2 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.24.1 (2019-03-29)\nNote: Version bump only for package @ec.components/core\n0.24.0 (2019-03-29)\nBug Fixes\n\nkeep list header filter form immutable (6f53065)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\ndefaultFilter setting for listConfig (efb984e)\n\n0.23.0 (2019-03-22)\nFeatures\n\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.22.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.21.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.20.2 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.1 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.19.12 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.11 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.10 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.9 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.8 (2019-01-25)\nNote: Version bump only for package @ec.components/core\n0.19.7 (2019-01-21)\nNote: Version bump only for package @ec.components/core\n0.19.6 (2019-01-21)\nBug Fixes\n\nlinter errors (70d5e24)\nselection has + docs (e8b0e49)\nselection.toggle would emit change twice sometimes (b3e8115)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/style-changelog.html":{"url":"additional-documentation/changelog/style-changelog.html","title":"additional-page - style CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.22.7 (2019-05-03)\nNote: Version bump only for package @ec.components/style\n0.22.6 (2019-04-01)\nNote: Version bump only for package @ec.components/style\n0.22.5 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.22.4 (2019-03-29)\nNote: Version bump only for package @ec.components/style\n0.22.3 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\n\n0.22.2 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.22.1 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.22.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.21.6 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.5 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.4 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.3 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.2 (2019-01-25)\nNote: Version bump only for package @ec.components/style\n0.21.1 (2019-01-21)\nNote: Version bump only for package @ec.components/style\n0.21.0 (2019-01-21)\nBug Fixes\n\nadded optional to btn._clear extension (373bebf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/calendar-changelog.html":{"url":"additional-documentation/changelog/calendar-changelog.html","title":"additional-page - calendar CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.2.17 (2019-05-24)\nBug Fixes\n\nmissing readonly states (52dc850)\n\n0.2.16 (2019-05-03)\nNote: Version bump only for package @ec.components/calendar\n0.2.15 (2019-04-08)\nBug Fixes\n\nEDITOR-229 (b603867)\n\n0.2.14 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.2.14 (2019-03-29)\nNote: Version bump only for package @ec.components/calendar\n0.2.13 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\nCOM-255 (ac4aec3)\n\n0.2.12 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.11 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.10 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.9 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.8 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.7 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.6 (2019-01-25)\nNote: Version bump only for package @ec.components/calendar\n0.2.5 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.4 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/location-changelog.html":{"url":"additional-documentation/changelog/location-changelog.html","title":"additional-page - location CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.18.16 (2019-05-24)\nBug Fixes\n\nCOM-259 (6603aea)\n\n0.18.15 (2019-05-03)\nNote: Version bump only for package @ec.components/location\n0.18.14 (2019-04-26)\nBug Fixes\n\nlocation picker spec (65fa558)\nlocation-picker keycommands injection (600d7ac)\n\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\n\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\n\n0.18.12 (2019-02-25)\nNote: Version bump only for package @ec.components/location\n0.18.11 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.10 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.9 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.8 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.7 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.6 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.5 (2019-01-25)\nNote: Version bump only for package @ec.components/location\n0.18.4 (2019-01-21)\nNote: Version bump only for package @ec.components/location\n0.18.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ace-changelog.html":{"url":"additional-documentation/changelog/ace-changelog.html","title":"additional-page - ace CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.6.14 (2019-05-03)\nNote: Version bump only for package @ec.components/ace\n0.6.13 (2019-04-26)\nBug Fixes\n\nace test (95f8cc1)\n\n0.6.12 (2019-03-29)\nBug Fixes\n\nace ui dependency (cd90ef7)\nrevert test task running (cbe9627)\n\n0.6.12 (2019-03-29)\nNote: Version bump only for package @ec.components/ace\n0.6.11 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.10 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.9 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.8 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.7 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.6 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.5 (2019-01-25)\nNote: Version bump only for package @ec.components/ace\n0.6.4 (2019-01-21)\nNote: Version bump only for package @ec.components/ace\n0.6.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/medium-editor-changelog.html":{"url":"additional-documentation/changelog/medium-editor-changelog.html","title":"additional-page - medium-editor CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.4.13 (2019-05-03)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.12 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.4.12 (2019-03-29)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.11 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.10 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.9 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.8 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.7 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.6 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.5 (2019-01-25)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.4 (2019-01-21)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/tinymce-changelog.html":{"url":"additional-documentation/changelog/tinymce-changelog.html","title":"additional-page - tinymce CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.5.14 (2019-05-03)\nNote: Version bump only for package @ec.components/tinymce\n0.5.13 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.5.13 (2019-03-29)\nNote: Version bump only for package @ec.components/tinymce\n0.5.12 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.11 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.10 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.9 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.8 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.7 (2019-01-28)\nBug Fixes\n\ntinymce fix version 4.7.4 due to angular-cli/issues/11041 (b365847)\n\n0.5.6 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.5 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.4 (2019-01-21)\nNote: Version bump only for package @ec.components/tinymce\n0.5.3 (2019-01-21)\nBug Fixes\n\ncould not writeValue before init component (00a2e2e)\ntinyMCE promise error (8fab72f)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adding-new-packages.html":{"url":"additional-documentation/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new Package in 10 easy steps\nThe following steps need to be done to generate a new library that is standards compliant.\nJust replace the example name \"data\" with the new package name.\n1. Run CLI command to generate a new library\nng generate library data -p ecThis will create a new folder under packages/ (see newProjectRoot in angular.json).\n2. Prefix packages/data/package.json#name with @ec.components\nalso make sure the version is correct\n3. Prefix root tsconfig.json paths \"data\" and \"data/*\" with @ec.components\nalso change value to \"packages/data/dist/*\"\n4. Move src files to packages/data/lib\n5. add dependencies (e.g. ec.sdk) to both root and lib package.json\n6. add whitelistedNonPeerDependencies and dest to ng-package.json\n  \"dest\": \"./dist\",\n  \"whitelistedNonPeerDependencies\": [\n    \".\"\n  ]7. fix relative imports\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\n// replace with\nimport { WithNotifications, Notification } from '@ec.components/ui';8. fix rxjs imports\nimport { Subject } from 'rxjs/Subject';\n// to\nimport { Subject } from 'rxjs';9. fix other lint errors like semicolon stuff\nbuild it\nng build datarun yarn to link dist/data to node_modules\n10. add dependency to root package.json\n11. add CHANGELOG.md of package to summary.json (like others)\n11. add link to package changelog page to CHANGELOG.md (like others)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/stackblitz.html":{"url":"additional-documentation/stackblitz.html","title":"additional-page - Stackblitz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStackblitz Demos\n\nCreate Angular Stackblitz\nimport styles to index.html:\n\n\n\nAdd @ec.components package(s):\n\n\"@ec.components/calendar\": \"^0.2.6\",\n/** any other components module */\nimport module(s):\n\nimport { CalendarModule } from '@ec.components/calendar';\n@NgModule({\n  imports:      [ /* .. */ CalendarModule ],\n  /* ... */\n})\nexport class AppModule { }\nuse component(s) in app.component.html:\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/publishing.html":{"url":"additional-documentation/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
